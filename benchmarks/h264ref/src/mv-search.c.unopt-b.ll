; ModuleID = 'mv-search.c.unopt-b.bc'
source_filename = "mv-search.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32**, i32**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [15 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i32], [16 x i32], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.storable_picture = type { i32, i32, i32, i32, i32, i32, [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], [6 x [33 x i64]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16**, i16*, i16*, i16**, i16**, i16***, i8*, i16***, i64***, i64***, i16****, i8**, i8**, %struct.storable_picture*, %struct.storable_picture*, %struct.storable_picture*, i32, i32, i32, i32, i32, i32, i32 }
%struct.colocated_params = type { i32, i32, i32, [6 x [33 x i64]], i16***, i64***, i16****, i8**, [6 x [33 x i64]], i16***, i64***, i16****, i8**, [6 x [33 x i64]], i16***, i64***, i16****, i8**, i32, i8** }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i32]], [16 x [16 x i32]], [16 x [16 x i32]], i32****, i32***, i32, i32, [4 x i32], [4 x i32], i32**, [16 x i32], i32, i64, i32, i16******, i16******, i16******, i16******, [2 x [4 x [4 x i16]]], i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.pix_pos = type { i32, i32, i32, i32, i32, i32 }
%struct.timeb = type { i64, i16, i16, i16 }

@QP2QUANT = dso_local constant [40 x i32] [i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 5, i32 6, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 13, i32 14, i32 16, i32 18, i32 20, i32 23, i32 25, i32 29, i32 32, i32 36, i32 40, i32 45, i32 51, i32 57, i32 64, i32 72, i32 81, i32 91], align 16
@input = external dso_local global %struct.InputParameters*, align 8
@BlockSAD = internal global i32***** null, align 8
@.str = private unnamed_addr constant [42 x i8] c"InitializeFastFullIntegerSearch: BlockSAD\00", align 1
@img = external dso_local global %struct.ImageParameters*, align 8
@search_setup_done = internal global i32** null, align 8
@.str.1 = private unnamed_addr constant [51 x i8] c"InitializeFastFullIntegerSearch: search_setup_done\00", align 1
@search_center_x = internal global i32** null, align 8
@.str.2 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_x\00", align 1
@search_center_y = internal global i32** null, align 8
@.str.3 = private unnamed_addr constant [49 x i8] c"InitializeFastFullIntegerSearch: search_center_y\00", align 1
@pos_00 = internal global i32** null, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"InitializeFastFullIntegerSearch: pos_00\00", align 1
@max_search_range = internal global i32** null, align 8
@.str.5 = private unnamed_addr constant [50 x i8] c"InitializeFastFullIntegerSearch: max_search_range\00", align 1
@active_pps = common dso_local global %struct.pic_parameter_set_rbsp_t* null, align 8
@listX = external dso_local global [6 x %struct.storable_picture**], align 16
@enc_picture = external dso_local global %struct.storable_picture*, align 8
@imgY_org = common dso_local global i16** null, align 8
@PelYline_11 = internal global i16* (i16*, i32, i32, i32, i32)* null, align 8
@spiral_search_x = common dso_local global i32* null, align 8
@spiral_search_y = common dso_local global i32* null, align 8
@byte_abs = common dso_local global i32* null, align 8
@pred_SAD_space = common dso_local global i32 0, align 4
@all_bwmincost = common dso_local global i32***** null, align 8
@FME_blocktype = common dso_local global i32 0, align 4
@all_mincost = common dso_local global i32***** null, align 8
@max_mvd = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_x\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"Init_Motion_Search_Module: spiral_search_y\00", align 1
@mvbits = common dso_local global i32* null, align 8
@.str.8 = private unnamed_addr constant [34 x i8] c"Init_Motion_Search_Module: mvbits\00", align 1
@refbits = common dso_local global i32* null, align 8
@.str.9 = private unnamed_addr constant [35 x i8] c"Init_Motion_Search_Module: refbits\00", align 1
@.str.10 = private unnamed_addr constant [36 x i8] c"Init_Motion_Search_Module: byte_abs\00", align 1
@motion_cost = common dso_local global i32**** null, align 8
@PelY_14 = internal global i16 (i16**, i32, i32, i32, i32)* null, align 8
@wbp_weight = common dso_local global i32**** null, align 8
@luma_log_weight_denom = common dso_local global i32 0, align 4
@wp_offset = common dso_local global i32*** null, align 8
@wp_luma_round = common dso_local global i32 0, align 4
@PelY_14b = internal global i16 (i16**, i32, i32, i32, i32)* null, align 8
@BPredPartitionCost.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@BPredPartitionCost.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@BlockMotionSearch.orig_val = internal global [256 x i16] zeroinitializer, align 16
@BlockMotionSearch.orig_pic = internal global [16 x i16*] [i16* getelementptr inbounds ([256 x i16], [256 x i16]* @BlockMotionSearch.orig_val, i32 0, i32 0), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 32) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 64) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 96) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 128) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 160) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 192) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 224) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 256) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 288) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 320) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 352) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 384) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 416) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 448) to i16*), i16* bitcast (i8* getelementptr (i8, i8* bitcast ([256 x i16]* @BlockMotionSearch.orig_val to i8*), i64 480) to i16*)], align 16
@Bframe_ctr = common dso_local global i32 0, align 4
@pred_MV_uplayer = common dso_local global [2 x i32] zeroinitializer, align 4
@pred_SAD_uplayer = common dso_local global i32 0, align 4
@flag_intra_SAD = common dso_local global i32 0, align 4
@pred_SAD_time = common dso_local global i32 0, align 4
@pred_MV_time = common dso_local global [2 x i32] zeroinitializer, align 4
@pred_SAD_ref = common dso_local global i32 0, align 4
@pred_MV_ref = common dso_local global [2 x i32] zeroinitializer, align 4
@me_tot_time = common dso_local global i32 0, align 4
@me_time = common dso_local global i32 0, align 4
@BIDPartitionCost.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@BIDPartitionCost.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@direct_pdir = common dso_local global i16** null, align 8
@direct_ref_idx = common dso_local global i16*** null, align 8
@PartitionMotionSearch.bx0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] [i32 0, i32 2, i32 0, i32 2]], align 16
@PartitionMotionSearch.by0 = internal global [5 x [4 x i32]] [[4 x i32] zeroinitializer, [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 2, i32 0, i32 0], [4 x i32] zeroinitializer, [4 x i32] [i32 0, i32 0, i32 2, i32 2]], align 16
@listXsize = external dso_local global [6 x i32], align 16
@Co_located = external dso_local global %struct.colocated_params*, align 8
@top_pic = common dso_local global %struct.Picture* null, align 8
@bottom_pic = common dso_local global %struct.Picture* null, align 8
@frame_pic = common dso_local global %struct.Picture* null, align 8
@frame_pic2 = common dso_local global %struct.Picture* null, align 8
@frame_pic3 = common dso_local global %struct.Picture* null, align 8
@imgUV_org = common dso_local global i16*** null, align 8
@img4Y_tmp = common dso_local global i32** null, align 8
@log2_max_frame_num_minus4 = common dso_local global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common dso_local global i32 0, align 4
@active_sps = common dso_local global %struct.seq_parameter_set_rbsp_t* null, align 8
@mb_adaptive = common dso_local global i32 0, align 4
@MBPairIsField = common dso_local global i32 0, align 4
@wp_weight = common dso_local global i32*** null, align 8
@chroma_log_weight_denom = common dso_local global i32 0, align 4
@wp_chroma_round = common dso_local global i32 0, align 4
@imgY_org_top = common dso_local global i16** null, align 8
@imgY_org_bot = common dso_local global i16** null, align 8
@imgUV_org_top = common dso_local global i16*** null, align 8
@imgUV_org_bot = common dso_local global i16*** null, align 8
@imgY_org_frm = common dso_local global i16** null, align 8
@imgUV_org_frm = common dso_local global i16*** null, align 8
@imgY_com = common dso_local global i16** null, align 8
@imgUV_com = common dso_local global i16*** null, align 8
@pixel_map = common dso_local global i8** null, align 8
@refresh_map = common dso_local global i8** null, align 8
@intras = common dso_local global i32 0, align 4
@Iframe_ctr = common dso_local global i32 0, align 4
@Pframe_ctr = common dso_local global i32 0, align 4
@frame_no = common dso_local global i32 0, align 4
@nextP_tr_fld = common dso_local global i32 0, align 4
@nextP_tr_frm = common dso_local global i32 0, align 4
@tot_time = common dso_local global i32 0, align 4
@errortext = common dso_local global [300 x i8] zeroinitializer, align 16
@resTrans_R = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common dso_local global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@dc_level = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level_temp = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common dso_local global [4 x [4 x i32]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common dso_local global [16 x i32] zeroinitializer, align 16
@gop_structure = common dso_local global %struct.GOP_DATA* null, align 8
@rdopt = common dso_local global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common dso_local global %struct._IO_FILE* null, align 8
@p_log = common dso_local global %struct._IO_FILE* null, align 8
@p_trace = common dso_local global %struct._IO_FILE* null, align 8
@p_in = common dso_local global i32 0, align 4
@p_dec = common dso_local global i32 0, align 4
@glob_remapping_of_pic_nums_idc_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_remapping_of_pic_nums_idc_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@Bytes_After_Header = common dso_local global i32 0, align 4
@rpc_bytes_to_go = common dso_local global i32 0, align 4
@rpc_bits_to_go = common dso_local global i32 0, align 4
@McostState = common dso_local global i32** null, align 8
@Quantize_step = common dso_local global float 0.000000e+00, align 4
@Bsize = common dso_local global [8 x float] zeroinitializer, align 16
@Thresh4x4 = common dso_local global i32 0, align 4
@AlphaSec = common dso_local global [8 x float] zeroinitializer, align 16
@AlphaThird = common dso_local global [8 x float] zeroinitializer, align 16
@flag_intra = common dso_local global i32* null, align 8
@SearchState = common dso_local global i8** null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @InitializeFastFullIntegerSearch() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %list = alloca i32, align 4
  %search_range = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 8
  %1 = load i32, i32* %search_range1, align 8
  store i32 %1, i32* %search_range, align 4
  %2 = load i32, i32* %search_range, align 4
  %mul = mul nsw i32 2, %2
  %add = add nsw i32 %mul, 1
  %3 = load i32, i32* %search_range, align 4
  %mul2 = mul nsw i32 2, %3
  %add3 = add nsw i32 %mul2, 1
  %mul4 = mul nsw i32 %add, %add3
  store i32 %mul4, i32* %max_pos, align 4
  %call = call noalias i8* @malloc(i64 16) #5
  %4 = bitcast i8* %call to i32*****
  store i32***** %4, i32****** @BlockSAD, align 8
  %cmp = icmp eq i32***** %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc67, %if.end
  %5 = load i32, i32* %list, align 4
  %cmp5 = icmp slt i32 %5, 2
  br i1 %cmp5, label %for.body, label %for.end69

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 9
  %7 = load i32, i32* %max_num_references, align 4
  %add6 = add nsw i32 %7, 1
  %conv = sext i32 %add6 to i64
  %mul7 = mul i64 %conv, 8
  %call8 = call noalias i8* @malloc(i64 %mul7) #5
  %8 = bitcast i8* %call8 to i32****
  %9 = load i32*****, i32****** @BlockSAD, align 8
  %10 = load i32, i32* %list, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %9, i64 %idxprom
  store i32**** %8, i32***** %arrayidx, align 8
  %cmp9 = icmp eq i32**** %8, null
  br i1 %cmp9, label %if.then11, label %if.end12

if.then11:                                        ; preds = %for.body
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %for.body
  store i32 0, i32* %i, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc64, %if.end12
  %11 = load i32, i32* %i, align 4
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 9
  %13 = load i32, i32* %max_num_references14, align 4
  %cmp15 = icmp sle i32 %11, %13
  br i1 %cmp15, label %for.body17, label %for.end66

for.body17:                                       ; preds = %for.cond13
  %call18 = call noalias i8* @malloc(i64 64) #5
  %14 = bitcast i8* %call18 to i32***
  %15 = load i32*****, i32****** @BlockSAD, align 8
  %16 = load i32, i32* %list, align 4
  %idxprom19 = sext i32 %16 to i64
  %arrayidx20 = getelementptr inbounds i32****, i32***** %15, i64 %idxprom19
  %17 = load i32****, i32***** %arrayidx20, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom21 = sext i32 %18 to i64
  %arrayidx22 = getelementptr inbounds i32***, i32**** %17, i64 %idxprom21
  store i32*** %14, i32**** %arrayidx22, align 8
  %cmp23 = icmp eq i32*** %14, null
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %for.body17
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0))
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %for.body17
  store i32 1, i32* %j, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc61, %if.end26
  %19 = load i32, i32* %j, align 4
  %cmp28 = icmp slt i32 %19, 8
  br i1 %cmp28, label %for.body30, label %for.end63

for.body30:                                       ; preds = %for.cond27
  %call31 = call noalias i8* @malloc(i64 128) #5
  %20 = bitcast i8* %call31 to i32**
  %21 = load i32*****, i32****** @BlockSAD, align 8
  %22 = load i32, i32* %list, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds i32****, i32***** %21, i64 %idxprom32
  %23 = load i32****, i32***** %arrayidx33, align 8
  %24 = load i32, i32* %i, align 4
  %idxprom34 = sext i32 %24 to i64
  %arrayidx35 = getelementptr inbounds i32***, i32**** %23, i64 %idxprom34
  %25 = load i32***, i32**** %arrayidx35, align 8
  %26 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %26 to i64
  %arrayidx37 = getelementptr inbounds i32**, i32*** %25, i64 %idxprom36
  store i32** %20, i32*** %arrayidx37, align 8
  %cmp38 = icmp eq i32** %20, null
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %for.body30
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0))
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %for.body30
  store i32 0, i32* %k, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc, %if.end41
  %27 = load i32, i32* %k, align 4
  %cmp43 = icmp slt i32 %27, 16
  br i1 %cmp43, label %for.body45, label %for.end

for.body45:                                       ; preds = %for.cond42
  %28 = load i32, i32* %max_pos, align 4
  %conv46 = sext i32 %28 to i64
  %mul47 = mul i64 %conv46, 4
  %call48 = call noalias i8* @malloc(i64 %mul47) #5
  %29 = bitcast i8* %call48 to i32*
  %30 = load i32*****, i32****** @BlockSAD, align 8
  %31 = load i32, i32* %list, align 4
  %idxprom49 = sext i32 %31 to i64
  %arrayidx50 = getelementptr inbounds i32****, i32***** %30, i64 %idxprom49
  %32 = load i32****, i32***** %arrayidx50, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %33 to i64
  %arrayidx52 = getelementptr inbounds i32***, i32**** %32, i64 %idxprom51
  %34 = load i32***, i32**** %arrayidx52, align 8
  %35 = load i32, i32* %j, align 4
  %idxprom53 = sext i32 %35 to i64
  %arrayidx54 = getelementptr inbounds i32**, i32*** %34, i64 %idxprom53
  %36 = load i32**, i32*** %arrayidx54, align 8
  %37 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %37 to i64
  %arrayidx56 = getelementptr inbounds i32*, i32** %36, i64 %idxprom55
  store i32* %29, i32** %arrayidx56, align 8
  %cmp57 = icmp eq i32* %29, null
  br i1 %cmp57, label %if.then59, label %if.end60

if.then59:                                        ; preds = %for.body45
  call void @no_mem_exit(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0))
  br label %if.end60

if.end60:                                         ; preds = %if.then59, %for.body45
  br label %for.inc

for.inc:                                          ; preds = %if.end60
  %38 = load i32, i32* %k, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond42

for.end:                                          ; preds = %for.cond42
  br label %for.inc61

for.inc61:                                        ; preds = %for.end
  %39 = load i32, i32* %j, align 4
  %inc62 = add nsw i32 %39, 1
  store i32 %inc62, i32* %j, align 4
  br label %for.cond27

for.end63:                                        ; preds = %for.cond27
  br label %for.inc64

for.inc64:                                        ; preds = %for.end63
  %40 = load i32, i32* %i, align 4
  %inc65 = add nsw i32 %40, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond13

for.end66:                                        ; preds = %for.cond13
  br label %for.inc67

for.inc67:                                        ; preds = %for.end66
  %41 = load i32, i32* %list, align 4
  %inc68 = add nsw i32 %41, 1
  store i32 %inc68, i32* %list, align 4
  br label %for.cond

for.end69:                                        ; preds = %for.cond
  %call70 = call noalias i8* @malloc(i64 16) #5
  %42 = bitcast i8* %call70 to i32**
  store i32** %42, i32*** @search_setup_done, align 8
  %cmp71 = icmp eq i32** %42, null
  br i1 %cmp71, label %if.then73, label %if.end74

if.then73:                                        ; preds = %for.end69
  call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end74

if.end74:                                         ; preds = %if.then73, %for.end69
  %call75 = call noalias i8* @malloc(i64 16) #5
  %43 = bitcast i8* %call75 to i32**
  store i32** %43, i32*** @search_center_x, align 8
  %cmp76 = icmp eq i32** %43, null
  br i1 %cmp76, label %if.then78, label %if.end79

if.then78:                                        ; preds = %if.end74
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end79

if.end79:                                         ; preds = %if.then78, %if.end74
  %call80 = call noalias i8* @malloc(i64 16) #5
  %44 = bitcast i8* %call80 to i32**
  store i32** %44, i32*** @search_center_y, align 8
  %cmp81 = icmp eq i32** %44, null
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end79
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0))
  br label %if.end84

if.end84:                                         ; preds = %if.then83, %if.end79
  %call85 = call noalias i8* @malloc(i64 16) #5
  %45 = bitcast i8* %call85 to i32**
  store i32** %45, i32*** @pos_00, align 8
  %cmp86 = icmp eq i32** %45, null
  br i1 %cmp86, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end84
  call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0))
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end84
  %call90 = call noalias i8* @malloc(i64 16) #5
  %46 = bitcast i8* %call90 to i32**
  store i32** %46, i32*** @max_search_range, align 8
  %cmp91 = icmp eq i32** %46, null
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end89
  call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0))
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end89
  store i32 0, i32* %list, align 4
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc154, %if.end94
  %47 = load i32, i32* %list, align 4
  %cmp96 = icmp slt i32 %47, 2
  br i1 %cmp96, label %for.body98, label %for.end156

for.body98:                                       ; preds = %for.cond95
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references99 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 9
  %49 = load i32, i32* %max_num_references99, align 4
  %add100 = add nsw i32 %49, 1
  %conv101 = sext i32 %add100 to i64
  %mul102 = mul i64 %conv101, 4
  %call103 = call noalias i8* @malloc(i64 %mul102) #5
  %50 = bitcast i8* %call103 to i32*
  %51 = load i32**, i32*** @search_setup_done, align 8
  %52 = load i32, i32* %list, align 4
  %idxprom104 = sext i32 %52 to i64
  %arrayidx105 = getelementptr inbounds i32*, i32** %51, i64 %idxprom104
  store i32* %50, i32** %arrayidx105, align 8
  %cmp106 = icmp eq i32* %50, null
  br i1 %cmp106, label %if.then108, label %if.end109

if.then108:                                       ; preds = %for.body98
  call void @no_mem_exit(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %for.body98
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references110 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 9
  %54 = load i32, i32* %max_num_references110, align 4
  %add111 = add nsw i32 %54, 1
  %conv112 = sext i32 %add111 to i64
  %mul113 = mul i64 %conv112, 4
  %call114 = call noalias i8* @malloc(i64 %mul113) #5
  %55 = bitcast i8* %call114 to i32*
  %56 = load i32**, i32*** @search_center_x, align 8
  %57 = load i32, i32* %list, align 4
  %idxprom115 = sext i32 %57 to i64
  %arrayidx116 = getelementptr inbounds i32*, i32** %56, i64 %idxprom115
  store i32* %55, i32** %arrayidx116, align 8
  %cmp117 = icmp eq i32* %55, null
  br i1 %cmp117, label %if.then119, label %if.end120

if.then119:                                       ; preds = %if.end109
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end120

if.end120:                                        ; preds = %if.then119, %if.end109
  %58 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references121 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %58, i32 0, i32 9
  %59 = load i32, i32* %max_num_references121, align 4
  %add122 = add nsw i32 %59, 1
  %conv123 = sext i32 %add122 to i64
  %mul124 = mul i64 %conv123, 4
  %call125 = call noalias i8* @malloc(i64 %mul124) #5
  %60 = bitcast i8* %call125 to i32*
  %61 = load i32**, i32*** @search_center_y, align 8
  %62 = load i32, i32* %list, align 4
  %idxprom126 = sext i32 %62 to i64
  %arrayidx127 = getelementptr inbounds i32*, i32** %61, i64 %idxprom126
  store i32* %60, i32** %arrayidx127, align 8
  %cmp128 = icmp eq i32* %60, null
  br i1 %cmp128, label %if.then130, label %if.end131

if.then130:                                       ; preds = %if.end120
  call void @no_mem_exit(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0))
  br label %if.end131

if.end131:                                        ; preds = %if.then130, %if.end120
  %63 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %63, i32 0, i32 9
  %64 = load i32, i32* %max_num_references132, align 4
  %add133 = add nsw i32 %64, 1
  %conv134 = sext i32 %add133 to i64
  %mul135 = mul i64 %conv134, 4
  %call136 = call noalias i8* @malloc(i64 %mul135) #5
  %65 = bitcast i8* %call136 to i32*
  %66 = load i32**, i32*** @pos_00, align 8
  %67 = load i32, i32* %list, align 4
  %idxprom137 = sext i32 %67 to i64
  %arrayidx138 = getelementptr inbounds i32*, i32** %66, i64 %idxprom137
  store i32* %65, i32** %arrayidx138, align 8
  %cmp139 = icmp eq i32* %65, null
  br i1 %cmp139, label %if.then141, label %if.end142

if.then141:                                       ; preds = %if.end131
  call void @no_mem_exit(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0))
  br label %if.end142

if.end142:                                        ; preds = %if.then141, %if.end131
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references143 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 9
  %69 = load i32, i32* %max_num_references143, align 4
  %add144 = add nsw i32 %69, 1
  %conv145 = sext i32 %add144 to i64
  %mul146 = mul i64 %conv145, 4
  %call147 = call noalias i8* @malloc(i64 %mul146) #5
  %70 = bitcast i8* %call147 to i32*
  %71 = load i32**, i32*** @max_search_range, align 8
  %72 = load i32, i32* %list, align 4
  %idxprom148 = sext i32 %72 to i64
  %arrayidx149 = getelementptr inbounds i32*, i32** %71, i64 %idxprom148
  store i32* %70, i32** %arrayidx149, align 8
  %cmp150 = icmp eq i32* %70, null
  br i1 %cmp150, label %if.then152, label %if.end153

if.then152:                                       ; preds = %if.end142
  call void @no_mem_exit(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0))
  br label %if.end153

if.end153:                                        ; preds = %if.then152, %if.end142
  br label %for.inc154

for.inc154:                                       ; preds = %if.end153
  %73 = load i32, i32* %list, align 4
  %inc155 = add nsw i32 %73, 1
  store i32 %inc155, i32* %list, align 4
  br label %for.cond95

for.end156:                                       ; preds = %for.cond95
  %74 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %full_search = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %74, i32 0, i32 78
  %75 = load i32, i32* %full_search, align 4
  %cmp157 = icmp eq i32 %75, 2
  br i1 %cmp157, label %if.then159, label %if.else

if.then159:                                       ; preds = %for.end156
  store i32 0, i32* %list, align 4
  br label %for.cond160

for.cond160:                                      ; preds = %for.inc176, %if.then159
  %76 = load i32, i32* %list, align 4
  %cmp161 = icmp slt i32 %76, 2
  br i1 %cmp161, label %for.body163, label %for.end178

for.body163:                                      ; preds = %for.cond160
  store i32 0, i32* %i, align 4
  br label %for.cond164

for.cond164:                                      ; preds = %for.inc173, %for.body163
  %77 = load i32, i32* %i, align 4
  %78 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references165 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %78, i32 0, i32 9
  %79 = load i32, i32* %max_num_references165, align 4
  %cmp166 = icmp sle i32 %77, %79
  br i1 %cmp166, label %for.body168, label %for.end175

for.body168:                                      ; preds = %for.cond164
  %80 = load i32, i32* %search_range, align 4
  %81 = load i32**, i32*** @max_search_range, align 8
  %82 = load i32, i32* %list, align 4
  %idxprom169 = sext i32 %82 to i64
  %arrayidx170 = getelementptr inbounds i32*, i32** %81, i64 %idxprom169
  %83 = load i32*, i32** %arrayidx170, align 8
  %84 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %84 to i64
  %arrayidx172 = getelementptr inbounds i32, i32* %83, i64 %idxprom171
  store i32 %80, i32* %arrayidx172, align 4
  br label %for.inc173

for.inc173:                                       ; preds = %for.body168
  %85 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %85, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond164

for.end175:                                       ; preds = %for.cond164
  br label %for.inc176

for.inc176:                                       ; preds = %for.end175
  %86 = load i32, i32* %list, align 4
  %inc177 = add nsw i32 %86, 1
  store i32 %inc177, i32* %list, align 4
  br label %for.cond160

for.end178:                                       ; preds = %for.cond160
  br label %if.end206

if.else:                                          ; preds = %for.end156
  store i32 0, i32* %list, align 4
  br label %for.cond179

for.cond179:                                      ; preds = %for.inc203, %if.else
  %87 = load i32, i32* %list, align 4
  %cmp180 = icmp slt i32 %87, 2
  br i1 %cmp180, label %for.body182, label %for.end205

for.body182:                                      ; preds = %for.cond179
  %88 = load i32, i32* %search_range, align 4
  %89 = load i32**, i32*** @max_search_range, align 8
  %90 = load i32, i32* %list, align 4
  %idxprom183 = sext i32 %90 to i64
  %arrayidx184 = getelementptr inbounds i32*, i32** %89, i64 %idxprom183
  %91 = load i32*, i32** %arrayidx184, align 8
  %92 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %92, i32 0, i32 9
  %93 = load i32, i32* %max_num_references185, align 4
  %idxprom186 = sext i32 %93 to i64
  %arrayidx187 = getelementptr inbounds i32, i32* %91, i64 %idxprom186
  store i32 %88, i32* %arrayidx187, align 4
  %94 = load i32**, i32*** @max_search_range, align 8
  %95 = load i32, i32* %list, align 4
  %idxprom188 = sext i32 %95 to i64
  %arrayidx189 = getelementptr inbounds i32*, i32** %94, i64 %idxprom188
  %96 = load i32*, i32** %arrayidx189, align 8
  %arrayidx190 = getelementptr inbounds i32, i32* %96, i64 0
  store i32 %88, i32* %arrayidx190, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond191

for.cond191:                                      ; preds = %for.inc200, %for.body182
  %97 = load i32, i32* %i, align 4
  %98 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references192 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %98, i32 0, i32 9
  %99 = load i32, i32* %max_num_references192, align 4
  %cmp193 = icmp slt i32 %97, %99
  br i1 %cmp193, label %for.body195, label %for.end202

for.body195:                                      ; preds = %for.cond191
  %100 = load i32, i32* %search_range, align 4
  %div = sdiv i32 %100, 2
  %101 = load i32**, i32*** @max_search_range, align 8
  %102 = load i32, i32* %list, align 4
  %idxprom196 = sext i32 %102 to i64
  %arrayidx197 = getelementptr inbounds i32*, i32** %101, i64 %idxprom196
  %103 = load i32*, i32** %arrayidx197, align 8
  %104 = load i32, i32* %i, align 4
  %idxprom198 = sext i32 %104 to i64
  %arrayidx199 = getelementptr inbounds i32, i32* %103, i64 %idxprom198
  store i32 %div, i32* %arrayidx199, align 4
  br label %for.inc200

for.inc200:                                       ; preds = %for.body195
  %105 = load i32, i32* %i, align 4
  %inc201 = add nsw i32 %105, 1
  store i32 %inc201, i32* %i, align 4
  br label %for.cond191

for.end202:                                       ; preds = %for.cond191
  br label %for.inc203

for.inc203:                                       ; preds = %for.end202
  %106 = load i32, i32* %list, align 4
  %inc204 = add nsw i32 %106, 1
  store i32 %inc204, i32* %list, align 4
  br label %for.cond179

for.end205:                                       ; preds = %for.cond179
  br label %if.end206

if.end206:                                        ; preds = %for.end205, %for.end178
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

declare dso_local void @no_mem_exit(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ClearFastFullIntegerSearch() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %list = alloca i32, align 4
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc34, %entry
  %0 = load i32, i32* %list, align 4
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %for.body, label %for.end36

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc29, %for.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 9
  %3 = load i32, i32* %max_num_references, align 4
  %cmp2 = icmp sle i32 %1, %3
  br i1 %cmp2, label %for.body3, label %for.end31

for.body3:                                        ; preds = %for.cond1
  store i32 1, i32* %j, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc22, %for.body3
  %4 = load i32, i32* %j, align 4
  %cmp5 = icmp slt i32 %4, 8
  br i1 %cmp5, label %for.body6, label %for.end24

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body6
  %5 = load i32, i32* %k, align 4
  %cmp8 = icmp slt i32 %5, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %6 = load i32*****, i32****** @BlockSAD, align 8
  %7 = load i32, i32* %list, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %6, i64 %idxprom
  %8 = load i32****, i32***** %arrayidx, align 8
  %9 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i32***, i32**** %8, i64 %idxprom10
  %10 = load i32***, i32**** %arrayidx11, align 8
  %11 = load i32, i32* %j, align 4
  %idxprom12 = sext i32 %11 to i64
  %arrayidx13 = getelementptr inbounds i32**, i32*** %10, i64 %idxprom12
  %12 = load i32**, i32*** %arrayidx13, align 8
  %13 = load i32, i32* %k, align 4
  %idxprom14 = sext i32 %13 to i64
  %arrayidx15 = getelementptr inbounds i32*, i32** %12, i64 %idxprom14
  %14 = load i32*, i32** %arrayidx15, align 8
  %15 = bitcast i32* %14 to i8*
  call void @free(i8* %15) #5
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %16 = load i32, i32* %k, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  %17 = load i32*****, i32****** @BlockSAD, align 8
  %18 = load i32, i32* %list, align 4
  %idxprom16 = sext i32 %18 to i64
  %arrayidx17 = getelementptr inbounds i32****, i32***** %17, i64 %idxprom16
  %19 = load i32****, i32***** %arrayidx17, align 8
  %20 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %20 to i64
  %arrayidx19 = getelementptr inbounds i32***, i32**** %19, i64 %idxprom18
  %21 = load i32***, i32**** %arrayidx19, align 8
  %22 = load i32, i32* %j, align 4
  %idxprom20 = sext i32 %22 to i64
  %arrayidx21 = getelementptr inbounds i32**, i32*** %21, i64 %idxprom20
  %23 = load i32**, i32*** %arrayidx21, align 8
  %24 = bitcast i32** %23 to i8*
  call void @free(i8* %24) #5
  br label %for.inc22

for.inc22:                                        ; preds = %for.end
  %25 = load i32, i32* %j, align 4
  %inc23 = add nsw i32 %25, 1
  store i32 %inc23, i32* %j, align 4
  br label %for.cond4

for.end24:                                        ; preds = %for.cond4
  %26 = load i32*****, i32****** @BlockSAD, align 8
  %27 = load i32, i32* %list, align 4
  %idxprom25 = sext i32 %27 to i64
  %arrayidx26 = getelementptr inbounds i32****, i32***** %26, i64 %idxprom25
  %28 = load i32****, i32***** %arrayidx26, align 8
  %29 = load i32, i32* %i, align 4
  %idxprom27 = sext i32 %29 to i64
  %arrayidx28 = getelementptr inbounds i32***, i32**** %28, i64 %idxprom27
  %30 = load i32***, i32**** %arrayidx28, align 8
  %31 = bitcast i32*** %30 to i8*
  call void @free(i8* %31) #5
  br label %for.inc29

for.inc29:                                        ; preds = %for.end24
  %32 = load i32, i32* %i, align 4
  %inc30 = add nsw i32 %32, 1
  store i32 %inc30, i32* %i, align 4
  br label %for.cond1

for.end31:                                        ; preds = %for.cond1
  %33 = load i32*****, i32****** @BlockSAD, align 8
  %34 = load i32, i32* %list, align 4
  %idxprom32 = sext i32 %34 to i64
  %arrayidx33 = getelementptr inbounds i32****, i32***** %33, i64 %idxprom32
  %35 = load i32****, i32***** %arrayidx33, align 8
  %36 = bitcast i32**** %35 to i8*
  call void @free(i8* %36) #5
  br label %for.inc34

for.inc34:                                        ; preds = %for.end31
  %37 = load i32, i32* %list, align 4
  %inc35 = add nsw i32 %37, 1
  store i32 %inc35, i32* %list, align 4
  br label %for.cond

for.end36:                                        ; preds = %for.cond
  %38 = load i32*****, i32****** @BlockSAD, align 8
  %39 = bitcast i32***** %38 to i8*
  call void @free(i8* %39) #5
  store i32 0, i32* %list, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc50, %for.end36
  %40 = load i32, i32* %list, align 4
  %cmp38 = icmp slt i32 %40, 2
  br i1 %cmp38, label %for.body39, label %for.end52

for.body39:                                       ; preds = %for.cond37
  %41 = load i32**, i32*** @search_setup_done, align 8
  %42 = load i32, i32* %list, align 4
  %idxprom40 = sext i32 %42 to i64
  %arrayidx41 = getelementptr inbounds i32*, i32** %41, i64 %idxprom40
  %43 = load i32*, i32** %arrayidx41, align 8
  %44 = bitcast i32* %43 to i8*
  call void @free(i8* %44) #5
  %45 = load i32**, i32*** @search_center_x, align 8
  %46 = load i32, i32* %list, align 4
  %idxprom42 = sext i32 %46 to i64
  %arrayidx43 = getelementptr inbounds i32*, i32** %45, i64 %idxprom42
  %47 = load i32*, i32** %arrayidx43, align 8
  %48 = bitcast i32* %47 to i8*
  call void @free(i8* %48) #5
  %49 = load i32**, i32*** @search_center_y, align 8
  %50 = load i32, i32* %list, align 4
  %idxprom44 = sext i32 %50 to i64
  %arrayidx45 = getelementptr inbounds i32*, i32** %49, i64 %idxprom44
  %51 = load i32*, i32** %arrayidx45, align 8
  %52 = bitcast i32* %51 to i8*
  call void @free(i8* %52) #5
  %53 = load i32**, i32*** @pos_00, align 8
  %54 = load i32, i32* %list, align 4
  %idxprom46 = sext i32 %54 to i64
  %arrayidx47 = getelementptr inbounds i32*, i32** %53, i64 %idxprom46
  %55 = load i32*, i32** %arrayidx47, align 8
  %56 = bitcast i32* %55 to i8*
  call void @free(i8* %56) #5
  %57 = load i32**, i32*** @max_search_range, align 8
  %58 = load i32, i32* %list, align 4
  %idxprom48 = sext i32 %58 to i64
  %arrayidx49 = getelementptr inbounds i32*, i32** %57, i64 %idxprom48
  %59 = load i32*, i32** %arrayidx49, align 8
  %60 = bitcast i32* %59 to i8*
  call void @free(i8* %60) #5
  br label %for.inc50

for.inc50:                                        ; preds = %for.body39
  %61 = load i32, i32* %list, align 4
  %inc51 = add nsw i32 %61, 1
  store i32 %inc51, i32* %list, align 4
  br label %for.cond37

for.end52:                                        ; preds = %for.cond37
  %62 = load i32**, i32*** @search_setup_done, align 8
  %63 = bitcast i32** %62 to i8*
  call void @free(i8* %63) #5
  %64 = load i32**, i32*** @search_center_x, align 8
  %65 = bitcast i32** %64 to i8*
  call void @free(i8* %65) #5
  %66 = load i32**, i32*** @search_center_y, align 8
  %67 = bitcast i32** %66 to i8*
  call void @free(i8* %67) #5
  %68 = load i32**, i32*** @pos_00, align 8
  %69 = bitcast i32** %68 to i8*
  call void @free(i8* %69) #5
  %70 = load i32**, i32*** @max_search_range, align 8
  %71 = bitcast i32** %70 to i8*
  call void @free(i8* %71) #5
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ResetFastFullIntegerSearch() #0 {
entry:
  %i = alloca i32, align 4
  %list = alloca i32, align 4
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %list, align 4
  %cmp = icmp slt i32 %0, 2
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %i, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 9
  %3 = load i32, i32* %max_num_references, align 4
  %cmp2 = icmp sle i32 %1, %3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32**, i32*** @search_setup_done, align 8
  %5 = load i32, i32* %list, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds i32*, i32** %4, i64 %idxprom
  %6 = load i32*, i32** %arrayidx, align 8
  %7 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds i32, i32* %6, i64 %idxprom4
  store i32 0, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %9 = load i32, i32* %list, align 4
  %inc7 = add nsw i32 %9, 1
  store i32 %inc7, i32* %list, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SetupLargerBlocks(i32 %list, i32 %refindex, i32 %max_pos) #0 {
entry:
  %list.addr = alloca i32, align 4
  %refindex.addr = alloca i32, align 4
  %max_pos.addr = alloca i32, align 4
  %pos = alloca i32, align 4
  %_bo = alloca i32**, align 8
  %_bi = alloca i32**, align 8
  %_bj = alloca i32**, align 8
  %_o = alloca i32*, align 8
  %_i = alloca i32*, align 8
  %_j = alloca i32*, align 8
  store i32 %list, i32* %list.addr, align 4
  store i32 %refindex, i32* %refindex.addr, align 4
  store i32 %max_pos, i32* %max_pos.addr, align 4
  %0 = load i32*****, i32****** @BlockSAD, align 8
  %1 = load i32, i32* %list.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %0, i64 %idxprom
  %2 = load i32****, i32***** %arrayidx, align 8
  %3 = load i32, i32* %refindex.addr, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds i32***, i32**** %2, i64 %idxprom1
  %4 = load i32***, i32**** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32**, i32*** %4, i64 6
  %5 = load i32**, i32*** %arrayidx3, align 8
  store i32** %5, i32*** %_bo, align 8
  %6 = load i32*****, i32****** @BlockSAD, align 8
  %7 = load i32, i32* %list.addr, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds i32****, i32***** %6, i64 %idxprom4
  %8 = load i32****, i32***** %arrayidx5, align 8
  %9 = load i32, i32* %refindex.addr, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds i32***, i32**** %8, i64 %idxprom6
  %10 = load i32***, i32**** %arrayidx7, align 8
  %arrayidx8 = getelementptr inbounds i32**, i32*** %10, i64 7
  %11 = load i32**, i32*** %arrayidx8, align 8
  store i32** %11, i32*** %_bi, align 8
  %12 = load i32**, i32*** %_bi, align 8
  %add.ptr = getelementptr inbounds i32*, i32** %12, i64 4
  store i32** %add.ptr, i32*** %_bj, align 8
  %13 = load i32**, i32*** %_bo, align 8
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %_o, align 8
  %15 = load i32**, i32*** %_bi, align 8
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %_i, align 8
  %17 = load i32**, i32*** %_bj, align 8
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %19 = load i32, i32* %pos, align 4
  %20 = load i32, i32* %max_pos.addr, align 4
  %cmp = icmp slt i32 %19, %20
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %21 = load i32*, i32** %_i, align 8
  %22 = load i32, i32* %pos, align 4
  %idxprom9 = sext i32 %22 to i64
  %arrayidx10 = getelementptr inbounds i32, i32* %21, i64 %idxprom9
  %23 = load i32, i32* %arrayidx10, align 4
  %24 = load i32*, i32** %_j, align 8
  %25 = load i32, i32* %pos, align 4
  %idxprom11 = sext i32 %25 to i64
  %arrayidx12 = getelementptr inbounds i32, i32* %24, i64 %idxprom11
  %26 = load i32, i32* %arrayidx12, align 4
  %add = add nsw i32 %23, %26
  %27 = load i32*, i32** %_o, align 8
  %28 = load i32, i32* %pos, align 4
  %idxprom13 = sext i32 %28 to i64
  %arrayidx14 = getelementptr inbounds i32, i32* %27, i64 %idxprom13
  store i32 %add, i32* %arrayidx14, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %29 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %pos, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %30 = load i32**, i32*** %_bo, align 8
  %add.ptr15 = getelementptr inbounds i32*, i32** %30, i64 1
  store i32** %add.ptr15, i32*** %_bo, align 8
  %31 = load i32**, i32*** %_bi, align 8
  %add.ptr16 = getelementptr inbounds i32*, i32** %31, i64 1
  store i32** %add.ptr16, i32*** %_bi, align 8
  %32 = load i32**, i32*** %_bj, align 8
  %add.ptr17 = getelementptr inbounds i32*, i32** %32, i64 1
  store i32** %add.ptr17, i32*** %_bj, align 8
  %33 = load i32**, i32*** %_bo, align 8
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %_o, align 8
  %35 = load i32**, i32*** %_bi, align 8
  %36 = load i32*, i32** %35, align 8
  store i32* %36, i32** %_i, align 8
  %37 = load i32**, i32*** %_bj, align 8
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc28, %for.end
  %39 = load i32, i32* %pos, align 4
  %40 = load i32, i32* %max_pos.addr, align 4
  %cmp19 = icmp slt i32 %39, %40
  br i1 %cmp19, label %for.body20, label %for.end30

for.body20:                                       ; preds = %for.cond18
  %41 = load i32*, i32** %_i, align 8
  %42 = load i32, i32* %pos, align 4
  %idxprom21 = sext i32 %42 to i64
  %arrayidx22 = getelementptr inbounds i32, i32* %41, i64 %idxprom21
  %43 = load i32, i32* %arrayidx22, align 4
  %44 = load i32*, i32** %_j, align 8
  %45 = load i32, i32* %pos, align 4
  %idxprom23 = sext i32 %45 to i64
  %arrayidx24 = getelementptr inbounds i32, i32* %44, i64 %idxprom23
  %46 = load i32, i32* %arrayidx24, align 4
  %add25 = add nsw i32 %43, %46
  %47 = load i32*, i32** %_o, align 8
  %48 = load i32, i32* %pos, align 4
  %idxprom26 = sext i32 %48 to i64
  %arrayidx27 = getelementptr inbounds i32, i32* %47, i64 %idxprom26
  store i32 %add25, i32* %arrayidx27, align 4
  br label %for.inc28

for.inc28:                                        ; preds = %for.body20
  %49 = load i32, i32* %pos, align 4
  %inc29 = add nsw i32 %49, 1
  store i32 %inc29, i32* %pos, align 4
  br label %for.cond18

for.end30:                                        ; preds = %for.cond18
  %50 = load i32**, i32*** %_bo, align 8
  %add.ptr31 = getelementptr inbounds i32*, i32** %50, i64 1
  store i32** %add.ptr31, i32*** %_bo, align 8
  %51 = load i32**, i32*** %_bi, align 8
  %add.ptr32 = getelementptr inbounds i32*, i32** %51, i64 1
  store i32** %add.ptr32, i32*** %_bi, align 8
  %52 = load i32**, i32*** %_bj, align 8
  %add.ptr33 = getelementptr inbounds i32*, i32** %52, i64 1
  store i32** %add.ptr33, i32*** %_bj, align 8
  %53 = load i32**, i32*** %_bo, align 8
  %54 = load i32*, i32** %53, align 8
  store i32* %54, i32** %_o, align 8
  %55 = load i32**, i32*** %_bi, align 8
  %56 = load i32*, i32** %55, align 8
  store i32* %56, i32** %_i, align 8
  %57 = load i32**, i32*** %_bj, align 8
  %58 = load i32*, i32** %57, align 8
  store i32* %58, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc44, %for.end30
  %59 = load i32, i32* %pos, align 4
  %60 = load i32, i32* %max_pos.addr, align 4
  %cmp35 = icmp slt i32 %59, %60
  br i1 %cmp35, label %for.body36, label %for.end46

for.body36:                                       ; preds = %for.cond34
  %61 = load i32*, i32** %_i, align 8
  %62 = load i32, i32* %pos, align 4
  %idxprom37 = sext i32 %62 to i64
  %arrayidx38 = getelementptr inbounds i32, i32* %61, i64 %idxprom37
  %63 = load i32, i32* %arrayidx38, align 4
  %64 = load i32*, i32** %_j, align 8
  %65 = load i32, i32* %pos, align 4
  %idxprom39 = sext i32 %65 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %64, i64 %idxprom39
  %66 = load i32, i32* %arrayidx40, align 4
  %add41 = add nsw i32 %63, %66
  %67 = load i32*, i32** %_o, align 8
  %68 = load i32, i32* %pos, align 4
  %idxprom42 = sext i32 %68 to i64
  %arrayidx43 = getelementptr inbounds i32, i32* %67, i64 %idxprom42
  store i32 %add41, i32* %arrayidx43, align 4
  br label %for.inc44

for.inc44:                                        ; preds = %for.body36
  %69 = load i32, i32* %pos, align 4
  %inc45 = add nsw i32 %69, 1
  store i32 %inc45, i32* %pos, align 4
  br label %for.cond34

for.end46:                                        ; preds = %for.cond34
  %70 = load i32**, i32*** %_bo, align 8
  %add.ptr47 = getelementptr inbounds i32*, i32** %70, i64 1
  store i32** %add.ptr47, i32*** %_bo, align 8
  %71 = load i32**, i32*** %_bi, align 8
  %add.ptr48 = getelementptr inbounds i32*, i32** %71, i64 1
  store i32** %add.ptr48, i32*** %_bi, align 8
  %72 = load i32**, i32*** %_bj, align 8
  %add.ptr49 = getelementptr inbounds i32*, i32** %72, i64 1
  store i32** %add.ptr49, i32*** %_bj, align 8
  %73 = load i32**, i32*** %_bo, align 8
  %74 = load i32*, i32** %73, align 8
  store i32* %74, i32** %_o, align 8
  %75 = load i32**, i32*** %_bi, align 8
  %76 = load i32*, i32** %75, align 8
  store i32* %76, i32** %_i, align 8
  %77 = load i32**, i32*** %_bj, align 8
  %78 = load i32*, i32** %77, align 8
  store i32* %78, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond50

for.cond50:                                       ; preds = %for.inc60, %for.end46
  %79 = load i32, i32* %pos, align 4
  %80 = load i32, i32* %max_pos.addr, align 4
  %cmp51 = icmp slt i32 %79, %80
  br i1 %cmp51, label %for.body52, label %for.end62

for.body52:                                       ; preds = %for.cond50
  %81 = load i32*, i32** %_i, align 8
  %82 = load i32, i32* %pos, align 4
  %idxprom53 = sext i32 %82 to i64
  %arrayidx54 = getelementptr inbounds i32, i32* %81, i64 %idxprom53
  %83 = load i32, i32* %arrayidx54, align 4
  %84 = load i32*, i32** %_j, align 8
  %85 = load i32, i32* %pos, align 4
  %idxprom55 = sext i32 %85 to i64
  %arrayidx56 = getelementptr inbounds i32, i32* %84, i64 %idxprom55
  %86 = load i32, i32* %arrayidx56, align 4
  %add57 = add nsw i32 %83, %86
  %87 = load i32*, i32** %_o, align 8
  %88 = load i32, i32* %pos, align 4
  %idxprom58 = sext i32 %88 to i64
  %arrayidx59 = getelementptr inbounds i32, i32* %87, i64 %idxprom58
  store i32 %add57, i32* %arrayidx59, align 4
  br label %for.inc60

for.inc60:                                        ; preds = %for.body52
  %89 = load i32, i32* %pos, align 4
  %inc61 = add nsw i32 %89, 1
  store i32 %inc61, i32* %pos, align 4
  br label %for.cond50

for.end62:                                        ; preds = %for.cond50
  %90 = load i32**, i32*** %_bo, align 8
  %add.ptr63 = getelementptr inbounds i32*, i32** %90, i64 5
  store i32** %add.ptr63, i32*** %_bo, align 8
  %91 = load i32**, i32*** %_bi, align 8
  %add.ptr64 = getelementptr inbounds i32*, i32** %91, i64 5
  store i32** %add.ptr64, i32*** %_bi, align 8
  %92 = load i32**, i32*** %_bj, align 8
  %add.ptr65 = getelementptr inbounds i32*, i32** %92, i64 5
  store i32** %add.ptr65, i32*** %_bj, align 8
  %93 = load i32**, i32*** %_bo, align 8
  %94 = load i32*, i32** %93, align 8
  store i32* %94, i32** %_o, align 8
  %95 = load i32**, i32*** %_bi, align 8
  %96 = load i32*, i32** %95, align 8
  store i32* %96, i32** %_i, align 8
  %97 = load i32**, i32*** %_bj, align 8
  %98 = load i32*, i32** %97, align 8
  store i32* %98, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond66

for.cond66:                                       ; preds = %for.inc76, %for.end62
  %99 = load i32, i32* %pos, align 4
  %100 = load i32, i32* %max_pos.addr, align 4
  %cmp67 = icmp slt i32 %99, %100
  br i1 %cmp67, label %for.body68, label %for.end78

for.body68:                                       ; preds = %for.cond66
  %101 = load i32*, i32** %_i, align 8
  %102 = load i32, i32* %pos, align 4
  %idxprom69 = sext i32 %102 to i64
  %arrayidx70 = getelementptr inbounds i32, i32* %101, i64 %idxprom69
  %103 = load i32, i32* %arrayidx70, align 4
  %104 = load i32*, i32** %_j, align 8
  %105 = load i32, i32* %pos, align 4
  %idxprom71 = sext i32 %105 to i64
  %arrayidx72 = getelementptr inbounds i32, i32* %104, i64 %idxprom71
  %106 = load i32, i32* %arrayidx72, align 4
  %add73 = add nsw i32 %103, %106
  %107 = load i32*, i32** %_o, align 8
  %108 = load i32, i32* %pos, align 4
  %idxprom74 = sext i32 %108 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %107, i64 %idxprom74
  store i32 %add73, i32* %arrayidx75, align 4
  br label %for.inc76

for.inc76:                                        ; preds = %for.body68
  %109 = load i32, i32* %pos, align 4
  %inc77 = add nsw i32 %109, 1
  store i32 %inc77, i32* %pos, align 4
  br label %for.cond66

for.end78:                                        ; preds = %for.cond66
  %110 = load i32**, i32*** %_bo, align 8
  %add.ptr79 = getelementptr inbounds i32*, i32** %110, i64 1
  store i32** %add.ptr79, i32*** %_bo, align 8
  %111 = load i32**, i32*** %_bi, align 8
  %add.ptr80 = getelementptr inbounds i32*, i32** %111, i64 1
  store i32** %add.ptr80, i32*** %_bi, align 8
  %112 = load i32**, i32*** %_bj, align 8
  %add.ptr81 = getelementptr inbounds i32*, i32** %112, i64 1
  store i32** %add.ptr81, i32*** %_bj, align 8
  %113 = load i32**, i32*** %_bo, align 8
  %114 = load i32*, i32** %113, align 8
  store i32* %114, i32** %_o, align 8
  %115 = load i32**, i32*** %_bi, align 8
  %116 = load i32*, i32** %115, align 8
  store i32* %116, i32** %_i, align 8
  %117 = load i32**, i32*** %_bj, align 8
  %118 = load i32*, i32** %117, align 8
  store i32* %118, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc92, %for.end78
  %119 = load i32, i32* %pos, align 4
  %120 = load i32, i32* %max_pos.addr, align 4
  %cmp83 = icmp slt i32 %119, %120
  br i1 %cmp83, label %for.body84, label %for.end94

for.body84:                                       ; preds = %for.cond82
  %121 = load i32*, i32** %_i, align 8
  %122 = load i32, i32* %pos, align 4
  %idxprom85 = sext i32 %122 to i64
  %arrayidx86 = getelementptr inbounds i32, i32* %121, i64 %idxprom85
  %123 = load i32, i32* %arrayidx86, align 4
  %124 = load i32*, i32** %_j, align 8
  %125 = load i32, i32* %pos, align 4
  %idxprom87 = sext i32 %125 to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %124, i64 %idxprom87
  %126 = load i32, i32* %arrayidx88, align 4
  %add89 = add nsw i32 %123, %126
  %127 = load i32*, i32** %_o, align 8
  %128 = load i32, i32* %pos, align 4
  %idxprom90 = sext i32 %128 to i64
  %arrayidx91 = getelementptr inbounds i32, i32* %127, i64 %idxprom90
  store i32 %add89, i32* %arrayidx91, align 4
  br label %for.inc92

for.inc92:                                        ; preds = %for.body84
  %129 = load i32, i32* %pos, align 4
  %inc93 = add nsw i32 %129, 1
  store i32 %inc93, i32* %pos, align 4
  br label %for.cond82

for.end94:                                        ; preds = %for.cond82
  %130 = load i32**, i32*** %_bo, align 8
  %add.ptr95 = getelementptr inbounds i32*, i32** %130, i64 1
  store i32** %add.ptr95, i32*** %_bo, align 8
  %131 = load i32**, i32*** %_bi, align 8
  %add.ptr96 = getelementptr inbounds i32*, i32** %131, i64 1
  store i32** %add.ptr96, i32*** %_bi, align 8
  %132 = load i32**, i32*** %_bj, align 8
  %add.ptr97 = getelementptr inbounds i32*, i32** %132, i64 1
  store i32** %add.ptr97, i32*** %_bj, align 8
  %133 = load i32**, i32*** %_bo, align 8
  %134 = load i32*, i32** %133, align 8
  store i32* %134, i32** %_o, align 8
  %135 = load i32**, i32*** %_bi, align 8
  %136 = load i32*, i32** %135, align 8
  store i32* %136, i32** %_i, align 8
  %137 = load i32**, i32*** %_bj, align 8
  %138 = load i32*, i32** %137, align 8
  store i32* %138, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc108, %for.end94
  %139 = load i32, i32* %pos, align 4
  %140 = load i32, i32* %max_pos.addr, align 4
  %cmp99 = icmp slt i32 %139, %140
  br i1 %cmp99, label %for.body100, label %for.end110

for.body100:                                      ; preds = %for.cond98
  %141 = load i32*, i32** %_i, align 8
  %142 = load i32, i32* %pos, align 4
  %idxprom101 = sext i32 %142 to i64
  %arrayidx102 = getelementptr inbounds i32, i32* %141, i64 %idxprom101
  %143 = load i32, i32* %arrayidx102, align 4
  %144 = load i32*, i32** %_j, align 8
  %145 = load i32, i32* %pos, align 4
  %idxprom103 = sext i32 %145 to i64
  %arrayidx104 = getelementptr inbounds i32, i32* %144, i64 %idxprom103
  %146 = load i32, i32* %arrayidx104, align 4
  %add105 = add nsw i32 %143, %146
  %147 = load i32*, i32** %_o, align 8
  %148 = load i32, i32* %pos, align 4
  %idxprom106 = sext i32 %148 to i64
  %arrayidx107 = getelementptr inbounds i32, i32* %147, i64 %idxprom106
  store i32 %add105, i32* %arrayidx107, align 4
  br label %for.inc108

for.inc108:                                       ; preds = %for.body100
  %149 = load i32, i32* %pos, align 4
  %inc109 = add nsw i32 %149, 1
  store i32 %inc109, i32* %pos, align 4
  br label %for.cond98

for.end110:                                       ; preds = %for.cond98
  %150 = load i32**, i32*** %_bo, align 8
  %add.ptr111 = getelementptr inbounds i32*, i32** %150, i64 1
  store i32** %add.ptr111, i32*** %_bo, align 8
  %151 = load i32**, i32*** %_bi, align 8
  %add.ptr112 = getelementptr inbounds i32*, i32** %151, i64 1
  store i32** %add.ptr112, i32*** %_bi, align 8
  %152 = load i32**, i32*** %_bj, align 8
  %add.ptr113 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %add.ptr113, i32*** %_bj, align 8
  %153 = load i32**, i32*** %_bo, align 8
  %154 = load i32*, i32** %153, align 8
  store i32* %154, i32** %_o, align 8
  %155 = load i32**, i32*** %_bi, align 8
  %156 = load i32*, i32** %155, align 8
  store i32* %156, i32** %_i, align 8
  %157 = load i32**, i32*** %_bj, align 8
  %158 = load i32*, i32** %157, align 8
  store i32* %158, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond114

for.cond114:                                      ; preds = %for.inc124, %for.end110
  %159 = load i32, i32* %pos, align 4
  %160 = load i32, i32* %max_pos.addr, align 4
  %cmp115 = icmp slt i32 %159, %160
  br i1 %cmp115, label %for.body116, label %for.end126

for.body116:                                      ; preds = %for.cond114
  %161 = load i32*, i32** %_i, align 8
  %162 = load i32, i32* %pos, align 4
  %idxprom117 = sext i32 %162 to i64
  %arrayidx118 = getelementptr inbounds i32, i32* %161, i64 %idxprom117
  %163 = load i32, i32* %arrayidx118, align 4
  %164 = load i32*, i32** %_j, align 8
  %165 = load i32, i32* %pos, align 4
  %idxprom119 = sext i32 %165 to i64
  %arrayidx120 = getelementptr inbounds i32, i32* %164, i64 %idxprom119
  %166 = load i32, i32* %arrayidx120, align 4
  %add121 = add nsw i32 %163, %166
  %167 = load i32*, i32** %_o, align 8
  %168 = load i32, i32* %pos, align 4
  %idxprom122 = sext i32 %168 to i64
  %arrayidx123 = getelementptr inbounds i32, i32* %167, i64 %idxprom122
  store i32 %add121, i32* %arrayidx123, align 4
  br label %for.inc124

for.inc124:                                       ; preds = %for.body116
  %169 = load i32, i32* %pos, align 4
  %inc125 = add nsw i32 %169, 1
  store i32 %inc125, i32* %pos, align 4
  br label %for.cond114

for.end126:                                       ; preds = %for.cond114
  %170 = load i32*****, i32****** @BlockSAD, align 8
  %171 = load i32, i32* %list.addr, align 4
  %idxprom127 = sext i32 %171 to i64
  %arrayidx128 = getelementptr inbounds i32****, i32***** %170, i64 %idxprom127
  %172 = load i32****, i32***** %arrayidx128, align 8
  %173 = load i32, i32* %refindex.addr, align 4
  %idxprom129 = sext i32 %173 to i64
  %arrayidx130 = getelementptr inbounds i32***, i32**** %172, i64 %idxprom129
  %174 = load i32***, i32**** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i32**, i32*** %174, i64 5
  %175 = load i32**, i32*** %arrayidx131, align 8
  store i32** %175, i32*** %_bo, align 8
  %176 = load i32*****, i32****** @BlockSAD, align 8
  %177 = load i32, i32* %list.addr, align 4
  %idxprom132 = sext i32 %177 to i64
  %arrayidx133 = getelementptr inbounds i32****, i32***** %176, i64 %idxprom132
  %178 = load i32****, i32***** %arrayidx133, align 8
  %179 = load i32, i32* %refindex.addr, align 4
  %idxprom134 = sext i32 %179 to i64
  %arrayidx135 = getelementptr inbounds i32***, i32**** %178, i64 %idxprom134
  %180 = load i32***, i32**** %arrayidx135, align 8
  %arrayidx136 = getelementptr inbounds i32**, i32*** %180, i64 7
  %181 = load i32**, i32*** %arrayidx136, align 8
  store i32** %181, i32*** %_bi, align 8
  %182 = load i32**, i32*** %_bi, align 8
  %add.ptr137 = getelementptr inbounds i32*, i32** %182, i64 1
  store i32** %add.ptr137, i32*** %_bj, align 8
  %183 = load i32**, i32*** %_bo, align 8
  %184 = load i32*, i32** %183, align 8
  store i32* %184, i32** %_o, align 8
  %185 = load i32**, i32*** %_bi, align 8
  %186 = load i32*, i32** %185, align 8
  store i32* %186, i32** %_i, align 8
  %187 = load i32**, i32*** %_bj, align 8
  %188 = load i32*, i32** %187, align 8
  store i32* %188, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond138

for.cond138:                                      ; preds = %for.inc148, %for.end126
  %189 = load i32, i32* %pos, align 4
  %190 = load i32, i32* %max_pos.addr, align 4
  %cmp139 = icmp slt i32 %189, %190
  br i1 %cmp139, label %for.body140, label %for.end150

for.body140:                                      ; preds = %for.cond138
  %191 = load i32*, i32** %_i, align 8
  %192 = load i32, i32* %pos, align 4
  %idxprom141 = sext i32 %192 to i64
  %arrayidx142 = getelementptr inbounds i32, i32* %191, i64 %idxprom141
  %193 = load i32, i32* %arrayidx142, align 4
  %194 = load i32*, i32** %_j, align 8
  %195 = load i32, i32* %pos, align 4
  %idxprom143 = sext i32 %195 to i64
  %arrayidx144 = getelementptr inbounds i32, i32* %194, i64 %idxprom143
  %196 = load i32, i32* %arrayidx144, align 4
  %add145 = add nsw i32 %193, %196
  %197 = load i32*, i32** %_o, align 8
  %198 = load i32, i32* %pos, align 4
  %idxprom146 = sext i32 %198 to i64
  %arrayidx147 = getelementptr inbounds i32, i32* %197, i64 %idxprom146
  store i32 %add145, i32* %arrayidx147, align 4
  br label %for.inc148

for.inc148:                                       ; preds = %for.body140
  %199 = load i32, i32* %pos, align 4
  %inc149 = add nsw i32 %199, 1
  store i32 %inc149, i32* %pos, align 4
  br label %for.cond138

for.end150:                                       ; preds = %for.cond138
  %200 = load i32**, i32*** %_bo, align 8
  %add.ptr151 = getelementptr inbounds i32*, i32** %200, i64 2
  store i32** %add.ptr151, i32*** %_bo, align 8
  %201 = load i32**, i32*** %_bi, align 8
  %add.ptr152 = getelementptr inbounds i32*, i32** %201, i64 2
  store i32** %add.ptr152, i32*** %_bi, align 8
  %202 = load i32**, i32*** %_bj, align 8
  %add.ptr153 = getelementptr inbounds i32*, i32** %202, i64 2
  store i32** %add.ptr153, i32*** %_bj, align 8
  %203 = load i32**, i32*** %_bo, align 8
  %204 = load i32*, i32** %203, align 8
  store i32* %204, i32** %_o, align 8
  %205 = load i32**, i32*** %_bi, align 8
  %206 = load i32*, i32** %205, align 8
  store i32* %206, i32** %_i, align 8
  %207 = load i32**, i32*** %_bj, align 8
  %208 = load i32*, i32** %207, align 8
  store i32* %208, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond154

for.cond154:                                      ; preds = %for.inc164, %for.end150
  %209 = load i32, i32* %pos, align 4
  %210 = load i32, i32* %max_pos.addr, align 4
  %cmp155 = icmp slt i32 %209, %210
  br i1 %cmp155, label %for.body156, label %for.end166

for.body156:                                      ; preds = %for.cond154
  %211 = load i32*, i32** %_i, align 8
  %212 = load i32, i32* %pos, align 4
  %idxprom157 = sext i32 %212 to i64
  %arrayidx158 = getelementptr inbounds i32, i32* %211, i64 %idxprom157
  %213 = load i32, i32* %arrayidx158, align 4
  %214 = load i32*, i32** %_j, align 8
  %215 = load i32, i32* %pos, align 4
  %idxprom159 = sext i32 %215 to i64
  %arrayidx160 = getelementptr inbounds i32, i32* %214, i64 %idxprom159
  %216 = load i32, i32* %arrayidx160, align 4
  %add161 = add nsw i32 %213, %216
  %217 = load i32*, i32** %_o, align 8
  %218 = load i32, i32* %pos, align 4
  %idxprom162 = sext i32 %218 to i64
  %arrayidx163 = getelementptr inbounds i32, i32* %217, i64 %idxprom162
  store i32 %add161, i32* %arrayidx163, align 4
  br label %for.inc164

for.inc164:                                       ; preds = %for.body156
  %219 = load i32, i32* %pos, align 4
  %inc165 = add nsw i32 %219, 1
  store i32 %inc165, i32* %pos, align 4
  br label %for.cond154

for.end166:                                       ; preds = %for.cond154
  %220 = load i32**, i32*** %_bo, align 8
  %add.ptr167 = getelementptr inbounds i32*, i32** %220, i64 2
  store i32** %add.ptr167, i32*** %_bo, align 8
  %221 = load i32**, i32*** %_bi, align 8
  %add.ptr168 = getelementptr inbounds i32*, i32** %221, i64 2
  store i32** %add.ptr168, i32*** %_bi, align 8
  %222 = load i32**, i32*** %_bj, align 8
  %add.ptr169 = getelementptr inbounds i32*, i32** %222, i64 2
  store i32** %add.ptr169, i32*** %_bj, align 8
  %223 = load i32**, i32*** %_bo, align 8
  %224 = load i32*, i32** %223, align 8
  store i32* %224, i32** %_o, align 8
  %225 = load i32**, i32*** %_bi, align 8
  %226 = load i32*, i32** %225, align 8
  store i32* %226, i32** %_i, align 8
  %227 = load i32**, i32*** %_bj, align 8
  %228 = load i32*, i32** %227, align 8
  store i32* %228, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond170

for.cond170:                                      ; preds = %for.inc180, %for.end166
  %229 = load i32, i32* %pos, align 4
  %230 = load i32, i32* %max_pos.addr, align 4
  %cmp171 = icmp slt i32 %229, %230
  br i1 %cmp171, label %for.body172, label %for.end182

for.body172:                                      ; preds = %for.cond170
  %231 = load i32*, i32** %_i, align 8
  %232 = load i32, i32* %pos, align 4
  %idxprom173 = sext i32 %232 to i64
  %arrayidx174 = getelementptr inbounds i32, i32* %231, i64 %idxprom173
  %233 = load i32, i32* %arrayidx174, align 4
  %234 = load i32*, i32** %_j, align 8
  %235 = load i32, i32* %pos, align 4
  %idxprom175 = sext i32 %235 to i64
  %arrayidx176 = getelementptr inbounds i32, i32* %234, i64 %idxprom175
  %236 = load i32, i32* %arrayidx176, align 4
  %add177 = add nsw i32 %233, %236
  %237 = load i32*, i32** %_o, align 8
  %238 = load i32, i32* %pos, align 4
  %idxprom178 = sext i32 %238 to i64
  %arrayidx179 = getelementptr inbounds i32, i32* %237, i64 %idxprom178
  store i32 %add177, i32* %arrayidx179, align 4
  br label %for.inc180

for.inc180:                                       ; preds = %for.body172
  %239 = load i32, i32* %pos, align 4
  %inc181 = add nsw i32 %239, 1
  store i32 %inc181, i32* %pos, align 4
  br label %for.cond170

for.end182:                                       ; preds = %for.cond170
  %240 = load i32**, i32*** %_bo, align 8
  %add.ptr183 = getelementptr inbounds i32*, i32** %240, i64 2
  store i32** %add.ptr183, i32*** %_bo, align 8
  %241 = load i32**, i32*** %_bi, align 8
  %add.ptr184 = getelementptr inbounds i32*, i32** %241, i64 2
  store i32** %add.ptr184, i32*** %_bi, align 8
  %242 = load i32**, i32*** %_bj, align 8
  %add.ptr185 = getelementptr inbounds i32*, i32** %242, i64 2
  store i32** %add.ptr185, i32*** %_bj, align 8
  %243 = load i32**, i32*** %_bo, align 8
  %244 = load i32*, i32** %243, align 8
  store i32* %244, i32** %_o, align 8
  %245 = load i32**, i32*** %_bi, align 8
  %246 = load i32*, i32** %245, align 8
  store i32* %246, i32** %_i, align 8
  %247 = load i32**, i32*** %_bj, align 8
  %248 = load i32*, i32** %247, align 8
  store i32* %248, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond186

for.cond186:                                      ; preds = %for.inc196, %for.end182
  %249 = load i32, i32* %pos, align 4
  %250 = load i32, i32* %max_pos.addr, align 4
  %cmp187 = icmp slt i32 %249, %250
  br i1 %cmp187, label %for.body188, label %for.end198

for.body188:                                      ; preds = %for.cond186
  %251 = load i32*, i32** %_i, align 8
  %252 = load i32, i32* %pos, align 4
  %idxprom189 = sext i32 %252 to i64
  %arrayidx190 = getelementptr inbounds i32, i32* %251, i64 %idxprom189
  %253 = load i32, i32* %arrayidx190, align 4
  %254 = load i32*, i32** %_j, align 8
  %255 = load i32, i32* %pos, align 4
  %idxprom191 = sext i32 %255 to i64
  %arrayidx192 = getelementptr inbounds i32, i32* %254, i64 %idxprom191
  %256 = load i32, i32* %arrayidx192, align 4
  %add193 = add nsw i32 %253, %256
  %257 = load i32*, i32** %_o, align 8
  %258 = load i32, i32* %pos, align 4
  %idxprom194 = sext i32 %258 to i64
  %arrayidx195 = getelementptr inbounds i32, i32* %257, i64 %idxprom194
  store i32 %add193, i32* %arrayidx195, align 4
  br label %for.inc196

for.inc196:                                       ; preds = %for.body188
  %259 = load i32, i32* %pos, align 4
  %inc197 = add nsw i32 %259, 1
  store i32 %inc197, i32* %pos, align 4
  br label %for.cond186

for.end198:                                       ; preds = %for.cond186
  %260 = load i32**, i32*** %_bo, align 8
  %add.ptr199 = getelementptr inbounds i32*, i32** %260, i64 2
  store i32** %add.ptr199, i32*** %_bo, align 8
  %261 = load i32**, i32*** %_bi, align 8
  %add.ptr200 = getelementptr inbounds i32*, i32** %261, i64 2
  store i32** %add.ptr200, i32*** %_bi, align 8
  %262 = load i32**, i32*** %_bj, align 8
  %add.ptr201 = getelementptr inbounds i32*, i32** %262, i64 2
  store i32** %add.ptr201, i32*** %_bj, align 8
  %263 = load i32**, i32*** %_bo, align 8
  %264 = load i32*, i32** %263, align 8
  store i32* %264, i32** %_o, align 8
  %265 = load i32**, i32*** %_bi, align 8
  %266 = load i32*, i32** %265, align 8
  store i32* %266, i32** %_i, align 8
  %267 = load i32**, i32*** %_bj, align 8
  %268 = load i32*, i32** %267, align 8
  store i32* %268, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc212, %for.end198
  %269 = load i32, i32* %pos, align 4
  %270 = load i32, i32* %max_pos.addr, align 4
  %cmp203 = icmp slt i32 %269, %270
  br i1 %cmp203, label %for.body204, label %for.end214

for.body204:                                      ; preds = %for.cond202
  %271 = load i32*, i32** %_i, align 8
  %272 = load i32, i32* %pos, align 4
  %idxprom205 = sext i32 %272 to i64
  %arrayidx206 = getelementptr inbounds i32, i32* %271, i64 %idxprom205
  %273 = load i32, i32* %arrayidx206, align 4
  %274 = load i32*, i32** %_j, align 8
  %275 = load i32, i32* %pos, align 4
  %idxprom207 = sext i32 %275 to i64
  %arrayidx208 = getelementptr inbounds i32, i32* %274, i64 %idxprom207
  %276 = load i32, i32* %arrayidx208, align 4
  %add209 = add nsw i32 %273, %276
  %277 = load i32*, i32** %_o, align 8
  %278 = load i32, i32* %pos, align 4
  %idxprom210 = sext i32 %278 to i64
  %arrayidx211 = getelementptr inbounds i32, i32* %277, i64 %idxprom210
  store i32 %add209, i32* %arrayidx211, align 4
  br label %for.inc212

for.inc212:                                       ; preds = %for.body204
  %279 = load i32, i32* %pos, align 4
  %inc213 = add nsw i32 %279, 1
  store i32 %inc213, i32* %pos, align 4
  br label %for.cond202

for.end214:                                       ; preds = %for.cond202
  %280 = load i32**, i32*** %_bo, align 8
  %add.ptr215 = getelementptr inbounds i32*, i32** %280, i64 2
  store i32** %add.ptr215, i32*** %_bo, align 8
  %281 = load i32**, i32*** %_bi, align 8
  %add.ptr216 = getelementptr inbounds i32*, i32** %281, i64 2
  store i32** %add.ptr216, i32*** %_bi, align 8
  %282 = load i32**, i32*** %_bj, align 8
  %add.ptr217 = getelementptr inbounds i32*, i32** %282, i64 2
  store i32** %add.ptr217, i32*** %_bj, align 8
  %283 = load i32**, i32*** %_bo, align 8
  %284 = load i32*, i32** %283, align 8
  store i32* %284, i32** %_o, align 8
  %285 = load i32**, i32*** %_bi, align 8
  %286 = load i32*, i32** %285, align 8
  store i32* %286, i32** %_i, align 8
  %287 = load i32**, i32*** %_bj, align 8
  %288 = load i32*, i32** %287, align 8
  store i32* %288, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond218

for.cond218:                                      ; preds = %for.inc228, %for.end214
  %289 = load i32, i32* %pos, align 4
  %290 = load i32, i32* %max_pos.addr, align 4
  %cmp219 = icmp slt i32 %289, %290
  br i1 %cmp219, label %for.body220, label %for.end230

for.body220:                                      ; preds = %for.cond218
  %291 = load i32*, i32** %_i, align 8
  %292 = load i32, i32* %pos, align 4
  %idxprom221 = sext i32 %292 to i64
  %arrayidx222 = getelementptr inbounds i32, i32* %291, i64 %idxprom221
  %293 = load i32, i32* %arrayidx222, align 4
  %294 = load i32*, i32** %_j, align 8
  %295 = load i32, i32* %pos, align 4
  %idxprom223 = sext i32 %295 to i64
  %arrayidx224 = getelementptr inbounds i32, i32* %294, i64 %idxprom223
  %296 = load i32, i32* %arrayidx224, align 4
  %add225 = add nsw i32 %293, %296
  %297 = load i32*, i32** %_o, align 8
  %298 = load i32, i32* %pos, align 4
  %idxprom226 = sext i32 %298 to i64
  %arrayidx227 = getelementptr inbounds i32, i32* %297, i64 %idxprom226
  store i32 %add225, i32* %arrayidx227, align 4
  br label %for.inc228

for.inc228:                                       ; preds = %for.body220
  %299 = load i32, i32* %pos, align 4
  %inc229 = add nsw i32 %299, 1
  store i32 %inc229, i32* %pos, align 4
  br label %for.cond218

for.end230:                                       ; preds = %for.cond218
  %300 = load i32**, i32*** %_bo, align 8
  %add.ptr231 = getelementptr inbounds i32*, i32** %300, i64 2
  store i32** %add.ptr231, i32*** %_bo, align 8
  %301 = load i32**, i32*** %_bi, align 8
  %add.ptr232 = getelementptr inbounds i32*, i32** %301, i64 2
  store i32** %add.ptr232, i32*** %_bi, align 8
  %302 = load i32**, i32*** %_bj, align 8
  %add.ptr233 = getelementptr inbounds i32*, i32** %302, i64 2
  store i32** %add.ptr233, i32*** %_bj, align 8
  %303 = load i32**, i32*** %_bo, align 8
  %304 = load i32*, i32** %303, align 8
  store i32* %304, i32** %_o, align 8
  %305 = load i32**, i32*** %_bi, align 8
  %306 = load i32*, i32** %305, align 8
  store i32* %306, i32** %_i, align 8
  %307 = load i32**, i32*** %_bj, align 8
  %308 = load i32*, i32** %307, align 8
  store i32* %308, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond234

for.cond234:                                      ; preds = %for.inc244, %for.end230
  %309 = load i32, i32* %pos, align 4
  %310 = load i32, i32* %max_pos.addr, align 4
  %cmp235 = icmp slt i32 %309, %310
  br i1 %cmp235, label %for.body236, label %for.end246

for.body236:                                      ; preds = %for.cond234
  %311 = load i32*, i32** %_i, align 8
  %312 = load i32, i32* %pos, align 4
  %idxprom237 = sext i32 %312 to i64
  %arrayidx238 = getelementptr inbounds i32, i32* %311, i64 %idxprom237
  %313 = load i32, i32* %arrayidx238, align 4
  %314 = load i32*, i32** %_j, align 8
  %315 = load i32, i32* %pos, align 4
  %idxprom239 = sext i32 %315 to i64
  %arrayidx240 = getelementptr inbounds i32, i32* %314, i64 %idxprom239
  %316 = load i32, i32* %arrayidx240, align 4
  %add241 = add nsw i32 %313, %316
  %317 = load i32*, i32** %_o, align 8
  %318 = load i32, i32* %pos, align 4
  %idxprom242 = sext i32 %318 to i64
  %arrayidx243 = getelementptr inbounds i32, i32* %317, i64 %idxprom242
  store i32 %add241, i32* %arrayidx243, align 4
  br label %for.inc244

for.inc244:                                       ; preds = %for.body236
  %319 = load i32, i32* %pos, align 4
  %inc245 = add nsw i32 %319, 1
  store i32 %inc245, i32* %pos, align 4
  br label %for.cond234

for.end246:                                       ; preds = %for.cond234
  %320 = load i32**, i32*** %_bo, align 8
  %add.ptr247 = getelementptr inbounds i32*, i32** %320, i64 2
  store i32** %add.ptr247, i32*** %_bo, align 8
  %321 = load i32**, i32*** %_bi, align 8
  %add.ptr248 = getelementptr inbounds i32*, i32** %321, i64 2
  store i32** %add.ptr248, i32*** %_bi, align 8
  %322 = load i32**, i32*** %_bj, align 8
  %add.ptr249 = getelementptr inbounds i32*, i32** %322, i64 2
  store i32** %add.ptr249, i32*** %_bj, align 8
  %323 = load i32**, i32*** %_bo, align 8
  %324 = load i32*, i32** %323, align 8
  store i32* %324, i32** %_o, align 8
  %325 = load i32**, i32*** %_bi, align 8
  %326 = load i32*, i32** %325, align 8
  store i32* %326, i32** %_i, align 8
  %327 = load i32**, i32*** %_bj, align 8
  %328 = load i32*, i32** %327, align 8
  store i32* %328, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond250

for.cond250:                                      ; preds = %for.inc260, %for.end246
  %329 = load i32, i32* %pos, align 4
  %330 = load i32, i32* %max_pos.addr, align 4
  %cmp251 = icmp slt i32 %329, %330
  br i1 %cmp251, label %for.body252, label %for.end262

for.body252:                                      ; preds = %for.cond250
  %331 = load i32*, i32** %_i, align 8
  %332 = load i32, i32* %pos, align 4
  %idxprom253 = sext i32 %332 to i64
  %arrayidx254 = getelementptr inbounds i32, i32* %331, i64 %idxprom253
  %333 = load i32, i32* %arrayidx254, align 4
  %334 = load i32*, i32** %_j, align 8
  %335 = load i32, i32* %pos, align 4
  %idxprom255 = sext i32 %335 to i64
  %arrayidx256 = getelementptr inbounds i32, i32* %334, i64 %idxprom255
  %336 = load i32, i32* %arrayidx256, align 4
  %add257 = add nsw i32 %333, %336
  %337 = load i32*, i32** %_o, align 8
  %338 = load i32, i32* %pos, align 4
  %idxprom258 = sext i32 %338 to i64
  %arrayidx259 = getelementptr inbounds i32, i32* %337, i64 %idxprom258
  store i32 %add257, i32* %arrayidx259, align 4
  br label %for.inc260

for.inc260:                                       ; preds = %for.body252
  %339 = load i32, i32* %pos, align 4
  %inc261 = add nsw i32 %339, 1
  store i32 %inc261, i32* %pos, align 4
  br label %for.cond250

for.end262:                                       ; preds = %for.cond250
  %340 = load i32*****, i32****** @BlockSAD, align 8
  %341 = load i32, i32* %list.addr, align 4
  %idxprom263 = sext i32 %341 to i64
  %arrayidx264 = getelementptr inbounds i32****, i32***** %340, i64 %idxprom263
  %342 = load i32****, i32***** %arrayidx264, align 8
  %343 = load i32, i32* %refindex.addr, align 4
  %idxprom265 = sext i32 %343 to i64
  %arrayidx266 = getelementptr inbounds i32***, i32**** %342, i64 %idxprom265
  %344 = load i32***, i32**** %arrayidx266, align 8
  %arrayidx267 = getelementptr inbounds i32**, i32*** %344, i64 4
  %345 = load i32**, i32*** %arrayidx267, align 8
  store i32** %345, i32*** %_bo, align 8
  %346 = load i32*****, i32****** @BlockSAD, align 8
  %347 = load i32, i32* %list.addr, align 4
  %idxprom268 = sext i32 %347 to i64
  %arrayidx269 = getelementptr inbounds i32****, i32***** %346, i64 %idxprom268
  %348 = load i32****, i32***** %arrayidx269, align 8
  %349 = load i32, i32* %refindex.addr, align 4
  %idxprom270 = sext i32 %349 to i64
  %arrayidx271 = getelementptr inbounds i32***, i32**** %348, i64 %idxprom270
  %350 = load i32***, i32**** %arrayidx271, align 8
  %arrayidx272 = getelementptr inbounds i32**, i32*** %350, i64 6
  %351 = load i32**, i32*** %arrayidx272, align 8
  store i32** %351, i32*** %_bi, align 8
  %352 = load i32**, i32*** %_bi, align 8
  %add.ptr273 = getelementptr inbounds i32*, i32** %352, i64 1
  store i32** %add.ptr273, i32*** %_bj, align 8
  %353 = load i32**, i32*** %_bo, align 8
  %354 = load i32*, i32** %353, align 8
  store i32* %354, i32** %_o, align 8
  %355 = load i32**, i32*** %_bi, align 8
  %356 = load i32*, i32** %355, align 8
  store i32* %356, i32** %_i, align 8
  %357 = load i32**, i32*** %_bj, align 8
  %358 = load i32*, i32** %357, align 8
  store i32* %358, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond274

for.cond274:                                      ; preds = %for.inc284, %for.end262
  %359 = load i32, i32* %pos, align 4
  %360 = load i32, i32* %max_pos.addr, align 4
  %cmp275 = icmp slt i32 %359, %360
  br i1 %cmp275, label %for.body276, label %for.end286

for.body276:                                      ; preds = %for.cond274
  %361 = load i32*, i32** %_i, align 8
  %362 = load i32, i32* %pos, align 4
  %idxprom277 = sext i32 %362 to i64
  %arrayidx278 = getelementptr inbounds i32, i32* %361, i64 %idxprom277
  %363 = load i32, i32* %arrayidx278, align 4
  %364 = load i32*, i32** %_j, align 8
  %365 = load i32, i32* %pos, align 4
  %idxprom279 = sext i32 %365 to i64
  %arrayidx280 = getelementptr inbounds i32, i32* %364, i64 %idxprom279
  %366 = load i32, i32* %arrayidx280, align 4
  %add281 = add nsw i32 %363, %366
  %367 = load i32*, i32** %_o, align 8
  %368 = load i32, i32* %pos, align 4
  %idxprom282 = sext i32 %368 to i64
  %arrayidx283 = getelementptr inbounds i32, i32* %367, i64 %idxprom282
  store i32 %add281, i32* %arrayidx283, align 4
  br label %for.inc284

for.inc284:                                       ; preds = %for.body276
  %369 = load i32, i32* %pos, align 4
  %inc285 = add nsw i32 %369, 1
  store i32 %inc285, i32* %pos, align 4
  br label %for.cond274

for.end286:                                       ; preds = %for.cond274
  %370 = load i32**, i32*** %_bo, align 8
  %add.ptr287 = getelementptr inbounds i32*, i32** %370, i64 2
  store i32** %add.ptr287, i32*** %_bo, align 8
  %371 = load i32**, i32*** %_bi, align 8
  %add.ptr288 = getelementptr inbounds i32*, i32** %371, i64 2
  store i32** %add.ptr288, i32*** %_bi, align 8
  %372 = load i32**, i32*** %_bj, align 8
  %add.ptr289 = getelementptr inbounds i32*, i32** %372, i64 2
  store i32** %add.ptr289, i32*** %_bj, align 8
  %373 = load i32**, i32*** %_bo, align 8
  %374 = load i32*, i32** %373, align 8
  store i32* %374, i32** %_o, align 8
  %375 = load i32**, i32*** %_bi, align 8
  %376 = load i32*, i32** %375, align 8
  store i32* %376, i32** %_i, align 8
  %377 = load i32**, i32*** %_bj, align 8
  %378 = load i32*, i32** %377, align 8
  store i32* %378, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond290

for.cond290:                                      ; preds = %for.inc300, %for.end286
  %379 = load i32, i32* %pos, align 4
  %380 = load i32, i32* %max_pos.addr, align 4
  %cmp291 = icmp slt i32 %379, %380
  br i1 %cmp291, label %for.body292, label %for.end302

for.body292:                                      ; preds = %for.cond290
  %381 = load i32*, i32** %_i, align 8
  %382 = load i32, i32* %pos, align 4
  %idxprom293 = sext i32 %382 to i64
  %arrayidx294 = getelementptr inbounds i32, i32* %381, i64 %idxprom293
  %383 = load i32, i32* %arrayidx294, align 4
  %384 = load i32*, i32** %_j, align 8
  %385 = load i32, i32* %pos, align 4
  %idxprom295 = sext i32 %385 to i64
  %arrayidx296 = getelementptr inbounds i32, i32* %384, i64 %idxprom295
  %386 = load i32, i32* %arrayidx296, align 4
  %add297 = add nsw i32 %383, %386
  %387 = load i32*, i32** %_o, align 8
  %388 = load i32, i32* %pos, align 4
  %idxprom298 = sext i32 %388 to i64
  %arrayidx299 = getelementptr inbounds i32, i32* %387, i64 %idxprom298
  store i32 %add297, i32* %arrayidx299, align 4
  br label %for.inc300

for.inc300:                                       ; preds = %for.body292
  %389 = load i32, i32* %pos, align 4
  %inc301 = add nsw i32 %389, 1
  store i32 %inc301, i32* %pos, align 4
  br label %for.cond290

for.end302:                                       ; preds = %for.cond290
  %390 = load i32**, i32*** %_bo, align 8
  %add.ptr303 = getelementptr inbounds i32*, i32** %390, i64 6
  store i32** %add.ptr303, i32*** %_bo, align 8
  %391 = load i32**, i32*** %_bi, align 8
  %add.ptr304 = getelementptr inbounds i32*, i32** %391, i64 6
  store i32** %add.ptr304, i32*** %_bi, align 8
  %392 = load i32**, i32*** %_bj, align 8
  %add.ptr305 = getelementptr inbounds i32*, i32** %392, i64 6
  store i32** %add.ptr305, i32*** %_bj, align 8
  %393 = load i32**, i32*** %_bo, align 8
  %394 = load i32*, i32** %393, align 8
  store i32* %394, i32** %_o, align 8
  %395 = load i32**, i32*** %_bi, align 8
  %396 = load i32*, i32** %395, align 8
  store i32* %396, i32** %_i, align 8
  %397 = load i32**, i32*** %_bj, align 8
  %398 = load i32*, i32** %397, align 8
  store i32* %398, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond306

for.cond306:                                      ; preds = %for.inc316, %for.end302
  %399 = load i32, i32* %pos, align 4
  %400 = load i32, i32* %max_pos.addr, align 4
  %cmp307 = icmp slt i32 %399, %400
  br i1 %cmp307, label %for.body308, label %for.end318

for.body308:                                      ; preds = %for.cond306
  %401 = load i32*, i32** %_i, align 8
  %402 = load i32, i32* %pos, align 4
  %idxprom309 = sext i32 %402 to i64
  %arrayidx310 = getelementptr inbounds i32, i32* %401, i64 %idxprom309
  %403 = load i32, i32* %arrayidx310, align 4
  %404 = load i32*, i32** %_j, align 8
  %405 = load i32, i32* %pos, align 4
  %idxprom311 = sext i32 %405 to i64
  %arrayidx312 = getelementptr inbounds i32, i32* %404, i64 %idxprom311
  %406 = load i32, i32* %arrayidx312, align 4
  %add313 = add nsw i32 %403, %406
  %407 = load i32*, i32** %_o, align 8
  %408 = load i32, i32* %pos, align 4
  %idxprom314 = sext i32 %408 to i64
  %arrayidx315 = getelementptr inbounds i32, i32* %407, i64 %idxprom314
  store i32 %add313, i32* %arrayidx315, align 4
  br label %for.inc316

for.inc316:                                       ; preds = %for.body308
  %409 = load i32, i32* %pos, align 4
  %inc317 = add nsw i32 %409, 1
  store i32 %inc317, i32* %pos, align 4
  br label %for.cond306

for.end318:                                       ; preds = %for.cond306
  %410 = load i32**, i32*** %_bo, align 8
  %add.ptr319 = getelementptr inbounds i32*, i32** %410, i64 2
  store i32** %add.ptr319, i32*** %_bo, align 8
  %411 = load i32**, i32*** %_bi, align 8
  %add.ptr320 = getelementptr inbounds i32*, i32** %411, i64 2
  store i32** %add.ptr320, i32*** %_bi, align 8
  %412 = load i32**, i32*** %_bj, align 8
  %add.ptr321 = getelementptr inbounds i32*, i32** %412, i64 2
  store i32** %add.ptr321, i32*** %_bj, align 8
  %413 = load i32**, i32*** %_bo, align 8
  %414 = load i32*, i32** %413, align 8
  store i32* %414, i32** %_o, align 8
  %415 = load i32**, i32*** %_bi, align 8
  %416 = load i32*, i32** %415, align 8
  store i32* %416, i32** %_i, align 8
  %417 = load i32**, i32*** %_bj, align 8
  %418 = load i32*, i32** %417, align 8
  store i32* %418, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond322

for.cond322:                                      ; preds = %for.inc332, %for.end318
  %419 = load i32, i32* %pos, align 4
  %420 = load i32, i32* %max_pos.addr, align 4
  %cmp323 = icmp slt i32 %419, %420
  br i1 %cmp323, label %for.body324, label %for.end334

for.body324:                                      ; preds = %for.cond322
  %421 = load i32*, i32** %_i, align 8
  %422 = load i32, i32* %pos, align 4
  %idxprom325 = sext i32 %422 to i64
  %arrayidx326 = getelementptr inbounds i32, i32* %421, i64 %idxprom325
  %423 = load i32, i32* %arrayidx326, align 4
  %424 = load i32*, i32** %_j, align 8
  %425 = load i32, i32* %pos, align 4
  %idxprom327 = sext i32 %425 to i64
  %arrayidx328 = getelementptr inbounds i32, i32* %424, i64 %idxprom327
  %426 = load i32, i32* %arrayidx328, align 4
  %add329 = add nsw i32 %423, %426
  %427 = load i32*, i32** %_o, align 8
  %428 = load i32, i32* %pos, align 4
  %idxprom330 = sext i32 %428 to i64
  %arrayidx331 = getelementptr inbounds i32, i32* %427, i64 %idxprom330
  store i32 %add329, i32* %arrayidx331, align 4
  br label %for.inc332

for.inc332:                                       ; preds = %for.body324
  %429 = load i32, i32* %pos, align 4
  %inc333 = add nsw i32 %429, 1
  store i32 %inc333, i32* %pos, align 4
  br label %for.cond322

for.end334:                                       ; preds = %for.cond322
  %430 = load i32*****, i32****** @BlockSAD, align 8
  %431 = load i32, i32* %list.addr, align 4
  %idxprom335 = sext i32 %431 to i64
  %arrayidx336 = getelementptr inbounds i32****, i32***** %430, i64 %idxprom335
  %432 = load i32****, i32***** %arrayidx336, align 8
  %433 = load i32, i32* %refindex.addr, align 4
  %idxprom337 = sext i32 %433 to i64
  %arrayidx338 = getelementptr inbounds i32***, i32**** %432, i64 %idxprom337
  %434 = load i32***, i32**** %arrayidx338, align 8
  %arrayidx339 = getelementptr inbounds i32**, i32*** %434, i64 3
  %435 = load i32**, i32*** %arrayidx339, align 8
  store i32** %435, i32*** %_bo, align 8
  %436 = load i32*****, i32****** @BlockSAD, align 8
  %437 = load i32, i32* %list.addr, align 4
  %idxprom340 = sext i32 %437 to i64
  %arrayidx341 = getelementptr inbounds i32****, i32***** %436, i64 %idxprom340
  %438 = load i32****, i32***** %arrayidx341, align 8
  %439 = load i32, i32* %refindex.addr, align 4
  %idxprom342 = sext i32 %439 to i64
  %arrayidx343 = getelementptr inbounds i32***, i32**** %438, i64 %idxprom342
  %440 = load i32***, i32**** %arrayidx343, align 8
  %arrayidx344 = getelementptr inbounds i32**, i32*** %440, i64 4
  %441 = load i32**, i32*** %arrayidx344, align 8
  store i32** %441, i32*** %_bi, align 8
  %442 = load i32**, i32*** %_bi, align 8
  %add.ptr345 = getelementptr inbounds i32*, i32** %442, i64 8
  store i32** %add.ptr345, i32*** %_bj, align 8
  %443 = load i32**, i32*** %_bo, align 8
  %444 = load i32*, i32** %443, align 8
  store i32* %444, i32** %_o, align 8
  %445 = load i32**, i32*** %_bi, align 8
  %446 = load i32*, i32** %445, align 8
  store i32* %446, i32** %_i, align 8
  %447 = load i32**, i32*** %_bj, align 8
  %448 = load i32*, i32** %447, align 8
  store i32* %448, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond346

for.cond346:                                      ; preds = %for.inc356, %for.end334
  %449 = load i32, i32* %pos, align 4
  %450 = load i32, i32* %max_pos.addr, align 4
  %cmp347 = icmp slt i32 %449, %450
  br i1 %cmp347, label %for.body348, label %for.end358

for.body348:                                      ; preds = %for.cond346
  %451 = load i32*, i32** %_i, align 8
  %452 = load i32, i32* %pos, align 4
  %idxprom349 = sext i32 %452 to i64
  %arrayidx350 = getelementptr inbounds i32, i32* %451, i64 %idxprom349
  %453 = load i32, i32* %arrayidx350, align 4
  %454 = load i32*, i32** %_j, align 8
  %455 = load i32, i32* %pos, align 4
  %idxprom351 = sext i32 %455 to i64
  %arrayidx352 = getelementptr inbounds i32, i32* %454, i64 %idxprom351
  %456 = load i32, i32* %arrayidx352, align 4
  %add353 = add nsw i32 %453, %456
  %457 = load i32*, i32** %_o, align 8
  %458 = load i32, i32* %pos, align 4
  %idxprom354 = sext i32 %458 to i64
  %arrayidx355 = getelementptr inbounds i32, i32* %457, i64 %idxprom354
  store i32 %add353, i32* %arrayidx355, align 4
  br label %for.inc356

for.inc356:                                       ; preds = %for.body348
  %459 = load i32, i32* %pos, align 4
  %inc357 = add nsw i32 %459, 1
  store i32 %inc357, i32* %pos, align 4
  br label %for.cond346

for.end358:                                       ; preds = %for.cond346
  %460 = load i32**, i32*** %_bo, align 8
  %add.ptr359 = getelementptr inbounds i32*, i32** %460, i64 2
  store i32** %add.ptr359, i32*** %_bo, align 8
  %461 = load i32**, i32*** %_bi, align 8
  %add.ptr360 = getelementptr inbounds i32*, i32** %461, i64 2
  store i32** %add.ptr360, i32*** %_bi, align 8
  %462 = load i32**, i32*** %_bj, align 8
  %add.ptr361 = getelementptr inbounds i32*, i32** %462, i64 2
  store i32** %add.ptr361, i32*** %_bj, align 8
  %463 = load i32**, i32*** %_bo, align 8
  %464 = load i32*, i32** %463, align 8
  store i32* %464, i32** %_o, align 8
  %465 = load i32**, i32*** %_bi, align 8
  %466 = load i32*, i32** %465, align 8
  store i32* %466, i32** %_i, align 8
  %467 = load i32**, i32*** %_bj, align 8
  %468 = load i32*, i32** %467, align 8
  store i32* %468, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond362

for.cond362:                                      ; preds = %for.inc372, %for.end358
  %469 = load i32, i32* %pos, align 4
  %470 = load i32, i32* %max_pos.addr, align 4
  %cmp363 = icmp slt i32 %469, %470
  br i1 %cmp363, label %for.body364, label %for.end374

for.body364:                                      ; preds = %for.cond362
  %471 = load i32*, i32** %_i, align 8
  %472 = load i32, i32* %pos, align 4
  %idxprom365 = sext i32 %472 to i64
  %arrayidx366 = getelementptr inbounds i32, i32* %471, i64 %idxprom365
  %473 = load i32, i32* %arrayidx366, align 4
  %474 = load i32*, i32** %_j, align 8
  %475 = load i32, i32* %pos, align 4
  %idxprom367 = sext i32 %475 to i64
  %arrayidx368 = getelementptr inbounds i32, i32* %474, i64 %idxprom367
  %476 = load i32, i32* %arrayidx368, align 4
  %add369 = add nsw i32 %473, %476
  %477 = load i32*, i32** %_o, align 8
  %478 = load i32, i32* %pos, align 4
  %idxprom370 = sext i32 %478 to i64
  %arrayidx371 = getelementptr inbounds i32, i32* %477, i64 %idxprom370
  store i32 %add369, i32* %arrayidx371, align 4
  br label %for.inc372

for.inc372:                                       ; preds = %for.body364
  %479 = load i32, i32* %pos, align 4
  %inc373 = add nsw i32 %479, 1
  store i32 %inc373, i32* %pos, align 4
  br label %for.cond362

for.end374:                                       ; preds = %for.cond362
  %480 = load i32*****, i32****** @BlockSAD, align 8
  %481 = load i32, i32* %list.addr, align 4
  %idxprom375 = sext i32 %481 to i64
  %arrayidx376 = getelementptr inbounds i32****, i32***** %480, i64 %idxprom375
  %482 = load i32****, i32***** %arrayidx376, align 8
  %483 = load i32, i32* %refindex.addr, align 4
  %idxprom377 = sext i32 %483 to i64
  %arrayidx378 = getelementptr inbounds i32***, i32**** %482, i64 %idxprom377
  %484 = load i32***, i32**** %arrayidx378, align 8
  %arrayidx379 = getelementptr inbounds i32**, i32*** %484, i64 2
  %485 = load i32**, i32*** %arrayidx379, align 8
  store i32** %485, i32*** %_bo, align 8
  %486 = load i32*****, i32****** @BlockSAD, align 8
  %487 = load i32, i32* %list.addr, align 4
  %idxprom380 = sext i32 %487 to i64
  %arrayidx381 = getelementptr inbounds i32****, i32***** %486, i64 %idxprom380
  %488 = load i32****, i32***** %arrayidx381, align 8
  %489 = load i32, i32* %refindex.addr, align 4
  %idxprom382 = sext i32 %489 to i64
  %arrayidx383 = getelementptr inbounds i32***, i32**** %488, i64 %idxprom382
  %490 = load i32***, i32**** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds i32**, i32*** %490, i64 4
  %491 = load i32**, i32*** %arrayidx384, align 8
  store i32** %491, i32*** %_bi, align 8
  %492 = load i32**, i32*** %_bi, align 8
  %add.ptr385 = getelementptr inbounds i32*, i32** %492, i64 2
  store i32** %add.ptr385, i32*** %_bj, align 8
  %493 = load i32**, i32*** %_bo, align 8
  %494 = load i32*, i32** %493, align 8
  store i32* %494, i32** %_o, align 8
  %495 = load i32**, i32*** %_bi, align 8
  %496 = load i32*, i32** %495, align 8
  store i32* %496, i32** %_i, align 8
  %497 = load i32**, i32*** %_bj, align 8
  %498 = load i32*, i32** %497, align 8
  store i32* %498, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond386

for.cond386:                                      ; preds = %for.inc396, %for.end374
  %499 = load i32, i32* %pos, align 4
  %500 = load i32, i32* %max_pos.addr, align 4
  %cmp387 = icmp slt i32 %499, %500
  br i1 %cmp387, label %for.body388, label %for.end398

for.body388:                                      ; preds = %for.cond386
  %501 = load i32*, i32** %_i, align 8
  %502 = load i32, i32* %pos, align 4
  %idxprom389 = sext i32 %502 to i64
  %arrayidx390 = getelementptr inbounds i32, i32* %501, i64 %idxprom389
  %503 = load i32, i32* %arrayidx390, align 4
  %504 = load i32*, i32** %_j, align 8
  %505 = load i32, i32* %pos, align 4
  %idxprom391 = sext i32 %505 to i64
  %arrayidx392 = getelementptr inbounds i32, i32* %504, i64 %idxprom391
  %506 = load i32, i32* %arrayidx392, align 4
  %add393 = add nsw i32 %503, %506
  %507 = load i32*, i32** %_o, align 8
  %508 = load i32, i32* %pos, align 4
  %idxprom394 = sext i32 %508 to i64
  %arrayidx395 = getelementptr inbounds i32, i32* %507, i64 %idxprom394
  store i32 %add393, i32* %arrayidx395, align 4
  br label %for.inc396

for.inc396:                                       ; preds = %for.body388
  %509 = load i32, i32* %pos, align 4
  %inc397 = add nsw i32 %509, 1
  store i32 %inc397, i32* %pos, align 4
  br label %for.cond386

for.end398:                                       ; preds = %for.cond386
  %510 = load i32**, i32*** %_bo, align 8
  %add.ptr399 = getelementptr inbounds i32*, i32** %510, i64 8
  store i32** %add.ptr399, i32*** %_bo, align 8
  %511 = load i32**, i32*** %_bi, align 8
  %add.ptr400 = getelementptr inbounds i32*, i32** %511, i64 8
  store i32** %add.ptr400, i32*** %_bi, align 8
  %512 = load i32**, i32*** %_bj, align 8
  %add.ptr401 = getelementptr inbounds i32*, i32** %512, i64 8
  store i32** %add.ptr401, i32*** %_bj, align 8
  %513 = load i32**, i32*** %_bo, align 8
  %514 = load i32*, i32** %513, align 8
  store i32* %514, i32** %_o, align 8
  %515 = load i32**, i32*** %_bi, align 8
  %516 = load i32*, i32** %515, align 8
  store i32* %516, i32** %_i, align 8
  %517 = load i32**, i32*** %_bj, align 8
  %518 = load i32*, i32** %517, align 8
  store i32* %518, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond402

for.cond402:                                      ; preds = %for.inc412, %for.end398
  %519 = load i32, i32* %pos, align 4
  %520 = load i32, i32* %max_pos.addr, align 4
  %cmp403 = icmp slt i32 %519, %520
  br i1 %cmp403, label %for.body404, label %for.end414

for.body404:                                      ; preds = %for.cond402
  %521 = load i32*, i32** %_i, align 8
  %522 = load i32, i32* %pos, align 4
  %idxprom405 = sext i32 %522 to i64
  %arrayidx406 = getelementptr inbounds i32, i32* %521, i64 %idxprom405
  %523 = load i32, i32* %arrayidx406, align 4
  %524 = load i32*, i32** %_j, align 8
  %525 = load i32, i32* %pos, align 4
  %idxprom407 = sext i32 %525 to i64
  %arrayidx408 = getelementptr inbounds i32, i32* %524, i64 %idxprom407
  %526 = load i32, i32* %arrayidx408, align 4
  %add409 = add nsw i32 %523, %526
  %527 = load i32*, i32** %_o, align 8
  %528 = load i32, i32* %pos, align 4
  %idxprom410 = sext i32 %528 to i64
  %arrayidx411 = getelementptr inbounds i32, i32* %527, i64 %idxprom410
  store i32 %add409, i32* %arrayidx411, align 4
  br label %for.inc412

for.inc412:                                       ; preds = %for.body404
  %529 = load i32, i32* %pos, align 4
  %inc413 = add nsw i32 %529, 1
  store i32 %inc413, i32* %pos, align 4
  br label %for.cond402

for.end414:                                       ; preds = %for.cond402
  %530 = load i32*****, i32****** @BlockSAD, align 8
  %531 = load i32, i32* %list.addr, align 4
  %idxprom415 = sext i32 %531 to i64
  %arrayidx416 = getelementptr inbounds i32****, i32***** %530, i64 %idxprom415
  %532 = load i32****, i32***** %arrayidx416, align 8
  %533 = load i32, i32* %refindex.addr, align 4
  %idxprom417 = sext i32 %533 to i64
  %arrayidx418 = getelementptr inbounds i32***, i32**** %532, i64 %idxprom417
  %534 = load i32***, i32**** %arrayidx418, align 8
  %arrayidx419 = getelementptr inbounds i32**, i32*** %534, i64 1
  %535 = load i32**, i32*** %arrayidx419, align 8
  store i32** %535, i32*** %_bo, align 8
  %536 = load i32*****, i32****** @BlockSAD, align 8
  %537 = load i32, i32* %list.addr, align 4
  %idxprom420 = sext i32 %537 to i64
  %arrayidx421 = getelementptr inbounds i32****, i32***** %536, i64 %idxprom420
  %538 = load i32****, i32***** %arrayidx421, align 8
  %539 = load i32, i32* %refindex.addr, align 4
  %idxprom422 = sext i32 %539 to i64
  %arrayidx423 = getelementptr inbounds i32***, i32**** %538, i64 %idxprom422
  %540 = load i32***, i32**** %arrayidx423, align 8
  %arrayidx424 = getelementptr inbounds i32**, i32*** %540, i64 3
  %541 = load i32**, i32*** %arrayidx424, align 8
  store i32** %541, i32*** %_bi, align 8
  %542 = load i32**, i32*** %_bi, align 8
  %add.ptr425 = getelementptr inbounds i32*, i32** %542, i64 2
  store i32** %add.ptr425, i32*** %_bj, align 8
  %543 = load i32**, i32*** %_bo, align 8
  %544 = load i32*, i32** %543, align 8
  store i32* %544, i32** %_o, align 8
  %545 = load i32**, i32*** %_bi, align 8
  %546 = load i32*, i32** %545, align 8
  store i32* %546, i32** %_i, align 8
  %547 = load i32**, i32*** %_bj, align 8
  %548 = load i32*, i32** %547, align 8
  store i32* %548, i32** %_j, align 8
  store i32 0, i32* %pos, align 4
  br label %for.cond426

for.cond426:                                      ; preds = %for.inc436, %for.end414
  %549 = load i32, i32* %pos, align 4
  %550 = load i32, i32* %max_pos.addr, align 4
  %cmp427 = icmp slt i32 %549, %550
  br i1 %cmp427, label %for.body428, label %for.end438

for.body428:                                      ; preds = %for.cond426
  %551 = load i32*, i32** %_i, align 8
  %552 = load i32, i32* %pos, align 4
  %idxprom429 = sext i32 %552 to i64
  %arrayidx430 = getelementptr inbounds i32, i32* %551, i64 %idxprom429
  %553 = load i32, i32* %arrayidx430, align 4
  %554 = load i32*, i32** %_j, align 8
  %555 = load i32, i32* %pos, align 4
  %idxprom431 = sext i32 %555 to i64
  %arrayidx432 = getelementptr inbounds i32, i32* %554, i64 %idxprom431
  %556 = load i32, i32* %arrayidx432, align 4
  %add433 = add nsw i32 %553, %556
  %557 = load i32*, i32** %_o, align 8
  %558 = load i32, i32* %pos, align 4
  %idxprom434 = sext i32 %558 to i64
  %arrayidx435 = getelementptr inbounds i32, i32* %557, i64 %idxprom434
  store i32 %add433, i32* %arrayidx435, align 4
  br label %for.inc436

for.inc436:                                       ; preds = %for.body428
  %559 = load i32, i32* %pos, align 4
  %inc437 = add nsw i32 %559, 1
  store i32 %inc437, i32* %pos, align 4
  br label %for.cond426

for.end438:                                       ; preds = %for.cond426
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SetupFastFullPelSearch(i16 signext %ref, i32 %list) #0 {
entry:
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pmv = alloca [2 x i16], align 2
  %orig_blocks = alloca [256 x i16], align 16
  %orgptr = alloca i16*, align 8
  %refptr = alloca i16*, align 8
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %range_partly_outside = alloca i32, align 4
  %ref_x = alloca i32, align 4
  %ref_y = alloca i32, align 4
  %pos = alloca i32, align 4
  %abs_x = alloca i32, align 4
  %abs_y = alloca i32, align 4
  %bindex = alloca i32, align 4
  %blky = alloca i32, align 4
  %LineSadBlk0 = alloca i32, align 4
  %LineSadBlk1 = alloca i32, align 4
  %LineSadBlk2 = alloca i32, align 4
  %LineSadBlk3 = alloca i32, align 4
  %max_width = alloca i32, align 4
  %max_height = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %ref_picture = alloca %struct.storable_picture*, align 8
  %ref_pic = alloca i16*, align 8
  %block_sad = alloca i32**, align 8
  %search_range = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  %arraydecay = getelementptr inbounds [256 x i16], [256 x i16]* %orig_blocks, i64 0, i64 0
  store i16* %arraydecay, i16** %orgptr, align 8
  %0 = load i32*****, i32****** @BlockSAD, align 8
  %1 = load i32, i32* %list.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %0, i64 %idxprom
  %2 = load i32****, i32***** %arrayidx, align 8
  %3 = load i16, i16* %ref.addr, align 2
  %idxprom1 = sext i16 %3 to i64
  %arrayidx2 = getelementptr inbounds i32***, i32**** %2, i64 %idxprom1
  %4 = load i32***, i32**** %arrayidx2, align 8
  %arrayidx3 = getelementptr inbounds i32**, i32*** %4, i64 7
  %5 = load i32**, i32*** %arrayidx3, align 8
  store i32** %5, i32*** %block_sad, align 8
  %6 = load i32**, i32*** @max_search_range, align 8
  %7 = load i32, i32* %list.addr, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds i32*, i32** %6, i64 %idxprom4
  %8 = load i32*, i32** %arrayidx5, align 8
  %9 = load i16, i16* %ref.addr, align 2
  %idxprom6 = sext i16 %9 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %8, i64 %idxprom6
  %10 = load i32, i32* %arrayidx7, align 4
  store i32 %10, i32* %search_range, align 4
  %11 = load i32, i32* %search_range, align 4
  %mul = mul nsw i32 2, %11
  %add = add nsw i32 %mul, 1
  %12 = load i32, i32* %search_range, align 4
  %mul8 = mul nsw i32 2, %12
  %add9 = add nsw i32 %mul8, 1
  %mul10 = mul nsw i32 %add, %add9
  store i32 %mul10, i32* %max_pos, align 4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 90
  %14 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool = icmp ne i32 %14, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %15 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %15, i32 0, i32 51
  %16 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 3
  %18 = load i32, i32* %current_mb_nr, align 4
  %idxprom11 = sext i32 %18 to i64
  %arrayidx12 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %16, i64 %idxprom11
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx12, i32 0, i32 22
  %19 = load i32, i32* %mb_field, align 4
  %tobool13 = icmp ne i32 %19, 0
  br i1 %tobool13, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 3
  %21 = load i32, i32* %current_mb_nr14, align 4
  %rem = srem i32 %21, 2
  %tobool15 = icmp ne i32 %rem, 0
  %22 = zext i1 %tobool15 to i64
  %cond = select i1 %tobool15, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond16, i32* %list_offset, align 4
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 19
  %24 = load i32, i32* %weighted_pred_flag, align 8
  %tobool17 = icmp ne i32 %24, 0
  br i1 %tobool17, label %land.lhs.true18, label %lor.rhs

land.lhs.true18:                                  ; preds = %cond.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %26, 0
  br i1 %cmp, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true18
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 6
  %28 = load i32, i32* %type19, align 8
  %cmp20 = icmp eq i32 %28, 3
  br i1 %cmp20, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %cond.end
  %29 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %29, i32 0, i32 20
  %30 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool21 = icmp ne i32 %30, 0
  br i1 %tobool21, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %lor.rhs
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 6
  %32 = load i32, i32* %type22, align 8
  %cmp23 = icmp eq i32 %32, 1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %33 = phi i1 [ false, %lor.rhs ], [ %cmp23, %land.rhs ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %land.lhs.true18
  %34 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true18 ], [ %33, %land.end ]
  %lor.ext = zext i1 %34 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %35 = load i32, i32* %list.addr, align 4
  %36 = load i32, i32* %list_offset, align 4
  %add24 = add nsw i32 %35, %36
  %idxprom25 = sext i32 %add24 to i64
  %arrayidx26 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom25
  %37 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx26, align 8
  %38 = load i16, i16* %ref.addr, align 2
  %idxprom27 = sext i16 %38 to i64
  %arrayidx28 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %37, i64 %idxprom27
  %39 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx28, align 8
  store %struct.storable_picture* %39, %struct.storable_picture** %ref_picture, align 8
  %40 = load i32, i32* %apply_weights, align 4
  %tobool29 = icmp ne i32 %40, 0
  br i1 %tobool29, label %land.lhs.true30, label %if.else

land.lhs.true30:                                  ; preds = %lor.end
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 48
  %42 = load i32, i32* %UseWeightedReferenceME, align 4
  %tobool31 = icmp ne i32 %42, 0
  br i1 %tobool31, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true30
  %43 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %imgY_11_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %43, i32 0, i32 27
  %44 = load i16*, i16** %imgY_11_w, align 8
  store i16* %44, i16** %ref_pic, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true30, %lor.end
  %45 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %45, i32 0, i32 26
  %46 = load i16*, i16** %imgY_11, align 8
  store i16* %46, i16** %ref_pic, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %47 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %47, i32 0, i32 18
  %48 = load i32, i32* %size_x, align 8
  %sub = sub nsw i32 %48, 17
  store i32 %sub, i32* %max_width, align 4
  %49 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %49, i32 0, i32 19
  %50 = load i32, i32* %size_y, align 4
  %sub32 = sub nsw i32 %50, 17
  store i32 %sub32, i32* %max_height, align 4
  %51 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x33 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %51, i32 0, i32 18
  %52 = load i32, i32* %size_x33, align 8
  store i32 %52, i32* %img_width, align 4
  %53 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y34 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %53, i32 0, i32 19
  %54 = load i32, i32* %size_y34, align 4
  store i32 %54, i32* %img_height, align 4
  %arraydecay35 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 0
  %55 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %55, i32 0, i32 32
  %56 = load i16***, i16**** %ref_idx, align 8
  %57 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %57, i32 0, i32 35
  %58 = load i16****, i16***** %mv, align 8
  %59 = load i16, i16* %ref.addr, align 2
  %60 = load i32, i32* %list.addr, align 4
  call void @SetMotionVectorPredictor(i16* %arraydecay35, i16*** %56, i16**** %58, i16 signext %59, i32 %60, i32 0, i32 0, i32 16, i32 16)
  %arrayidx36 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 0
  %61 = load i16, i16* %arrayidx36, align 2
  %conv = sext i16 %61 to i32
  %div = sdiv i32 %conv, 4
  %62 = load i32**, i32*** @search_center_x, align 8
  %63 = load i32, i32* %list.addr, align 4
  %idxprom37 = sext i32 %63 to i64
  %arrayidx38 = getelementptr inbounds i32*, i32** %62, i64 %idxprom37
  %64 = load i32*, i32** %arrayidx38, align 8
  %65 = load i16, i16* %ref.addr, align 2
  %idxprom39 = sext i16 %65 to i64
  %arrayidx40 = getelementptr inbounds i32, i32* %64, i64 %idxprom39
  store i32 %div, i32* %arrayidx40, align 4
  %arrayidx41 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 1
  %66 = load i16, i16* %arrayidx41, align 2
  %conv42 = sext i16 %66 to i32
  %div43 = sdiv i32 %conv42, 4
  %67 = load i32**, i32*** @search_center_y, align 8
  %68 = load i32, i32* %list.addr, align 4
  %idxprom44 = sext i32 %68 to i64
  %arrayidx45 = getelementptr inbounds i32*, i32** %67, i64 %idxprom44
  %69 = load i32*, i32** %arrayidx45, align 8
  %70 = load i16, i16* %ref.addr, align 2
  %idxprom46 = sext i16 %70 to i64
  %arrayidx47 = getelementptr inbounds i32, i32* %69, i64 %idxprom46
  store i32 %div43, i32* %arrayidx47, align 4
  %71 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %71, i32 0, i32 85
  %72 = load i32, i32* %rdopt, align 8
  %tobool48 = icmp ne i32 %72, 0
  br i1 %tobool48, label %if.end130, label %if.then49

if.then49:                                        ; preds = %if.end
  %73 = load i32, i32* %search_range, align 4
  %sub50 = sub nsw i32 0, %73
  %74 = load i32, i32* %search_range, align 4
  %75 = load i32**, i32*** @search_center_x, align 8
  %76 = load i32, i32* %list.addr, align 4
  %idxprom51 = sext i32 %76 to i64
  %arrayidx52 = getelementptr inbounds i32*, i32** %75, i64 %idxprom51
  %77 = load i32*, i32** %arrayidx52, align 8
  %78 = load i16, i16* %ref.addr, align 2
  %idxprom53 = sext i16 %78 to i64
  %arrayidx54 = getelementptr inbounds i32, i32* %77, i64 %idxprom53
  %79 = load i32, i32* %arrayidx54, align 4
  %cmp55 = icmp slt i32 %74, %79
  br i1 %cmp55, label %cond.true57, label %cond.false58

cond.true57:                                      ; preds = %if.then49
  %80 = load i32, i32* %search_range, align 4
  br label %cond.end63

cond.false58:                                     ; preds = %if.then49
  %81 = load i32**, i32*** @search_center_x, align 8
  %82 = load i32, i32* %list.addr, align 4
  %idxprom59 = sext i32 %82 to i64
  %arrayidx60 = getelementptr inbounds i32*, i32** %81, i64 %idxprom59
  %83 = load i32*, i32** %arrayidx60, align 8
  %84 = load i16, i16* %ref.addr, align 2
  %idxprom61 = sext i16 %84 to i64
  %arrayidx62 = getelementptr inbounds i32, i32* %83, i64 %idxprom61
  %85 = load i32, i32* %arrayidx62, align 4
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false58, %cond.true57
  %cond64 = phi i32 [ %80, %cond.true57 ], [ %85, %cond.false58 ]
  %cmp65 = icmp sgt i32 %sub50, %cond64
  br i1 %cmp65, label %cond.true67, label %cond.false69

cond.true67:                                      ; preds = %cond.end63
  %86 = load i32, i32* %search_range, align 4
  %sub68 = sub nsw i32 0, %86
  br label %cond.end84

cond.false69:                                     ; preds = %cond.end63
  %87 = load i32, i32* %search_range, align 4
  %88 = load i32**, i32*** @search_center_x, align 8
  %89 = load i32, i32* %list.addr, align 4
  %idxprom70 = sext i32 %89 to i64
  %arrayidx71 = getelementptr inbounds i32*, i32** %88, i64 %idxprom70
  %90 = load i32*, i32** %arrayidx71, align 8
  %91 = load i16, i16* %ref.addr, align 2
  %idxprom72 = sext i16 %91 to i64
  %arrayidx73 = getelementptr inbounds i32, i32* %90, i64 %idxprom72
  %92 = load i32, i32* %arrayidx73, align 4
  %cmp74 = icmp slt i32 %87, %92
  br i1 %cmp74, label %cond.true76, label %cond.false77

cond.true76:                                      ; preds = %cond.false69
  %93 = load i32, i32* %search_range, align 4
  br label %cond.end82

cond.false77:                                     ; preds = %cond.false69
  %94 = load i32**, i32*** @search_center_x, align 8
  %95 = load i32, i32* %list.addr, align 4
  %idxprom78 = sext i32 %95 to i64
  %arrayidx79 = getelementptr inbounds i32*, i32** %94, i64 %idxprom78
  %96 = load i32*, i32** %arrayidx79, align 8
  %97 = load i16, i16* %ref.addr, align 2
  %idxprom80 = sext i16 %97 to i64
  %arrayidx81 = getelementptr inbounds i32, i32* %96, i64 %idxprom80
  %98 = load i32, i32* %arrayidx81, align 4
  br label %cond.end82

cond.end82:                                       ; preds = %cond.false77, %cond.true76
  %cond83 = phi i32 [ %93, %cond.true76 ], [ %98, %cond.false77 ]
  br label %cond.end84

cond.end84:                                       ; preds = %cond.end82, %cond.true67
  %cond85 = phi i32 [ %sub68, %cond.true67 ], [ %cond83, %cond.end82 ]
  %99 = load i32**, i32*** @search_center_x, align 8
  %100 = load i32, i32* %list.addr, align 4
  %idxprom86 = sext i32 %100 to i64
  %arrayidx87 = getelementptr inbounds i32*, i32** %99, i64 %idxprom86
  %101 = load i32*, i32** %arrayidx87, align 8
  %102 = load i16, i16* %ref.addr, align 2
  %idxprom88 = sext i16 %102 to i64
  %arrayidx89 = getelementptr inbounds i32, i32* %101, i64 %idxprom88
  store i32 %cond85, i32* %arrayidx89, align 4
  %103 = load i32, i32* %search_range, align 4
  %sub90 = sub nsw i32 0, %103
  %104 = load i32, i32* %search_range, align 4
  %105 = load i32**, i32*** @search_center_y, align 8
  %106 = load i32, i32* %list.addr, align 4
  %idxprom91 = sext i32 %106 to i64
  %arrayidx92 = getelementptr inbounds i32*, i32** %105, i64 %idxprom91
  %107 = load i32*, i32** %arrayidx92, align 8
  %108 = load i16, i16* %ref.addr, align 2
  %idxprom93 = sext i16 %108 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %107, i64 %idxprom93
  %109 = load i32, i32* %arrayidx94, align 4
  %cmp95 = icmp slt i32 %104, %109
  br i1 %cmp95, label %cond.true97, label %cond.false98

cond.true97:                                      ; preds = %cond.end84
  %110 = load i32, i32* %search_range, align 4
  br label %cond.end103

cond.false98:                                     ; preds = %cond.end84
  %111 = load i32**, i32*** @search_center_y, align 8
  %112 = load i32, i32* %list.addr, align 4
  %idxprom99 = sext i32 %112 to i64
  %arrayidx100 = getelementptr inbounds i32*, i32** %111, i64 %idxprom99
  %113 = load i32*, i32** %arrayidx100, align 8
  %114 = load i16, i16* %ref.addr, align 2
  %idxprom101 = sext i16 %114 to i64
  %arrayidx102 = getelementptr inbounds i32, i32* %113, i64 %idxprom101
  %115 = load i32, i32* %arrayidx102, align 4
  br label %cond.end103

cond.end103:                                      ; preds = %cond.false98, %cond.true97
  %cond104 = phi i32 [ %110, %cond.true97 ], [ %115, %cond.false98 ]
  %cmp105 = icmp sgt i32 %sub90, %cond104
  br i1 %cmp105, label %cond.true107, label %cond.false109

cond.true107:                                     ; preds = %cond.end103
  %116 = load i32, i32* %search_range, align 4
  %sub108 = sub nsw i32 0, %116
  br label %cond.end124

cond.false109:                                    ; preds = %cond.end103
  %117 = load i32, i32* %search_range, align 4
  %118 = load i32**, i32*** @search_center_y, align 8
  %119 = load i32, i32* %list.addr, align 4
  %idxprom110 = sext i32 %119 to i64
  %arrayidx111 = getelementptr inbounds i32*, i32** %118, i64 %idxprom110
  %120 = load i32*, i32** %arrayidx111, align 8
  %121 = load i16, i16* %ref.addr, align 2
  %idxprom112 = sext i16 %121 to i64
  %arrayidx113 = getelementptr inbounds i32, i32* %120, i64 %idxprom112
  %122 = load i32, i32* %arrayidx113, align 4
  %cmp114 = icmp slt i32 %117, %122
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.false109
  %123 = load i32, i32* %search_range, align 4
  br label %cond.end122

cond.false117:                                    ; preds = %cond.false109
  %124 = load i32**, i32*** @search_center_y, align 8
  %125 = load i32, i32* %list.addr, align 4
  %idxprom118 = sext i32 %125 to i64
  %arrayidx119 = getelementptr inbounds i32*, i32** %124, i64 %idxprom118
  %126 = load i32*, i32** %arrayidx119, align 8
  %127 = load i16, i16* %ref.addr, align 2
  %idxprom120 = sext i16 %127 to i64
  %arrayidx121 = getelementptr inbounds i32, i32* %126, i64 %idxprom120
  %128 = load i32, i32* %arrayidx121, align 4
  br label %cond.end122

cond.end122:                                      ; preds = %cond.false117, %cond.true116
  %cond123 = phi i32 [ %123, %cond.true116 ], [ %128, %cond.false117 ]
  br label %cond.end124

cond.end124:                                      ; preds = %cond.end122, %cond.true107
  %cond125 = phi i32 [ %sub108, %cond.true107 ], [ %cond123, %cond.end122 ]
  %129 = load i32**, i32*** @search_center_y, align 8
  %130 = load i32, i32* %list.addr, align 4
  %idxprom126 = sext i32 %130 to i64
  %arrayidx127 = getelementptr inbounds i32*, i32** %129, i64 %idxprom126
  %131 = load i32*, i32** %arrayidx127, align 8
  %132 = load i16, i16* %ref.addr, align 2
  %idxprom128 = sext i16 %132 to i64
  %arrayidx129 = getelementptr inbounds i32, i32* %131, i64 %idxprom128
  store i32 %cond125, i32* %arrayidx129, align 4
  br label %if.end130

if.end130:                                        ; preds = %cond.end124, %if.end
  %133 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %133, i32 0, i32 37
  %134 = load i32, i32* %opix_x, align 8
  %135 = load i32**, i32*** @search_center_x, align 8
  %136 = load i32, i32* %list.addr, align 4
  %idxprom131 = sext i32 %136 to i64
  %arrayidx132 = getelementptr inbounds i32*, i32** %135, i64 %idxprom131
  %137 = load i32*, i32** %arrayidx132, align 8
  %138 = load i16, i16* %ref.addr, align 2
  %idxprom133 = sext i16 %138 to i64
  %arrayidx134 = getelementptr inbounds i32, i32* %137, i64 %idxprom133
  %139 = load i32, i32* %arrayidx134, align 4
  %add135 = add nsw i32 %139, %134
  store i32 %add135, i32* %arrayidx134, align 4
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 38
  %141 = load i32, i32* %opix_y, align 4
  %142 = load i32**, i32*** @search_center_y, align 8
  %143 = load i32, i32* %list.addr, align 4
  %idxprom136 = sext i32 %143 to i64
  %arrayidx137 = getelementptr inbounds i32*, i32** %142, i64 %idxprom136
  %144 = load i32*, i32** %arrayidx137, align 8
  %145 = load i16, i16* %ref.addr, align 2
  %idxprom138 = sext i16 %145 to i64
  %arrayidx139 = getelementptr inbounds i32, i32* %144, i64 %idxprom138
  %146 = load i32, i32* %arrayidx139, align 4
  %add140 = add nsw i32 %146, %141
  store i32 %add140, i32* %arrayidx139, align 4
  %147 = load i32**, i32*** @search_center_x, align 8
  %148 = load i32, i32* %list.addr, align 4
  %idxprom141 = sext i32 %148 to i64
  %arrayidx142 = getelementptr inbounds i32*, i32** %147, i64 %idxprom141
  %149 = load i32*, i32** %arrayidx142, align 8
  %150 = load i16, i16* %ref.addr, align 2
  %idxprom143 = sext i16 %150 to i64
  %arrayidx144 = getelementptr inbounds i32, i32* %149, i64 %idxprom143
  %151 = load i32, i32* %arrayidx144, align 4
  store i32 %151, i32* %offset_x, align 4
  %152 = load i32**, i32*** @search_center_y, align 8
  %153 = load i32, i32* %list.addr, align 4
  %idxprom145 = sext i32 %153 to i64
  %arrayidx146 = getelementptr inbounds i32*, i32** %152, i64 %idxprom145
  %154 = load i32*, i32** %arrayidx146, align 8
  %155 = load i16, i16* %ref.addr, align 2
  %idxprom147 = sext i16 %155 to i64
  %arrayidx148 = getelementptr inbounds i32, i32* %154, i64 %idxprom147
  %156 = load i32, i32* %arrayidx148, align 4
  store i32 %156, i32* %offset_y, align 4
  %157 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %157, i32 0, i32 38
  %158 = load i32, i32* %opix_y149, align 4
  store i32 %158, i32* %y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc165, %if.end130
  %159 = load i32, i32* %y, align 4
  %160 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y150 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %160, i32 0, i32 38
  %161 = load i32, i32* %opix_y150, align 4
  %add151 = add nsw i32 %161, 16
  %cmp152 = icmp slt i32 %159, %add151
  br i1 %cmp152, label %for.body, label %for.end167

for.body:                                         ; preds = %for.cond
  %162 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %162, i32 0, i32 37
  %163 = load i32, i32* %opix_x154, align 8
  store i32 %163, i32* %x, align 4
  br label %for.cond155

for.cond155:                                      ; preds = %for.inc, %for.body
  %164 = load i32, i32* %x, align 4
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x156 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 37
  %166 = load i32, i32* %opix_x156, align 8
  %add157 = add nsw i32 %166, 16
  %cmp158 = icmp slt i32 %164, %add157
  br i1 %cmp158, label %for.body160, label %for.end

for.body160:                                      ; preds = %for.cond155
  %167 = load i16**, i16*** @imgY_org, align 8
  %168 = load i32, i32* %y, align 4
  %idxprom161 = sext i32 %168 to i64
  %arrayidx162 = getelementptr inbounds i16*, i16** %167, i64 %idxprom161
  %169 = load i16*, i16** %arrayidx162, align 8
  %170 = load i32, i32* %x, align 4
  %idxprom163 = sext i32 %170 to i64
  %arrayidx164 = getelementptr inbounds i16, i16* %169, i64 %idxprom163
  %171 = load i16, i16* %arrayidx164, align 2
  %172 = load i16*, i16** %orgptr, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %172, i32 1
  store i16* %incdec.ptr, i16** %orgptr, align 8
  store i16 %171, i16* %172, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body160
  %173 = load i32, i32* %x, align 4
  %inc = add nsw i32 %173, 1
  store i32 %inc, i32* %x, align 4
  br label %for.cond155

for.end:                                          ; preds = %for.cond155
  br label %for.inc165

for.inc165:                                       ; preds = %for.end
  %174 = load i32, i32* %y, align 4
  %inc166 = add nsw i32 %174, 1
  store i32 %inc166, i32* %y, align 4
  br label %for.cond

for.end167:                                       ; preds = %for.cond
  %175 = load i32, i32* %offset_x, align 4
  %176 = load i32, i32* %search_range, align 4
  %cmp168 = icmp sge i32 %175, %176
  br i1 %cmp168, label %land.lhs.true170, label %if.else182

land.lhs.true170:                                 ; preds = %for.end167
  %177 = load i32, i32* %offset_x, align 4
  %178 = load i32, i32* %max_width, align 4
  %179 = load i32, i32* %search_range, align 4
  %sub171 = sub nsw i32 %178, %179
  %cmp172 = icmp sle i32 %177, %sub171
  br i1 %cmp172, label %land.lhs.true174, label %if.else182

land.lhs.true174:                                 ; preds = %land.lhs.true170
  %180 = load i32, i32* %offset_y, align 4
  %181 = load i32, i32* %search_range, align 4
  %cmp175 = icmp sge i32 %180, %181
  br i1 %cmp175, label %land.lhs.true177, label %if.else182

land.lhs.true177:                                 ; preds = %land.lhs.true174
  %182 = load i32, i32* %offset_y, align 4
  %183 = load i32, i32* %max_height, align 4
  %184 = load i32, i32* %search_range, align 4
  %sub178 = sub nsw i32 %183, %184
  %cmp179 = icmp sle i32 %182, %sub178
  br i1 %cmp179, label %if.then181, label %if.else182

if.then181:                                       ; preds = %land.lhs.true177
  store i32 0, i32* %range_partly_outside, align 4
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %if.end183

if.else182:                                       ; preds = %land.lhs.true177, %land.lhs.true174, %land.lhs.true170, %for.end167
  store i32 1, i32* %range_partly_outside, align 4
  br label %if.end183

if.end183:                                        ; preds = %if.else182, %if.then181
  %185 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt184 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %185, i32 0, i32 85
  %186 = load i32, i32* %rdopt184, align 8
  %tobool185 = icmp ne i32 %186, 0
  br i1 %tobool185, label %if.end213, label %if.then186

if.then186:                                       ; preds = %if.end183
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x187 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 37
  %188 = load i32, i32* %opix_x187, align 8
  %189 = load i32, i32* %offset_x, align 4
  %sub188 = sub nsw i32 %188, %189
  store i32 %sub188, i32* %ref_x, align 4
  %190 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y189 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %190, i32 0, i32 38
  %191 = load i32, i32* %opix_y189, align 4
  %192 = load i32, i32* %offset_y, align 4
  %sub190 = sub nsw i32 %191, %192
  store i32 %sub190, i32* %ref_y, align 4
  store i32 0, i32* %pos, align 4
  br label %for.cond191

for.cond191:                                      ; preds = %for.inc210, %if.then186
  %193 = load i32, i32* %pos, align 4
  %194 = load i32, i32* %max_pos, align 4
  %cmp192 = icmp slt i32 %193, %194
  br i1 %cmp192, label %for.body194, label %for.end212

for.body194:                                      ; preds = %for.cond191
  %195 = load i32, i32* %ref_x, align 4
  %196 = load i32*, i32** @spiral_search_x, align 8
  %197 = load i32, i32* %pos, align 4
  %idxprom195 = sext i32 %197 to i64
  %arrayidx196 = getelementptr inbounds i32, i32* %196, i64 %idxprom195
  %198 = load i32, i32* %arrayidx196, align 4
  %cmp197 = icmp eq i32 %195, %198
  br i1 %cmp197, label %land.lhs.true199, label %if.end209

land.lhs.true199:                                 ; preds = %for.body194
  %199 = load i32, i32* %ref_y, align 4
  %200 = load i32*, i32** @spiral_search_y, align 8
  %201 = load i32, i32* %pos, align 4
  %idxprom200 = sext i32 %201 to i64
  %arrayidx201 = getelementptr inbounds i32, i32* %200, i64 %idxprom200
  %202 = load i32, i32* %arrayidx201, align 4
  %cmp202 = icmp eq i32 %199, %202
  br i1 %cmp202, label %if.then204, label %if.end209

if.then204:                                       ; preds = %land.lhs.true199
  %203 = load i32, i32* %pos, align 4
  %204 = load i32**, i32*** @pos_00, align 8
  %205 = load i32, i32* %list.addr, align 4
  %idxprom205 = sext i32 %205 to i64
  %arrayidx206 = getelementptr inbounds i32*, i32** %204, i64 %idxprom205
  %206 = load i32*, i32** %arrayidx206, align 8
  %207 = load i16, i16* %ref.addr, align 2
  %idxprom207 = sext i16 %207 to i64
  %arrayidx208 = getelementptr inbounds i32, i32* %206, i64 %idxprom207
  store i32 %203, i32* %arrayidx208, align 4
  br label %for.end212

if.end209:                                        ; preds = %land.lhs.true199, %for.body194
  br label %for.inc210

for.inc210:                                       ; preds = %if.end209
  %208 = load i32, i32* %pos, align 4
  %inc211 = add nsw i32 %208, 1
  store i32 %inc211, i32* %pos, align 4
  br label %for.cond191

for.end212:                                       ; preds = %if.then204, %for.cond191
  br label %if.end213

if.end213:                                        ; preds = %for.end212, %if.end183
  store i32 0, i32* %pos, align 4
  br label %for.cond214

for.cond214:                                      ; preds = %for.inc405, %if.end213
  %209 = load i32, i32* %pos, align 4
  %210 = load i32, i32* %max_pos, align 4
  %cmp215 = icmp slt i32 %209, %210
  br i1 %cmp215, label %for.body217, label %for.end407

for.body217:                                      ; preds = %for.cond214
  %211 = load i32, i32* %offset_y, align 4
  %212 = load i32*, i32** @spiral_search_y, align 8
  %213 = load i32, i32* %pos, align 4
  %idxprom218 = sext i32 %213 to i64
  %arrayidx219 = getelementptr inbounds i32, i32* %212, i64 %idxprom218
  %214 = load i32, i32* %arrayidx219, align 4
  %add220 = add nsw i32 %211, %214
  store i32 %add220, i32* %abs_y, align 4
  %215 = load i32, i32* %offset_x, align 4
  %216 = load i32*, i32** @spiral_search_x, align 8
  %217 = load i32, i32* %pos, align 4
  %idxprom221 = sext i32 %217 to i64
  %arrayidx222 = getelementptr inbounds i32, i32* %216, i64 %idxprom221
  %218 = load i32, i32* %arrayidx222, align 4
  %add223 = add nsw i32 %215, %218
  store i32 %add223, i32* %abs_x, align 4
  %219 = load i32, i32* %range_partly_outside, align 4
  %tobool224 = icmp ne i32 %219, 0
  br i1 %tobool224, label %if.then225, label %if.end240

if.then225:                                       ; preds = %for.body217
  %220 = load i32, i32* %abs_y, align 4
  %cmp226 = icmp sge i32 %220, 0
  br i1 %cmp226, label %land.lhs.true228, label %if.else238

land.lhs.true228:                                 ; preds = %if.then225
  %221 = load i32, i32* %abs_y, align 4
  %222 = load i32, i32* %max_height, align 4
  %cmp229 = icmp sle i32 %221, %222
  br i1 %cmp229, label %land.lhs.true231, label %if.else238

land.lhs.true231:                                 ; preds = %land.lhs.true228
  %223 = load i32, i32* %abs_x, align 4
  %cmp232 = icmp sge i32 %223, 0
  br i1 %cmp232, label %land.lhs.true234, label %if.else238

land.lhs.true234:                                 ; preds = %land.lhs.true231
  %224 = load i32, i32* %abs_x, align 4
  %225 = load i32, i32* %max_width, align 4
  %cmp235 = icmp sle i32 %224, %225
  br i1 %cmp235, label %if.then237, label %if.else238

if.then237:                                       ; preds = %land.lhs.true234
  store i16* (i16*, i32, i32, i32, i32)* @FastLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %if.end239

if.else238:                                       ; preds = %land.lhs.true234, %land.lhs.true231, %land.lhs.true228, %if.then225
  store i16* (i16*, i32, i32, i32, i32)* @UMVLine16Y_11, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  br label %if.end239

if.end239:                                        ; preds = %if.else238, %if.then237
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %for.body217
  %arraydecay241 = getelementptr inbounds [256 x i16], [256 x i16]* %orig_blocks, i64 0, i64 0
  store i16* %arraydecay241, i16** %orgptr, align 8
  store i32 0, i32* %bindex, align 4
  store i32 0, i32* %blky, align 4
  br label %for.cond242

for.cond242:                                      ; preds = %for.inc402, %if.end240
  %226 = load i32, i32* %blky, align 4
  %cmp243 = icmp slt i32 %226, 4
  br i1 %cmp243, label %for.body245, label %for.end404

for.body245:                                      ; preds = %for.cond242
  store i32 0, i32* %LineSadBlk3, align 4
  store i32 0, i32* %LineSadBlk2, align 4
  store i32 0, i32* %LineSadBlk1, align 4
  store i32 0, i32* %LineSadBlk0, align 4
  store i32 0, i32* %y, align 4
  br label %for.cond246

for.cond246:                                      ; preds = %for.inc379, %for.body245
  %227 = load i32, i32* %y, align 4
  %cmp247 = icmp slt i32 %227, 4
  br i1 %cmp247, label %for.body249, label %for.end381

for.body249:                                      ; preds = %for.cond246
  %228 = load i16* (i16*, i32, i32, i32, i32)*, i16* (i16*, i32, i32, i32, i32)** @PelYline_11, align 8
  %229 = load i16*, i16** %ref_pic, align 8
  %230 = load i32, i32* %abs_y, align 4
  %inc250 = add nsw i32 %230, 1
  store i32 %inc250, i32* %abs_y, align 4
  %231 = load i32, i32* %abs_x, align 4
  %232 = load i32, i32* %img_height, align 4
  %233 = load i32, i32* %img_width, align 4
  %call = call i16* %228(i16* %229, i32 %230, i32 %231, i32 %232, i32 %233)
  store i16* %call, i16** %refptr, align 8
  %234 = load i32*, i32** @byte_abs, align 8
  %235 = load i16*, i16** %refptr, align 8
  %incdec.ptr251 = getelementptr inbounds i16, i16* %235, i32 1
  store i16* %incdec.ptr251, i16** %refptr, align 8
  %236 = load i16, i16* %235, align 2
  %conv252 = zext i16 %236 to i32
  %237 = load i16*, i16** %orgptr, align 8
  %incdec.ptr253 = getelementptr inbounds i16, i16* %237, i32 1
  store i16* %incdec.ptr253, i16** %orgptr, align 8
  %238 = load i16, i16* %237, align 2
  %conv254 = zext i16 %238 to i32
  %sub255 = sub nsw i32 %conv252, %conv254
  %idxprom256 = sext i32 %sub255 to i64
  %arrayidx257 = getelementptr inbounds i32, i32* %234, i64 %idxprom256
  %239 = load i32, i32* %arrayidx257, align 4
  %240 = load i32, i32* %LineSadBlk0, align 4
  %add258 = add nsw i32 %240, %239
  store i32 %add258, i32* %LineSadBlk0, align 4
  %241 = load i32*, i32** @byte_abs, align 8
  %242 = load i16*, i16** %refptr, align 8
  %incdec.ptr259 = getelementptr inbounds i16, i16* %242, i32 1
  store i16* %incdec.ptr259, i16** %refptr, align 8
  %243 = load i16, i16* %242, align 2
  %conv260 = zext i16 %243 to i32
  %244 = load i16*, i16** %orgptr, align 8
  %incdec.ptr261 = getelementptr inbounds i16, i16* %244, i32 1
  store i16* %incdec.ptr261, i16** %orgptr, align 8
  %245 = load i16, i16* %244, align 2
  %conv262 = zext i16 %245 to i32
  %sub263 = sub nsw i32 %conv260, %conv262
  %idxprom264 = sext i32 %sub263 to i64
  %arrayidx265 = getelementptr inbounds i32, i32* %241, i64 %idxprom264
  %246 = load i32, i32* %arrayidx265, align 4
  %247 = load i32, i32* %LineSadBlk0, align 4
  %add266 = add nsw i32 %247, %246
  store i32 %add266, i32* %LineSadBlk0, align 4
  %248 = load i32*, i32** @byte_abs, align 8
  %249 = load i16*, i16** %refptr, align 8
  %incdec.ptr267 = getelementptr inbounds i16, i16* %249, i32 1
  store i16* %incdec.ptr267, i16** %refptr, align 8
  %250 = load i16, i16* %249, align 2
  %conv268 = zext i16 %250 to i32
  %251 = load i16*, i16** %orgptr, align 8
  %incdec.ptr269 = getelementptr inbounds i16, i16* %251, i32 1
  store i16* %incdec.ptr269, i16** %orgptr, align 8
  %252 = load i16, i16* %251, align 2
  %conv270 = zext i16 %252 to i32
  %sub271 = sub nsw i32 %conv268, %conv270
  %idxprom272 = sext i32 %sub271 to i64
  %arrayidx273 = getelementptr inbounds i32, i32* %248, i64 %idxprom272
  %253 = load i32, i32* %arrayidx273, align 4
  %254 = load i32, i32* %LineSadBlk0, align 4
  %add274 = add nsw i32 %254, %253
  store i32 %add274, i32* %LineSadBlk0, align 4
  %255 = load i32*, i32** @byte_abs, align 8
  %256 = load i16*, i16** %refptr, align 8
  %incdec.ptr275 = getelementptr inbounds i16, i16* %256, i32 1
  store i16* %incdec.ptr275, i16** %refptr, align 8
  %257 = load i16, i16* %256, align 2
  %conv276 = zext i16 %257 to i32
  %258 = load i16*, i16** %orgptr, align 8
  %incdec.ptr277 = getelementptr inbounds i16, i16* %258, i32 1
  store i16* %incdec.ptr277, i16** %orgptr, align 8
  %259 = load i16, i16* %258, align 2
  %conv278 = zext i16 %259 to i32
  %sub279 = sub nsw i32 %conv276, %conv278
  %idxprom280 = sext i32 %sub279 to i64
  %arrayidx281 = getelementptr inbounds i32, i32* %255, i64 %idxprom280
  %260 = load i32, i32* %arrayidx281, align 4
  %261 = load i32, i32* %LineSadBlk0, align 4
  %add282 = add nsw i32 %261, %260
  store i32 %add282, i32* %LineSadBlk0, align 4
  %262 = load i32*, i32** @byte_abs, align 8
  %263 = load i16*, i16** %refptr, align 8
  %incdec.ptr283 = getelementptr inbounds i16, i16* %263, i32 1
  store i16* %incdec.ptr283, i16** %refptr, align 8
  %264 = load i16, i16* %263, align 2
  %conv284 = zext i16 %264 to i32
  %265 = load i16*, i16** %orgptr, align 8
  %incdec.ptr285 = getelementptr inbounds i16, i16* %265, i32 1
  store i16* %incdec.ptr285, i16** %orgptr, align 8
  %266 = load i16, i16* %265, align 2
  %conv286 = zext i16 %266 to i32
  %sub287 = sub nsw i32 %conv284, %conv286
  %idxprom288 = sext i32 %sub287 to i64
  %arrayidx289 = getelementptr inbounds i32, i32* %262, i64 %idxprom288
  %267 = load i32, i32* %arrayidx289, align 4
  %268 = load i32, i32* %LineSadBlk1, align 4
  %add290 = add nsw i32 %268, %267
  store i32 %add290, i32* %LineSadBlk1, align 4
  %269 = load i32*, i32** @byte_abs, align 8
  %270 = load i16*, i16** %refptr, align 8
  %incdec.ptr291 = getelementptr inbounds i16, i16* %270, i32 1
  store i16* %incdec.ptr291, i16** %refptr, align 8
  %271 = load i16, i16* %270, align 2
  %conv292 = zext i16 %271 to i32
  %272 = load i16*, i16** %orgptr, align 8
  %incdec.ptr293 = getelementptr inbounds i16, i16* %272, i32 1
  store i16* %incdec.ptr293, i16** %orgptr, align 8
  %273 = load i16, i16* %272, align 2
  %conv294 = zext i16 %273 to i32
  %sub295 = sub nsw i32 %conv292, %conv294
  %idxprom296 = sext i32 %sub295 to i64
  %arrayidx297 = getelementptr inbounds i32, i32* %269, i64 %idxprom296
  %274 = load i32, i32* %arrayidx297, align 4
  %275 = load i32, i32* %LineSadBlk1, align 4
  %add298 = add nsw i32 %275, %274
  store i32 %add298, i32* %LineSadBlk1, align 4
  %276 = load i32*, i32** @byte_abs, align 8
  %277 = load i16*, i16** %refptr, align 8
  %incdec.ptr299 = getelementptr inbounds i16, i16* %277, i32 1
  store i16* %incdec.ptr299, i16** %refptr, align 8
  %278 = load i16, i16* %277, align 2
  %conv300 = zext i16 %278 to i32
  %279 = load i16*, i16** %orgptr, align 8
  %incdec.ptr301 = getelementptr inbounds i16, i16* %279, i32 1
  store i16* %incdec.ptr301, i16** %orgptr, align 8
  %280 = load i16, i16* %279, align 2
  %conv302 = zext i16 %280 to i32
  %sub303 = sub nsw i32 %conv300, %conv302
  %idxprom304 = sext i32 %sub303 to i64
  %arrayidx305 = getelementptr inbounds i32, i32* %276, i64 %idxprom304
  %281 = load i32, i32* %arrayidx305, align 4
  %282 = load i32, i32* %LineSadBlk1, align 4
  %add306 = add nsw i32 %282, %281
  store i32 %add306, i32* %LineSadBlk1, align 4
  %283 = load i32*, i32** @byte_abs, align 8
  %284 = load i16*, i16** %refptr, align 8
  %incdec.ptr307 = getelementptr inbounds i16, i16* %284, i32 1
  store i16* %incdec.ptr307, i16** %refptr, align 8
  %285 = load i16, i16* %284, align 2
  %conv308 = zext i16 %285 to i32
  %286 = load i16*, i16** %orgptr, align 8
  %incdec.ptr309 = getelementptr inbounds i16, i16* %286, i32 1
  store i16* %incdec.ptr309, i16** %orgptr, align 8
  %287 = load i16, i16* %286, align 2
  %conv310 = zext i16 %287 to i32
  %sub311 = sub nsw i32 %conv308, %conv310
  %idxprom312 = sext i32 %sub311 to i64
  %arrayidx313 = getelementptr inbounds i32, i32* %283, i64 %idxprom312
  %288 = load i32, i32* %arrayidx313, align 4
  %289 = load i32, i32* %LineSadBlk1, align 4
  %add314 = add nsw i32 %289, %288
  store i32 %add314, i32* %LineSadBlk1, align 4
  %290 = load i32*, i32** @byte_abs, align 8
  %291 = load i16*, i16** %refptr, align 8
  %incdec.ptr315 = getelementptr inbounds i16, i16* %291, i32 1
  store i16* %incdec.ptr315, i16** %refptr, align 8
  %292 = load i16, i16* %291, align 2
  %conv316 = zext i16 %292 to i32
  %293 = load i16*, i16** %orgptr, align 8
  %incdec.ptr317 = getelementptr inbounds i16, i16* %293, i32 1
  store i16* %incdec.ptr317, i16** %orgptr, align 8
  %294 = load i16, i16* %293, align 2
  %conv318 = zext i16 %294 to i32
  %sub319 = sub nsw i32 %conv316, %conv318
  %idxprom320 = sext i32 %sub319 to i64
  %arrayidx321 = getelementptr inbounds i32, i32* %290, i64 %idxprom320
  %295 = load i32, i32* %arrayidx321, align 4
  %296 = load i32, i32* %LineSadBlk2, align 4
  %add322 = add nsw i32 %296, %295
  store i32 %add322, i32* %LineSadBlk2, align 4
  %297 = load i32*, i32** @byte_abs, align 8
  %298 = load i16*, i16** %refptr, align 8
  %incdec.ptr323 = getelementptr inbounds i16, i16* %298, i32 1
  store i16* %incdec.ptr323, i16** %refptr, align 8
  %299 = load i16, i16* %298, align 2
  %conv324 = zext i16 %299 to i32
  %300 = load i16*, i16** %orgptr, align 8
  %incdec.ptr325 = getelementptr inbounds i16, i16* %300, i32 1
  store i16* %incdec.ptr325, i16** %orgptr, align 8
  %301 = load i16, i16* %300, align 2
  %conv326 = zext i16 %301 to i32
  %sub327 = sub nsw i32 %conv324, %conv326
  %idxprom328 = sext i32 %sub327 to i64
  %arrayidx329 = getelementptr inbounds i32, i32* %297, i64 %idxprom328
  %302 = load i32, i32* %arrayidx329, align 4
  %303 = load i32, i32* %LineSadBlk2, align 4
  %add330 = add nsw i32 %303, %302
  store i32 %add330, i32* %LineSadBlk2, align 4
  %304 = load i32*, i32** @byte_abs, align 8
  %305 = load i16*, i16** %refptr, align 8
  %incdec.ptr331 = getelementptr inbounds i16, i16* %305, i32 1
  store i16* %incdec.ptr331, i16** %refptr, align 8
  %306 = load i16, i16* %305, align 2
  %conv332 = zext i16 %306 to i32
  %307 = load i16*, i16** %orgptr, align 8
  %incdec.ptr333 = getelementptr inbounds i16, i16* %307, i32 1
  store i16* %incdec.ptr333, i16** %orgptr, align 8
  %308 = load i16, i16* %307, align 2
  %conv334 = zext i16 %308 to i32
  %sub335 = sub nsw i32 %conv332, %conv334
  %idxprom336 = sext i32 %sub335 to i64
  %arrayidx337 = getelementptr inbounds i32, i32* %304, i64 %idxprom336
  %309 = load i32, i32* %arrayidx337, align 4
  %310 = load i32, i32* %LineSadBlk2, align 4
  %add338 = add nsw i32 %310, %309
  store i32 %add338, i32* %LineSadBlk2, align 4
  %311 = load i32*, i32** @byte_abs, align 8
  %312 = load i16*, i16** %refptr, align 8
  %incdec.ptr339 = getelementptr inbounds i16, i16* %312, i32 1
  store i16* %incdec.ptr339, i16** %refptr, align 8
  %313 = load i16, i16* %312, align 2
  %conv340 = zext i16 %313 to i32
  %314 = load i16*, i16** %orgptr, align 8
  %incdec.ptr341 = getelementptr inbounds i16, i16* %314, i32 1
  store i16* %incdec.ptr341, i16** %orgptr, align 8
  %315 = load i16, i16* %314, align 2
  %conv342 = zext i16 %315 to i32
  %sub343 = sub nsw i32 %conv340, %conv342
  %idxprom344 = sext i32 %sub343 to i64
  %arrayidx345 = getelementptr inbounds i32, i32* %311, i64 %idxprom344
  %316 = load i32, i32* %arrayidx345, align 4
  %317 = load i32, i32* %LineSadBlk2, align 4
  %add346 = add nsw i32 %317, %316
  store i32 %add346, i32* %LineSadBlk2, align 4
  %318 = load i32*, i32** @byte_abs, align 8
  %319 = load i16*, i16** %refptr, align 8
  %incdec.ptr347 = getelementptr inbounds i16, i16* %319, i32 1
  store i16* %incdec.ptr347, i16** %refptr, align 8
  %320 = load i16, i16* %319, align 2
  %conv348 = zext i16 %320 to i32
  %321 = load i16*, i16** %orgptr, align 8
  %incdec.ptr349 = getelementptr inbounds i16, i16* %321, i32 1
  store i16* %incdec.ptr349, i16** %orgptr, align 8
  %322 = load i16, i16* %321, align 2
  %conv350 = zext i16 %322 to i32
  %sub351 = sub nsw i32 %conv348, %conv350
  %idxprom352 = sext i32 %sub351 to i64
  %arrayidx353 = getelementptr inbounds i32, i32* %318, i64 %idxprom352
  %323 = load i32, i32* %arrayidx353, align 4
  %324 = load i32, i32* %LineSadBlk3, align 4
  %add354 = add nsw i32 %324, %323
  store i32 %add354, i32* %LineSadBlk3, align 4
  %325 = load i32*, i32** @byte_abs, align 8
  %326 = load i16*, i16** %refptr, align 8
  %incdec.ptr355 = getelementptr inbounds i16, i16* %326, i32 1
  store i16* %incdec.ptr355, i16** %refptr, align 8
  %327 = load i16, i16* %326, align 2
  %conv356 = zext i16 %327 to i32
  %328 = load i16*, i16** %orgptr, align 8
  %incdec.ptr357 = getelementptr inbounds i16, i16* %328, i32 1
  store i16* %incdec.ptr357, i16** %orgptr, align 8
  %329 = load i16, i16* %328, align 2
  %conv358 = zext i16 %329 to i32
  %sub359 = sub nsw i32 %conv356, %conv358
  %idxprom360 = sext i32 %sub359 to i64
  %arrayidx361 = getelementptr inbounds i32, i32* %325, i64 %idxprom360
  %330 = load i32, i32* %arrayidx361, align 4
  %331 = load i32, i32* %LineSadBlk3, align 4
  %add362 = add nsw i32 %331, %330
  store i32 %add362, i32* %LineSadBlk3, align 4
  %332 = load i32*, i32** @byte_abs, align 8
  %333 = load i16*, i16** %refptr, align 8
  %incdec.ptr363 = getelementptr inbounds i16, i16* %333, i32 1
  store i16* %incdec.ptr363, i16** %refptr, align 8
  %334 = load i16, i16* %333, align 2
  %conv364 = zext i16 %334 to i32
  %335 = load i16*, i16** %orgptr, align 8
  %incdec.ptr365 = getelementptr inbounds i16, i16* %335, i32 1
  store i16* %incdec.ptr365, i16** %orgptr, align 8
  %336 = load i16, i16* %335, align 2
  %conv366 = zext i16 %336 to i32
  %sub367 = sub nsw i32 %conv364, %conv366
  %idxprom368 = sext i32 %sub367 to i64
  %arrayidx369 = getelementptr inbounds i32, i32* %332, i64 %idxprom368
  %337 = load i32, i32* %arrayidx369, align 4
  %338 = load i32, i32* %LineSadBlk3, align 4
  %add370 = add nsw i32 %338, %337
  store i32 %add370, i32* %LineSadBlk3, align 4
  %339 = load i32*, i32** @byte_abs, align 8
  %340 = load i16*, i16** %refptr, align 8
  %incdec.ptr371 = getelementptr inbounds i16, i16* %340, i32 1
  store i16* %incdec.ptr371, i16** %refptr, align 8
  %341 = load i16, i16* %340, align 2
  %conv372 = zext i16 %341 to i32
  %342 = load i16*, i16** %orgptr, align 8
  %incdec.ptr373 = getelementptr inbounds i16, i16* %342, i32 1
  store i16* %incdec.ptr373, i16** %orgptr, align 8
  %343 = load i16, i16* %342, align 2
  %conv374 = zext i16 %343 to i32
  %sub375 = sub nsw i32 %conv372, %conv374
  %idxprom376 = sext i32 %sub375 to i64
  %arrayidx377 = getelementptr inbounds i32, i32* %339, i64 %idxprom376
  %344 = load i32, i32* %arrayidx377, align 4
  %345 = load i32, i32* %LineSadBlk3, align 4
  %add378 = add nsw i32 %345, %344
  store i32 %add378, i32* %LineSadBlk3, align 4
  br label %for.inc379

for.inc379:                                       ; preds = %for.body249
  %346 = load i32, i32* %y, align 4
  %inc380 = add nsw i32 %346, 1
  store i32 %inc380, i32* %y, align 4
  br label %for.cond246

for.end381:                                       ; preds = %for.cond246
  %347 = load i32, i32* %LineSadBlk0, align 4
  %348 = load i32**, i32*** %block_sad, align 8
  %349 = load i32, i32* %bindex, align 4
  %inc382 = add nsw i32 %349, 1
  store i32 %inc382, i32* %bindex, align 4
  %idxprom383 = sext i32 %349 to i64
  %arrayidx384 = getelementptr inbounds i32*, i32** %348, i64 %idxprom383
  %350 = load i32*, i32** %arrayidx384, align 8
  %351 = load i32, i32* %pos, align 4
  %idxprom385 = sext i32 %351 to i64
  %arrayidx386 = getelementptr inbounds i32, i32* %350, i64 %idxprom385
  store i32 %347, i32* %arrayidx386, align 4
  %352 = load i32, i32* %LineSadBlk1, align 4
  %353 = load i32**, i32*** %block_sad, align 8
  %354 = load i32, i32* %bindex, align 4
  %inc387 = add nsw i32 %354, 1
  store i32 %inc387, i32* %bindex, align 4
  %idxprom388 = sext i32 %354 to i64
  %arrayidx389 = getelementptr inbounds i32*, i32** %353, i64 %idxprom388
  %355 = load i32*, i32** %arrayidx389, align 8
  %356 = load i32, i32* %pos, align 4
  %idxprom390 = sext i32 %356 to i64
  %arrayidx391 = getelementptr inbounds i32, i32* %355, i64 %idxprom390
  store i32 %352, i32* %arrayidx391, align 4
  %357 = load i32, i32* %LineSadBlk2, align 4
  %358 = load i32**, i32*** %block_sad, align 8
  %359 = load i32, i32* %bindex, align 4
  %inc392 = add nsw i32 %359, 1
  store i32 %inc392, i32* %bindex, align 4
  %idxprom393 = sext i32 %359 to i64
  %arrayidx394 = getelementptr inbounds i32*, i32** %358, i64 %idxprom393
  %360 = load i32*, i32** %arrayidx394, align 8
  %361 = load i32, i32* %pos, align 4
  %idxprom395 = sext i32 %361 to i64
  %arrayidx396 = getelementptr inbounds i32, i32* %360, i64 %idxprom395
  store i32 %357, i32* %arrayidx396, align 4
  %362 = load i32, i32* %LineSadBlk3, align 4
  %363 = load i32**, i32*** %block_sad, align 8
  %364 = load i32, i32* %bindex, align 4
  %inc397 = add nsw i32 %364, 1
  store i32 %inc397, i32* %bindex, align 4
  %idxprom398 = sext i32 %364 to i64
  %arrayidx399 = getelementptr inbounds i32*, i32** %363, i64 %idxprom398
  %365 = load i32*, i32** %arrayidx399, align 8
  %366 = load i32, i32* %pos, align 4
  %idxprom400 = sext i32 %366 to i64
  %arrayidx401 = getelementptr inbounds i32, i32* %365, i64 %idxprom400
  store i32 %362, i32* %arrayidx401, align 4
  br label %for.inc402

for.inc402:                                       ; preds = %for.end381
  %367 = load i32, i32* %blky, align 4
  %inc403 = add nsw i32 %367, 1
  store i32 %inc403, i32* %blky, align 4
  br label %for.cond242

for.end404:                                       ; preds = %for.cond242
  br label %for.inc405

for.inc405:                                       ; preds = %for.end404
  %368 = load i32, i32* %pos, align 4
  %inc406 = add nsw i32 %368, 1
  store i32 %inc406, i32* %pos, align 4
  br label %for.cond214

for.end407:                                       ; preds = %for.cond214
  %369 = load i32, i32* %list.addr, align 4
  %370 = load i16, i16* %ref.addr, align 2
  %conv408 = sext i16 %370 to i32
  %371 = load i32, i32* %max_pos, align 4
  call void @SetupLargerBlocks(i32 %369, i32 %conv408, i32 %371)
  %372 = load i32**, i32*** @search_setup_done, align 8
  %373 = load i32, i32* %list.addr, align 4
  %idxprom409 = sext i32 %373 to i64
  %arrayidx410 = getelementptr inbounds i32*, i32** %372, i64 %idxprom409
  %374 = load i32*, i32** %arrayidx410, align 8
  %375 = load i16, i16* %ref.addr, align 2
  %idxprom411 = sext i16 %375 to i64
  %arrayidx412 = getelementptr inbounds i32, i32* %374, i64 %idxprom411
  store i32 1, i32* %arrayidx412, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SetMotionVectorPredictor(i16* %pmv, i16*** %refPic, i16**** %tmp_mv, i16 signext %ref_frame, i32 %list, i32 %block_x, i32 %block_y, i32 %blockshape_x, i32 %blockshape_y) #0 {
entry:
  %pmv.addr = alloca i16*, align 8
  %refPic.addr = alloca i16***, align 8
  %tmp_mv.addr = alloca i16****, align 8
  %ref_frame.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %block_x.addr = alloca i32, align 4
  %block_y.addr = alloca i32, align 4
  %blockshape_x.addr = alloca i32, align 4
  %blockshape_y.addr = alloca i32, align 4
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_nr = alloca i32, align 4
  %mv_a = alloca i32, align 4
  %mv_b = alloca i32, align 4
  %mv_c = alloca i32, align 4
  %pred_vec = alloca i32, align 4
  %mvPredType = alloca i32, align 4
  %rFrameL = alloca i32, align 4
  %rFrameU = alloca i32, align 4
  %rFrameUR = alloca i32, align 4
  %hv = alloca i32, align 4
  %block_a = alloca %struct.pix_pos, align 4
  %block_b = alloca %struct.pix_pos, align 4
  %block_c = alloca %struct.pix_pos, align 4
  %block_d = alloca %struct.pix_pos, align 4
  %SAD_a = alloca i32, align 4
  %SAD_b = alloca i32, align 4
  %SAD_c = alloca i32, align 4
  %SAD_d = alloca i32, align 4
  %temp_pred_SAD = alloca [2 x i32], align 4
  store i16* %pmv, i16** %pmv.addr, align 8
  store i16*** %refPic, i16**** %refPic.addr, align 8
  store i16**** %tmp_mv, i16***** %tmp_mv.addr, align 8
  store i16 %ref_frame, i16* %ref_frame.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %block_x, i32* %block_x.addr, align 4
  store i32 %block_y, i32* %block_y.addr, align 4
  store i32 %blockshape_x, i32* %blockshape_x.addr, align 4
  store i32 %blockshape_y, i32* %blockshape_y.addr, align 4
  %0 = load i32, i32* %block_x.addr, align 4
  %mul = mul nsw i32 4, %0
  store i32 %mul, i32* %mb_x, align 4
  %1 = load i32, i32* %block_y.addr, align 4
  %mul1 = mul nsw i32 4, %1
  store i32 %mul1, i32* %mb_y, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 3
  %3 = load i32, i32* %current_mb_nr, align 4
  store i32 %3, i32* %mb_nr, align 4
  store i32 0, i32* %pred_vec, align 4
  store i32 0, i32* %SAD_a, align 4
  store i32 0, i32* %SAD_b, align 4
  store i32 0, i32* %SAD_c, align 4
  store i32 0, i32* %SAD_d, align 4
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 134
  %5 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @pred_SAD_space, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %mb_nr, align 4
  %7 = load i32, i32* %block_x.addr, align 4
  %8 = load i32, i32* %block_y.addr, align 4
  call void @getLuma4x4Neighbour(i32 %6, i32 %7, i32 %8, i32 -1, i32 0, %struct.pix_pos* %block_a)
  %9 = load i32, i32* %mb_nr, align 4
  %10 = load i32, i32* %block_x.addr, align 4
  %11 = load i32, i32* %block_y.addr, align 4
  call void @getLuma4x4Neighbour(i32 %9, i32 %10, i32 %11, i32 0, i32 -1, %struct.pix_pos* %block_b)
  %12 = load i32, i32* %mb_nr, align 4
  %13 = load i32, i32* %block_x.addr, align 4
  %14 = load i32, i32* %block_y.addr, align 4
  %15 = load i32, i32* %blockshape_x.addr, align 4
  call void @getLuma4x4Neighbour(i32 %12, i32 %13, i32 %14, i32 %15, i32 -1, %struct.pix_pos* %block_c)
  %16 = load i32, i32* %mb_nr, align 4
  %17 = load i32, i32* %block_x.addr, align 4
  %18 = load i32, i32* %block_y.addr, align 4
  call void @getLuma4x4Neighbour(i32 %16, i32 %17, i32 %18, i32 -1, i32 -1, %struct.pix_pos* %block_d)
  %19 = load i32, i32* %mb_y, align 4
  %cmp = icmp sgt i32 %19, 0
  br i1 %cmp, label %if.then2, label %if.end30

if.then2:                                         ; preds = %if.end
  %20 = load i32, i32* %mb_x, align 4
  %cmp3 = icmp slt i32 %20, 8
  br i1 %cmp3, label %if.then4, label %if.else20

if.then4:                                         ; preds = %if.then2
  %21 = load i32, i32* %mb_y, align 4
  %cmp5 = icmp eq i32 %21, 8
  br i1 %cmp5, label %if.then6, label %if.else11

if.then6:                                         ; preds = %if.then4
  %22 = load i32, i32* %blockshape_x.addr, align 4
  %cmp7 = icmp eq i32 %22, 16
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.then6
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %available, align 4
  br label %if.end10

if.else:                                          ; preds = %if.then6
  %available9 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %23 = load i32, i32* %available9, align 4
  %and = and i32 %23, 1
  store i32 %and, i32* %available9, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then8
  br label %if.end19

if.else11:                                        ; preds = %if.then4
  %24 = load i32, i32* %mb_x, align 4
  %25 = load i32, i32* %blockshape_x.addr, align 4
  %add = add nsw i32 %24, %25
  %cmp12 = icmp ne i32 %add, 8
  br i1 %cmp12, label %if.then13, label %if.else16

if.then13:                                        ; preds = %if.else11
  %available14 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %26 = load i32, i32* %available14, align 4
  %and15 = and i32 %26, 1
  store i32 %and15, i32* %available14, align 4
  br label %if.end18

if.else16:                                        ; preds = %if.else11
  %available17 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %available17, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.else16, %if.then13
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end10
  br label %if.end29

if.else20:                                        ; preds = %if.then2
  %27 = load i32, i32* %mb_x, align 4
  %28 = load i32, i32* %blockshape_x.addr, align 4
  %add21 = add nsw i32 %27, %28
  %cmp22 = icmp ne i32 %add21, 16
  br i1 %cmp22, label %if.then23, label %if.else26

if.then23:                                        ; preds = %if.else20
  %available24 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %29 = load i32, i32* %available24, align 4
  %and25 = and i32 %29, 1
  store i32 %and25, i32* %available24, align 4
  br label %if.end28

if.else26:                                        ; preds = %if.else20
  %available27 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  store i32 0, i32* %available27, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then23
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end19
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end
  %available31 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %30 = load i32, i32* %available31, align 4
  %tobool32 = icmp ne i32 %30, 0
  br i1 %tobool32, label %if.end34, label %if.then33

if.then33:                                        ; preds = %if.end30
  %31 = bitcast %struct.pix_pos* %block_c to i8*
  %32 = bitcast %struct.pix_pos* %block_d to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 24, i1 false)
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.end30
  store i32 0, i32* %mvPredType, align 4
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 90
  %34 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool35 = icmp ne i32 %34, 0
  br i1 %tobool35, label %if.else73, label %if.then36

if.then36:                                        ; preds = %if.end34
  %available37 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %35 = load i32, i32* %available37, align 4
  %tobool38 = icmp ne i32 %35, 0
  br i1 %tobool38, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then36
  %36 = load i16***, i16**** %refPic.addr, align 8
  %37 = load i32, i32* %list.addr, align 4
  %idxprom = sext i32 %37 to i64
  %arrayidx = getelementptr inbounds i16**, i16*** %36, i64 %idxprom
  %38 = load i16**, i16*** %arrayidx, align 8
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %39 = load i32, i32* %pos_x, align 4
  %idxprom39 = sext i32 %39 to i64
  %arrayidx40 = getelementptr inbounds i16*, i16** %38, i64 %idxprom39
  %40 = load i16*, i16** %arrayidx40, align 8
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %41 = load i32, i32* %pos_y, align 4
  %idxprom41 = sext i32 %41 to i64
  %arrayidx42 = getelementptr inbounds i16, i16* %40, i64 %idxprom41
  %42 = load i16, i16* %arrayidx42, align 2
  %conv = sext i16 %42 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then36
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ -1, %cond.false ]
  store i32 %cond, i32* %rFrameL, align 4
  %available43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %43 = load i32, i32* %available43, align 4
  %tobool44 = icmp ne i32 %43, 0
  br i1 %tobool44, label %cond.true45, label %cond.false55

cond.true45:                                      ; preds = %cond.end
  %44 = load i16***, i16**** %refPic.addr, align 8
  %45 = load i32, i32* %list.addr, align 4
  %idxprom46 = sext i32 %45 to i64
  %arrayidx47 = getelementptr inbounds i16**, i16*** %44, i64 %idxprom46
  %46 = load i16**, i16*** %arrayidx47, align 8
  %pos_x48 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %47 = load i32, i32* %pos_x48, align 4
  %idxprom49 = sext i32 %47 to i64
  %arrayidx50 = getelementptr inbounds i16*, i16** %46, i64 %idxprom49
  %48 = load i16*, i16** %arrayidx50, align 8
  %pos_y51 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %49 = load i32, i32* %pos_y51, align 4
  %idxprom52 = sext i32 %49 to i64
  %arrayidx53 = getelementptr inbounds i16, i16* %48, i64 %idxprom52
  %50 = load i16, i16* %arrayidx53, align 2
  %conv54 = sext i16 %50 to i32
  br label %cond.end56

cond.false55:                                     ; preds = %cond.end
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true45
  %cond57 = phi i32 [ %conv54, %cond.true45 ], [ -1, %cond.false55 ]
  store i32 %cond57, i32* %rFrameU, align 4
  %available58 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %51 = load i32, i32* %available58, align 4
  %tobool59 = icmp ne i32 %51, 0
  br i1 %tobool59, label %cond.true60, label %cond.false70

cond.true60:                                      ; preds = %cond.end56
  %52 = load i16***, i16**** %refPic.addr, align 8
  %53 = load i32, i32* %list.addr, align 4
  %idxprom61 = sext i32 %53 to i64
  %arrayidx62 = getelementptr inbounds i16**, i16*** %52, i64 %idxprom61
  %54 = load i16**, i16*** %arrayidx62, align 8
  %pos_x63 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %55 = load i32, i32* %pos_x63, align 4
  %idxprom64 = sext i32 %55 to i64
  %arrayidx65 = getelementptr inbounds i16*, i16** %54, i64 %idxprom64
  %56 = load i16*, i16** %arrayidx65, align 8
  %pos_y66 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %57 = load i32, i32* %pos_y66, align 4
  %idxprom67 = sext i32 %57 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %56, i64 %idxprom67
  %58 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %58 to i32
  br label %cond.end71

cond.false70:                                     ; preds = %cond.end56
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false70, %cond.true60
  %cond72 = phi i32 [ %conv69, %cond.true60 ], [ -1, %cond.false70 ]
  store i32 %cond72, i32* %rFrameUR, align 4
  br label %if.end289

if.else73:                                        ; preds = %if.end34
  %59 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i32 0, i32 51
  %60 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %61 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr74 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %61, i32 0, i32 3
  %62 = load i32, i32* %current_mb_nr74, align 4
  %idxprom75 = sext i32 %62 to i64
  %arrayidx76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %60, i64 %idxprom75
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx76, i32 0, i32 22
  %63 = load i32, i32* %mb_field, align 4
  %tobool77 = icmp ne i32 %63, 0
  br i1 %tobool77, label %if.then78, label %if.else183

if.then78:                                        ; preds = %if.else73
  %available79 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %64 = load i32, i32* %available79, align 4
  %tobool80 = icmp ne i32 %64, 0
  br i1 %tobool80, label %cond.true81, label %cond.false110

cond.true81:                                      ; preds = %if.then78
  %65 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data82 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %65, i32 0, i32 51
  %66 = load %struct.macroblock*, %struct.macroblock** %mb_data82, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %67 = load i32, i32* %mb_addr, align 4
  %idxprom83 = sext i32 %67 to i64
  %arrayidx84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %66, i64 %idxprom83
  %mb_field85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx84, i32 0, i32 22
  %68 = load i32, i32* %mb_field85, align 4
  %tobool86 = icmp ne i32 %68, 0
  br i1 %tobool86, label %cond.true87, label %cond.false97

cond.true87:                                      ; preds = %cond.true81
  %69 = load i16***, i16**** %refPic.addr, align 8
  %70 = load i32, i32* %list.addr, align 4
  %idxprom88 = sext i32 %70 to i64
  %arrayidx89 = getelementptr inbounds i16**, i16*** %69, i64 %idxprom88
  %71 = load i16**, i16*** %arrayidx89, align 8
  %pos_x90 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %72 = load i32, i32* %pos_x90, align 4
  %idxprom91 = sext i32 %72 to i64
  %arrayidx92 = getelementptr inbounds i16*, i16** %71, i64 %idxprom91
  %73 = load i16*, i16** %arrayidx92, align 8
  %pos_y93 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %74 = load i32, i32* %pos_y93, align 4
  %idxprom94 = sext i32 %74 to i64
  %arrayidx95 = getelementptr inbounds i16, i16* %73, i64 %idxprom94
  %75 = load i16, i16* %arrayidx95, align 2
  %conv96 = sext i16 %75 to i32
  br label %cond.end108

cond.false97:                                     ; preds = %cond.true81
  %76 = load i16***, i16**** %refPic.addr, align 8
  %77 = load i32, i32* %list.addr, align 4
  %idxprom98 = sext i32 %77 to i64
  %arrayidx99 = getelementptr inbounds i16**, i16*** %76, i64 %idxprom98
  %78 = load i16**, i16*** %arrayidx99, align 8
  %pos_x100 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %79 = load i32, i32* %pos_x100, align 4
  %idxprom101 = sext i32 %79 to i64
  %arrayidx102 = getelementptr inbounds i16*, i16** %78, i64 %idxprom101
  %80 = load i16*, i16** %arrayidx102, align 8
  %pos_y103 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %81 = load i32, i32* %pos_y103, align 4
  %idxprom104 = sext i32 %81 to i64
  %arrayidx105 = getelementptr inbounds i16, i16* %80, i64 %idxprom104
  %82 = load i16, i16* %arrayidx105, align 2
  %conv106 = sext i16 %82 to i32
  %mul107 = mul nsw i32 %conv106, 2
  br label %cond.end108

cond.end108:                                      ; preds = %cond.false97, %cond.true87
  %cond109 = phi i32 [ %conv96, %cond.true87 ], [ %mul107, %cond.false97 ]
  br label %cond.end111

cond.false110:                                    ; preds = %if.then78
  br label %cond.end111

cond.end111:                                      ; preds = %cond.false110, %cond.end108
  %cond112 = phi i32 [ %cond109, %cond.end108 ], [ -1, %cond.false110 ]
  store i32 %cond112, i32* %rFrameL, align 4
  %available113 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %83 = load i32, i32* %available113, align 4
  %tobool114 = icmp ne i32 %83, 0
  br i1 %tobool114, label %cond.true115, label %cond.false145

cond.true115:                                     ; preds = %cond.end111
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data116 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 51
  %85 = load %struct.macroblock*, %struct.macroblock** %mb_data116, align 8
  %mb_addr117 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %86 = load i32, i32* %mb_addr117, align 4
  %idxprom118 = sext i32 %86 to i64
  %arrayidx119 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %85, i64 %idxprom118
  %mb_field120 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx119, i32 0, i32 22
  %87 = load i32, i32* %mb_field120, align 4
  %tobool121 = icmp ne i32 %87, 0
  br i1 %tobool121, label %cond.true122, label %cond.false132

cond.true122:                                     ; preds = %cond.true115
  %88 = load i16***, i16**** %refPic.addr, align 8
  %89 = load i32, i32* %list.addr, align 4
  %idxprom123 = sext i32 %89 to i64
  %arrayidx124 = getelementptr inbounds i16**, i16*** %88, i64 %idxprom123
  %90 = load i16**, i16*** %arrayidx124, align 8
  %pos_x125 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %91 = load i32, i32* %pos_x125, align 4
  %idxprom126 = sext i32 %91 to i64
  %arrayidx127 = getelementptr inbounds i16*, i16** %90, i64 %idxprom126
  %92 = load i16*, i16** %arrayidx127, align 8
  %pos_y128 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %93 = load i32, i32* %pos_y128, align 4
  %idxprom129 = sext i32 %93 to i64
  %arrayidx130 = getelementptr inbounds i16, i16* %92, i64 %idxprom129
  %94 = load i16, i16* %arrayidx130, align 2
  %conv131 = sext i16 %94 to i32
  br label %cond.end143

cond.false132:                                    ; preds = %cond.true115
  %95 = load i16***, i16**** %refPic.addr, align 8
  %96 = load i32, i32* %list.addr, align 4
  %idxprom133 = sext i32 %96 to i64
  %arrayidx134 = getelementptr inbounds i16**, i16*** %95, i64 %idxprom133
  %97 = load i16**, i16*** %arrayidx134, align 8
  %pos_x135 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %98 = load i32, i32* %pos_x135, align 4
  %idxprom136 = sext i32 %98 to i64
  %arrayidx137 = getelementptr inbounds i16*, i16** %97, i64 %idxprom136
  %99 = load i16*, i16** %arrayidx137, align 8
  %pos_y138 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %100 = load i32, i32* %pos_y138, align 4
  %idxprom139 = sext i32 %100 to i64
  %arrayidx140 = getelementptr inbounds i16, i16* %99, i64 %idxprom139
  %101 = load i16, i16* %arrayidx140, align 2
  %conv141 = sext i16 %101 to i32
  %mul142 = mul nsw i32 %conv141, 2
  br label %cond.end143

cond.end143:                                      ; preds = %cond.false132, %cond.true122
  %cond144 = phi i32 [ %conv131, %cond.true122 ], [ %mul142, %cond.false132 ]
  br label %cond.end146

cond.false145:                                    ; preds = %cond.end111
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false145, %cond.end143
  %cond147 = phi i32 [ %cond144, %cond.end143 ], [ -1, %cond.false145 ]
  store i32 %cond147, i32* %rFrameU, align 4
  %available148 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %102 = load i32, i32* %available148, align 4
  %tobool149 = icmp ne i32 %102, 0
  br i1 %tobool149, label %cond.true150, label %cond.false180

cond.true150:                                     ; preds = %cond.end146
  %103 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data151 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %103, i32 0, i32 51
  %104 = load %struct.macroblock*, %struct.macroblock** %mb_data151, align 8
  %mb_addr152 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %105 = load i32, i32* %mb_addr152, align 4
  %idxprom153 = sext i32 %105 to i64
  %arrayidx154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %104, i64 %idxprom153
  %mb_field155 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx154, i32 0, i32 22
  %106 = load i32, i32* %mb_field155, align 4
  %tobool156 = icmp ne i32 %106, 0
  br i1 %tobool156, label %cond.true157, label %cond.false167

cond.true157:                                     ; preds = %cond.true150
  %107 = load i16***, i16**** %refPic.addr, align 8
  %108 = load i32, i32* %list.addr, align 4
  %idxprom158 = sext i32 %108 to i64
  %arrayidx159 = getelementptr inbounds i16**, i16*** %107, i64 %idxprom158
  %109 = load i16**, i16*** %arrayidx159, align 8
  %pos_x160 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %110 = load i32, i32* %pos_x160, align 4
  %idxprom161 = sext i32 %110 to i64
  %arrayidx162 = getelementptr inbounds i16*, i16** %109, i64 %idxprom161
  %111 = load i16*, i16** %arrayidx162, align 8
  %pos_y163 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %112 = load i32, i32* %pos_y163, align 4
  %idxprom164 = sext i32 %112 to i64
  %arrayidx165 = getelementptr inbounds i16, i16* %111, i64 %idxprom164
  %113 = load i16, i16* %arrayidx165, align 2
  %conv166 = sext i16 %113 to i32
  br label %cond.end178

cond.false167:                                    ; preds = %cond.true150
  %114 = load i16***, i16**** %refPic.addr, align 8
  %115 = load i32, i32* %list.addr, align 4
  %idxprom168 = sext i32 %115 to i64
  %arrayidx169 = getelementptr inbounds i16**, i16*** %114, i64 %idxprom168
  %116 = load i16**, i16*** %arrayidx169, align 8
  %pos_x170 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %117 = load i32, i32* %pos_x170, align 4
  %idxprom171 = sext i32 %117 to i64
  %arrayidx172 = getelementptr inbounds i16*, i16** %116, i64 %idxprom171
  %118 = load i16*, i16** %arrayidx172, align 8
  %pos_y173 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %119 = load i32, i32* %pos_y173, align 4
  %idxprom174 = sext i32 %119 to i64
  %arrayidx175 = getelementptr inbounds i16, i16* %118, i64 %idxprom174
  %120 = load i16, i16* %arrayidx175, align 2
  %conv176 = sext i16 %120 to i32
  %mul177 = mul nsw i32 %conv176, 2
  br label %cond.end178

cond.end178:                                      ; preds = %cond.false167, %cond.true157
  %cond179 = phi i32 [ %conv166, %cond.true157 ], [ %mul177, %cond.false167 ]
  br label %cond.end181

cond.false180:                                    ; preds = %cond.end146
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false180, %cond.end178
  %cond182 = phi i32 [ %cond179, %cond.end178 ], [ -1, %cond.false180 ]
  store i32 %cond182, i32* %rFrameUR, align 4
  br label %if.end288

if.else183:                                       ; preds = %if.else73
  %available184 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %121 = load i32, i32* %available184, align 4
  %tobool185 = icmp ne i32 %121, 0
  br i1 %tobool185, label %cond.true186, label %cond.false215

cond.true186:                                     ; preds = %if.else183
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data187 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 51
  %123 = load %struct.macroblock*, %struct.macroblock** %mb_data187, align 8
  %mb_addr188 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %124 = load i32, i32* %mb_addr188, align 4
  %idxprom189 = sext i32 %124 to i64
  %arrayidx190 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %123, i64 %idxprom189
  %mb_field191 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx190, i32 0, i32 22
  %125 = load i32, i32* %mb_field191, align 4
  %tobool192 = icmp ne i32 %125, 0
  br i1 %tobool192, label %cond.true193, label %cond.false203

cond.true193:                                     ; preds = %cond.true186
  %126 = load i16***, i16**** %refPic.addr, align 8
  %127 = load i32, i32* %list.addr, align 4
  %idxprom194 = sext i32 %127 to i64
  %arrayidx195 = getelementptr inbounds i16**, i16*** %126, i64 %idxprom194
  %128 = load i16**, i16*** %arrayidx195, align 8
  %pos_x196 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %129 = load i32, i32* %pos_x196, align 4
  %idxprom197 = sext i32 %129 to i64
  %arrayidx198 = getelementptr inbounds i16*, i16** %128, i64 %idxprom197
  %130 = load i16*, i16** %arrayidx198, align 8
  %pos_y199 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %131 = load i32, i32* %pos_y199, align 4
  %idxprom200 = sext i32 %131 to i64
  %arrayidx201 = getelementptr inbounds i16, i16* %130, i64 %idxprom200
  %132 = load i16, i16* %arrayidx201, align 2
  %conv202 = sext i16 %132 to i32
  %shr = ashr i32 %conv202, 1
  br label %cond.end213

cond.false203:                                    ; preds = %cond.true186
  %133 = load i16***, i16**** %refPic.addr, align 8
  %134 = load i32, i32* %list.addr, align 4
  %idxprom204 = sext i32 %134 to i64
  %arrayidx205 = getelementptr inbounds i16**, i16*** %133, i64 %idxprom204
  %135 = load i16**, i16*** %arrayidx205, align 8
  %pos_x206 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %136 = load i32, i32* %pos_x206, align 4
  %idxprom207 = sext i32 %136 to i64
  %arrayidx208 = getelementptr inbounds i16*, i16** %135, i64 %idxprom207
  %137 = load i16*, i16** %arrayidx208, align 8
  %pos_y209 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %138 = load i32, i32* %pos_y209, align 4
  %idxprom210 = sext i32 %138 to i64
  %arrayidx211 = getelementptr inbounds i16, i16* %137, i64 %idxprom210
  %139 = load i16, i16* %arrayidx211, align 2
  %conv212 = sext i16 %139 to i32
  br label %cond.end213

cond.end213:                                      ; preds = %cond.false203, %cond.true193
  %cond214 = phi i32 [ %shr, %cond.true193 ], [ %conv212, %cond.false203 ]
  br label %cond.end216

cond.false215:                                    ; preds = %if.else183
  br label %cond.end216

cond.end216:                                      ; preds = %cond.false215, %cond.end213
  %cond217 = phi i32 [ %cond214, %cond.end213 ], [ -1, %cond.false215 ]
  store i32 %cond217, i32* %rFrameL, align 4
  %available218 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %140 = load i32, i32* %available218, align 4
  %tobool219 = icmp ne i32 %140, 0
  br i1 %tobool219, label %cond.true220, label %cond.false250

cond.true220:                                     ; preds = %cond.end216
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data221 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 51
  %142 = load %struct.macroblock*, %struct.macroblock** %mb_data221, align 8
  %mb_addr222 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %143 = load i32, i32* %mb_addr222, align 4
  %idxprom223 = sext i32 %143 to i64
  %arrayidx224 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %142, i64 %idxprom223
  %mb_field225 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx224, i32 0, i32 22
  %144 = load i32, i32* %mb_field225, align 4
  %tobool226 = icmp ne i32 %144, 0
  br i1 %tobool226, label %cond.true227, label %cond.false238

cond.true227:                                     ; preds = %cond.true220
  %145 = load i16***, i16**** %refPic.addr, align 8
  %146 = load i32, i32* %list.addr, align 4
  %idxprom228 = sext i32 %146 to i64
  %arrayidx229 = getelementptr inbounds i16**, i16*** %145, i64 %idxprom228
  %147 = load i16**, i16*** %arrayidx229, align 8
  %pos_x230 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %148 = load i32, i32* %pos_x230, align 4
  %idxprom231 = sext i32 %148 to i64
  %arrayidx232 = getelementptr inbounds i16*, i16** %147, i64 %idxprom231
  %149 = load i16*, i16** %arrayidx232, align 8
  %pos_y233 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %150 = load i32, i32* %pos_y233, align 4
  %idxprom234 = sext i32 %150 to i64
  %arrayidx235 = getelementptr inbounds i16, i16* %149, i64 %idxprom234
  %151 = load i16, i16* %arrayidx235, align 2
  %conv236 = sext i16 %151 to i32
  %shr237 = ashr i32 %conv236, 1
  br label %cond.end248

cond.false238:                                    ; preds = %cond.true220
  %152 = load i16***, i16**** %refPic.addr, align 8
  %153 = load i32, i32* %list.addr, align 4
  %idxprom239 = sext i32 %153 to i64
  %arrayidx240 = getelementptr inbounds i16**, i16*** %152, i64 %idxprom239
  %154 = load i16**, i16*** %arrayidx240, align 8
  %pos_x241 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %155 = load i32, i32* %pos_x241, align 4
  %idxprom242 = sext i32 %155 to i64
  %arrayidx243 = getelementptr inbounds i16*, i16** %154, i64 %idxprom242
  %156 = load i16*, i16** %arrayidx243, align 8
  %pos_y244 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %157 = load i32, i32* %pos_y244, align 4
  %idxprom245 = sext i32 %157 to i64
  %arrayidx246 = getelementptr inbounds i16, i16* %156, i64 %idxprom245
  %158 = load i16, i16* %arrayidx246, align 2
  %conv247 = sext i16 %158 to i32
  br label %cond.end248

cond.end248:                                      ; preds = %cond.false238, %cond.true227
  %cond249 = phi i32 [ %shr237, %cond.true227 ], [ %conv247, %cond.false238 ]
  br label %cond.end251

cond.false250:                                    ; preds = %cond.end216
  br label %cond.end251

cond.end251:                                      ; preds = %cond.false250, %cond.end248
  %cond252 = phi i32 [ %cond249, %cond.end248 ], [ -1, %cond.false250 ]
  store i32 %cond252, i32* %rFrameU, align 4
  %available253 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %159 = load i32, i32* %available253, align 4
  %tobool254 = icmp ne i32 %159, 0
  br i1 %tobool254, label %cond.true255, label %cond.false285

cond.true255:                                     ; preds = %cond.end251
  %160 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data256 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %160, i32 0, i32 51
  %161 = load %struct.macroblock*, %struct.macroblock** %mb_data256, align 8
  %mb_addr257 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %162 = load i32, i32* %mb_addr257, align 4
  %idxprom258 = sext i32 %162 to i64
  %arrayidx259 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %161, i64 %idxprom258
  %mb_field260 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx259, i32 0, i32 22
  %163 = load i32, i32* %mb_field260, align 4
  %tobool261 = icmp ne i32 %163, 0
  br i1 %tobool261, label %cond.true262, label %cond.false273

cond.true262:                                     ; preds = %cond.true255
  %164 = load i16***, i16**** %refPic.addr, align 8
  %165 = load i32, i32* %list.addr, align 4
  %idxprom263 = sext i32 %165 to i64
  %arrayidx264 = getelementptr inbounds i16**, i16*** %164, i64 %idxprom263
  %166 = load i16**, i16*** %arrayidx264, align 8
  %pos_x265 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %167 = load i32, i32* %pos_x265, align 4
  %idxprom266 = sext i32 %167 to i64
  %arrayidx267 = getelementptr inbounds i16*, i16** %166, i64 %idxprom266
  %168 = load i16*, i16** %arrayidx267, align 8
  %pos_y268 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %169 = load i32, i32* %pos_y268, align 4
  %idxprom269 = sext i32 %169 to i64
  %arrayidx270 = getelementptr inbounds i16, i16* %168, i64 %idxprom269
  %170 = load i16, i16* %arrayidx270, align 2
  %conv271 = sext i16 %170 to i32
  %shr272 = ashr i32 %conv271, 1
  br label %cond.end283

cond.false273:                                    ; preds = %cond.true255
  %171 = load i16***, i16**** %refPic.addr, align 8
  %172 = load i32, i32* %list.addr, align 4
  %idxprom274 = sext i32 %172 to i64
  %arrayidx275 = getelementptr inbounds i16**, i16*** %171, i64 %idxprom274
  %173 = load i16**, i16*** %arrayidx275, align 8
  %pos_x276 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %174 = load i32, i32* %pos_x276, align 4
  %idxprom277 = sext i32 %174 to i64
  %arrayidx278 = getelementptr inbounds i16*, i16** %173, i64 %idxprom277
  %175 = load i16*, i16** %arrayidx278, align 8
  %pos_y279 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %176 = load i32, i32* %pos_y279, align 4
  %idxprom280 = sext i32 %176 to i64
  %arrayidx281 = getelementptr inbounds i16, i16* %175, i64 %idxprom280
  %177 = load i16, i16* %arrayidx281, align 2
  %conv282 = sext i16 %177 to i32
  br label %cond.end283

cond.end283:                                      ; preds = %cond.false273, %cond.true262
  %cond284 = phi i32 [ %shr272, %cond.true262 ], [ %conv282, %cond.false273 ]
  br label %cond.end286

cond.false285:                                    ; preds = %cond.end251
  br label %cond.end286

cond.end286:                                      ; preds = %cond.false285, %cond.end283
  %cond287 = phi i32 [ %cond284, %cond.end283 ], [ -1, %cond.false285 ]
  store i32 %cond287, i32* %rFrameUR, align 4
  br label %if.end288

if.end288:                                        ; preds = %cond.end286, %cond.end181
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %cond.end71
  %178 = load i32, i32* %rFrameL, align 4
  %179 = load i16, i16* %ref_frame.addr, align 2
  %conv290 = sext i16 %179 to i32
  %cmp291 = icmp eq i32 %178, %conv290
  br i1 %cmp291, label %land.lhs.true, label %if.else301

land.lhs.true:                                    ; preds = %if.end289
  %180 = load i32, i32* %rFrameU, align 4
  %181 = load i16, i16* %ref_frame.addr, align 2
  %conv293 = sext i16 %181 to i32
  %cmp294 = icmp ne i32 %180, %conv293
  br i1 %cmp294, label %land.lhs.true296, label %if.else301

land.lhs.true296:                                 ; preds = %land.lhs.true
  %182 = load i32, i32* %rFrameUR, align 4
  %183 = load i16, i16* %ref_frame.addr, align 2
  %conv297 = sext i16 %183 to i32
  %cmp298 = icmp ne i32 %182, %conv297
  br i1 %cmp298, label %if.then300, label %if.else301

if.then300:                                       ; preds = %land.lhs.true296
  store i32 1, i32* %mvPredType, align 4
  br label %if.end329

if.else301:                                       ; preds = %land.lhs.true296, %land.lhs.true, %if.end289
  %184 = load i32, i32* %rFrameL, align 4
  %185 = load i16, i16* %ref_frame.addr, align 2
  %conv302 = sext i16 %185 to i32
  %cmp303 = icmp ne i32 %184, %conv302
  br i1 %cmp303, label %land.lhs.true305, label %if.else314

land.lhs.true305:                                 ; preds = %if.else301
  %186 = load i32, i32* %rFrameU, align 4
  %187 = load i16, i16* %ref_frame.addr, align 2
  %conv306 = sext i16 %187 to i32
  %cmp307 = icmp eq i32 %186, %conv306
  br i1 %cmp307, label %land.lhs.true309, label %if.else314

land.lhs.true309:                                 ; preds = %land.lhs.true305
  %188 = load i32, i32* %rFrameUR, align 4
  %189 = load i16, i16* %ref_frame.addr, align 2
  %conv310 = sext i16 %189 to i32
  %cmp311 = icmp ne i32 %188, %conv310
  br i1 %cmp311, label %if.then313, label %if.else314

if.then313:                                       ; preds = %land.lhs.true309
  store i32 2, i32* %mvPredType, align 4
  br label %if.end328

if.else314:                                       ; preds = %land.lhs.true309, %land.lhs.true305, %if.else301
  %190 = load i32, i32* %rFrameL, align 4
  %191 = load i16, i16* %ref_frame.addr, align 2
  %conv315 = sext i16 %191 to i32
  %cmp316 = icmp ne i32 %190, %conv315
  br i1 %cmp316, label %land.lhs.true318, label %if.end327

land.lhs.true318:                                 ; preds = %if.else314
  %192 = load i32, i32* %rFrameU, align 4
  %193 = load i16, i16* %ref_frame.addr, align 2
  %conv319 = sext i16 %193 to i32
  %cmp320 = icmp ne i32 %192, %conv319
  br i1 %cmp320, label %land.lhs.true322, label %if.end327

land.lhs.true322:                                 ; preds = %land.lhs.true318
  %194 = load i32, i32* %rFrameUR, align 4
  %195 = load i16, i16* %ref_frame.addr, align 2
  %conv323 = sext i16 %195 to i32
  %cmp324 = icmp eq i32 %194, %conv323
  br i1 %cmp324, label %if.then326, label %if.end327

if.then326:                                       ; preds = %land.lhs.true322
  store i32 3, i32* %mvPredType, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.then326, %land.lhs.true322, %land.lhs.true318, %if.else314
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.then313
  br label %if.end329

if.end329:                                        ; preds = %if.end328, %if.then300
  %196 = load i32, i32* %blockshape_x.addr, align 4
  %cmp330 = icmp eq i32 %196, 8
  br i1 %cmp330, label %land.lhs.true332, label %if.else351

land.lhs.true332:                                 ; preds = %if.end329
  %197 = load i32, i32* %blockshape_y.addr, align 4
  %cmp333 = icmp eq i32 %197, 16
  br i1 %cmp333, label %if.then335, label %if.else351

if.then335:                                       ; preds = %land.lhs.true332
  %198 = load i32, i32* %mb_x, align 4
  %cmp336 = icmp eq i32 %198, 0
  br i1 %cmp336, label %if.then338, label %if.else344

if.then338:                                       ; preds = %if.then335
  %199 = load i32, i32* %rFrameL, align 4
  %200 = load i16, i16* %ref_frame.addr, align 2
  %conv339 = sext i16 %200 to i32
  %cmp340 = icmp eq i32 %199, %conv339
  br i1 %cmp340, label %if.then342, label %if.end343

if.then342:                                       ; preds = %if.then338
  store i32 1, i32* %mvPredType, align 4
  br label %if.end343

if.end343:                                        ; preds = %if.then342, %if.then338
  br label %if.end350

if.else344:                                       ; preds = %if.then335
  %201 = load i32, i32* %rFrameUR, align 4
  %202 = load i16, i16* %ref_frame.addr, align 2
  %conv345 = sext i16 %202 to i32
  %cmp346 = icmp eq i32 %201, %conv345
  br i1 %cmp346, label %if.then348, label %if.end349

if.then348:                                       ; preds = %if.else344
  store i32 3, i32* %mvPredType, align 4
  br label %if.end349

if.end349:                                        ; preds = %if.then348, %if.else344
  br label %if.end350

if.end350:                                        ; preds = %if.end349, %if.end343
  br label %if.end374

if.else351:                                       ; preds = %land.lhs.true332, %if.end329
  %203 = load i32, i32* %blockshape_x.addr, align 4
  %cmp352 = icmp eq i32 %203, 16
  br i1 %cmp352, label %land.lhs.true354, label %if.end373

land.lhs.true354:                                 ; preds = %if.else351
  %204 = load i32, i32* %blockshape_y.addr, align 4
  %cmp355 = icmp eq i32 %204, 8
  br i1 %cmp355, label %if.then357, label %if.end373

if.then357:                                       ; preds = %land.lhs.true354
  %205 = load i32, i32* %mb_y, align 4
  %cmp358 = icmp eq i32 %205, 0
  br i1 %cmp358, label %if.then360, label %if.else366

if.then360:                                       ; preds = %if.then357
  %206 = load i32, i32* %rFrameU, align 4
  %207 = load i16, i16* %ref_frame.addr, align 2
  %conv361 = sext i16 %207 to i32
  %cmp362 = icmp eq i32 %206, %conv361
  br i1 %cmp362, label %if.then364, label %if.end365

if.then364:                                       ; preds = %if.then360
  store i32 2, i32* %mvPredType, align 4
  br label %if.end365

if.end365:                                        ; preds = %if.then364, %if.then360
  br label %if.end372

if.else366:                                       ; preds = %if.then357
  %208 = load i32, i32* %rFrameL, align 4
  %209 = load i16, i16* %ref_frame.addr, align 2
  %conv367 = sext i16 %209 to i32
  %cmp368 = icmp eq i32 %208, %conv367
  br i1 %cmp368, label %if.then370, label %if.end371

if.then370:                                       ; preds = %if.else366
  store i32 1, i32* %mvPredType, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then370, %if.else366
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %if.end365
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true354, %if.else351
  br label %if.end374

if.end374:                                        ; preds = %if.end373, %if.end350
  store i32 0, i32* %hv, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end374
  %210 = load i32, i32* %hv, align 4
  %cmp375 = icmp slt i32 %210, 2
  br i1 %cmp375, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag377 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 90
  %212 = load i32, i32* %MbaffFrameFlag377, align 8
  %tobool378 = icmp ne i32 %212, 0
  br i1 %tobool378, label %lor.lhs.false, label %if.then381

lor.lhs.false:                                    ; preds = %for.body
  %213 = load i32, i32* %hv, align 4
  %cmp379 = icmp eq i32 %213, 0
  br i1 %cmp379, label %if.then381, label %if.else433

if.then381:                                       ; preds = %lor.lhs.false, %for.body
  %available382 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %214 = load i32, i32* %available382, align 4
  %tobool383 = icmp ne i32 %214, 0
  br i1 %tobool383, label %cond.true384, label %cond.false396

cond.true384:                                     ; preds = %if.then381
  %215 = load i16****, i16***** %tmp_mv.addr, align 8
  %216 = load i32, i32* %list.addr, align 4
  %idxprom385 = sext i32 %216 to i64
  %arrayidx386 = getelementptr inbounds i16***, i16**** %215, i64 %idxprom385
  %217 = load i16***, i16**** %arrayidx386, align 8
  %pos_x387 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %218 = load i32, i32* %pos_x387, align 4
  %idxprom388 = sext i32 %218 to i64
  %arrayidx389 = getelementptr inbounds i16**, i16*** %217, i64 %idxprom388
  %219 = load i16**, i16*** %arrayidx389, align 8
  %pos_y390 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %220 = load i32, i32* %pos_y390, align 4
  %idxprom391 = sext i32 %220 to i64
  %arrayidx392 = getelementptr inbounds i16*, i16** %219, i64 %idxprom391
  %221 = load i16*, i16** %arrayidx392, align 8
  %222 = load i32, i32* %hv, align 4
  %idxprom393 = sext i32 %222 to i64
  %arrayidx394 = getelementptr inbounds i16, i16* %221, i64 %idxprom393
  %223 = load i16, i16* %arrayidx394, align 2
  %conv395 = sext i16 %223 to i32
  br label %cond.end397

cond.false396:                                    ; preds = %if.then381
  br label %cond.end397

cond.end397:                                      ; preds = %cond.false396, %cond.true384
  %cond398 = phi i32 [ %conv395, %cond.true384 ], [ 0, %cond.false396 ]
  store i32 %cond398, i32* %mv_a, align 4
  %available399 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %224 = load i32, i32* %available399, align 4
  %tobool400 = icmp ne i32 %224, 0
  br i1 %tobool400, label %cond.true401, label %cond.false413

cond.true401:                                     ; preds = %cond.end397
  %225 = load i16****, i16***** %tmp_mv.addr, align 8
  %226 = load i32, i32* %list.addr, align 4
  %idxprom402 = sext i32 %226 to i64
  %arrayidx403 = getelementptr inbounds i16***, i16**** %225, i64 %idxprom402
  %227 = load i16***, i16**** %arrayidx403, align 8
  %pos_x404 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %228 = load i32, i32* %pos_x404, align 4
  %idxprom405 = sext i32 %228 to i64
  %arrayidx406 = getelementptr inbounds i16**, i16*** %227, i64 %idxprom405
  %229 = load i16**, i16*** %arrayidx406, align 8
  %pos_y407 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %230 = load i32, i32* %pos_y407, align 4
  %idxprom408 = sext i32 %230 to i64
  %arrayidx409 = getelementptr inbounds i16*, i16** %229, i64 %idxprom408
  %231 = load i16*, i16** %arrayidx409, align 8
  %232 = load i32, i32* %hv, align 4
  %idxprom410 = sext i32 %232 to i64
  %arrayidx411 = getelementptr inbounds i16, i16* %231, i64 %idxprom410
  %233 = load i16, i16* %arrayidx411, align 2
  %conv412 = sext i16 %233 to i32
  br label %cond.end414

cond.false413:                                    ; preds = %cond.end397
  br label %cond.end414

cond.end414:                                      ; preds = %cond.false413, %cond.true401
  %cond415 = phi i32 [ %conv412, %cond.true401 ], [ 0, %cond.false413 ]
  store i32 %cond415, i32* %mv_b, align 4
  %available416 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %234 = load i32, i32* %available416, align 4
  %tobool417 = icmp ne i32 %234, 0
  br i1 %tobool417, label %cond.true418, label %cond.false430

cond.true418:                                     ; preds = %cond.end414
  %235 = load i16****, i16***** %tmp_mv.addr, align 8
  %236 = load i32, i32* %list.addr, align 4
  %idxprom419 = sext i32 %236 to i64
  %arrayidx420 = getelementptr inbounds i16***, i16**** %235, i64 %idxprom419
  %237 = load i16***, i16**** %arrayidx420, align 8
  %pos_x421 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %238 = load i32, i32* %pos_x421, align 4
  %idxprom422 = sext i32 %238 to i64
  %arrayidx423 = getelementptr inbounds i16**, i16*** %237, i64 %idxprom422
  %239 = load i16**, i16*** %arrayidx423, align 8
  %pos_y424 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %240 = load i32, i32* %pos_y424, align 4
  %idxprom425 = sext i32 %240 to i64
  %arrayidx426 = getelementptr inbounds i16*, i16** %239, i64 %idxprom425
  %241 = load i16*, i16** %arrayidx426, align 8
  %242 = load i32, i32* %hv, align 4
  %idxprom427 = sext i32 %242 to i64
  %arrayidx428 = getelementptr inbounds i16, i16* %241, i64 %idxprom427
  %243 = load i16, i16* %arrayidx428, align 2
  %conv429 = sext i16 %243 to i32
  br label %cond.end431

cond.false430:                                    ; preds = %cond.end414
  br label %cond.end431

cond.end431:                                      ; preds = %cond.false430, %cond.true418
  %cond432 = phi i32 [ %conv429, %cond.true418 ], [ 0, %cond.false430 ]
  store i32 %cond432, i32* %mv_c, align 4
  br label %if.end676

if.else433:                                       ; preds = %lor.lhs.false
  %244 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data434 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %244, i32 0, i32 51
  %245 = load %struct.macroblock*, %struct.macroblock** %mb_data434, align 8
  %246 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr435 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %246, i32 0, i32 3
  %247 = load i32, i32* %current_mb_nr435, align 4
  %idxprom436 = sext i32 %247 to i64
  %arrayidx437 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %245, i64 %idxprom436
  %mb_field438 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx437, i32 0, i32 22
  %248 = load i32, i32* %mb_field438, align 4
  %tobool439 = icmp ne i32 %248, 0
  br i1 %tobool439, label %if.then440, label %if.else557

if.then440:                                       ; preds = %if.else433
  %available441 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %249 = load i32, i32* %available441, align 4
  %tobool442 = icmp ne i32 %249, 0
  br i1 %tobool442, label %cond.true443, label %cond.false476

cond.true443:                                     ; preds = %if.then440
  %250 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data444 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %250, i32 0, i32 51
  %251 = load %struct.macroblock*, %struct.macroblock** %mb_data444, align 8
  %mb_addr445 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %252 = load i32, i32* %mb_addr445, align 4
  %idxprom446 = sext i32 %252 to i64
  %arrayidx447 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %251, i64 %idxprom446
  %mb_field448 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx447, i32 0, i32 22
  %253 = load i32, i32* %mb_field448, align 4
  %tobool449 = icmp ne i32 %253, 0
  br i1 %tobool449, label %cond.true450, label %cond.false462

cond.true450:                                     ; preds = %cond.true443
  %254 = load i16****, i16***** %tmp_mv.addr, align 8
  %255 = load i32, i32* %list.addr, align 4
  %idxprom451 = sext i32 %255 to i64
  %arrayidx452 = getelementptr inbounds i16***, i16**** %254, i64 %idxprom451
  %256 = load i16***, i16**** %arrayidx452, align 8
  %pos_x453 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %257 = load i32, i32* %pos_x453, align 4
  %idxprom454 = sext i32 %257 to i64
  %arrayidx455 = getelementptr inbounds i16**, i16*** %256, i64 %idxprom454
  %258 = load i16**, i16*** %arrayidx455, align 8
  %pos_y456 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %259 = load i32, i32* %pos_y456, align 4
  %idxprom457 = sext i32 %259 to i64
  %arrayidx458 = getelementptr inbounds i16*, i16** %258, i64 %idxprom457
  %260 = load i16*, i16** %arrayidx458, align 8
  %261 = load i32, i32* %hv, align 4
  %idxprom459 = sext i32 %261 to i64
  %arrayidx460 = getelementptr inbounds i16, i16* %260, i64 %idxprom459
  %262 = load i16, i16* %arrayidx460, align 2
  %conv461 = sext i16 %262 to i32
  br label %cond.end474

cond.false462:                                    ; preds = %cond.true443
  %263 = load i16****, i16***** %tmp_mv.addr, align 8
  %264 = load i32, i32* %list.addr, align 4
  %idxprom463 = sext i32 %264 to i64
  %arrayidx464 = getelementptr inbounds i16***, i16**** %263, i64 %idxprom463
  %265 = load i16***, i16**** %arrayidx464, align 8
  %pos_x465 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %266 = load i32, i32* %pos_x465, align 4
  %idxprom466 = sext i32 %266 to i64
  %arrayidx467 = getelementptr inbounds i16**, i16*** %265, i64 %idxprom466
  %267 = load i16**, i16*** %arrayidx467, align 8
  %pos_y468 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %268 = load i32, i32* %pos_y468, align 4
  %idxprom469 = sext i32 %268 to i64
  %arrayidx470 = getelementptr inbounds i16*, i16** %267, i64 %idxprom469
  %269 = load i16*, i16** %arrayidx470, align 8
  %270 = load i32, i32* %hv, align 4
  %idxprom471 = sext i32 %270 to i64
  %arrayidx472 = getelementptr inbounds i16, i16* %269, i64 %idxprom471
  %271 = load i16, i16* %arrayidx472, align 2
  %conv473 = sext i16 %271 to i32
  %div = sdiv i32 %conv473, 2
  br label %cond.end474

cond.end474:                                      ; preds = %cond.false462, %cond.true450
  %cond475 = phi i32 [ %conv461, %cond.true450 ], [ %div, %cond.false462 ]
  br label %cond.end477

cond.false476:                                    ; preds = %if.then440
  br label %cond.end477

cond.end477:                                      ; preds = %cond.false476, %cond.end474
  %cond478 = phi i32 [ %cond475, %cond.end474 ], [ 0, %cond.false476 ]
  store i32 %cond478, i32* %mv_a, align 4
  %available479 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %272 = load i32, i32* %available479, align 4
  %tobool480 = icmp ne i32 %272, 0
  br i1 %tobool480, label %cond.true481, label %cond.false515

cond.true481:                                     ; preds = %cond.end477
  %273 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data482 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %273, i32 0, i32 51
  %274 = load %struct.macroblock*, %struct.macroblock** %mb_data482, align 8
  %mb_addr483 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %275 = load i32, i32* %mb_addr483, align 4
  %idxprom484 = sext i32 %275 to i64
  %arrayidx485 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %274, i64 %idxprom484
  %mb_field486 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx485, i32 0, i32 22
  %276 = load i32, i32* %mb_field486, align 4
  %tobool487 = icmp ne i32 %276, 0
  br i1 %tobool487, label %cond.true488, label %cond.false500

cond.true488:                                     ; preds = %cond.true481
  %277 = load i16****, i16***** %tmp_mv.addr, align 8
  %278 = load i32, i32* %list.addr, align 4
  %idxprom489 = sext i32 %278 to i64
  %arrayidx490 = getelementptr inbounds i16***, i16**** %277, i64 %idxprom489
  %279 = load i16***, i16**** %arrayidx490, align 8
  %pos_x491 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %280 = load i32, i32* %pos_x491, align 4
  %idxprom492 = sext i32 %280 to i64
  %arrayidx493 = getelementptr inbounds i16**, i16*** %279, i64 %idxprom492
  %281 = load i16**, i16*** %arrayidx493, align 8
  %pos_y494 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %282 = load i32, i32* %pos_y494, align 4
  %idxprom495 = sext i32 %282 to i64
  %arrayidx496 = getelementptr inbounds i16*, i16** %281, i64 %idxprom495
  %283 = load i16*, i16** %arrayidx496, align 8
  %284 = load i32, i32* %hv, align 4
  %idxprom497 = sext i32 %284 to i64
  %arrayidx498 = getelementptr inbounds i16, i16* %283, i64 %idxprom497
  %285 = load i16, i16* %arrayidx498, align 2
  %conv499 = sext i16 %285 to i32
  br label %cond.end513

cond.false500:                                    ; preds = %cond.true481
  %286 = load i16****, i16***** %tmp_mv.addr, align 8
  %287 = load i32, i32* %list.addr, align 4
  %idxprom501 = sext i32 %287 to i64
  %arrayidx502 = getelementptr inbounds i16***, i16**** %286, i64 %idxprom501
  %288 = load i16***, i16**** %arrayidx502, align 8
  %pos_x503 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %289 = load i32, i32* %pos_x503, align 4
  %idxprom504 = sext i32 %289 to i64
  %arrayidx505 = getelementptr inbounds i16**, i16*** %288, i64 %idxprom504
  %290 = load i16**, i16*** %arrayidx505, align 8
  %pos_y506 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %291 = load i32, i32* %pos_y506, align 4
  %idxprom507 = sext i32 %291 to i64
  %arrayidx508 = getelementptr inbounds i16*, i16** %290, i64 %idxprom507
  %292 = load i16*, i16** %arrayidx508, align 8
  %293 = load i32, i32* %hv, align 4
  %idxprom509 = sext i32 %293 to i64
  %arrayidx510 = getelementptr inbounds i16, i16* %292, i64 %idxprom509
  %294 = load i16, i16* %arrayidx510, align 2
  %conv511 = sext i16 %294 to i32
  %div512 = sdiv i32 %conv511, 2
  br label %cond.end513

cond.end513:                                      ; preds = %cond.false500, %cond.true488
  %cond514 = phi i32 [ %conv499, %cond.true488 ], [ %div512, %cond.false500 ]
  br label %cond.end516

cond.false515:                                    ; preds = %cond.end477
  br label %cond.end516

cond.end516:                                      ; preds = %cond.false515, %cond.end513
  %cond517 = phi i32 [ %cond514, %cond.end513 ], [ 0, %cond.false515 ]
  store i32 %cond517, i32* %mv_b, align 4
  %available518 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %295 = load i32, i32* %available518, align 4
  %tobool519 = icmp ne i32 %295, 0
  br i1 %tobool519, label %cond.true520, label %cond.false554

cond.true520:                                     ; preds = %cond.end516
  %296 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data521 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %296, i32 0, i32 51
  %297 = load %struct.macroblock*, %struct.macroblock** %mb_data521, align 8
  %mb_addr522 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %298 = load i32, i32* %mb_addr522, align 4
  %idxprom523 = sext i32 %298 to i64
  %arrayidx524 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %297, i64 %idxprom523
  %mb_field525 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx524, i32 0, i32 22
  %299 = load i32, i32* %mb_field525, align 4
  %tobool526 = icmp ne i32 %299, 0
  br i1 %tobool526, label %cond.true527, label %cond.false539

cond.true527:                                     ; preds = %cond.true520
  %300 = load i16****, i16***** %tmp_mv.addr, align 8
  %301 = load i32, i32* %list.addr, align 4
  %idxprom528 = sext i32 %301 to i64
  %arrayidx529 = getelementptr inbounds i16***, i16**** %300, i64 %idxprom528
  %302 = load i16***, i16**** %arrayidx529, align 8
  %pos_x530 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %303 = load i32, i32* %pos_x530, align 4
  %idxprom531 = sext i32 %303 to i64
  %arrayidx532 = getelementptr inbounds i16**, i16*** %302, i64 %idxprom531
  %304 = load i16**, i16*** %arrayidx532, align 8
  %pos_y533 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %305 = load i32, i32* %pos_y533, align 4
  %idxprom534 = sext i32 %305 to i64
  %arrayidx535 = getelementptr inbounds i16*, i16** %304, i64 %idxprom534
  %306 = load i16*, i16** %arrayidx535, align 8
  %307 = load i32, i32* %hv, align 4
  %idxprom536 = sext i32 %307 to i64
  %arrayidx537 = getelementptr inbounds i16, i16* %306, i64 %idxprom536
  %308 = load i16, i16* %arrayidx537, align 2
  %conv538 = sext i16 %308 to i32
  br label %cond.end552

cond.false539:                                    ; preds = %cond.true520
  %309 = load i16****, i16***** %tmp_mv.addr, align 8
  %310 = load i32, i32* %list.addr, align 4
  %idxprom540 = sext i32 %310 to i64
  %arrayidx541 = getelementptr inbounds i16***, i16**** %309, i64 %idxprom540
  %311 = load i16***, i16**** %arrayidx541, align 8
  %pos_x542 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %312 = load i32, i32* %pos_x542, align 4
  %idxprom543 = sext i32 %312 to i64
  %arrayidx544 = getelementptr inbounds i16**, i16*** %311, i64 %idxprom543
  %313 = load i16**, i16*** %arrayidx544, align 8
  %pos_y545 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %314 = load i32, i32* %pos_y545, align 4
  %idxprom546 = sext i32 %314 to i64
  %arrayidx547 = getelementptr inbounds i16*, i16** %313, i64 %idxprom546
  %315 = load i16*, i16** %arrayidx547, align 8
  %316 = load i32, i32* %hv, align 4
  %idxprom548 = sext i32 %316 to i64
  %arrayidx549 = getelementptr inbounds i16, i16* %315, i64 %idxprom548
  %317 = load i16, i16* %arrayidx549, align 2
  %conv550 = sext i16 %317 to i32
  %div551 = sdiv i32 %conv550, 2
  br label %cond.end552

cond.end552:                                      ; preds = %cond.false539, %cond.true527
  %cond553 = phi i32 [ %conv538, %cond.true527 ], [ %div551, %cond.false539 ]
  br label %cond.end555

cond.false554:                                    ; preds = %cond.end516
  br label %cond.end555

cond.end555:                                      ; preds = %cond.false554, %cond.end552
  %cond556 = phi i32 [ %cond553, %cond.end552 ], [ 0, %cond.false554 ]
  store i32 %cond556, i32* %mv_c, align 4
  br label %if.end675

if.else557:                                       ; preds = %if.else433
  %available558 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %318 = load i32, i32* %available558, align 4
  %tobool559 = icmp ne i32 %318, 0
  br i1 %tobool559, label %cond.true560, label %cond.false594

cond.true560:                                     ; preds = %if.else557
  %319 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data561 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %319, i32 0, i32 51
  %320 = load %struct.macroblock*, %struct.macroblock** %mb_data561, align 8
  %mb_addr562 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 1
  %321 = load i32, i32* %mb_addr562, align 4
  %idxprom563 = sext i32 %321 to i64
  %arrayidx564 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %320, i64 %idxprom563
  %mb_field565 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx564, i32 0, i32 22
  %322 = load i32, i32* %mb_field565, align 4
  %tobool566 = icmp ne i32 %322, 0
  br i1 %tobool566, label %cond.true567, label %cond.false580

cond.true567:                                     ; preds = %cond.true560
  %323 = load i16****, i16***** %tmp_mv.addr, align 8
  %324 = load i32, i32* %list.addr, align 4
  %idxprom568 = sext i32 %324 to i64
  %arrayidx569 = getelementptr inbounds i16***, i16**** %323, i64 %idxprom568
  %325 = load i16***, i16**** %arrayidx569, align 8
  %pos_x570 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %326 = load i32, i32* %pos_x570, align 4
  %idxprom571 = sext i32 %326 to i64
  %arrayidx572 = getelementptr inbounds i16**, i16*** %325, i64 %idxprom571
  %327 = load i16**, i16*** %arrayidx572, align 8
  %pos_y573 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %328 = load i32, i32* %pos_y573, align 4
  %idxprom574 = sext i32 %328 to i64
  %arrayidx575 = getelementptr inbounds i16*, i16** %327, i64 %idxprom574
  %329 = load i16*, i16** %arrayidx575, align 8
  %330 = load i32, i32* %hv, align 4
  %idxprom576 = sext i32 %330 to i64
  %arrayidx577 = getelementptr inbounds i16, i16* %329, i64 %idxprom576
  %331 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %331 to i32
  %mul579 = mul nsw i32 %conv578, 2
  br label %cond.end592

cond.false580:                                    ; preds = %cond.true560
  %332 = load i16****, i16***** %tmp_mv.addr, align 8
  %333 = load i32, i32* %list.addr, align 4
  %idxprom581 = sext i32 %333 to i64
  %arrayidx582 = getelementptr inbounds i16***, i16**** %332, i64 %idxprom581
  %334 = load i16***, i16**** %arrayidx582, align 8
  %pos_x583 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %335 = load i32, i32* %pos_x583, align 4
  %idxprom584 = sext i32 %335 to i64
  %arrayidx585 = getelementptr inbounds i16**, i16*** %334, i64 %idxprom584
  %336 = load i16**, i16*** %arrayidx585, align 8
  %pos_y586 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %337 = load i32, i32* %pos_y586, align 4
  %idxprom587 = sext i32 %337 to i64
  %arrayidx588 = getelementptr inbounds i16*, i16** %336, i64 %idxprom587
  %338 = load i16*, i16** %arrayidx588, align 8
  %339 = load i32, i32* %hv, align 4
  %idxprom589 = sext i32 %339 to i64
  %arrayidx590 = getelementptr inbounds i16, i16* %338, i64 %idxprom589
  %340 = load i16, i16* %arrayidx590, align 2
  %conv591 = sext i16 %340 to i32
  br label %cond.end592

cond.end592:                                      ; preds = %cond.false580, %cond.true567
  %cond593 = phi i32 [ %mul579, %cond.true567 ], [ %conv591, %cond.false580 ]
  br label %cond.end595

cond.false594:                                    ; preds = %if.else557
  br label %cond.end595

cond.end595:                                      ; preds = %cond.false594, %cond.end592
  %cond596 = phi i32 [ %cond593, %cond.end592 ], [ 0, %cond.false594 ]
  store i32 %cond596, i32* %mv_a, align 4
  %available597 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %341 = load i32, i32* %available597, align 4
  %tobool598 = icmp ne i32 %341, 0
  br i1 %tobool598, label %cond.true599, label %cond.false633

cond.true599:                                     ; preds = %cond.end595
  %342 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data600 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %342, i32 0, i32 51
  %343 = load %struct.macroblock*, %struct.macroblock** %mb_data600, align 8
  %mb_addr601 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 1
  %344 = load i32, i32* %mb_addr601, align 4
  %idxprom602 = sext i32 %344 to i64
  %arrayidx603 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %343, i64 %idxprom602
  %mb_field604 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx603, i32 0, i32 22
  %345 = load i32, i32* %mb_field604, align 4
  %tobool605 = icmp ne i32 %345, 0
  br i1 %tobool605, label %cond.true606, label %cond.false619

cond.true606:                                     ; preds = %cond.true599
  %346 = load i16****, i16***** %tmp_mv.addr, align 8
  %347 = load i32, i32* %list.addr, align 4
  %idxprom607 = sext i32 %347 to i64
  %arrayidx608 = getelementptr inbounds i16***, i16**** %346, i64 %idxprom607
  %348 = load i16***, i16**** %arrayidx608, align 8
  %pos_x609 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %349 = load i32, i32* %pos_x609, align 4
  %idxprom610 = sext i32 %349 to i64
  %arrayidx611 = getelementptr inbounds i16**, i16*** %348, i64 %idxprom610
  %350 = load i16**, i16*** %arrayidx611, align 8
  %pos_y612 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %351 = load i32, i32* %pos_y612, align 4
  %idxprom613 = sext i32 %351 to i64
  %arrayidx614 = getelementptr inbounds i16*, i16** %350, i64 %idxprom613
  %352 = load i16*, i16** %arrayidx614, align 8
  %353 = load i32, i32* %hv, align 4
  %idxprom615 = sext i32 %353 to i64
  %arrayidx616 = getelementptr inbounds i16, i16* %352, i64 %idxprom615
  %354 = load i16, i16* %arrayidx616, align 2
  %conv617 = sext i16 %354 to i32
  %mul618 = mul nsw i32 %conv617, 2
  br label %cond.end631

cond.false619:                                    ; preds = %cond.true599
  %355 = load i16****, i16***** %tmp_mv.addr, align 8
  %356 = load i32, i32* %list.addr, align 4
  %idxprom620 = sext i32 %356 to i64
  %arrayidx621 = getelementptr inbounds i16***, i16**** %355, i64 %idxprom620
  %357 = load i16***, i16**** %arrayidx621, align 8
  %pos_x622 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %358 = load i32, i32* %pos_x622, align 4
  %idxprom623 = sext i32 %358 to i64
  %arrayidx624 = getelementptr inbounds i16**, i16*** %357, i64 %idxprom623
  %359 = load i16**, i16*** %arrayidx624, align 8
  %pos_y625 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %360 = load i32, i32* %pos_y625, align 4
  %idxprom626 = sext i32 %360 to i64
  %arrayidx627 = getelementptr inbounds i16*, i16** %359, i64 %idxprom626
  %361 = load i16*, i16** %arrayidx627, align 8
  %362 = load i32, i32* %hv, align 4
  %idxprom628 = sext i32 %362 to i64
  %arrayidx629 = getelementptr inbounds i16, i16* %361, i64 %idxprom628
  %363 = load i16, i16* %arrayidx629, align 2
  %conv630 = sext i16 %363 to i32
  br label %cond.end631

cond.end631:                                      ; preds = %cond.false619, %cond.true606
  %cond632 = phi i32 [ %mul618, %cond.true606 ], [ %conv630, %cond.false619 ]
  br label %cond.end634

cond.false633:                                    ; preds = %cond.end595
  br label %cond.end634

cond.end634:                                      ; preds = %cond.false633, %cond.end631
  %cond635 = phi i32 [ %cond632, %cond.end631 ], [ 0, %cond.false633 ]
  store i32 %cond635, i32* %mv_b, align 4
  %available636 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %364 = load i32, i32* %available636, align 4
  %tobool637 = icmp ne i32 %364, 0
  br i1 %tobool637, label %cond.true638, label %cond.false672

cond.true638:                                     ; preds = %cond.end634
  %365 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data639 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %365, i32 0, i32 51
  %366 = load %struct.macroblock*, %struct.macroblock** %mb_data639, align 8
  %mb_addr640 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 1
  %367 = load i32, i32* %mb_addr640, align 4
  %idxprom641 = sext i32 %367 to i64
  %arrayidx642 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %366, i64 %idxprom641
  %mb_field643 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx642, i32 0, i32 22
  %368 = load i32, i32* %mb_field643, align 4
  %tobool644 = icmp ne i32 %368, 0
  br i1 %tobool644, label %cond.true645, label %cond.false658

cond.true645:                                     ; preds = %cond.true638
  %369 = load i16****, i16***** %tmp_mv.addr, align 8
  %370 = load i32, i32* %list.addr, align 4
  %idxprom646 = sext i32 %370 to i64
  %arrayidx647 = getelementptr inbounds i16***, i16**** %369, i64 %idxprom646
  %371 = load i16***, i16**** %arrayidx647, align 8
  %pos_x648 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %372 = load i32, i32* %pos_x648, align 4
  %idxprom649 = sext i32 %372 to i64
  %arrayidx650 = getelementptr inbounds i16**, i16*** %371, i64 %idxprom649
  %373 = load i16**, i16*** %arrayidx650, align 8
  %pos_y651 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %374 = load i32, i32* %pos_y651, align 4
  %idxprom652 = sext i32 %374 to i64
  %arrayidx653 = getelementptr inbounds i16*, i16** %373, i64 %idxprom652
  %375 = load i16*, i16** %arrayidx653, align 8
  %376 = load i32, i32* %hv, align 4
  %idxprom654 = sext i32 %376 to i64
  %arrayidx655 = getelementptr inbounds i16, i16* %375, i64 %idxprom654
  %377 = load i16, i16* %arrayidx655, align 2
  %conv656 = sext i16 %377 to i32
  %mul657 = mul nsw i32 %conv656, 2
  br label %cond.end670

cond.false658:                                    ; preds = %cond.true638
  %378 = load i16****, i16***** %tmp_mv.addr, align 8
  %379 = load i32, i32* %list.addr, align 4
  %idxprom659 = sext i32 %379 to i64
  %arrayidx660 = getelementptr inbounds i16***, i16**** %378, i64 %idxprom659
  %380 = load i16***, i16**** %arrayidx660, align 8
  %pos_x661 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %381 = load i32, i32* %pos_x661, align 4
  %idxprom662 = sext i32 %381 to i64
  %arrayidx663 = getelementptr inbounds i16**, i16*** %380, i64 %idxprom662
  %382 = load i16**, i16*** %arrayidx663, align 8
  %pos_y664 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %383 = load i32, i32* %pos_y664, align 4
  %idxprom665 = sext i32 %383 to i64
  %arrayidx666 = getelementptr inbounds i16*, i16** %382, i64 %idxprom665
  %384 = load i16*, i16** %arrayidx666, align 8
  %385 = load i32, i32* %hv, align 4
  %idxprom667 = sext i32 %385 to i64
  %arrayidx668 = getelementptr inbounds i16, i16* %384, i64 %idxprom667
  %386 = load i16, i16* %arrayidx668, align 2
  %conv669 = sext i16 %386 to i32
  br label %cond.end670

cond.end670:                                      ; preds = %cond.false658, %cond.true645
  %cond671 = phi i32 [ %mul657, %cond.true645 ], [ %conv669, %cond.false658 ]
  br label %cond.end673

cond.false672:                                    ; preds = %cond.end634
  br label %cond.end673

cond.end673:                                      ; preds = %cond.false672, %cond.end670
  %cond674 = phi i32 [ %cond671, %cond.end670 ], [ 0, %cond.false672 ]
  store i32 %cond674, i32* %mv_c, align 4
  br label %if.end675

if.end675:                                        ; preds = %cond.end673, %cond.end555
  br label %if.end676

if.end676:                                        ; preds = %if.end675, %cond.end431
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable677 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 134
  %388 = load i32, i32* %FMEnable677, align 4
  %tobool678 = icmp ne i32 %388, 0
  br i1 %tobool678, label %if.then679, label %if.end812

if.then679:                                       ; preds = %if.end676
  %available680 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 0
  %389 = load i32, i32* %available680, align 4
  %tobool681 = icmp ne i32 %389, 0
  br i1 %tobool681, label %cond.true682, label %cond.false710

cond.true682:                                     ; preds = %if.then679
  %390 = load i32, i32* %list.addr, align 4
  %cmp683 = icmp eq i32 %390, 1
  br i1 %cmp683, label %cond.true685, label %cond.false696

cond.true685:                                     ; preds = %cond.true682
  %391 = load i32*****, i32****** @all_bwmincost, align 8
  %pos_x686 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %392 = load i32, i32* %pos_x686, align 4
  %idxprom687 = sext i32 %392 to i64
  %arrayidx688 = getelementptr inbounds i32****, i32***** %391, i64 %idxprom687
  %393 = load i32****, i32***** %arrayidx688, align 8
  %pos_y689 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %394 = load i32, i32* %pos_y689, align 4
  %idxprom690 = sext i32 %394 to i64
  %arrayidx691 = getelementptr inbounds i32***, i32**** %393, i64 %idxprom690
  %395 = load i32***, i32**** %arrayidx691, align 8
  %arrayidx692 = getelementptr inbounds i32**, i32*** %395, i64 0
  %396 = load i32**, i32*** %arrayidx692, align 8
  %397 = load i32, i32* @FME_blocktype, align 4
  %idxprom693 = sext i32 %397 to i64
  %arrayidx694 = getelementptr inbounds i32*, i32** %396, i64 %idxprom693
  %398 = load i32*, i32** %arrayidx694, align 8
  %arrayidx695 = getelementptr inbounds i32, i32* %398, i64 0
  %399 = load i32, i32* %arrayidx695, align 4
  br label %cond.end708

cond.false696:                                    ; preds = %cond.true682
  %400 = load i32*****, i32****** @all_mincost, align 8
  %pos_x697 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 4
  %401 = load i32, i32* %pos_x697, align 4
  %idxprom698 = sext i32 %401 to i64
  %arrayidx699 = getelementptr inbounds i32****, i32***** %400, i64 %idxprom698
  %402 = load i32****, i32***** %arrayidx699, align 8
  %pos_y700 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_a, i32 0, i32 5
  %403 = load i32, i32* %pos_y700, align 4
  %idxprom701 = sext i32 %403 to i64
  %arrayidx702 = getelementptr inbounds i32***, i32**** %402, i64 %idxprom701
  %404 = load i32***, i32**** %arrayidx702, align 8
  %405 = load i16, i16* %ref_frame.addr, align 2
  %idxprom703 = sext i16 %405 to i64
  %arrayidx704 = getelementptr inbounds i32**, i32*** %404, i64 %idxprom703
  %406 = load i32**, i32*** %arrayidx704, align 8
  %407 = load i32, i32* @FME_blocktype, align 4
  %idxprom705 = sext i32 %407 to i64
  %arrayidx706 = getelementptr inbounds i32*, i32** %406, i64 %idxprom705
  %408 = load i32*, i32** %arrayidx706, align 8
  %arrayidx707 = getelementptr inbounds i32, i32* %408, i64 0
  %409 = load i32, i32* %arrayidx707, align 4
  br label %cond.end708

cond.end708:                                      ; preds = %cond.false696, %cond.true685
  %cond709 = phi i32 [ %399, %cond.true685 ], [ %409, %cond.false696 ]
  br label %cond.end711

cond.false710:                                    ; preds = %if.then679
  br label %cond.end711

cond.end711:                                      ; preds = %cond.false710, %cond.end708
  %cond712 = phi i32 [ %cond709, %cond.end708 ], [ 0, %cond.false710 ]
  store i32 %cond712, i32* %SAD_a, align 4
  %available713 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %410 = load i32, i32* %available713, align 4
  %tobool714 = icmp ne i32 %410, 0
  br i1 %tobool714, label %cond.true715, label %cond.false743

cond.true715:                                     ; preds = %cond.end711
  %411 = load i32, i32* %list.addr, align 4
  %cmp716 = icmp eq i32 %411, 1
  br i1 %cmp716, label %cond.true718, label %cond.false729

cond.true718:                                     ; preds = %cond.true715
  %412 = load i32*****, i32****** @all_bwmincost, align 8
  %pos_x719 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %413 = load i32, i32* %pos_x719, align 4
  %idxprom720 = sext i32 %413 to i64
  %arrayidx721 = getelementptr inbounds i32****, i32***** %412, i64 %idxprom720
  %414 = load i32****, i32***** %arrayidx721, align 8
  %pos_y722 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %415 = load i32, i32* %pos_y722, align 4
  %idxprom723 = sext i32 %415 to i64
  %arrayidx724 = getelementptr inbounds i32***, i32**** %414, i64 %idxprom723
  %416 = load i32***, i32**** %arrayidx724, align 8
  %arrayidx725 = getelementptr inbounds i32**, i32*** %416, i64 0
  %417 = load i32**, i32*** %arrayidx725, align 8
  %418 = load i32, i32* @FME_blocktype, align 4
  %idxprom726 = sext i32 %418 to i64
  %arrayidx727 = getelementptr inbounds i32*, i32** %417, i64 %idxprom726
  %419 = load i32*, i32** %arrayidx727, align 8
  %arrayidx728 = getelementptr inbounds i32, i32* %419, i64 0
  %420 = load i32, i32* %arrayidx728, align 4
  br label %cond.end741

cond.false729:                                    ; preds = %cond.true715
  %421 = load i32*****, i32****** @all_mincost, align 8
  %pos_x730 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 4
  %422 = load i32, i32* %pos_x730, align 4
  %idxprom731 = sext i32 %422 to i64
  %arrayidx732 = getelementptr inbounds i32****, i32***** %421, i64 %idxprom731
  %423 = load i32****, i32***** %arrayidx732, align 8
  %pos_y733 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 5
  %424 = load i32, i32* %pos_y733, align 4
  %idxprom734 = sext i32 %424 to i64
  %arrayidx735 = getelementptr inbounds i32***, i32**** %423, i64 %idxprom734
  %425 = load i32***, i32**** %arrayidx735, align 8
  %426 = load i16, i16* %ref_frame.addr, align 2
  %idxprom736 = sext i16 %426 to i64
  %arrayidx737 = getelementptr inbounds i32**, i32*** %425, i64 %idxprom736
  %427 = load i32**, i32*** %arrayidx737, align 8
  %428 = load i32, i32* @FME_blocktype, align 4
  %idxprom738 = sext i32 %428 to i64
  %arrayidx739 = getelementptr inbounds i32*, i32** %427, i64 %idxprom738
  %429 = load i32*, i32** %arrayidx739, align 8
  %arrayidx740 = getelementptr inbounds i32, i32* %429, i64 0
  %430 = load i32, i32* %arrayidx740, align 4
  br label %cond.end741

cond.end741:                                      ; preds = %cond.false729, %cond.true718
  %cond742 = phi i32 [ %420, %cond.true718 ], [ %430, %cond.false729 ]
  br label %cond.end744

cond.false743:                                    ; preds = %cond.end711
  br label %cond.end744

cond.end744:                                      ; preds = %cond.false743, %cond.end741
  %cond745 = phi i32 [ %cond742, %cond.end741 ], [ 0, %cond.false743 ]
  store i32 %cond745, i32* %SAD_b, align 4
  %available746 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 0
  %431 = load i32, i32* %available746, align 4
  %tobool747 = icmp ne i32 %431, 0
  br i1 %tobool747, label %cond.true748, label %cond.false776

cond.true748:                                     ; preds = %cond.end744
  %432 = load i32, i32* %list.addr, align 4
  %cmp749 = icmp eq i32 %432, 1
  br i1 %cmp749, label %cond.true751, label %cond.false762

cond.true751:                                     ; preds = %cond.true748
  %433 = load i32*****, i32****** @all_bwmincost, align 8
  %pos_x752 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 4
  %434 = load i32, i32* %pos_x752, align 4
  %idxprom753 = sext i32 %434 to i64
  %arrayidx754 = getelementptr inbounds i32****, i32***** %433, i64 %idxprom753
  %435 = load i32****, i32***** %arrayidx754, align 8
  %pos_y755 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 5
  %436 = load i32, i32* %pos_y755, align 4
  %idxprom756 = sext i32 %436 to i64
  %arrayidx757 = getelementptr inbounds i32***, i32**** %435, i64 %idxprom756
  %437 = load i32***, i32**** %arrayidx757, align 8
  %arrayidx758 = getelementptr inbounds i32**, i32*** %437, i64 0
  %438 = load i32**, i32*** %arrayidx758, align 8
  %439 = load i32, i32* @FME_blocktype, align 4
  %idxprom759 = sext i32 %439 to i64
  %arrayidx760 = getelementptr inbounds i32*, i32** %438, i64 %idxprom759
  %440 = load i32*, i32** %arrayidx760, align 8
  %arrayidx761 = getelementptr inbounds i32, i32* %440, i64 0
  %441 = load i32, i32* %arrayidx761, align 4
  br label %cond.end774

cond.false762:                                    ; preds = %cond.true748
  %442 = load i32*****, i32****** @all_mincost, align 8
  %pos_x763 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 4
  %443 = load i32, i32* %pos_x763, align 4
  %idxprom764 = sext i32 %443 to i64
  %arrayidx765 = getelementptr inbounds i32****, i32***** %442, i64 %idxprom764
  %444 = load i32****, i32***** %arrayidx765, align 8
  %pos_y766 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_d, i32 0, i32 5
  %445 = load i32, i32* %pos_y766, align 4
  %idxprom767 = sext i32 %445 to i64
  %arrayidx768 = getelementptr inbounds i32***, i32**** %444, i64 %idxprom767
  %446 = load i32***, i32**** %arrayidx768, align 8
  %447 = load i16, i16* %ref_frame.addr, align 2
  %idxprom769 = sext i16 %447 to i64
  %arrayidx770 = getelementptr inbounds i32**, i32*** %446, i64 %idxprom769
  %448 = load i32**, i32*** %arrayidx770, align 8
  %449 = load i32, i32* @FME_blocktype, align 4
  %idxprom771 = sext i32 %449 to i64
  %arrayidx772 = getelementptr inbounds i32*, i32** %448, i64 %idxprom771
  %450 = load i32*, i32** %arrayidx772, align 8
  %arrayidx773 = getelementptr inbounds i32, i32* %450, i64 0
  %451 = load i32, i32* %arrayidx773, align 4
  br label %cond.end774

cond.end774:                                      ; preds = %cond.false762, %cond.true751
  %cond775 = phi i32 [ %441, %cond.true751 ], [ %451, %cond.false762 ]
  br label %cond.end777

cond.false776:                                    ; preds = %cond.end744
  br label %cond.end777

cond.end777:                                      ; preds = %cond.false776, %cond.end774
  %cond778 = phi i32 [ %cond775, %cond.end774 ], [ 0, %cond.false776 ]
  store i32 %cond778, i32* %SAD_d, align 4
  %available779 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %452 = load i32, i32* %available779, align 4
  %tobool780 = icmp ne i32 %452, 0
  br i1 %tobool780, label %cond.true781, label %cond.false809

cond.true781:                                     ; preds = %cond.end777
  %453 = load i32, i32* %list.addr, align 4
  %cmp782 = icmp eq i32 %453, 1
  br i1 %cmp782, label %cond.true784, label %cond.false795

cond.true784:                                     ; preds = %cond.true781
  %454 = load i32*****, i32****** @all_bwmincost, align 8
  %pos_x785 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %455 = load i32, i32* %pos_x785, align 4
  %idxprom786 = sext i32 %455 to i64
  %arrayidx787 = getelementptr inbounds i32****, i32***** %454, i64 %idxprom786
  %456 = load i32****, i32***** %arrayidx787, align 8
  %pos_y788 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %457 = load i32, i32* %pos_y788, align 4
  %idxprom789 = sext i32 %457 to i64
  %arrayidx790 = getelementptr inbounds i32***, i32**** %456, i64 %idxprom789
  %458 = load i32***, i32**** %arrayidx790, align 8
  %arrayidx791 = getelementptr inbounds i32**, i32*** %458, i64 0
  %459 = load i32**, i32*** %arrayidx791, align 8
  %460 = load i32, i32* @FME_blocktype, align 4
  %idxprom792 = sext i32 %460 to i64
  %arrayidx793 = getelementptr inbounds i32*, i32** %459, i64 %idxprom792
  %461 = load i32*, i32** %arrayidx793, align 8
  %arrayidx794 = getelementptr inbounds i32, i32* %461, i64 0
  %462 = load i32, i32* %arrayidx794, align 4
  br label %cond.end807

cond.false795:                                    ; preds = %cond.true781
  %463 = load i32*****, i32****** @all_mincost, align 8
  %pos_x796 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 4
  %464 = load i32, i32* %pos_x796, align 4
  %idxprom797 = sext i32 %464 to i64
  %arrayidx798 = getelementptr inbounds i32****, i32***** %463, i64 %idxprom797
  %465 = load i32****, i32***** %arrayidx798, align 8
  %pos_y799 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 5
  %466 = load i32, i32* %pos_y799, align 4
  %idxprom800 = sext i32 %466 to i64
  %arrayidx801 = getelementptr inbounds i32***, i32**** %465, i64 %idxprom800
  %467 = load i32***, i32**** %arrayidx801, align 8
  %468 = load i16, i16* %ref_frame.addr, align 2
  %idxprom802 = sext i16 %468 to i64
  %arrayidx803 = getelementptr inbounds i32**, i32*** %467, i64 %idxprom802
  %469 = load i32**, i32*** %arrayidx803, align 8
  %470 = load i32, i32* @FME_blocktype, align 4
  %idxprom804 = sext i32 %470 to i64
  %arrayidx805 = getelementptr inbounds i32*, i32** %469, i64 %idxprom804
  %471 = load i32*, i32** %arrayidx805, align 8
  %arrayidx806 = getelementptr inbounds i32, i32* %471, i64 0
  %472 = load i32, i32* %arrayidx806, align 4
  br label %cond.end807

cond.end807:                                      ; preds = %cond.false795, %cond.true784
  %cond808 = phi i32 [ %462, %cond.true784 ], [ %472, %cond.false795 ]
  br label %cond.end810

cond.false809:                                    ; preds = %cond.end777
  %473 = load i32, i32* %SAD_d, align 4
  br label %cond.end810

cond.end810:                                      ; preds = %cond.false809, %cond.end807
  %cond811 = phi i32 [ %cond808, %cond.end807 ], [ %473, %cond.false809 ]
  store i32 %cond811, i32* %SAD_c, align 4
  br label %if.end812

if.end812:                                        ; preds = %cond.end810, %if.end676
  %474 = load i32, i32* %mvPredType, align 4
  switch i32 %474, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb892
    i32 2, label %sw.bb899
    i32 3, label %sw.bb906
  ]

sw.bb:                                            ; preds = %if.end812
  %available813 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_b, i32 0, i32 0
  %475 = load i32, i32* %available813, align 4
  %tobool814 = icmp ne i32 %475, 0
  br i1 %tobool814, label %if.else825, label %lor.lhs.false815

lor.lhs.false815:                                 ; preds = %sw.bb
  %available816 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %block_c, i32 0, i32 0
  %476 = load i32, i32* %available816, align 4
  %tobool817 = icmp ne i32 %476, 0
  br i1 %tobool817, label %if.else825, label %if.then818

if.then818:                                       ; preds = %lor.lhs.false815
  %477 = load i32, i32* %mv_a, align 4
  store i32 %477, i32* %pred_vec, align 4
  %478 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable819 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %478, i32 0, i32 134
  %479 = load i32, i32* %FMEnable819, align 4
  %tobool820 = icmp ne i32 %479, 0
  br i1 %tobool820, label %if.then821, label %if.end824

if.then821:                                       ; preds = %if.then818
  %480 = load i32, i32* %SAD_a, align 4
  %481 = load i32, i32* %hv, align 4
  %idxprom822 = sext i32 %481 to i64
  %arrayidx823 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom822
  store i32 %480, i32* %arrayidx823, align 4
  br label %if.end824

if.end824:                                        ; preds = %if.then821, %if.then818
  br label %if.end865

if.else825:                                       ; preds = %lor.lhs.false815, %sw.bb
  %482 = load i32, i32* %mv_a, align 4
  %483 = load i32, i32* %mv_b, align 4
  %add826 = add nsw i32 %482, %483
  %484 = load i32, i32* %mv_c, align 4
  %add827 = add nsw i32 %add826, %484
  %485 = load i32, i32* %mv_a, align 4
  %486 = load i32, i32* %mv_b, align 4
  %487 = load i32, i32* %mv_c, align 4
  %cmp828 = icmp slt i32 %486, %487
  br i1 %cmp828, label %cond.true830, label %cond.false831

cond.true830:                                     ; preds = %if.else825
  %488 = load i32, i32* %mv_b, align 4
  br label %cond.end832

cond.false831:                                    ; preds = %if.else825
  %489 = load i32, i32* %mv_c, align 4
  br label %cond.end832

cond.end832:                                      ; preds = %cond.false831, %cond.true830
  %cond833 = phi i32 [ %488, %cond.true830 ], [ %489, %cond.false831 ]
  %cmp834 = icmp slt i32 %485, %cond833
  br i1 %cmp834, label %cond.true836, label %cond.false837

cond.true836:                                     ; preds = %cond.end832
  %490 = load i32, i32* %mv_a, align 4
  br label %cond.end844

cond.false837:                                    ; preds = %cond.end832
  %491 = load i32, i32* %mv_b, align 4
  %492 = load i32, i32* %mv_c, align 4
  %cmp838 = icmp slt i32 %491, %492
  br i1 %cmp838, label %cond.true840, label %cond.false841

cond.true840:                                     ; preds = %cond.false837
  %493 = load i32, i32* %mv_b, align 4
  br label %cond.end842

cond.false841:                                    ; preds = %cond.false837
  %494 = load i32, i32* %mv_c, align 4
  br label %cond.end842

cond.end842:                                      ; preds = %cond.false841, %cond.true840
  %cond843 = phi i32 [ %493, %cond.true840 ], [ %494, %cond.false841 ]
  br label %cond.end844

cond.end844:                                      ; preds = %cond.end842, %cond.true836
  %cond845 = phi i32 [ %490, %cond.true836 ], [ %cond843, %cond.end842 ]
  %sub = sub nsw i32 %add827, %cond845
  %495 = load i32, i32* %mv_a, align 4
  %496 = load i32, i32* %mv_b, align 4
  %497 = load i32, i32* %mv_c, align 4
  %cmp846 = icmp sgt i32 %496, %497
  br i1 %cmp846, label %cond.true848, label %cond.false849

cond.true848:                                     ; preds = %cond.end844
  %498 = load i32, i32* %mv_b, align 4
  br label %cond.end850

cond.false849:                                    ; preds = %cond.end844
  %499 = load i32, i32* %mv_c, align 4
  br label %cond.end850

cond.end850:                                      ; preds = %cond.false849, %cond.true848
  %cond851 = phi i32 [ %498, %cond.true848 ], [ %499, %cond.false849 ]
  %cmp852 = icmp sgt i32 %495, %cond851
  br i1 %cmp852, label %cond.true854, label %cond.false855

cond.true854:                                     ; preds = %cond.end850
  %500 = load i32, i32* %mv_a, align 4
  br label %cond.end862

cond.false855:                                    ; preds = %cond.end850
  %501 = load i32, i32* %mv_b, align 4
  %502 = load i32, i32* %mv_c, align 4
  %cmp856 = icmp sgt i32 %501, %502
  br i1 %cmp856, label %cond.true858, label %cond.false859

cond.true858:                                     ; preds = %cond.false855
  %503 = load i32, i32* %mv_b, align 4
  br label %cond.end860

cond.false859:                                    ; preds = %cond.false855
  %504 = load i32, i32* %mv_c, align 4
  br label %cond.end860

cond.end860:                                      ; preds = %cond.false859, %cond.true858
  %cond861 = phi i32 [ %503, %cond.true858 ], [ %504, %cond.false859 ]
  br label %cond.end862

cond.end862:                                      ; preds = %cond.end860, %cond.true854
  %cond863 = phi i32 [ %500, %cond.true854 ], [ %cond861, %cond.end860 ]
  %sub864 = sub nsw i32 %sub, %cond863
  store i32 %sub864, i32* %pred_vec, align 4
  br label %if.end865

if.end865:                                        ; preds = %cond.end862, %if.end824
  %505 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable866 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %505, i32 0, i32 134
  %506 = load i32, i32* %FMEnable866, align 4
  %tobool867 = icmp ne i32 %506, 0
  br i1 %tobool867, label %if.then868, label %if.end891

if.then868:                                       ; preds = %if.end865
  %507 = load i32, i32* %pred_vec, align 4
  %508 = load i32, i32* %mv_a, align 4
  %cmp869 = icmp eq i32 %507, %508
  br i1 %cmp869, label %land.lhs.true871, label %if.else877

land.lhs.true871:                                 ; preds = %if.then868
  %509 = load i32, i32* %SAD_a, align 4
  %cmp872 = icmp ne i32 %509, 0
  br i1 %cmp872, label %if.then874, label %if.else877

if.then874:                                       ; preds = %land.lhs.true871
  %510 = load i32, i32* %SAD_a, align 4
  %511 = load i32, i32* %hv, align 4
  %idxprom875 = sext i32 %511 to i64
  %arrayidx876 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom875
  store i32 %510, i32* %arrayidx876, align 4
  br label %if.end890

if.else877:                                       ; preds = %land.lhs.true871, %if.then868
  %512 = load i32, i32* %pred_vec, align 4
  %513 = load i32, i32* %mv_b, align 4
  %cmp878 = icmp eq i32 %512, %513
  br i1 %cmp878, label %land.lhs.true880, label %if.else886

land.lhs.true880:                                 ; preds = %if.else877
  %514 = load i32, i32* %SAD_b, align 4
  %cmp881 = icmp ne i32 %514, 0
  br i1 %cmp881, label %if.then883, label %if.else886

if.then883:                                       ; preds = %land.lhs.true880
  %515 = load i32, i32* %SAD_b, align 4
  %516 = load i32, i32* %hv, align 4
  %idxprom884 = sext i32 %516 to i64
  %arrayidx885 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom884
  store i32 %515, i32* %arrayidx885, align 4
  br label %if.end889

if.else886:                                       ; preds = %land.lhs.true880, %if.else877
  %517 = load i32, i32* %SAD_c, align 4
  %518 = load i32, i32* %hv, align 4
  %idxprom887 = sext i32 %518 to i64
  %arrayidx888 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom887
  store i32 %517, i32* %arrayidx888, align 4
  br label %if.end889

if.end889:                                        ; preds = %if.else886, %if.then883
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.then874
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end865
  br label %sw.epilog

sw.bb892:                                         ; preds = %if.end812
  %519 = load i32, i32* %mv_a, align 4
  store i32 %519, i32* %pred_vec, align 4
  %520 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable893 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %520, i32 0, i32 134
  %521 = load i32, i32* %FMEnable893, align 4
  %tobool894 = icmp ne i32 %521, 0
  br i1 %tobool894, label %if.then895, label %if.end898

if.then895:                                       ; preds = %sw.bb892
  %522 = load i32, i32* %SAD_a, align 4
  %523 = load i32, i32* %hv, align 4
  %idxprom896 = sext i32 %523 to i64
  %arrayidx897 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom896
  store i32 %522, i32* %arrayidx897, align 4
  br label %if.end898

if.end898:                                        ; preds = %if.then895, %sw.bb892
  br label %sw.epilog

sw.bb899:                                         ; preds = %if.end812
  %524 = load i32, i32* %mv_b, align 4
  store i32 %524, i32* %pred_vec, align 4
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 134
  %526 = load i32, i32* %FMEnable900, align 4
  %tobool901 = icmp ne i32 %526, 0
  br i1 %tobool901, label %if.then902, label %if.end905

if.then902:                                       ; preds = %sw.bb899
  %527 = load i32, i32* %SAD_b, align 4
  %528 = load i32, i32* %hv, align 4
  %idxprom903 = sext i32 %528 to i64
  %arrayidx904 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom903
  store i32 %527, i32* %arrayidx904, align 4
  br label %if.end905

if.end905:                                        ; preds = %if.then902, %sw.bb899
  br label %sw.epilog

sw.bb906:                                         ; preds = %if.end812
  %529 = load i32, i32* %mv_c, align 4
  store i32 %529, i32* %pred_vec, align 4
  %530 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable907 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %530, i32 0, i32 134
  %531 = load i32, i32* %FMEnable907, align 4
  %tobool908 = icmp ne i32 %531, 0
  br i1 %tobool908, label %if.then909, label %if.end912

if.then909:                                       ; preds = %sw.bb906
  %532 = load i32, i32* %SAD_c, align 4
  %533 = load i32, i32* %hv, align 4
  %idxprom910 = sext i32 %533 to i64
  %arrayidx911 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 %idxprom910
  store i32 %532, i32* %arrayidx911, align 4
  br label %if.end912

if.end912:                                        ; preds = %if.then909, %sw.bb906
  br label %sw.epilog

sw.default:                                       ; preds = %if.end812
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end912, %if.end905, %if.end898, %if.end891
  %534 = load i32, i32* %pred_vec, align 4
  %conv913 = trunc i32 %534 to i16
  %535 = load i16*, i16** %pmv.addr, align 8
  %536 = load i32, i32* %hv, align 4
  %idxprom914 = sext i32 %536 to i64
  %arrayidx915 = getelementptr inbounds i16, i16* %535, i64 %idxprom914
  store i16 %conv913, i16* %arrayidx915, align 2
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog
  %537 = load i32, i32* %hv, align 4
  %inc = add nsw i32 %537, 1
  store i32 %inc, i32* %hv, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %538 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable916 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %538, i32 0, i32 134
  %539 = load i32, i32* %FMEnable916, align 4
  %tobool917 = icmp ne i32 %539, 0
  br i1 %tobool917, label %if.then918, label %if.end929

if.then918:                                       ; preds = %for.end
  %arrayidx919 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 0
  %540 = load i32, i32* %arrayidx919, align 4
  %arrayidx920 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 1
  %541 = load i32, i32* %arrayidx920, align 4
  %cmp921 = icmp sgt i32 %540, %541
  br i1 %cmp921, label %cond.true923, label %cond.false925

cond.true923:                                     ; preds = %if.then918
  %arrayidx924 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 1
  %542 = load i32, i32* %arrayidx924, align 4
  br label %cond.end927

cond.false925:                                    ; preds = %if.then918
  %arrayidx926 = getelementptr inbounds [2 x i32], [2 x i32]* %temp_pred_SAD, i64 0, i64 0
  %543 = load i32, i32* %arrayidx926, align 4
  br label %cond.end927

cond.end927:                                      ; preds = %cond.false925, %cond.true923
  %cond928 = phi i32 [ %542, %cond.true923 ], [ %543, %cond.false925 ]
  store i32 %cond928, i32* @pred_SAD_space, align 4
  br label %if.end929

if.end929:                                        ; preds = %cond.end927, %for.end
  ret void
}

declare dso_local i16* @FastLine16Y_11(i16*, i32, i32, i32, i32) #2

declare dso_local i16* @UMVLine16Y_11(i16*, i32, i32, i32, i32) #2

declare dso_local void @getLuma4x4Neighbour(i32, i32, i32, i32, i32, %struct.pix_pos*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Init_Motion_Search_Module() #0 {
entry:
  %bits = alloca i32, align 4
  %i = alloca i32, align 4
  %imin = alloca i32, align 4
  %imax = alloca i32, align 4
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %byte_abs_range = alloca i32, align 4
  %search_range = alloca i32, align 4
  %number_of_reference_frames = alloca i32, align 4
  %max_search_points = alloca i32, align 4
  %max_ref_bits = alloca i32, align 4
  %max_ref = alloca i32, align 4
  %number_of_subpel_positions = alloca i32, align 4
  %max_mv_bits = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 155
  %1 = load i32, i32* %max_imgpel_value, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 156
  %3 = load i32, i32* %max_imgpel_value_uv, align 8
  %cmp = icmp sgt i32 %1, %3
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 155
  %5 = load i32, i32* %max_imgpel_value1, align 4
  %add = add nsw i32 %5, 1
  %mul = mul nsw i32 %add, 2
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 156
  %7 = load i32, i32* %max_imgpel_value_uv2, align 8
  %add3 = add nsw i32 %7, 1
  %mul4 = mul nsw i32 %add3, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul, %cond.true ], [ %mul4, %cond.false ]
  store i32 %cond, i32* %byte_abs_range, align 4
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range5 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 8
  %9 = load i32, i32* %search_range5, align 8
  store i32 %9, i32* %search_range, align 4
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 9
  %11 = load i32, i32* %max_num_references, align 4
  store i32 %11, i32* %number_of_reference_frames, align 4
  %12 = load i32, i32* %search_range, align 4
  %mul6 = mul nsw i32 2, %12
  %add7 = add nsw i32 %mul6, 1
  %13 = load i32, i32* %search_range, align 4
  %mul8 = mul nsw i32 2, %13
  %add9 = add nsw i32 %mul8, 1
  %mul10 = mul nsw i32 %add7, %add9
  %cmp11 = icmp sgt i32 9, %mul10
  br i1 %cmp11, label %cond.true12, label %cond.false13

cond.true12:                                      ; preds = %cond.end
  br label %cond.end19

cond.false13:                                     ; preds = %cond.end
  %14 = load i32, i32* %search_range, align 4
  %mul14 = mul nsw i32 2, %14
  %add15 = add nsw i32 %mul14, 1
  %15 = load i32, i32* %search_range, align 4
  %mul16 = mul nsw i32 2, %15
  %add17 = add nsw i32 %mul16, 1
  %mul18 = mul nsw i32 %add15, %add17
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false13, %cond.true12
  %cond20 = phi i32 [ 9, %cond.true12 ], [ %mul18, %cond.false13 ]
  store i32 %cond20, i32* %max_search_points, align 4
  %16 = load i32, i32* %number_of_reference_frames, align 4
  %add21 = add nsw i32 %16, 1
  %cmp22 = icmp sgt i32 16, %add21
  br i1 %cmp22, label %cond.true23, label %cond.false24

cond.true23:                                      ; preds = %cond.end19
  br label %cond.end26

cond.false24:                                     ; preds = %cond.end19
  %17 = load i32, i32* %number_of_reference_frames, align 4
  %add25 = add nsw i32 %17, 1
  br label %cond.end26

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i32 [ 16, %cond.true23 ], [ %add25, %cond.false24 ]
  %conv = sitofp i32 %cond27 to double
  %call = call double @log(double %conv) #5
  %call28 = call double @log(double 2.000000e+00) #5
  %div = fdiv double %call, %call28
  %add29 = fadd double %div, 1.000000e-10
  %18 = call double @llvm.floor.f64(double %add29)
  %conv30 = fptosi double %18 to i32
  %mul31 = mul nsw i32 2, %conv30
  %add32 = add nsw i32 1, %mul31
  store i32 %add32, i32* %max_ref_bits, align 4
  %19 = load i32, i32* %max_ref_bits, align 4
  %shr = ashr i32 %19, 1
  %add33 = add nsw i32 %shr, 1
  %shl = shl i32 1, %add33
  %sub = sub nsw i32 %shl, 1
  store i32 %sub, i32* %max_ref, align 4
  %20 = load i32, i32* %search_range, align 4
  %mul34 = mul nsw i32 2, %20
  %add35 = add nsw i32 %mul34, 3
  %mul36 = mul nsw i32 4, %add35
  store i32 %mul36, i32* %number_of_subpel_positions, align 4
  %21 = load i32, i32* %number_of_subpel_positions, align 4
  %add37 = add nsw i32 %21, 1
  %conv38 = sitofp i32 %add37 to double
  %call39 = call double @log(double %conv38) #5
  %call40 = call double @log(double 2.000000e+00) #5
  %div41 = fdiv double %call39, %call40
  %add42 = fadd double %div41, 1.000000e-10
  %22 = call double @llvm.ceil.f64(double %add42)
  %conv43 = fptosi double %22 to i32
  %mul44 = mul nsw i32 2, %conv43
  %add45 = add nsw i32 3, %mul44
  store i32 %add45, i32* %max_mv_bits, align 4
  %23 = load i32, i32* %max_mv_bits, align 4
  %shr46 = ashr i32 %23, 1
  %shl47 = shl i32 1, %shr46
  %sub48 = sub nsw i32 %shl47, 1
  store i32 %sub48, i32* @max_mvd, align 4
  %24 = load i32, i32* %max_search_points, align 4
  %conv49 = sext i32 %24 to i64
  %call50 = call noalias i8* @calloc(i64 %conv49, i64 4) #5
  %25 = bitcast i8* %call50 to i32*
  store i32* %25, i32** @spiral_search_x, align 8
  %cmp51 = icmp eq i32* %25, null
  br i1 %cmp51, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end26
  call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end26
  %26 = load i32, i32* %max_search_points, align 4
  %conv53 = sext i32 %26 to i64
  %call54 = call noalias i8* @calloc(i64 %conv53, i64 4) #5
  %27 = bitcast i8* %call54 to i32*
  store i32* %27, i32** @spiral_search_y, align 8
  %cmp55 = icmp eq i32* %27, null
  br i1 %cmp55, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.end
  call void @no_mem_exit(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i64 0, i64 0))
  br label %if.end58

if.end58:                                         ; preds = %if.then57, %if.end
  %28 = load i32, i32* @max_mvd, align 4
  %mul59 = mul nsw i32 2, %28
  %add60 = add nsw i32 %mul59, 1
  %conv61 = sext i32 %add60 to i64
  %call62 = call noalias i8* @calloc(i64 %conv61, i64 4) #5
  %29 = bitcast i8* %call62 to i32*
  store i32* %29, i32** @mvbits, align 8
  %cmp63 = icmp eq i32* %29, null
  br i1 %cmp63, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end58
  call void @no_mem_exit(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0))
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.end58
  %30 = load i32, i32* %max_ref, align 4
  %conv67 = sext i32 %30 to i64
  %call68 = call noalias i8* @calloc(i64 %conv67, i64 4) #5
  %31 = bitcast i8* %call68 to i32*
  store i32* %31, i32** @refbits, align 8
  %cmp69 = icmp eq i32* %31, null
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end66
  call void @no_mem_exit(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0))
  br label %if.end72

if.end72:                                         ; preds = %if.then71, %if.end66
  %32 = load i32, i32* %byte_abs_range, align 4
  %conv73 = sext i32 %32 to i64
  %call74 = call noalias i8* @calloc(i64 %conv73, i64 4) #5
  %33 = bitcast i8* %call74 to i32*
  store i32* %33, i32** @byte_abs, align 8
  %cmp75 = icmp eq i32* %33, null
  br i1 %cmp75, label %if.then77, label %if.end78

if.then77:                                        ; preds = %if.end72
  call void @no_mem_exit(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10, i64 0, i64 0))
  br label %if.end78

if.end78:                                         ; preds = %if.then77, %if.end72
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_num_references79 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 9
  %35 = load i32, i32* %max_num_references79, align 4
  %add80 = add nsw i32 %35, 1
  %call81 = call i32 @get_mem4Dint(i32***** @motion_cost, i32 8, i32 2, i32 %add80, i32 4)
  %36 = load i32, i32* @max_mvd, align 4
  %37 = load i32*, i32** @mvbits, align 8
  %idx.ext = sext i32 %36 to i64
  %add.ptr = getelementptr inbounds i32, i32* %37, i64 %idx.ext
  store i32* %add.ptr, i32** @mvbits, align 8
  %38 = load i32, i32* %byte_abs_range, align 4
  %div82 = sdiv i32 %38, 2
  %39 = load i32*, i32** @byte_abs, align 8
  %idx.ext83 = sext i32 %div82 to i64
  %add.ptr84 = getelementptr inbounds i32, i32* %39, i64 %idx.ext83
  store i32* %add.ptr84, i32** @byte_abs, align 8
  %40 = load i32*, i32** @mvbits, align 8
  %arrayidx = getelementptr inbounds i32, i32* %40, i64 0
  store i32 1, i32* %arrayidx, align 4
  store i32 3, i32* %bits, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc98, %if.end78
  %41 = load i32, i32* %bits, align 4
  %42 = load i32, i32* %max_mv_bits, align 4
  %cmp85 = icmp sle i32 %41, %42
  br i1 %cmp85, label %for.body, label %for.end100

for.body:                                         ; preds = %for.cond
  %43 = load i32, i32* %bits, align 4
  %shr87 = ashr i32 %43, 1
  %shl88 = shl i32 1, %shr87
  store i32 %shl88, i32* %imax, align 4
  %44 = load i32, i32* %imax, align 4
  %shr89 = ashr i32 %44, 1
  store i32 %shr89, i32* %imin, align 4
  %45 = load i32, i32* %imin, align 4
  store i32 %45, i32* %i, align 4
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc, %for.body
  %46 = load i32, i32* %i, align 4
  %47 = load i32, i32* %imax, align 4
  %cmp91 = icmp slt i32 %46, %47
  br i1 %cmp91, label %for.body93, label %for.end

for.body93:                                       ; preds = %for.cond90
  %48 = load i32, i32* %bits, align 4
  %49 = load i32*, i32** @mvbits, align 8
  %50 = load i32, i32* %i, align 4
  %idxprom = sext i32 %50 to i64
  %arrayidx94 = getelementptr inbounds i32, i32* %49, i64 %idxprom
  store i32 %48, i32* %arrayidx94, align 4
  %51 = load i32*, i32** @mvbits, align 8
  %52 = load i32, i32* %i, align 4
  %sub95 = sub nsw i32 0, %52
  %idxprom96 = sext i32 %sub95 to i64
  %arrayidx97 = getelementptr inbounds i32, i32* %51, i64 %idxprom96
  store i32 %48, i32* %arrayidx97, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body93
  %53 = load i32, i32* %i, align 4
  %inc = add nsw i32 %53, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond90

for.end:                                          ; preds = %for.cond90
  br label %for.inc98

for.inc98:                                        ; preds = %for.end
  %54 = load i32, i32* %bits, align 4
  %add99 = add nsw i32 %54, 2
  store i32 %add99, i32* %bits, align 4
  br label %for.cond

for.end100:                                       ; preds = %for.cond
  %55 = load i32*, i32** @refbits, align 8
  %arrayidx101 = getelementptr inbounds i32, i32* %55, i64 0
  store i32 1, i32* %arrayidx101, align 4
  store i32 3, i32* %bits, align 4
  br label %for.cond102

for.cond102:                                      ; preds = %for.inc120, %for.end100
  %56 = load i32, i32* %bits, align 4
  %57 = load i32, i32* %max_ref_bits, align 4
  %cmp103 = icmp sle i32 %56, %57
  br i1 %cmp103, label %for.body105, label %for.end122

for.body105:                                      ; preds = %for.cond102
  %58 = load i32, i32* %bits, align 4
  %shr106 = ashr i32 %58, 1
  %add107 = add nsw i32 %shr106, 1
  %shl108 = shl i32 1, %add107
  %sub109 = sub nsw i32 %shl108, 1
  store i32 %sub109, i32* %imax, align 4
  %59 = load i32, i32* %imax, align 4
  %shr110 = ashr i32 %59, 1
  store i32 %shr110, i32* %imin, align 4
  %60 = load i32, i32* %imin, align 4
  store i32 %60, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc117, %for.body105
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* %imax, align 4
  %cmp112 = icmp slt i32 %61, %62
  br i1 %cmp112, label %for.body114, label %for.end119

for.body114:                                      ; preds = %for.cond111
  %63 = load i32, i32* %bits, align 4
  %64 = load i32*, i32** @refbits, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %65 to i64
  %arrayidx116 = getelementptr inbounds i32, i32* %64, i64 %idxprom115
  store i32 %63, i32* %arrayidx116, align 4
  br label %for.inc117

for.inc117:                                       ; preds = %for.body114
  %66 = load i32, i32* %i, align 4
  %inc118 = add nsw i32 %66, 1
  store i32 %inc118, i32* %i, align 4
  br label %for.cond111

for.end119:                                       ; preds = %for.cond111
  br label %for.inc120

for.inc120:                                       ; preds = %for.end119
  %67 = load i32, i32* %bits, align 4
  %add121 = add nsw i32 %67, 2
  store i32 %add121, i32* %bits, align 4
  br label %for.cond102

for.end122:                                       ; preds = %for.cond102
  %68 = load i32*, i32** @byte_abs, align 8
  %arrayidx123 = getelementptr inbounds i32, i32* %68, i64 0
  store i32 0, i32* %arrayidx123, align 4
  store i32 1, i32* %i, align 4
  br label %for.cond124

for.cond124:                                      ; preds = %for.inc134, %for.end122
  %69 = load i32, i32* %i, align 4
  %70 = load i32, i32* %byte_abs_range, align 4
  %div125 = sdiv i32 %70, 2
  %cmp126 = icmp slt i32 %69, %div125
  br i1 %cmp126, label %for.body128, label %for.end136

for.body128:                                      ; preds = %for.cond124
  %71 = load i32, i32* %i, align 4
  %72 = load i32*, i32** @byte_abs, align 8
  %73 = load i32, i32* %i, align 4
  %sub129 = sub nsw i32 0, %73
  %idxprom130 = sext i32 %sub129 to i64
  %arrayidx131 = getelementptr inbounds i32, i32* %72, i64 %idxprom130
  store i32 %71, i32* %arrayidx131, align 4
  %74 = load i32*, i32** @byte_abs, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom132 = sext i32 %75 to i64
  %arrayidx133 = getelementptr inbounds i32, i32* %74, i64 %idxprom132
  store i32 %71, i32* %arrayidx133, align 4
  br label %for.inc134

for.inc134:                                       ; preds = %for.body128
  %76 = load i32, i32* %i, align 4
  %inc135 = add nsw i32 %76, 1
  store i32 %inc135, i32* %i, align 4
  br label %for.cond124

for.end136:                                       ; preds = %for.cond124
  %77 = load i32*, i32** @spiral_search_y, align 8
  %arrayidx137 = getelementptr inbounds i32, i32* %77, i64 0
  store i32 0, i32* %arrayidx137, align 4
  %78 = load i32*, i32** @spiral_search_x, align 8
  %arrayidx138 = getelementptr inbounds i32, i32* %78, i64 0
  store i32 0, i32* %arrayidx138, align 4
  store i32 1, i32* %k, align 4
  store i32 1, i32* %l, align 4
  br label %for.cond139

for.cond139:                                      ; preds = %for.inc188, %for.end136
  %79 = load i32, i32* %l, align 4
  %80 = load i32, i32* %search_range, align 4
  %cmp140 = icmp sgt i32 1, %80
  br i1 %cmp140, label %cond.true142, label %cond.false143

cond.true142:                                     ; preds = %for.cond139
  br label %cond.end144

cond.false143:                                    ; preds = %for.cond139
  %81 = load i32, i32* %search_range, align 4
  br label %cond.end144

cond.end144:                                      ; preds = %cond.false143, %cond.true142
  %cond145 = phi i32 [ 1, %cond.true142 ], [ %81, %cond.false143 ]
  %cmp146 = icmp sle i32 %79, %cond145
  br i1 %cmp146, label %for.body148, label %for.end190

for.body148:                                      ; preds = %cond.end144
  %82 = load i32, i32* %l, align 4
  %sub149 = sub nsw i32 0, %82
  %add150 = add nsw i32 %sub149, 1
  store i32 %add150, i32* %i, align 4
  br label %for.cond151

for.cond151:                                      ; preds = %for.inc166, %for.body148
  %83 = load i32, i32* %i, align 4
  %84 = load i32, i32* %l, align 4
  %cmp152 = icmp slt i32 %83, %84
  br i1 %cmp152, label %for.body154, label %for.end168

for.body154:                                      ; preds = %for.cond151
  %85 = load i32, i32* %i, align 4
  %86 = load i32*, i32** @spiral_search_x, align 8
  %87 = load i32, i32* %k, align 4
  %idxprom155 = sext i32 %87 to i64
  %arrayidx156 = getelementptr inbounds i32, i32* %86, i64 %idxprom155
  store i32 %85, i32* %arrayidx156, align 4
  %88 = load i32, i32* %l, align 4
  %sub157 = sub nsw i32 0, %88
  %89 = load i32*, i32** @spiral_search_y, align 8
  %90 = load i32, i32* %k, align 4
  %inc158 = add nsw i32 %90, 1
  store i32 %inc158, i32* %k, align 4
  %idxprom159 = sext i32 %90 to i64
  %arrayidx160 = getelementptr inbounds i32, i32* %89, i64 %idxprom159
  store i32 %sub157, i32* %arrayidx160, align 4
  %91 = load i32, i32* %i, align 4
  %92 = load i32*, i32** @spiral_search_x, align 8
  %93 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds i32, i32* %92, i64 %idxprom161
  store i32 %91, i32* %arrayidx162, align 4
  %94 = load i32, i32* %l, align 4
  %95 = load i32*, i32** @spiral_search_y, align 8
  %96 = load i32, i32* %k, align 4
  %inc163 = add nsw i32 %96, 1
  store i32 %inc163, i32* %k, align 4
  %idxprom164 = sext i32 %96 to i64
  %arrayidx165 = getelementptr inbounds i32, i32* %95, i64 %idxprom164
  store i32 %94, i32* %arrayidx165, align 4
  br label %for.inc166

for.inc166:                                       ; preds = %for.body154
  %97 = load i32, i32* %i, align 4
  %inc167 = add nsw i32 %97, 1
  store i32 %inc167, i32* %i, align 4
  br label %for.cond151

for.end168:                                       ; preds = %for.cond151
  %98 = load i32, i32* %l, align 4
  %sub169 = sub nsw i32 0, %98
  store i32 %sub169, i32* %i, align 4
  br label %for.cond170

for.cond170:                                      ; preds = %for.inc185, %for.end168
  %99 = load i32, i32* %i, align 4
  %100 = load i32, i32* %l, align 4
  %cmp171 = icmp sle i32 %99, %100
  br i1 %cmp171, label %for.body173, label %for.end187

for.body173:                                      ; preds = %for.cond170
  %101 = load i32, i32* %l, align 4
  %sub174 = sub nsw i32 0, %101
  %102 = load i32*, i32** @spiral_search_x, align 8
  %103 = load i32, i32* %k, align 4
  %idxprom175 = sext i32 %103 to i64
  %arrayidx176 = getelementptr inbounds i32, i32* %102, i64 %idxprom175
  store i32 %sub174, i32* %arrayidx176, align 4
  %104 = load i32, i32* %i, align 4
  %105 = load i32*, i32** @spiral_search_y, align 8
  %106 = load i32, i32* %k, align 4
  %inc177 = add nsw i32 %106, 1
  store i32 %inc177, i32* %k, align 4
  %idxprom178 = sext i32 %106 to i64
  %arrayidx179 = getelementptr inbounds i32, i32* %105, i64 %idxprom178
  store i32 %104, i32* %arrayidx179, align 4
  %107 = load i32, i32* %l, align 4
  %108 = load i32*, i32** @spiral_search_x, align 8
  %109 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %109 to i64
  %arrayidx181 = getelementptr inbounds i32, i32* %108, i64 %idxprom180
  store i32 %107, i32* %arrayidx181, align 4
  %110 = load i32, i32* %i, align 4
  %111 = load i32*, i32** @spiral_search_y, align 8
  %112 = load i32, i32* %k, align 4
  %inc182 = add nsw i32 %112, 1
  store i32 %inc182, i32* %k, align 4
  %idxprom183 = sext i32 %112 to i64
  %arrayidx184 = getelementptr inbounds i32, i32* %111, i64 %idxprom183
  store i32 %110, i32* %arrayidx184, align 4
  br label %for.inc185

for.inc185:                                       ; preds = %for.body173
  %113 = load i32, i32* %i, align 4
  %inc186 = add nsw i32 %113, 1
  store i32 %inc186, i32* %i, align 4
  br label %for.cond170

for.end187:                                       ; preds = %for.cond170
  br label %for.inc188

for.inc188:                                       ; preds = %for.end187
  %114 = load i32, i32* %l, align 4
  %inc189 = add nsw i32 %114, 1
  store i32 %inc189, i32* %l, align 4
  br label %for.cond139

for.end190:                                       ; preds = %cond.end144
  %115 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %115, i32 0, i32 134
  %116 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %116, 0
  br i1 %tobool, label %if.end192, label %if.then191

if.then191:                                       ; preds = %for.end190
  call void @InitializeFastFullIntegerSearch()
  br label %if.end192

if.end192:                                        ; preds = %if.then191, %for.end190
  ret void
}

; Function Attrs: nounwind
declare dso_local double @log(double) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #4

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #1

declare dso_local i32 @get_mem4Dint(i32*****, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Clear_Motion_Search_Module() #0 {
entry:
  %0 = load i32, i32* @max_mvd, align 4
  %1 = load i32*, i32** @mvbits, align 8
  %idx.ext = sext i32 %0 to i64
  %idx.neg = sub i64 0, %idx.ext
  %add.ptr = getelementptr inbounds i32, i32* %1, i64 %idx.neg
  store i32* %add.ptr, i32** @mvbits, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 155
  %3 = load i32, i32* %max_imgpel_value, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 156
  %5 = load i32, i32* %max_imgpel_value_uv, align 8
  %cmp = icmp sgt i32 %3, %5
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 155
  %7 = load i32, i32* %max_imgpel_value1, align 4
  %add = add nsw i32 %7, 1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value_uv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 156
  %9 = load i32, i32* %max_imgpel_value_uv2, align 8
  %add3 = add nsw i32 %9, 1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ %add3, %cond.false ]
  %10 = load i32*, i32** @byte_abs, align 8
  %idx.ext4 = sext i32 %cond to i64
  %idx.neg5 = sub i64 0, %idx.ext4
  %add.ptr6 = getelementptr inbounds i32, i32* %10, i64 %idx.neg5
  store i32* %add.ptr6, i32** @byte_abs, align 8
  %11 = load i32*, i32** @spiral_search_x, align 8
  %12 = bitcast i32* %11 to i8*
  call void @free(i8* %12) #5
  %13 = load i32*, i32** @spiral_search_y, align 8
  %14 = bitcast i32* %13 to i8*
  call void @free(i8* %14) #5
  %15 = load i32*, i32** @mvbits, align 8
  %16 = bitcast i32* %15 to i8*
  call void @free(i8* %16) #5
  %17 = load i32*, i32** @refbits, align 8
  %18 = bitcast i32* %17 to i8*
  call void @free(i8* %18) #5
  %19 = load i32*, i32** @byte_abs, align 8
  %20 = bitcast i32* %19 to i8*
  call void @free(i8* %20) #5
  %21 = load i32****, i32***** @motion_cost, align 8
  call void @free_mem4Dint(i32**** %21, i32 8, i32 2)
  %22 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %22, i32 0, i32 134
  %23 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %23, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  call void @ClearFastFullIntegerSearch()
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  ret void
}

declare dso_local void @free_mem4Dint(i32****, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @FullPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %search_range.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pos = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %y = alloca i32, align 4
  %x4 = alloca i32, align 4
  %mcost = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref_line = alloca i16*, align 8
  %get_ref_line = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %list_offset = alloca i32, align 4
  %ref_pic = alloca i16*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_x4 = alloca i32, align 4
  %pred_x = alloca i32, align 4
  %pred_y = alloca i32, align 4
  %center_x = alloca i32, align 4
  %center_y = alloca i32, align 4
  %check_for_00 = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i32 %search_range, i32* %search_range.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 90
  %1 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 22
  %6 = load i32, i32* %mb_field, align 4
  %tobool1 = icmp ne i32 %6, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 3
  %8 = load i32, i32* %current_mb_nr2, align 4
  %rem = srem i32 %8, 2
  %tobool3 = icmp ne i32 %rem, 0
  %9 = zext i1 %tobool3 to i64
  %cond = select i1 %tobool3, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond4, i32* %list_offset, align 4
  %10 = load i32, i32* %list.addr, align 4
  %11 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %10, %11
  %idxprom5 = sext i32 %add to i64
  %arrayidx6 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom5
  %12 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx6, align 8
  %13 = load i16, i16* %ref.addr, align 2
  %idxprom7 = sext i16 %13 to i64
  %arrayidx8 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %12, i64 %idxprom7
  %14 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx8, align 8
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %14, i32 0, i32 26
  %15 = load i16*, i16** %imgY_11, align 8
  store i16* %15, i16** %ref_pic, align 8
  %16 = load i32, i32* %list.addr, align 4
  %17 = load i32, i32* %list_offset, align 4
  %add9 = add nsw i32 %16, %17
  %idxprom10 = sext i32 %add9 to i64
  %arrayidx11 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom10
  %18 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx11, align 8
  %19 = load i16, i16* %ref.addr, align 2
  %idxprom12 = sext i16 %19 to i64
  %arrayidx13 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %18, i64 %idxprom12
  %20 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx13, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %20, i32 0, i32 18
  %21 = load i32, i32* %size_x, align 8
  store i32 %21, i32* %img_width, align 4
  %22 = load i32, i32* %list.addr, align 4
  %23 = load i32, i32* %list_offset, align 4
  %add14 = add nsw i32 %22, %23
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom15
  %24 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx16, align 8
  %25 = load i16, i16* %ref.addr, align 2
  %idxprom17 = sext i16 %25 to i64
  %arrayidx18 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %24, i64 %idxprom17
  %26 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx18, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i32 0, i32 19
  %27 = load i32, i32* %size_y, align 4
  store i32 %27, i32* %img_height, align 4
  store i32 0, i32* %best_pos, align 4
  %28 = load i32, i32* %search_range.addr, align 4
  %mul = mul nsw i32 2, %28
  %add19 = add nsw i32 %mul, 1
  %29 = load i32, i32* %search_range.addr, align 4
  %mul20 = mul nsw i32 2, %29
  %add21 = add nsw i32 %mul20, 1
  %mul22 = mul nsw i32 %add19, %add21
  store i32 %mul22, i32* %max_pos, align 4
  %30 = load double, double* %lambda.addr, align 8
  %mul23 = fmul double 6.553600e+04, %30
  %add24 = fadd double %mul23, 5.000000e-01
  %conv = fptosi double %add24 to i32
  store i32 %conv, i32* %lambda_factor, align 4
  %31 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %31, i32 0, i32 20
  %32 = load i32, i32* %blocktype.addr, align 4
  %idxprom25 = sext i32 %32 to i64
  %arrayidx26 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom25
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx26, i64 0, i64 1
  %33 = load i32, i32* %arrayidx27, align 4
  store i32 %33, i32* %blocksize_y, align 4
  %34 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %34, i32 0, i32 20
  %35 = load i32, i32* %blocktype.addr, align 4
  %idxprom29 = sext i32 %35 to i64
  %arrayidx30 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size28, i64 0, i64 %idxprom29
  %arrayidx31 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx30, i64 0, i64 0
  %36 = load i32, i32* %arrayidx31, align 8
  store i32 %36, i32* %blocksize_x, align 4
  %37 = load i32, i32* %blocksize_x, align 4
  %shr = ashr i32 %37, 2
  store i32 %shr, i32* %blocksize_x4, align 4
  %38 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %38, 2
  %39 = load i16, i16* %pred_mv_x.addr, align 2
  %conv32 = sext i16 %39 to i32
  %add33 = add nsw i32 %shl, %conv32
  store i32 %add33, i32* %pred_x, align 4
  %40 = load i32, i32* %pic_pix_y.addr, align 4
  %shl34 = shl i32 %40, 2
  %41 = load i16, i16* %pred_mv_y.addr, align 2
  %conv35 = sext i16 %41 to i32
  %add36 = add nsw i32 %shl34, %conv35
  store i32 %add36, i32* %pred_y, align 4
  %42 = load i32, i32* %pic_pix_x.addr, align 4
  %43 = load i16*, i16** %mv_x.addr, align 8
  %44 = load i16, i16* %43, align 2
  %conv37 = sext i16 %44 to i32
  %add38 = add nsw i32 %42, %conv37
  store i32 %add38, i32* %center_x, align 4
  %45 = load i32, i32* %pic_pix_y.addr, align 4
  %46 = load i16*, i16** %mv_y.addr, align 8
  %47 = load i16, i16* %46, align 2
  %conv39 = sext i16 %47 to i32
  %add40 = add nsw i32 %45, %conv39
  store i32 %add40, i32* %center_y, align 4
  %48 = load i32, i32* %blocktype.addr, align 4
  %cmp = icmp eq i32 %48, 1
  br i1 %cmp, label %land.lhs.true42, label %land.end

land.lhs.true42:                                  ; preds = %cond.end
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 85
  %50 = load i32, i32* %rdopt, align 8
  %tobool43 = icmp ne i32 %50, 0
  br i1 %tobool43, label %land.end, label %land.lhs.true44

land.lhs.true44:                                  ; preds = %land.lhs.true42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 6
  %52 = load i32, i32* %type, align 8
  %cmp45 = icmp ne i32 %52, 1
  br i1 %cmp45, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true44
  %53 = load i16, i16* %ref.addr, align 2
  %conv47 = sext i16 %53 to i32
  %cmp48 = icmp eq i32 %conv47, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true44, %land.lhs.true42, %cond.end
  %54 = phi i1 [ false, %land.lhs.true44 ], [ false, %land.lhs.true42 ], [ false, %cond.end ], [ %cmp48, %land.rhs ]
  %land.ext = zext i1 %54 to i32
  store i32 %land.ext, i32* %check_for_00, align 4
  %55 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %55, i32 0, i32 19
  %56 = load i32, i32* %weighted_pred_flag, align 8
  %tobool50 = icmp ne i32 %56, 0
  br i1 %tobool50, label %land.lhs.true51, label %lor.rhs

land.lhs.true51:                                  ; preds = %land.end
  %57 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %57, i32 0, i32 6
  %58 = load i32, i32* %type52, align 8
  %cmp53 = icmp eq i32 %58, 0
  br i1 %cmp53, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true51
  %59 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type55 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %59, i32 0, i32 6
  %60 = load i32, i32* %type55, align 8
  %cmp56 = icmp eq i32 %60, 3
  br i1 %cmp56, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %land.end
  %61 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %61, i32 0, i32 20
  %62 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool58 = icmp ne i32 %62, 0
  br i1 %tobool58, label %land.rhs59, label %land.end63

land.rhs59:                                       ; preds = %lor.rhs
  %63 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type60 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %63, i32 0, i32 6
  %64 = load i32, i32* %type60, align 8
  %cmp61 = icmp eq i32 %64, 1
  br label %land.end63

land.end63:                                       ; preds = %land.rhs59, %lor.rhs
  %65 = phi i1 [ false, %lor.rhs ], [ %cmp61, %land.rhs59 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end63, %lor.lhs.false, %land.lhs.true51
  %66 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true51 ], [ %65, %land.end63 ]
  %lor.ext = zext i1 %66 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %67 = load i32, i32* %apply_weights, align 4
  %tobool65 = icmp ne i32 %67, 0
  br i1 %tobool65, label %land.lhs.true66, label %if.else

land.lhs.true66:                                  ; preds = %lor.end
  %68 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %68, i32 0, i32 48
  %69 = load i32, i32* %UseWeightedReferenceME, align 4
  %tobool67 = icmp ne i32 %69, 0
  br i1 %tobool67, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true66
  %70 = load i32, i32* %list.addr, align 4
  %71 = load i32, i32* %list_offset, align 4
  %add68 = add nsw i32 %70, %71
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom69
  %72 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx70, align 8
  %73 = load i16, i16* %ref.addr, align 2
  %idxprom71 = sext i16 %73 to i64
  %arrayidx72 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %72, i64 %idxprom71
  %74 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx72, align 8
  %imgY_11_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %74, i32 0, i32 27
  %75 = load i16*, i16** %imgY_11_w, align 8
  store i16* %75, i16** %ref_pic, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true66, %lor.end
  %76 = load i32, i32* %list.addr, align 4
  %77 = load i32, i32* %list_offset, align 4
  %add73 = add nsw i32 %76, %77
  %idxprom74 = sext i32 %add73 to i64
  %arrayidx75 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom74
  %78 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx75, align 8
  %79 = load i16, i16* %ref.addr, align 2
  %idxprom76 = sext i16 %79 to i64
  %arrayidx77 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %78, i64 %idxprom76
  %80 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx77, align 8
  %imgY_1178 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %80, i32 0, i32 26
  %81 = load i16*, i16** %imgY_1178, align 8
  store i16* %81, i16** %ref_pic, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %82 = load i32, i32* %center_x, align 4
  %83 = load i32, i32* %search_range.addr, align 4
  %cmp79 = icmp sgt i32 %82, %83
  br i1 %cmp79, label %land.lhs.true81, label %if.else96

land.lhs.true81:                                  ; preds = %if.end
  %84 = load i32, i32* %center_x, align 4
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 13
  %86 = load i32, i32* %width, align 4
  %sub = sub nsw i32 %86, 1
  %87 = load i32, i32* %search_range.addr, align 4
  %sub82 = sub nsw i32 %sub, %87
  %88 = load i32, i32* %blocksize_x, align 4
  %sub83 = sub nsw i32 %sub82, %88
  %cmp84 = icmp slt i32 %84, %sub83
  br i1 %cmp84, label %land.lhs.true86, label %if.else96

land.lhs.true86:                                  ; preds = %land.lhs.true81
  %89 = load i32, i32* %center_y, align 4
  %90 = load i32, i32* %search_range.addr, align 4
  %cmp87 = icmp sgt i32 %89, %90
  br i1 %cmp87, label %land.lhs.true89, label %if.else96

land.lhs.true89:                                  ; preds = %land.lhs.true86
  %91 = load i32, i32* %center_y, align 4
  %92 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %92, i32 0, i32 15
  %93 = load i32, i32* %height, align 4
  %sub90 = sub nsw i32 %93, 1
  %94 = load i32, i32* %search_range.addr, align 4
  %sub91 = sub nsw i32 %sub90, %94
  %95 = load i32, i32* %blocksize_y, align 4
  %sub92 = sub nsw i32 %sub91, %95
  %cmp93 = icmp slt i32 %91, %sub92
  br i1 %cmp93, label %if.then95, label %if.else96

if.then95:                                        ; preds = %land.lhs.true89
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  br label %if.end97

if.else96:                                        ; preds = %land.lhs.true89, %land.lhs.true86, %land.lhs.true81, %if.end
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc186, %if.end97
  %96 = load i32, i32* %pos, align 4
  %97 = load i32, i32* %max_pos, align 4
  %cmp98 = icmp slt i32 %96, %97
  br i1 %cmp98, label %for.body, label %for.end188

for.body:                                         ; preds = %for.cond
  %98 = load i32, i32* %center_x, align 4
  %99 = load i32*, i32** @spiral_search_x, align 8
  %100 = load i32, i32* %pos, align 4
  %idxprom100 = sext i32 %100 to i64
  %arrayidx101 = getelementptr inbounds i32, i32* %99, i64 %idxprom100
  %101 = load i32, i32* %arrayidx101, align 4
  %add102 = add nsw i32 %98, %101
  store i32 %add102, i32* %cand_x, align 4
  %102 = load i32, i32* %center_y, align 4
  %103 = load i32*, i32** @spiral_search_y, align 8
  %104 = load i32, i32* %pos, align 4
  %idxprom103 = sext i32 %104 to i64
  %arrayidx104 = getelementptr inbounds i32, i32* %103, i64 %idxprom103
  %105 = load i32, i32* %arrayidx104, align 4
  %add105 = add nsw i32 %102, %105
  store i32 %add105, i32* %cand_y, align 4
  %106 = load i32, i32* %lambda_factor, align 4
  %107 = load i32*, i32** @mvbits, align 8
  %108 = load i32, i32* %cand_x, align 4
  %shl106 = shl i32 %108, 2
  %109 = load i32, i32* %pred_x, align 4
  %sub107 = sub nsw i32 %shl106, %109
  %idxprom108 = sext i32 %sub107 to i64
  %arrayidx109 = getelementptr inbounds i32, i32* %107, i64 %idxprom108
  %110 = load i32, i32* %arrayidx109, align 4
  %111 = load i32*, i32** @mvbits, align 8
  %112 = load i32, i32* %cand_y, align 4
  %shl110 = shl i32 %112, 2
  %113 = load i32, i32* %pred_y, align 4
  %sub111 = sub nsw i32 %shl110, %113
  %idxprom112 = sext i32 %sub111 to i64
  %arrayidx113 = getelementptr inbounds i32, i32* %111, i64 %idxprom112
  %114 = load i32, i32* %arrayidx113, align 4
  %add114 = add nsw i32 %110, %114
  %mul115 = mul nsw i32 %106, %add114
  %shr116 = ashr i32 %mul115, 16
  store i32 %shr116, i32* %mcost, align 4
  %115 = load i32, i32* %check_for_00, align 4
  %tobool117 = icmp ne i32 %115, 0
  br i1 %tobool117, label %land.lhs.true118, label %if.end128

land.lhs.true118:                                 ; preds = %for.body
  %116 = load i32, i32* %cand_x, align 4
  %117 = load i32, i32* %pic_pix_x.addr, align 4
  %cmp119 = icmp eq i32 %116, %117
  br i1 %cmp119, label %land.lhs.true121, label %if.end128

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %118 = load i32, i32* %cand_y, align 4
  %119 = load i32, i32* %pic_pix_y.addr, align 4
  %cmp122 = icmp eq i32 %118, %119
  br i1 %cmp122, label %if.then124, label %if.end128

if.then124:                                       ; preds = %land.lhs.true121
  %120 = load i32, i32* %lambda_factor, align 4
  %mul125 = mul nsw i32 %120, 16
  %shr126 = ashr i32 %mul125, 16
  %121 = load i32, i32* %mcost, align 4
  %sub127 = sub nsw i32 %121, %shr126
  store i32 %sub127, i32* %mcost, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.then124, %land.lhs.true121, %land.lhs.true118, %for.body
  %122 = load i32, i32* %mcost, align 4
  %123 = load i32, i32* %min_mcost.addr, align 4
  %cmp129 = icmp sge i32 %122, %123
  br i1 %cmp129, label %if.then131, label %if.end132

if.then131:                                       ; preds = %if.end128
  br label %for.inc186

if.end132:                                        ; preds = %if.end128
  store i32 0, i32* %y, align 4
  br label %for.cond133

for.cond133:                                      ; preds = %for.inc179, %if.end132
  %124 = load i32, i32* %y, align 4
  %125 = load i32, i32* %blocksize_y, align 4
  %cmp134 = icmp slt i32 %124, %125
  br i1 %cmp134, label %for.body136, label %for.end181

for.body136:                                      ; preds = %for.cond133
  %126 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line, align 8
  %127 = load i32, i32* %blocksize_x, align 4
  %128 = load i16*, i16** %ref_pic, align 8
  %129 = load i32, i32* %cand_y, align 4
  %130 = load i32, i32* %y, align 4
  %add137 = add nsw i32 %129, %130
  %131 = load i32, i32* %cand_x, align 4
  %132 = load i32, i32* %img_height, align 4
  %133 = load i32, i32* %img_width, align 4
  %call = call i16* %126(i32 %127, i16* %128, i32 %add137, i32 %131, i32 %132, i32 %133)
  store i16* %call, i16** %ref_line, align 8
  %134 = load i16**, i16*** %orig_pic.addr, align 8
  %135 = load i32, i32* %y, align 4
  %idxprom138 = sext i32 %135 to i64
  %arrayidx139 = getelementptr inbounds i16*, i16** %134, i64 %idxprom138
  %136 = load i16*, i16** %arrayidx139, align 8
  store i16* %136, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc, %for.body136
  %137 = load i32, i32* %x4, align 4
  %138 = load i32, i32* %blocksize_x4, align 4
  %cmp141 = icmp slt i32 %137, %138
  br i1 %cmp141, label %for.body143, label %for.end

for.body143:                                      ; preds = %for.cond140
  %139 = load i32*, i32** @byte_abs, align 8
  %140 = load i16*, i16** %orig_line, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %140, i32 1
  store i16* %incdec.ptr, i16** %orig_line, align 8
  %141 = load i16, i16* %140, align 2
  %conv144 = zext i16 %141 to i32
  %142 = load i16*, i16** %ref_line, align 8
  %incdec.ptr145 = getelementptr inbounds i16, i16* %142, i32 1
  store i16* %incdec.ptr145, i16** %ref_line, align 8
  %143 = load i16, i16* %142, align 2
  %conv146 = zext i16 %143 to i32
  %sub147 = sub nsw i32 %conv144, %conv146
  %idxprom148 = sext i32 %sub147 to i64
  %arrayidx149 = getelementptr inbounds i32, i32* %139, i64 %idxprom148
  %144 = load i32, i32* %arrayidx149, align 4
  %145 = load i32, i32* %mcost, align 4
  %add150 = add nsw i32 %145, %144
  store i32 %add150, i32* %mcost, align 4
  %146 = load i32*, i32** @byte_abs, align 8
  %147 = load i16*, i16** %orig_line, align 8
  %incdec.ptr151 = getelementptr inbounds i16, i16* %147, i32 1
  store i16* %incdec.ptr151, i16** %orig_line, align 8
  %148 = load i16, i16* %147, align 2
  %conv152 = zext i16 %148 to i32
  %149 = load i16*, i16** %ref_line, align 8
  %incdec.ptr153 = getelementptr inbounds i16, i16* %149, i32 1
  store i16* %incdec.ptr153, i16** %ref_line, align 8
  %150 = load i16, i16* %149, align 2
  %conv154 = zext i16 %150 to i32
  %sub155 = sub nsw i32 %conv152, %conv154
  %idxprom156 = sext i32 %sub155 to i64
  %arrayidx157 = getelementptr inbounds i32, i32* %146, i64 %idxprom156
  %151 = load i32, i32* %arrayidx157, align 4
  %152 = load i32, i32* %mcost, align 4
  %add158 = add nsw i32 %152, %151
  store i32 %add158, i32* %mcost, align 4
  %153 = load i32*, i32** @byte_abs, align 8
  %154 = load i16*, i16** %orig_line, align 8
  %incdec.ptr159 = getelementptr inbounds i16, i16* %154, i32 1
  store i16* %incdec.ptr159, i16** %orig_line, align 8
  %155 = load i16, i16* %154, align 2
  %conv160 = zext i16 %155 to i32
  %156 = load i16*, i16** %ref_line, align 8
  %incdec.ptr161 = getelementptr inbounds i16, i16* %156, i32 1
  store i16* %incdec.ptr161, i16** %ref_line, align 8
  %157 = load i16, i16* %156, align 2
  %conv162 = zext i16 %157 to i32
  %sub163 = sub nsw i32 %conv160, %conv162
  %idxprom164 = sext i32 %sub163 to i64
  %arrayidx165 = getelementptr inbounds i32, i32* %153, i64 %idxprom164
  %158 = load i32, i32* %arrayidx165, align 4
  %159 = load i32, i32* %mcost, align 4
  %add166 = add nsw i32 %159, %158
  store i32 %add166, i32* %mcost, align 4
  %160 = load i32*, i32** @byte_abs, align 8
  %161 = load i16*, i16** %orig_line, align 8
  %incdec.ptr167 = getelementptr inbounds i16, i16* %161, i32 1
  store i16* %incdec.ptr167, i16** %orig_line, align 8
  %162 = load i16, i16* %161, align 2
  %conv168 = zext i16 %162 to i32
  %163 = load i16*, i16** %ref_line, align 8
  %incdec.ptr169 = getelementptr inbounds i16, i16* %163, i32 1
  store i16* %incdec.ptr169, i16** %ref_line, align 8
  %164 = load i16, i16* %163, align 2
  %conv170 = zext i16 %164 to i32
  %sub171 = sub nsw i32 %conv168, %conv170
  %idxprom172 = sext i32 %sub171 to i64
  %arrayidx173 = getelementptr inbounds i32, i32* %160, i64 %idxprom172
  %165 = load i32, i32* %arrayidx173, align 4
  %166 = load i32, i32* %mcost, align 4
  %add174 = add nsw i32 %166, %165
  store i32 %add174, i32* %mcost, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body143
  %167 = load i32, i32* %x4, align 4
  %inc = add nsw i32 %167, 1
  store i32 %inc, i32* %x4, align 4
  br label %for.cond140

for.end:                                          ; preds = %for.cond140
  %168 = load i32, i32* %mcost, align 4
  %169 = load i32, i32* %min_mcost.addr, align 4
  %cmp175 = icmp sge i32 %168, %169
  br i1 %cmp175, label %if.then177, label %if.end178

if.then177:                                       ; preds = %for.end
  br label %for.end181

if.end178:                                        ; preds = %for.end
  br label %for.inc179

for.inc179:                                       ; preds = %if.end178
  %170 = load i32, i32* %y, align 4
  %inc180 = add nsw i32 %170, 1
  store i32 %inc180, i32* %y, align 4
  br label %for.cond133

for.end181:                                       ; preds = %if.then177, %for.cond133
  %171 = load i32, i32* %mcost, align 4
  %172 = load i32, i32* %min_mcost.addr, align 4
  %cmp182 = icmp slt i32 %171, %172
  br i1 %cmp182, label %if.then184, label %if.end185

if.then184:                                       ; preds = %for.end181
  %173 = load i32, i32* %pos, align 4
  store i32 %173, i32* %best_pos, align 4
  %174 = load i32, i32* %mcost, align 4
  store i32 %174, i32* %min_mcost.addr, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then184, %for.end181
  br label %for.inc186

for.inc186:                                       ; preds = %if.end185, %if.then131
  %175 = load i32, i32* %pos, align 4
  %inc187 = add nsw i32 %175, 1
  store i32 %inc187, i32* %pos, align 4
  br label %for.cond

for.end188:                                       ; preds = %for.cond
  %176 = load i32, i32* %best_pos, align 4
  %tobool189 = icmp ne i32 %176, 0
  br i1 %tobool189, label %if.then190, label %if.end201

if.then190:                                       ; preds = %for.end188
  %177 = load i32*, i32** @spiral_search_x, align 8
  %178 = load i32, i32* %best_pos, align 4
  %idxprom191 = sext i32 %178 to i64
  %arrayidx192 = getelementptr inbounds i32, i32* %177, i64 %idxprom191
  %179 = load i32, i32* %arrayidx192, align 4
  %180 = load i16*, i16** %mv_x.addr, align 8
  %181 = load i16, i16* %180, align 2
  %conv193 = sext i16 %181 to i32
  %add194 = add nsw i32 %conv193, %179
  %conv195 = trunc i32 %add194 to i16
  store i16 %conv195, i16* %180, align 2
  %182 = load i32*, i32** @spiral_search_y, align 8
  %183 = load i32, i32* %best_pos, align 4
  %idxprom196 = sext i32 %183 to i64
  %arrayidx197 = getelementptr inbounds i32, i32* %182, i64 %idxprom196
  %184 = load i32, i32* %arrayidx197, align 4
  %185 = load i16*, i16** %mv_y.addr, align 8
  %186 = load i16, i16* %185, align 2
  %conv198 = sext i16 %186 to i32
  %add199 = add nsw i32 %conv198, %184
  %conv200 = trunc i32 %add199 to i16
  store i16 %conv200, i16* %185, align 2
  br label %if.end201

if.end201:                                        ; preds = %if.then190, %for.end188
  %187 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %187
}

declare dso_local i16* @FastLineX(i32, i16*, i32, i32, i32, i32) #2

declare dso_local i16* @UMVLineX(i32, i16*, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @FastFullPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %search_range.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pos = alloca i32, align 4
  %offset_x = alloca i32, align 4
  %offset_y = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %mcost = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %block_index = alloca i32, align 4
  %block_sad = alloca i32*, align 8
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i32 %search_range, i32* %search_range.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load i32, i32* %search_range.addr, align 4
  %mul = mul nsw i32 2, %0
  %add = add nsw i32 %mul, 1
  %1 = load i32, i32* %search_range.addr, align 4
  %mul1 = mul nsw i32 2, %1
  %add2 = add nsw i32 %mul1, 1
  %mul3 = mul nsw i32 %add, %add2
  store i32 %mul3, i32* %max_pos, align 4
  %2 = load double, double* %lambda.addr, align 8
  %mul4 = fmul double 6.553600e+04, %2
  %add5 = fadd double %mul4, 5.000000e-01
  %conv = fptosi double %add5 to i32
  store i32 %conv, i32* %lambda_factor, align 4
  store i32 0, i32* %best_pos, align 4
  %3 = load i32, i32* %pic_pix_y.addr, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 38
  %5 = load i32, i32* %opix_y, align 4
  %sub = sub nsw i32 %3, %5
  %6 = load i32, i32* %pic_pix_x.addr, align 4
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 37
  %8 = load i32, i32* %opix_x, align 8
  %sub6 = sub nsw i32 %6, %8
  %shr = ashr i32 %sub6, 2
  %add7 = add nsw i32 %sub, %shr
  store i32 %add7, i32* %block_index, align 4
  %9 = load i32*****, i32****** @BlockSAD, align 8
  %10 = load i32, i32* %list.addr, align 4
  %idxprom = sext i32 %10 to i64
  %arrayidx = getelementptr inbounds i32****, i32***** %9, i64 %idxprom
  %11 = load i32****, i32***** %arrayidx, align 8
  %12 = load i16, i16* %ref.addr, align 2
  %idxprom8 = sext i16 %12 to i64
  %arrayidx9 = getelementptr inbounds i32***, i32**** %11, i64 %idxprom8
  %13 = load i32***, i32**** %arrayidx9, align 8
  %14 = load i32, i32* %blocktype.addr, align 4
  %idxprom10 = sext i32 %14 to i64
  %arrayidx11 = getelementptr inbounds i32**, i32*** %13, i64 %idxprom10
  %15 = load i32**, i32*** %arrayidx11, align 8
  %16 = load i32, i32* %block_index, align 4
  %idxprom12 = sext i32 %16 to i64
  %arrayidx13 = getelementptr inbounds i32*, i32** %15, i64 %idxprom12
  %17 = load i32*, i32** %arrayidx13, align 8
  store i32* %17, i32** %block_sad, align 8
  %18 = load i32**, i32*** @search_setup_done, align 8
  %19 = load i32, i32* %list.addr, align 4
  %idxprom14 = sext i32 %19 to i64
  %arrayidx15 = getelementptr inbounds i32*, i32** %18, i64 %idxprom14
  %20 = load i32*, i32** %arrayidx15, align 8
  %21 = load i16, i16* %ref.addr, align 2
  %idxprom16 = sext i16 %21 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %20, i64 %idxprom16
  %22 = load i32, i32* %arrayidx17, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %23 = load i16, i16* %ref.addr, align 2
  %24 = load i32, i32* %list.addr, align 4
  call void @SetupFastFullPelSearch(i16 signext %23, i32 %24)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %25 = load i32**, i32*** @search_center_x, align 8
  %26 = load i32, i32* %list.addr, align 4
  %idxprom18 = sext i32 %26 to i64
  %arrayidx19 = getelementptr inbounds i32*, i32** %25, i64 %idxprom18
  %27 = load i32*, i32** %arrayidx19, align 8
  %28 = load i16, i16* %ref.addr, align 2
  %idxprom20 = sext i16 %28 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %27, i64 %idxprom20
  %29 = load i32, i32* %arrayidx21, align 4
  %30 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %30, i32 0, i32 37
  %31 = load i32, i32* %opix_x22, align 8
  %sub23 = sub nsw i32 %29, %31
  store i32 %sub23, i32* %offset_x, align 4
  %32 = load i32**, i32*** @search_center_y, align 8
  %33 = load i32, i32* %list.addr, align 4
  %idxprom24 = sext i32 %33 to i64
  %arrayidx25 = getelementptr inbounds i32*, i32** %32, i64 %idxprom24
  %34 = load i32*, i32** %arrayidx25, align 8
  %35 = load i16, i16* %ref.addr, align 2
  %idxprom26 = sext i16 %35 to i64
  %arrayidx27 = getelementptr inbounds i32, i32* %34, i64 %idxprom26
  %36 = load i32, i32* %arrayidx27, align 4
  %37 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y28 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %37, i32 0, i32 38
  %38 = load i32, i32* %opix_y28, align 4
  %sub29 = sub nsw i32 %36, %38
  store i32 %sub29, i32* %offset_y, align 4
  %39 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %39, i32 0, i32 85
  %40 = load i32, i32* %rdopt, align 8
  %tobool30 = icmp ne i32 %40, 0
  br i1 %tobool30, label %if.end57, label %if.then31

if.then31:                                        ; preds = %if.end
  %41 = load i32*, i32** %block_sad, align 8
  %42 = load i32**, i32*** @pos_00, align 8
  %43 = load i32, i32* %list.addr, align 4
  %idxprom32 = sext i32 %43 to i64
  %arrayidx33 = getelementptr inbounds i32*, i32** %42, i64 %idxprom32
  %44 = load i32*, i32** %arrayidx33, align 8
  %45 = load i16, i16* %ref.addr, align 2
  %idxprom34 = sext i16 %45 to i64
  %arrayidx35 = getelementptr inbounds i32, i32* %44, i64 %idxprom34
  %46 = load i32, i32* %arrayidx35, align 4
  %idxprom36 = sext i32 %46 to i64
  %arrayidx37 = getelementptr inbounds i32, i32* %41, i64 %idxprom36
  %47 = load i32, i32* %arrayidx37, align 4
  %48 = load i32, i32* %lambda_factor, align 4
  %49 = load i32*, i32** @mvbits, align 8
  %50 = load i16, i16* %pred_mv_x.addr, align 2
  %conv38 = sext i16 %50 to i32
  %sub39 = sub nsw i32 0, %conv38
  %idxprom40 = sext i32 %sub39 to i64
  %arrayidx41 = getelementptr inbounds i32, i32* %49, i64 %idxprom40
  %51 = load i32, i32* %arrayidx41, align 4
  %52 = load i32*, i32** @mvbits, align 8
  %53 = load i16, i16* %pred_mv_y.addr, align 2
  %conv42 = sext i16 %53 to i32
  %sub43 = sub nsw i32 0, %conv42
  %idxprom44 = sext i32 %sub43 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %52, i64 %idxprom44
  %54 = load i32, i32* %arrayidx45, align 4
  %add46 = add nsw i32 %51, %54
  %mul47 = mul nsw i32 %48, %add46
  %shr48 = ashr i32 %mul47, 16
  %add49 = add nsw i32 %47, %shr48
  store i32 %add49, i32* %mcost, align 4
  %55 = load i32, i32* %mcost, align 4
  %56 = load i32, i32* %min_mcost.addr, align 4
  %cmp = icmp slt i32 %55, %56
  br i1 %cmp, label %if.then51, label %if.end56

if.then51:                                        ; preds = %if.then31
  %57 = load i32, i32* %mcost, align 4
  store i32 %57, i32* %min_mcost.addr, align 4
  %58 = load i32**, i32*** @pos_00, align 8
  %59 = load i32, i32* %list.addr, align 4
  %idxprom52 = sext i32 %59 to i64
  %arrayidx53 = getelementptr inbounds i32*, i32** %58, i64 %idxprom52
  %60 = load i32*, i32** %arrayidx53, align 8
  %61 = load i16, i16* %ref.addr, align 2
  %idxprom54 = sext i16 %61 to i64
  %arrayidx55 = getelementptr inbounds i32, i32* %60, i64 %idxprom54
  %62 = load i32, i32* %arrayidx55, align 4
  store i32 %62, i32* %best_pos, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then51, %if.then31
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end57
  %63 = load i32, i32* %pos, align 4
  %64 = load i32, i32* %max_pos, align 4
  %cmp58 = icmp slt i32 %63, %64
  br i1 %cmp58, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %65 = load i32*, i32** %block_sad, align 8
  %66 = load i32, i32* %65, align 4
  %67 = load i32, i32* %min_mcost.addr, align 4
  %cmp60 = icmp slt i32 %66, %67
  br i1 %cmp60, label %if.then62, label %if.end86

if.then62:                                        ; preds = %for.body
  %68 = load i32, i32* %offset_x, align 4
  %69 = load i32*, i32** @spiral_search_x, align 8
  %70 = load i32, i32* %pos, align 4
  %idxprom63 = sext i32 %70 to i64
  %arrayidx64 = getelementptr inbounds i32, i32* %69, i64 %idxprom63
  %71 = load i32, i32* %arrayidx64, align 4
  %add65 = add nsw i32 %68, %71
  store i32 %add65, i32* %cand_x, align 4
  %72 = load i32, i32* %offset_y, align 4
  %73 = load i32*, i32** @spiral_search_y, align 8
  %74 = load i32, i32* %pos, align 4
  %idxprom66 = sext i32 %74 to i64
  %arrayidx67 = getelementptr inbounds i32, i32* %73, i64 %idxprom66
  %75 = load i32, i32* %arrayidx67, align 4
  %add68 = add nsw i32 %72, %75
  store i32 %add68, i32* %cand_y, align 4
  %76 = load i32*, i32** %block_sad, align 8
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %mcost, align 4
  %78 = load i32, i32* %lambda_factor, align 4
  %79 = load i32*, i32** @mvbits, align 8
  %80 = load i32, i32* %cand_x, align 4
  %shl = shl i32 %80, 2
  %81 = load i16, i16* %pred_mv_x.addr, align 2
  %conv69 = sext i16 %81 to i32
  %sub70 = sub nsw i32 %shl, %conv69
  %idxprom71 = sext i32 %sub70 to i64
  %arrayidx72 = getelementptr inbounds i32, i32* %79, i64 %idxprom71
  %82 = load i32, i32* %arrayidx72, align 4
  %83 = load i32*, i32** @mvbits, align 8
  %84 = load i32, i32* %cand_y, align 4
  %shl73 = shl i32 %84, 2
  %85 = load i16, i16* %pred_mv_y.addr, align 2
  %conv74 = sext i16 %85 to i32
  %sub75 = sub nsw i32 %shl73, %conv74
  %idxprom76 = sext i32 %sub75 to i64
  %arrayidx77 = getelementptr inbounds i32, i32* %83, i64 %idxprom76
  %86 = load i32, i32* %arrayidx77, align 4
  %add78 = add nsw i32 %82, %86
  %mul79 = mul nsw i32 %78, %add78
  %shr80 = ashr i32 %mul79, 16
  %87 = load i32, i32* %mcost, align 4
  %add81 = add nsw i32 %87, %shr80
  store i32 %add81, i32* %mcost, align 4
  %88 = load i32, i32* %mcost, align 4
  %89 = load i32, i32* %min_mcost.addr, align 4
  %cmp82 = icmp slt i32 %88, %89
  br i1 %cmp82, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.then62
  %90 = load i32, i32* %mcost, align 4
  store i32 %90, i32* %min_mcost.addr, align 4
  %91 = load i32, i32* %pos, align 4
  store i32 %91, i32* %best_pos, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.then62
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end86
  %92 = load i32, i32* %pos, align 4
  %inc = add nsw i32 %92, 1
  store i32 %inc, i32* %pos, align 4
  %93 = load i32*, i32** %block_sad, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %93, i32 1
  store i32* %incdec.ptr, i32** %block_sad, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %94 = load i32, i32* %offset_x, align 4
  %95 = load i32*, i32** @spiral_search_x, align 8
  %96 = load i32, i32* %best_pos, align 4
  %idxprom87 = sext i32 %96 to i64
  %arrayidx88 = getelementptr inbounds i32, i32* %95, i64 %idxprom87
  %97 = load i32, i32* %arrayidx88, align 4
  %add89 = add nsw i32 %94, %97
  %conv90 = trunc i32 %add89 to i16
  %98 = load i16*, i16** %mv_x.addr, align 8
  store i16 %conv90, i16* %98, align 2
  %99 = load i32, i32* %offset_y, align 4
  %100 = load i32*, i32** @spiral_search_y, align 8
  %101 = load i32, i32* %best_pos, align 4
  %idxprom91 = sext i32 %101 to i64
  %arrayidx92 = getelementptr inbounds i32, i32* %100, i64 %idxprom91
  %102 = load i32, i32* %arrayidx92, align 4
  %add93 = add nsw i32 %99, %102
  %conv94 = trunc i32 %add93 to i16
  %103 = load i16*, i16** %mv_y.addr, align 8
  store i16 %conv94, i16* %103, align 2
  %104 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %104
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SATD(i32* %diff, i32 %use_hadamard) #0 {
entry:
  %diff.addr = alloca i32*, align 8
  %use_hadamard.addr = alloca i32, align 4
  %k = alloca i32, align 4
  %satd = alloca i32, align 4
  %m = alloca [16 x i32], align 16
  %dd = alloca i32, align 4
  %d = alloca [16 x i32], align 16
  store i32* %diff, i32** %diff.addr, align 8
  store i32 %use_hadamard, i32* %use_hadamard.addr, align 4
  store i32 0, i32* %satd, align 4
  %0 = load i32, i32* %use_hadamard.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32*, i32** %diff.addr, align 8
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 0
  %2 = load i32, i32* %arrayidx, align 4
  %3 = load i32*, i32** %diff.addr, align 8
  %arrayidx1 = getelementptr inbounds i32, i32* %3, i64 12
  %4 = load i32, i32* %arrayidx1, align 4
  %add = add nsw i32 %2, %4
  %arrayidx2 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 0
  store i32 %add, i32* %arrayidx2, align 16
  %5 = load i32*, i32** %diff.addr, align 8
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 4
  %6 = load i32, i32* %arrayidx3, align 4
  %7 = load i32*, i32** %diff.addr, align 8
  %arrayidx4 = getelementptr inbounds i32, i32* %7, i64 8
  %8 = load i32, i32* %arrayidx4, align 4
  %add5 = add nsw i32 %6, %8
  %arrayidx6 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 4
  store i32 %add5, i32* %arrayidx6, align 16
  %9 = load i32*, i32** %diff.addr, align 8
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 4
  %10 = load i32, i32* %arrayidx7, align 4
  %11 = load i32*, i32** %diff.addr, align 8
  %arrayidx8 = getelementptr inbounds i32, i32* %11, i64 8
  %12 = load i32, i32* %arrayidx8, align 4
  %sub = sub nsw i32 %10, %12
  %arrayidx9 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 8
  store i32 %sub, i32* %arrayidx9, align 16
  %13 = load i32*, i32** %diff.addr, align 8
  %arrayidx10 = getelementptr inbounds i32, i32* %13, i64 0
  %14 = load i32, i32* %arrayidx10, align 4
  %15 = load i32*, i32** %diff.addr, align 8
  %arrayidx11 = getelementptr inbounds i32, i32* %15, i64 12
  %16 = load i32, i32* %arrayidx11, align 4
  %sub12 = sub nsw i32 %14, %16
  %arrayidx13 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 12
  store i32 %sub12, i32* %arrayidx13, align 16
  %17 = load i32*, i32** %diff.addr, align 8
  %arrayidx14 = getelementptr inbounds i32, i32* %17, i64 1
  %18 = load i32, i32* %arrayidx14, align 4
  %19 = load i32*, i32** %diff.addr, align 8
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 13
  %20 = load i32, i32* %arrayidx15, align 4
  %add16 = add nsw i32 %18, %20
  %arrayidx17 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 1
  store i32 %add16, i32* %arrayidx17, align 4
  %21 = load i32*, i32** %diff.addr, align 8
  %arrayidx18 = getelementptr inbounds i32, i32* %21, i64 5
  %22 = load i32, i32* %arrayidx18, align 4
  %23 = load i32*, i32** %diff.addr, align 8
  %arrayidx19 = getelementptr inbounds i32, i32* %23, i64 9
  %24 = load i32, i32* %arrayidx19, align 4
  %add20 = add nsw i32 %22, %24
  %arrayidx21 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 5
  store i32 %add20, i32* %arrayidx21, align 4
  %25 = load i32*, i32** %diff.addr, align 8
  %arrayidx22 = getelementptr inbounds i32, i32* %25, i64 5
  %26 = load i32, i32* %arrayidx22, align 4
  %27 = load i32*, i32** %diff.addr, align 8
  %arrayidx23 = getelementptr inbounds i32, i32* %27, i64 9
  %28 = load i32, i32* %arrayidx23, align 4
  %sub24 = sub nsw i32 %26, %28
  %arrayidx25 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 9
  store i32 %sub24, i32* %arrayidx25, align 4
  %29 = load i32*, i32** %diff.addr, align 8
  %arrayidx26 = getelementptr inbounds i32, i32* %29, i64 1
  %30 = load i32, i32* %arrayidx26, align 4
  %31 = load i32*, i32** %diff.addr, align 8
  %arrayidx27 = getelementptr inbounds i32, i32* %31, i64 13
  %32 = load i32, i32* %arrayidx27, align 4
  %sub28 = sub nsw i32 %30, %32
  %arrayidx29 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 13
  store i32 %sub28, i32* %arrayidx29, align 4
  %33 = load i32*, i32** %diff.addr, align 8
  %arrayidx30 = getelementptr inbounds i32, i32* %33, i64 2
  %34 = load i32, i32* %arrayidx30, align 4
  %35 = load i32*, i32** %diff.addr, align 8
  %arrayidx31 = getelementptr inbounds i32, i32* %35, i64 14
  %36 = load i32, i32* %arrayidx31, align 4
  %add32 = add nsw i32 %34, %36
  %arrayidx33 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 2
  store i32 %add32, i32* %arrayidx33, align 8
  %37 = load i32*, i32** %diff.addr, align 8
  %arrayidx34 = getelementptr inbounds i32, i32* %37, i64 6
  %38 = load i32, i32* %arrayidx34, align 4
  %39 = load i32*, i32** %diff.addr, align 8
  %arrayidx35 = getelementptr inbounds i32, i32* %39, i64 10
  %40 = load i32, i32* %arrayidx35, align 4
  %add36 = add nsw i32 %38, %40
  %arrayidx37 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 6
  store i32 %add36, i32* %arrayidx37, align 8
  %41 = load i32*, i32** %diff.addr, align 8
  %arrayidx38 = getelementptr inbounds i32, i32* %41, i64 6
  %42 = load i32, i32* %arrayidx38, align 4
  %43 = load i32*, i32** %diff.addr, align 8
  %arrayidx39 = getelementptr inbounds i32, i32* %43, i64 10
  %44 = load i32, i32* %arrayidx39, align 4
  %sub40 = sub nsw i32 %42, %44
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 10
  store i32 %sub40, i32* %arrayidx41, align 8
  %45 = load i32*, i32** %diff.addr, align 8
  %arrayidx42 = getelementptr inbounds i32, i32* %45, i64 2
  %46 = load i32, i32* %arrayidx42, align 4
  %47 = load i32*, i32** %diff.addr, align 8
  %arrayidx43 = getelementptr inbounds i32, i32* %47, i64 14
  %48 = load i32, i32* %arrayidx43, align 4
  %sub44 = sub nsw i32 %46, %48
  %arrayidx45 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 14
  store i32 %sub44, i32* %arrayidx45, align 8
  %49 = load i32*, i32** %diff.addr, align 8
  %arrayidx46 = getelementptr inbounds i32, i32* %49, i64 3
  %50 = load i32, i32* %arrayidx46, align 4
  %51 = load i32*, i32** %diff.addr, align 8
  %arrayidx47 = getelementptr inbounds i32, i32* %51, i64 15
  %52 = load i32, i32* %arrayidx47, align 4
  %add48 = add nsw i32 %50, %52
  %arrayidx49 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 3
  store i32 %add48, i32* %arrayidx49, align 4
  %53 = load i32*, i32** %diff.addr, align 8
  %arrayidx50 = getelementptr inbounds i32, i32* %53, i64 7
  %54 = load i32, i32* %arrayidx50, align 4
  %55 = load i32*, i32** %diff.addr, align 8
  %arrayidx51 = getelementptr inbounds i32, i32* %55, i64 11
  %56 = load i32, i32* %arrayidx51, align 4
  %add52 = add nsw i32 %54, %56
  %arrayidx53 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 7
  store i32 %add52, i32* %arrayidx53, align 4
  %57 = load i32*, i32** %diff.addr, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %57, i64 7
  %58 = load i32, i32* %arrayidx54, align 4
  %59 = load i32*, i32** %diff.addr, align 8
  %arrayidx55 = getelementptr inbounds i32, i32* %59, i64 11
  %60 = load i32, i32* %arrayidx55, align 4
  %sub56 = sub nsw i32 %58, %60
  %arrayidx57 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 11
  store i32 %sub56, i32* %arrayidx57, align 4
  %61 = load i32*, i32** %diff.addr, align 8
  %arrayidx58 = getelementptr inbounds i32, i32* %61, i64 3
  %62 = load i32, i32* %arrayidx58, align 4
  %63 = load i32*, i32** %diff.addr, align 8
  %arrayidx59 = getelementptr inbounds i32, i32* %63, i64 15
  %64 = load i32, i32* %arrayidx59, align 4
  %sub60 = sub nsw i32 %62, %64
  %arrayidx61 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 15
  store i32 %sub60, i32* %arrayidx61, align 4
  %arrayidx62 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 0
  %65 = load i32, i32* %arrayidx62, align 16
  %arrayidx63 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 4
  %66 = load i32, i32* %arrayidx63, align 16
  %add64 = add nsw i32 %65, %66
  %arrayidx65 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 0
  store i32 %add64, i32* %arrayidx65, align 16
  %arrayidx66 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 0
  %67 = load i32, i32* %arrayidx66, align 16
  %arrayidx67 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 4
  %68 = load i32, i32* %arrayidx67, align 16
  %sub68 = sub nsw i32 %67, %68
  %arrayidx69 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 8
  store i32 %sub68, i32* %arrayidx69, align 16
  %arrayidx70 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 8
  %69 = load i32, i32* %arrayidx70, align 16
  %arrayidx71 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 12
  %70 = load i32, i32* %arrayidx71, align 16
  %add72 = add nsw i32 %69, %70
  %arrayidx73 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 4
  store i32 %add72, i32* %arrayidx73, align 16
  %arrayidx74 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 12
  %71 = load i32, i32* %arrayidx74, align 16
  %arrayidx75 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 8
  %72 = load i32, i32* %arrayidx75, align 16
  %sub76 = sub nsw i32 %71, %72
  %arrayidx77 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 12
  store i32 %sub76, i32* %arrayidx77, align 16
  %arrayidx78 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 1
  %73 = load i32, i32* %arrayidx78, align 4
  %arrayidx79 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 5
  %74 = load i32, i32* %arrayidx79, align 4
  %add80 = add nsw i32 %73, %74
  %arrayidx81 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 1
  store i32 %add80, i32* %arrayidx81, align 4
  %arrayidx82 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 1
  %75 = load i32, i32* %arrayidx82, align 4
  %arrayidx83 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 5
  %76 = load i32, i32* %arrayidx83, align 4
  %sub84 = sub nsw i32 %75, %76
  %arrayidx85 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 9
  store i32 %sub84, i32* %arrayidx85, align 4
  %arrayidx86 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 9
  %77 = load i32, i32* %arrayidx86, align 4
  %arrayidx87 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 13
  %78 = load i32, i32* %arrayidx87, align 4
  %add88 = add nsw i32 %77, %78
  %arrayidx89 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 5
  store i32 %add88, i32* %arrayidx89, align 4
  %arrayidx90 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 13
  %79 = load i32, i32* %arrayidx90, align 4
  %arrayidx91 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 9
  %80 = load i32, i32* %arrayidx91, align 4
  %sub92 = sub nsw i32 %79, %80
  %arrayidx93 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 13
  store i32 %sub92, i32* %arrayidx93, align 4
  %arrayidx94 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 2
  %81 = load i32, i32* %arrayidx94, align 8
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 6
  %82 = load i32, i32* %arrayidx95, align 8
  %add96 = add nsw i32 %81, %82
  %arrayidx97 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 2
  store i32 %add96, i32* %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 2
  %83 = load i32, i32* %arrayidx98, align 8
  %arrayidx99 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 6
  %84 = load i32, i32* %arrayidx99, align 8
  %sub100 = sub nsw i32 %83, %84
  %arrayidx101 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 10
  store i32 %sub100, i32* %arrayidx101, align 8
  %arrayidx102 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 10
  %85 = load i32, i32* %arrayidx102, align 8
  %arrayidx103 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 14
  %86 = load i32, i32* %arrayidx103, align 8
  %add104 = add nsw i32 %85, %86
  %arrayidx105 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 6
  store i32 %add104, i32* %arrayidx105, align 8
  %arrayidx106 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 14
  %87 = load i32, i32* %arrayidx106, align 8
  %arrayidx107 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 10
  %88 = load i32, i32* %arrayidx107, align 8
  %sub108 = sub nsw i32 %87, %88
  %arrayidx109 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 14
  store i32 %sub108, i32* %arrayidx109, align 8
  %arrayidx110 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 3
  %89 = load i32, i32* %arrayidx110, align 4
  %arrayidx111 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 7
  %90 = load i32, i32* %arrayidx111, align 4
  %add112 = add nsw i32 %89, %90
  %arrayidx113 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 3
  store i32 %add112, i32* %arrayidx113, align 4
  %arrayidx114 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 3
  %91 = load i32, i32* %arrayidx114, align 4
  %arrayidx115 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 7
  %92 = load i32, i32* %arrayidx115, align 4
  %sub116 = sub nsw i32 %91, %92
  %arrayidx117 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 11
  store i32 %sub116, i32* %arrayidx117, align 4
  %arrayidx118 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 11
  %93 = load i32, i32* %arrayidx118, align 4
  %arrayidx119 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 15
  %94 = load i32, i32* %arrayidx119, align 4
  %add120 = add nsw i32 %93, %94
  %arrayidx121 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 7
  store i32 %add120, i32* %arrayidx121, align 4
  %arrayidx122 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 15
  %95 = load i32, i32* %arrayidx122, align 4
  %arrayidx123 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 11
  %96 = load i32, i32* %arrayidx123, align 4
  %sub124 = sub nsw i32 %95, %96
  %arrayidx125 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 15
  store i32 %sub124, i32* %arrayidx125, align 4
  %arrayidx126 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 0
  %97 = load i32, i32* %arrayidx126, align 16
  %arrayidx127 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 3
  %98 = load i32, i32* %arrayidx127, align 4
  %add128 = add nsw i32 %97, %98
  %arrayidx129 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 0
  store i32 %add128, i32* %arrayidx129, align 16
  %arrayidx130 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 1
  %99 = load i32, i32* %arrayidx130, align 4
  %arrayidx131 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 2
  %100 = load i32, i32* %arrayidx131, align 8
  %add132 = add nsw i32 %99, %100
  %arrayidx133 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 1
  store i32 %add132, i32* %arrayidx133, align 4
  %arrayidx134 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 1
  %101 = load i32, i32* %arrayidx134, align 4
  %arrayidx135 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 2
  %102 = load i32, i32* %arrayidx135, align 8
  %sub136 = sub nsw i32 %101, %102
  %arrayidx137 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 2
  store i32 %sub136, i32* %arrayidx137, align 8
  %arrayidx138 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 0
  %103 = load i32, i32* %arrayidx138, align 16
  %arrayidx139 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 3
  %104 = load i32, i32* %arrayidx139, align 4
  %sub140 = sub nsw i32 %103, %104
  %arrayidx141 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 3
  store i32 %sub140, i32* %arrayidx141, align 4
  %arrayidx142 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 4
  %105 = load i32, i32* %arrayidx142, align 16
  %arrayidx143 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 7
  %106 = load i32, i32* %arrayidx143, align 4
  %add144 = add nsw i32 %105, %106
  %arrayidx145 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 4
  store i32 %add144, i32* %arrayidx145, align 16
  %arrayidx146 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 5
  %107 = load i32, i32* %arrayidx146, align 4
  %arrayidx147 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 6
  %108 = load i32, i32* %arrayidx147, align 8
  %add148 = add nsw i32 %107, %108
  %arrayidx149 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 5
  store i32 %add148, i32* %arrayidx149, align 4
  %arrayidx150 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 5
  %109 = load i32, i32* %arrayidx150, align 4
  %arrayidx151 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 6
  %110 = load i32, i32* %arrayidx151, align 8
  %sub152 = sub nsw i32 %109, %110
  %arrayidx153 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 6
  store i32 %sub152, i32* %arrayidx153, align 8
  %arrayidx154 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 4
  %111 = load i32, i32* %arrayidx154, align 16
  %arrayidx155 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 7
  %112 = load i32, i32* %arrayidx155, align 4
  %sub156 = sub nsw i32 %111, %112
  %arrayidx157 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 7
  store i32 %sub156, i32* %arrayidx157, align 4
  %arrayidx158 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 8
  %113 = load i32, i32* %arrayidx158, align 16
  %arrayidx159 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 11
  %114 = load i32, i32* %arrayidx159, align 4
  %add160 = add nsw i32 %113, %114
  %arrayidx161 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 8
  store i32 %add160, i32* %arrayidx161, align 16
  %arrayidx162 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 9
  %115 = load i32, i32* %arrayidx162, align 4
  %arrayidx163 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 10
  %116 = load i32, i32* %arrayidx163, align 8
  %add164 = add nsw i32 %115, %116
  %arrayidx165 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 9
  store i32 %add164, i32* %arrayidx165, align 4
  %arrayidx166 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 9
  %117 = load i32, i32* %arrayidx166, align 4
  %arrayidx167 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 10
  %118 = load i32, i32* %arrayidx167, align 8
  %sub168 = sub nsw i32 %117, %118
  %arrayidx169 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 10
  store i32 %sub168, i32* %arrayidx169, align 8
  %arrayidx170 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 8
  %119 = load i32, i32* %arrayidx170, align 16
  %arrayidx171 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 11
  %120 = load i32, i32* %arrayidx171, align 4
  %sub172 = sub nsw i32 %119, %120
  %arrayidx173 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 11
  store i32 %sub172, i32* %arrayidx173, align 4
  %arrayidx174 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 12
  %121 = load i32, i32* %arrayidx174, align 16
  %arrayidx175 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 15
  %122 = load i32, i32* %arrayidx175, align 4
  %add176 = add nsw i32 %121, %122
  %arrayidx177 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 12
  store i32 %add176, i32* %arrayidx177, align 16
  %arrayidx178 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 13
  %123 = load i32, i32* %arrayidx178, align 4
  %arrayidx179 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 14
  %124 = load i32, i32* %arrayidx179, align 8
  %add180 = add nsw i32 %123, %124
  %arrayidx181 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 13
  store i32 %add180, i32* %arrayidx181, align 4
  %arrayidx182 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 13
  %125 = load i32, i32* %arrayidx182, align 4
  %arrayidx183 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 14
  %126 = load i32, i32* %arrayidx183, align 8
  %sub184 = sub nsw i32 %125, %126
  %arrayidx185 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 14
  store i32 %sub184, i32* %arrayidx185, align 8
  %arrayidx186 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 12
  %127 = load i32, i32* %arrayidx186, align 16
  %arrayidx187 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 15
  %128 = load i32, i32* %arrayidx187, align 4
  %sub188 = sub nsw i32 %127, %128
  %arrayidx189 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 15
  store i32 %sub188, i32* %arrayidx189, align 4
  %arrayidx190 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 0
  %129 = load i32, i32* %arrayidx190, align 16
  %arrayidx191 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 1
  %130 = load i32, i32* %arrayidx191, align 4
  %add192 = add nsw i32 %129, %130
  %arrayidx193 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 0
  store i32 %add192, i32* %arrayidx193, align 16
  %arrayidx194 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 0
  %131 = load i32, i32* %arrayidx194, align 16
  %arrayidx195 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 1
  %132 = load i32, i32* %arrayidx195, align 4
  %sub196 = sub nsw i32 %131, %132
  %arrayidx197 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 1
  store i32 %sub196, i32* %arrayidx197, align 4
  %arrayidx198 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 2
  %133 = load i32, i32* %arrayidx198, align 8
  %arrayidx199 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 3
  %134 = load i32, i32* %arrayidx199, align 4
  %add200 = add nsw i32 %133, %134
  %arrayidx201 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 2
  store i32 %add200, i32* %arrayidx201, align 8
  %arrayidx202 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 3
  %135 = load i32, i32* %arrayidx202, align 4
  %arrayidx203 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 2
  %136 = load i32, i32* %arrayidx203, align 8
  %sub204 = sub nsw i32 %135, %136
  %arrayidx205 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 3
  store i32 %sub204, i32* %arrayidx205, align 4
  %arrayidx206 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 4
  %137 = load i32, i32* %arrayidx206, align 16
  %arrayidx207 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 5
  %138 = load i32, i32* %arrayidx207, align 4
  %add208 = add nsw i32 %137, %138
  %arrayidx209 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 4
  store i32 %add208, i32* %arrayidx209, align 16
  %arrayidx210 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 4
  %139 = load i32, i32* %arrayidx210, align 16
  %arrayidx211 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 5
  %140 = load i32, i32* %arrayidx211, align 4
  %sub212 = sub nsw i32 %139, %140
  %arrayidx213 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 5
  store i32 %sub212, i32* %arrayidx213, align 4
  %arrayidx214 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 6
  %141 = load i32, i32* %arrayidx214, align 8
  %arrayidx215 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 7
  %142 = load i32, i32* %arrayidx215, align 4
  %add216 = add nsw i32 %141, %142
  %arrayidx217 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 6
  store i32 %add216, i32* %arrayidx217, align 8
  %arrayidx218 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 7
  %143 = load i32, i32* %arrayidx218, align 4
  %arrayidx219 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 6
  %144 = load i32, i32* %arrayidx219, align 8
  %sub220 = sub nsw i32 %143, %144
  %arrayidx221 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 7
  store i32 %sub220, i32* %arrayidx221, align 4
  %arrayidx222 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 8
  %145 = load i32, i32* %arrayidx222, align 16
  %arrayidx223 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 9
  %146 = load i32, i32* %arrayidx223, align 4
  %add224 = add nsw i32 %145, %146
  %arrayidx225 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 8
  store i32 %add224, i32* %arrayidx225, align 16
  %arrayidx226 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 8
  %147 = load i32, i32* %arrayidx226, align 16
  %arrayidx227 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 9
  %148 = load i32, i32* %arrayidx227, align 4
  %sub228 = sub nsw i32 %147, %148
  %arrayidx229 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 9
  store i32 %sub228, i32* %arrayidx229, align 4
  %arrayidx230 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 10
  %149 = load i32, i32* %arrayidx230, align 8
  %arrayidx231 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 11
  %150 = load i32, i32* %arrayidx231, align 4
  %add232 = add nsw i32 %149, %150
  %arrayidx233 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 10
  store i32 %add232, i32* %arrayidx233, align 8
  %arrayidx234 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 11
  %151 = load i32, i32* %arrayidx234, align 4
  %arrayidx235 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 10
  %152 = load i32, i32* %arrayidx235, align 8
  %sub236 = sub nsw i32 %151, %152
  %arrayidx237 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 11
  store i32 %sub236, i32* %arrayidx237, align 4
  %arrayidx238 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 12
  %153 = load i32, i32* %arrayidx238, align 16
  %arrayidx239 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 13
  %154 = load i32, i32* %arrayidx239, align 4
  %add240 = add nsw i32 %153, %154
  %arrayidx241 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 12
  store i32 %add240, i32* %arrayidx241, align 16
  %arrayidx242 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 12
  %155 = load i32, i32* %arrayidx242, align 16
  %arrayidx243 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 13
  %156 = load i32, i32* %arrayidx243, align 4
  %sub244 = sub nsw i32 %155, %156
  %arrayidx245 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 13
  store i32 %sub244, i32* %arrayidx245, align 4
  %arrayidx246 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 14
  %157 = load i32, i32* %arrayidx246, align 8
  %arrayidx247 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 15
  %158 = load i32, i32* %arrayidx247, align 4
  %add248 = add nsw i32 %157, %158
  %arrayidx249 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 14
  store i32 %add248, i32* %arrayidx249, align 8
  %arrayidx250 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 15
  %159 = load i32, i32* %arrayidx250, align 4
  %arrayidx251 = getelementptr inbounds [16 x i32], [16 x i32]* %m, i64 0, i64 14
  %160 = load i32, i32* %arrayidx251, align 8
  %sub252 = sub nsw i32 %159, %160
  %arrayidx253 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 15
  store i32 %sub252, i32* %arrayidx253, align 4
  store i32 0, i32* %k, align 4
  %arrayidx254 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 0
  %161 = load i32, i32* %arrayidx254, align 16
  store i32 %161, i32* %dd, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %162 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %162, 16
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %163 = load i32, i32* %dd, align 4
  %cmp255 = icmp slt i32 %163, 0
  br i1 %cmp255, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %164 = load i32, i32* %dd, align 4
  %sub256 = sub nsw i32 0, %164
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %165 = load i32, i32* %dd, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub256, %cond.true ], [ %165, %cond.false ]
  %166 = load i32, i32* %satd, align 4
  %add257 = add nsw i32 %166, %cond
  store i32 %add257, i32* %satd, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %167 = load i32, i32* %k, align 4
  %inc = add nsw i32 %167, 1
  store i32 %inc, i32* %k, align 4
  %idxprom = sext i32 %inc to i64
  %arrayidx258 = getelementptr inbounds [16 x i32], [16 x i32]* %d, i64 0, i64 %idxprom
  %168 = load i32, i32* %arrayidx258, align 4
  store i32 %168, i32* %dd, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %169 = load i32, i32* %satd, align 4
  %add259 = add nsw i32 %169, 1
  %shr = ashr i32 %add259, 1
  store i32 %shr, i32* %satd, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %k, align 4
  br label %for.cond260

for.cond260:                                      ; preds = %for.inc268, %if.else
  %170 = load i32, i32* %k, align 4
  %cmp261 = icmp slt i32 %170, 16
  br i1 %cmp261, label %for.body262, label %for.end270

for.body262:                                      ; preds = %for.cond260
  %171 = load i32*, i32** @byte_abs, align 8
  %172 = load i32*, i32** %diff.addr, align 8
  %173 = load i32, i32* %k, align 4
  %idxprom263 = sext i32 %173 to i64
  %arrayidx264 = getelementptr inbounds i32, i32* %172, i64 %idxprom263
  %174 = load i32, i32* %arrayidx264, align 4
  %idxprom265 = sext i32 %174 to i64
  %arrayidx266 = getelementptr inbounds i32, i32* %171, i64 %idxprom265
  %175 = load i32, i32* %arrayidx266, align 4
  %176 = load i32, i32* %satd, align 4
  %add267 = add nsw i32 %176, %175
  store i32 %add267, i32* %satd, align 4
  br label %for.inc268

for.inc268:                                       ; preds = %for.body262
  %177 = load i32, i32* %k, align 4
  %inc269 = add nsw i32 %177, 1
  store i32 %inc269, i32* %k, align 4
  br label %for.cond260

for.end270:                                       ; preds = %for.cond260
  br label %if.end

if.end:                                           ; preds = %for.end270, %for.end
  %178 = load i32, i32* %satd, align 4
  ret i32 %178
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SATD8X8(i32* %diff, i32 %use_hadamard) #0 {
entry:
  %diff.addr = alloca i32*, align 8
  %use_hadamard.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sad = alloca i32, align 4
  %m1 = alloca [8 x [8 x i32]], align 16
  %m2 = alloca [8 x [8 x i32]], align 16
  %m3 = alloca [8 x [8 x i32]], align 16
  store i32* %diff, i32** %diff.addr, align 8
  store i32 %use_hadamard, i32* %use_hadamard.addr, align 4
  store i32 0, i32* %sad, align 4
  %0 = load i32, i32* %use_hadamard.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %j, align 4
  %cmp = icmp slt i32 %1, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %diff.addr, align 8
  %3 = load i32, i32* %j, align 4
  %shl = shl i32 %3, 3
  %idxprom = sext i32 %shl to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %5 = load i32*, i32** %diff.addr, align 8
  %6 = load i32, i32* %j, align 4
  %shl1 = shl i32 %6, 3
  %add = add nsw i32 %shl1, 4
  %idxprom2 = sext i32 %add to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 %idxprom2
  %7 = load i32, i32* %arrayidx3, align 4
  %add4 = add nsw i32 %4, %7
  %8 = load i32, i32* %j, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx6, i64 0, i64 0
  store i32 %add4, i32* %arrayidx7, align 16
  %9 = load i32*, i32** %diff.addr, align 8
  %10 = load i32, i32* %j, align 4
  %shl8 = shl i32 %10, 3
  %add9 = add nsw i32 %shl8, 1
  %idxprom10 = sext i32 %add9 to i64
  %arrayidx11 = getelementptr inbounds i32, i32* %9, i64 %idxprom10
  %11 = load i32, i32* %arrayidx11, align 4
  %12 = load i32*, i32** %diff.addr, align 8
  %13 = load i32, i32* %j, align 4
  %shl12 = shl i32 %13, 3
  %add13 = add nsw i32 %shl12, 5
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %12, i64 %idxprom14
  %14 = load i32, i32* %arrayidx15, align 4
  %add16 = add nsw i32 %11, %14
  %15 = load i32, i32* %j, align 4
  %idxprom17 = sext i32 %15 to i64
  %arrayidx18 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom17
  %arrayidx19 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx18, i64 0, i64 1
  store i32 %add16, i32* %arrayidx19, align 4
  %16 = load i32*, i32** %diff.addr, align 8
  %17 = load i32, i32* %j, align 4
  %shl20 = shl i32 %17, 3
  %add21 = add nsw i32 %shl20, 2
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds i32, i32* %16, i64 %idxprom22
  %18 = load i32, i32* %arrayidx23, align 4
  %19 = load i32*, i32** %diff.addr, align 8
  %20 = load i32, i32* %j, align 4
  %shl24 = shl i32 %20, 3
  %add25 = add nsw i32 %shl24, 6
  %idxprom26 = sext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds i32, i32* %19, i64 %idxprom26
  %21 = load i32, i32* %arrayidx27, align 4
  %add28 = add nsw i32 %18, %21
  %22 = load i32, i32* %j, align 4
  %idxprom29 = sext i32 %22 to i64
  %arrayidx30 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom29
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx30, i64 0, i64 2
  store i32 %add28, i32* %arrayidx31, align 8
  %23 = load i32*, i32** %diff.addr, align 8
  %24 = load i32, i32* %j, align 4
  %shl32 = shl i32 %24, 3
  %add33 = add nsw i32 %shl32, 3
  %idxprom34 = sext i32 %add33 to i64
  %arrayidx35 = getelementptr inbounds i32, i32* %23, i64 %idxprom34
  %25 = load i32, i32* %arrayidx35, align 4
  %26 = load i32*, i32** %diff.addr, align 8
  %27 = load i32, i32* %j, align 4
  %shl36 = shl i32 %27, 3
  %add37 = add nsw i32 %shl36, 7
  %idxprom38 = sext i32 %add37 to i64
  %arrayidx39 = getelementptr inbounds i32, i32* %26, i64 %idxprom38
  %28 = load i32, i32* %arrayidx39, align 4
  %add40 = add nsw i32 %25, %28
  %29 = load i32, i32* %j, align 4
  %idxprom41 = sext i32 %29 to i64
  %arrayidx42 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx42, i64 0, i64 3
  store i32 %add40, i32* %arrayidx43, align 4
  %30 = load i32*, i32** %diff.addr, align 8
  %31 = load i32, i32* %j, align 4
  %shl44 = shl i32 %31, 3
  %idxprom45 = sext i32 %shl44 to i64
  %arrayidx46 = getelementptr inbounds i32, i32* %30, i64 %idxprom45
  %32 = load i32, i32* %arrayidx46, align 4
  %33 = load i32*, i32** %diff.addr, align 8
  %34 = load i32, i32* %j, align 4
  %shl47 = shl i32 %34, 3
  %add48 = add nsw i32 %shl47, 4
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds i32, i32* %33, i64 %idxprom49
  %35 = load i32, i32* %arrayidx50, align 4
  %sub = sub nsw i32 %32, %35
  %36 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %36 to i64
  %arrayidx52 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom51
  %arrayidx53 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx52, i64 0, i64 4
  store i32 %sub, i32* %arrayidx53, align 16
  %37 = load i32*, i32** %diff.addr, align 8
  %38 = load i32, i32* %j, align 4
  %shl54 = shl i32 %38, 3
  %add55 = add nsw i32 %shl54, 1
  %idxprom56 = sext i32 %add55 to i64
  %arrayidx57 = getelementptr inbounds i32, i32* %37, i64 %idxprom56
  %39 = load i32, i32* %arrayidx57, align 4
  %40 = load i32*, i32** %diff.addr, align 8
  %41 = load i32, i32* %j, align 4
  %shl58 = shl i32 %41, 3
  %add59 = add nsw i32 %shl58, 5
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds i32, i32* %40, i64 %idxprom60
  %42 = load i32, i32* %arrayidx61, align 4
  %sub62 = sub nsw i32 %39, %42
  %43 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %43 to i64
  %arrayidx64 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom63
  %arrayidx65 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx64, i64 0, i64 5
  store i32 %sub62, i32* %arrayidx65, align 4
  %44 = load i32*, i32** %diff.addr, align 8
  %45 = load i32, i32* %j, align 4
  %shl66 = shl i32 %45, 3
  %add67 = add nsw i32 %shl66, 2
  %idxprom68 = sext i32 %add67 to i64
  %arrayidx69 = getelementptr inbounds i32, i32* %44, i64 %idxprom68
  %46 = load i32, i32* %arrayidx69, align 4
  %47 = load i32*, i32** %diff.addr, align 8
  %48 = load i32, i32* %j, align 4
  %shl70 = shl i32 %48, 3
  %add71 = add nsw i32 %shl70, 6
  %idxprom72 = sext i32 %add71 to i64
  %arrayidx73 = getelementptr inbounds i32, i32* %47, i64 %idxprom72
  %49 = load i32, i32* %arrayidx73, align 4
  %sub74 = sub nsw i32 %46, %49
  %50 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %50 to i64
  %arrayidx76 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom75
  %arrayidx77 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx76, i64 0, i64 6
  store i32 %sub74, i32* %arrayidx77, align 8
  %51 = load i32*, i32** %diff.addr, align 8
  %52 = load i32, i32* %j, align 4
  %shl78 = shl i32 %52, 3
  %add79 = add nsw i32 %shl78, 3
  %idxprom80 = sext i32 %add79 to i64
  %arrayidx81 = getelementptr inbounds i32, i32* %51, i64 %idxprom80
  %53 = load i32, i32* %arrayidx81, align 4
  %54 = load i32*, i32** %diff.addr, align 8
  %55 = load i32, i32* %j, align 4
  %shl82 = shl i32 %55, 3
  %add83 = add nsw i32 %shl82, 7
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds i32, i32* %54, i64 %idxprom84
  %56 = load i32, i32* %arrayidx85, align 4
  %sub86 = sub nsw i32 %53, %56
  %57 = load i32, i32* %j, align 4
  %idxprom87 = sext i32 %57 to i64
  %arrayidx88 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom87
  %arrayidx89 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx88, i64 0, i64 7
  store i32 %sub86, i32* %arrayidx89, align 4
  %58 = load i32, i32* %j, align 4
  %idxprom90 = sext i32 %58 to i64
  %arrayidx91 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom90
  %arrayidx92 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx91, i64 0, i64 0
  %59 = load i32, i32* %arrayidx92, align 16
  %60 = load i32, i32* %j, align 4
  %idxprom93 = sext i32 %60 to i64
  %arrayidx94 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom93
  %arrayidx95 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx94, i64 0, i64 2
  %61 = load i32, i32* %arrayidx95, align 8
  %add96 = add nsw i32 %59, %61
  %62 = load i32, i32* %j, align 4
  %idxprom97 = sext i32 %62 to i64
  %arrayidx98 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom97
  %arrayidx99 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx98, i64 0, i64 0
  store i32 %add96, i32* %arrayidx99, align 16
  %63 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %63 to i64
  %arrayidx101 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom100
  %arrayidx102 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx101, i64 0, i64 1
  %64 = load i32, i32* %arrayidx102, align 4
  %65 = load i32, i32* %j, align 4
  %idxprom103 = sext i32 %65 to i64
  %arrayidx104 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom103
  %arrayidx105 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx104, i64 0, i64 3
  %66 = load i32, i32* %arrayidx105, align 4
  %add106 = add nsw i32 %64, %66
  %67 = load i32, i32* %j, align 4
  %idxprom107 = sext i32 %67 to i64
  %arrayidx108 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom107
  %arrayidx109 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx108, i64 0, i64 1
  store i32 %add106, i32* %arrayidx109, align 4
  %68 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %68 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom110
  %arrayidx112 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 0
  %69 = load i32, i32* %arrayidx112, align 16
  %70 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %70 to i64
  %arrayidx114 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom113
  %arrayidx115 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx114, i64 0, i64 2
  %71 = load i32, i32* %arrayidx115, align 8
  %sub116 = sub nsw i32 %69, %71
  %72 = load i32, i32* %j, align 4
  %idxprom117 = sext i32 %72 to i64
  %arrayidx118 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom117
  %arrayidx119 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx118, i64 0, i64 2
  store i32 %sub116, i32* %arrayidx119, align 8
  %73 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %73 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom120
  %arrayidx122 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 1
  %74 = load i32, i32* %arrayidx122, align 4
  %75 = load i32, i32* %j, align 4
  %idxprom123 = sext i32 %75 to i64
  %arrayidx124 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom123
  %arrayidx125 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx124, i64 0, i64 3
  %76 = load i32, i32* %arrayidx125, align 4
  %sub126 = sub nsw i32 %74, %76
  %77 = load i32, i32* %j, align 4
  %idxprom127 = sext i32 %77 to i64
  %arrayidx128 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom127
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx128, i64 0, i64 3
  store i32 %sub126, i32* %arrayidx129, align 4
  %78 = load i32, i32* %j, align 4
  %idxprom130 = sext i32 %78 to i64
  %arrayidx131 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom130
  %arrayidx132 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx131, i64 0, i64 4
  %79 = load i32, i32* %arrayidx132, align 16
  %80 = load i32, i32* %j, align 4
  %idxprom133 = sext i32 %80 to i64
  %arrayidx134 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom133
  %arrayidx135 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx134, i64 0, i64 6
  %81 = load i32, i32* %arrayidx135, align 8
  %add136 = add nsw i32 %79, %81
  %82 = load i32, i32* %j, align 4
  %idxprom137 = sext i32 %82 to i64
  %arrayidx138 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom137
  %arrayidx139 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx138, i64 0, i64 4
  store i32 %add136, i32* %arrayidx139, align 16
  %83 = load i32, i32* %j, align 4
  %idxprom140 = sext i32 %83 to i64
  %arrayidx141 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom140
  %arrayidx142 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx141, i64 0, i64 5
  %84 = load i32, i32* %arrayidx142, align 4
  %85 = load i32, i32* %j, align 4
  %idxprom143 = sext i32 %85 to i64
  %arrayidx144 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom143
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx144, i64 0, i64 7
  %86 = load i32, i32* %arrayidx145, align 4
  %add146 = add nsw i32 %84, %86
  %87 = load i32, i32* %j, align 4
  %idxprom147 = sext i32 %87 to i64
  %arrayidx148 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom147
  %arrayidx149 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx148, i64 0, i64 5
  store i32 %add146, i32* %arrayidx149, align 4
  %88 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %88 to i64
  %arrayidx151 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom150
  %arrayidx152 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx151, i64 0, i64 4
  %89 = load i32, i32* %arrayidx152, align 16
  %90 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %90 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom153
  %arrayidx155 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 6
  %91 = load i32, i32* %arrayidx155, align 8
  %sub156 = sub nsw i32 %89, %91
  %92 = load i32, i32* %j, align 4
  %idxprom157 = sext i32 %92 to i64
  %arrayidx158 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom157
  %arrayidx159 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx158, i64 0, i64 6
  store i32 %sub156, i32* %arrayidx159, align 8
  %93 = load i32, i32* %j, align 4
  %idxprom160 = sext i32 %93 to i64
  %arrayidx161 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom160
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx161, i64 0, i64 5
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom163
  %arrayidx165 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx164, i64 0, i64 7
  %96 = load i32, i32* %arrayidx165, align 4
  %sub166 = sub nsw i32 %94, %96
  %97 = load i32, i32* %j, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom167
  %arrayidx169 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx168, i64 0, i64 7
  store i32 %sub166, i32* %arrayidx169, align 4
  %98 = load i32, i32* %j, align 4
  %idxprom170 = sext i32 %98 to i64
  %arrayidx171 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom170
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx171, i64 0, i64 0
  %99 = load i32, i32* %arrayidx172, align 16
  %100 = load i32, i32* %j, align 4
  %idxprom173 = sext i32 %100 to i64
  %arrayidx174 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom173
  %arrayidx175 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx174, i64 0, i64 1
  %101 = load i32, i32* %arrayidx175, align 4
  %add176 = add nsw i32 %99, %101
  %102 = load i32, i32* %j, align 4
  %idxprom177 = sext i32 %102 to i64
  %arrayidx178 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom177
  %arrayidx179 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx178, i64 0, i64 0
  store i32 %add176, i32* %arrayidx179, align 16
  %103 = load i32, i32* %j, align 4
  %idxprom180 = sext i32 %103 to i64
  %arrayidx181 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom180
  %arrayidx182 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx181, i64 0, i64 0
  %104 = load i32, i32* %arrayidx182, align 16
  %105 = load i32, i32* %j, align 4
  %idxprom183 = sext i32 %105 to i64
  %arrayidx184 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom183
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx184, i64 0, i64 1
  %106 = load i32, i32* %arrayidx185, align 4
  %sub186 = sub nsw i32 %104, %106
  %107 = load i32, i32* %j, align 4
  %idxprom187 = sext i32 %107 to i64
  %arrayidx188 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom187
  %arrayidx189 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx188, i64 0, i64 1
  store i32 %sub186, i32* %arrayidx189, align 4
  %108 = load i32, i32* %j, align 4
  %idxprom190 = sext i32 %108 to i64
  %arrayidx191 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom190
  %arrayidx192 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx191, i64 0, i64 2
  %109 = load i32, i32* %arrayidx192, align 8
  %110 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %110 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom193
  %arrayidx195 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 3
  %111 = load i32, i32* %arrayidx195, align 4
  %add196 = add nsw i32 %109, %111
  %112 = load i32, i32* %j, align 4
  %idxprom197 = sext i32 %112 to i64
  %arrayidx198 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom197
  %arrayidx199 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx198, i64 0, i64 2
  store i32 %add196, i32* %arrayidx199, align 8
  %113 = load i32, i32* %j, align 4
  %idxprom200 = sext i32 %113 to i64
  %arrayidx201 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom200
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx201, i64 0, i64 2
  %114 = load i32, i32* %arrayidx202, align 8
  %115 = load i32, i32* %j, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom203
  %arrayidx205 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx204, i64 0, i64 3
  %116 = load i32, i32* %arrayidx205, align 4
  %sub206 = sub nsw i32 %114, %116
  %117 = load i32, i32* %j, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom207
  %arrayidx209 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx208, i64 0, i64 3
  store i32 %sub206, i32* %arrayidx209, align 4
  %118 = load i32, i32* %j, align 4
  %idxprom210 = sext i32 %118 to i64
  %arrayidx211 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom210
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx211, i64 0, i64 4
  %119 = load i32, i32* %arrayidx212, align 16
  %120 = load i32, i32* %j, align 4
  %idxprom213 = sext i32 %120 to i64
  %arrayidx214 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom213
  %arrayidx215 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx214, i64 0, i64 5
  %121 = load i32, i32* %arrayidx215, align 4
  %add216 = add nsw i32 %119, %121
  %122 = load i32, i32* %j, align 4
  %idxprom217 = sext i32 %122 to i64
  %arrayidx218 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom217
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx218, i64 0, i64 4
  store i32 %add216, i32* %arrayidx219, align 16
  %123 = load i32, i32* %j, align 4
  %idxprom220 = sext i32 %123 to i64
  %arrayidx221 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom220
  %arrayidx222 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx221, i64 0, i64 4
  %124 = load i32, i32* %arrayidx222, align 16
  %125 = load i32, i32* %j, align 4
  %idxprom223 = sext i32 %125 to i64
  %arrayidx224 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom223
  %arrayidx225 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx224, i64 0, i64 5
  %126 = load i32, i32* %arrayidx225, align 4
  %sub226 = sub nsw i32 %124, %126
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom227
  %arrayidx229 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 5
  store i32 %sub226, i32* %arrayidx229, align 4
  %128 = load i32, i32* %j, align 4
  %idxprom230 = sext i32 %128 to i64
  %arrayidx231 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom230
  %arrayidx232 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx231, i64 0, i64 6
  %129 = load i32, i32* %arrayidx232, align 8
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom233
  %arrayidx235 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 7
  %131 = load i32, i32* %arrayidx235, align 4
  %add236 = add nsw i32 %129, %131
  %132 = load i32, i32* %j, align 4
  %idxprom237 = sext i32 %132 to i64
  %arrayidx238 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom237
  %arrayidx239 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx238, i64 0, i64 6
  store i32 %add236, i32* %arrayidx239, align 8
  %133 = load i32, i32* %j, align 4
  %idxprom240 = sext i32 %133 to i64
  %arrayidx241 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom240
  %arrayidx242 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx241, i64 0, i64 6
  %134 = load i32, i32* %arrayidx242, align 8
  %135 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %135 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 %idxprom243
  %arrayidx245 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 7
  %136 = load i32, i32* %arrayidx245, align 4
  %sub246 = sub nsw i32 %134, %136
  %137 = load i32, i32* %j, align 4
  %idxprom247 = sext i32 %137 to i64
  %arrayidx248 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom247
  %arrayidx249 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx248, i64 0, i64 7
  store i32 %sub246, i32* %arrayidx249, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %138 = load i32, i32* %j, align 4
  %inc = add nsw i32 %138, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond250

for.cond250:                                      ; preds = %for.inc493, %for.end
  %139 = load i32, i32* %i, align 4
  %cmp251 = icmp slt i32 %139, 8
  br i1 %cmp251, label %for.body252, label %for.end495

for.body252:                                      ; preds = %for.cond250
  %arrayidx253 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 0
  %140 = load i32, i32* %i, align 4
  %idxprom254 = sext i32 %140 to i64
  %arrayidx255 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx253, i64 0, i64 %idxprom254
  %141 = load i32, i32* %arrayidx255, align 4
  %arrayidx256 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 4
  %142 = load i32, i32* %i, align 4
  %idxprom257 = sext i32 %142 to i64
  %arrayidx258 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx256, i64 0, i64 %idxprom257
  %143 = load i32, i32* %arrayidx258, align 4
  %add259 = add nsw i32 %141, %143
  %arrayidx260 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 0
  %144 = load i32, i32* %i, align 4
  %idxprom261 = sext i32 %144 to i64
  %arrayidx262 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx260, i64 0, i64 %idxprom261
  store i32 %add259, i32* %arrayidx262, align 4
  %arrayidx263 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 1
  %145 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %145 to i64
  %arrayidx265 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  %146 = load i32, i32* %arrayidx265, align 4
  %arrayidx266 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 5
  %147 = load i32, i32* %i, align 4
  %idxprom267 = sext i32 %147 to i64
  %arrayidx268 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx266, i64 0, i64 %idxprom267
  %148 = load i32, i32* %arrayidx268, align 4
  %add269 = add nsw i32 %146, %148
  %arrayidx270 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 1
  %149 = load i32, i32* %i, align 4
  %idxprom271 = sext i32 %149 to i64
  %arrayidx272 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx270, i64 0, i64 %idxprom271
  store i32 %add269, i32* %arrayidx272, align 4
  %arrayidx273 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 2
  %150 = load i32, i32* %i, align 4
  %idxprom274 = sext i32 %150 to i64
  %arrayidx275 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx273, i64 0, i64 %idxprom274
  %151 = load i32, i32* %arrayidx275, align 4
  %arrayidx276 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 6
  %152 = load i32, i32* %i, align 4
  %idxprom277 = sext i32 %152 to i64
  %arrayidx278 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx276, i64 0, i64 %idxprom277
  %153 = load i32, i32* %arrayidx278, align 4
  %add279 = add nsw i32 %151, %153
  %arrayidx280 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 2
  %154 = load i32, i32* %i, align 4
  %idxprom281 = sext i32 %154 to i64
  %arrayidx282 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx280, i64 0, i64 %idxprom281
  store i32 %add279, i32* %arrayidx282, align 4
  %arrayidx283 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 3
  %155 = load i32, i32* %i, align 4
  %idxprom284 = sext i32 %155 to i64
  %arrayidx285 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx283, i64 0, i64 %idxprom284
  %156 = load i32, i32* %arrayidx285, align 4
  %arrayidx286 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 7
  %157 = load i32, i32* %i, align 4
  %idxprom287 = sext i32 %157 to i64
  %arrayidx288 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx286, i64 0, i64 %idxprom287
  %158 = load i32, i32* %arrayidx288, align 4
  %add289 = add nsw i32 %156, %158
  %arrayidx290 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 3
  %159 = load i32, i32* %i, align 4
  %idxprom291 = sext i32 %159 to i64
  %arrayidx292 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx290, i64 0, i64 %idxprom291
  store i32 %add289, i32* %arrayidx292, align 4
  %arrayidx293 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 0
  %160 = load i32, i32* %i, align 4
  %idxprom294 = sext i32 %160 to i64
  %arrayidx295 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx293, i64 0, i64 %idxprom294
  %161 = load i32, i32* %arrayidx295, align 4
  %arrayidx296 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 4
  %162 = load i32, i32* %i, align 4
  %idxprom297 = sext i32 %162 to i64
  %arrayidx298 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx296, i64 0, i64 %idxprom297
  %163 = load i32, i32* %arrayidx298, align 4
  %sub299 = sub nsw i32 %161, %163
  %arrayidx300 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 4
  %164 = load i32, i32* %i, align 4
  %idxprom301 = sext i32 %164 to i64
  %arrayidx302 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx300, i64 0, i64 %idxprom301
  store i32 %sub299, i32* %arrayidx302, align 4
  %arrayidx303 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 1
  %165 = load i32, i32* %i, align 4
  %idxprom304 = sext i32 %165 to i64
  %arrayidx305 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx303, i64 0, i64 %idxprom304
  %166 = load i32, i32* %arrayidx305, align 4
  %arrayidx306 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 5
  %167 = load i32, i32* %i, align 4
  %idxprom307 = sext i32 %167 to i64
  %arrayidx308 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx306, i64 0, i64 %idxprom307
  %168 = load i32, i32* %arrayidx308, align 4
  %sub309 = sub nsw i32 %166, %168
  %arrayidx310 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 5
  %169 = load i32, i32* %i, align 4
  %idxprom311 = sext i32 %169 to i64
  %arrayidx312 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx310, i64 0, i64 %idxprom311
  store i32 %sub309, i32* %arrayidx312, align 4
  %arrayidx313 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 2
  %170 = load i32, i32* %i, align 4
  %idxprom314 = sext i32 %170 to i64
  %arrayidx315 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx313, i64 0, i64 %idxprom314
  %171 = load i32, i32* %arrayidx315, align 4
  %arrayidx316 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 6
  %172 = load i32, i32* %i, align 4
  %idxprom317 = sext i32 %172 to i64
  %arrayidx318 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx316, i64 0, i64 %idxprom317
  %173 = load i32, i32* %arrayidx318, align 4
  %sub319 = sub nsw i32 %171, %173
  %arrayidx320 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 6
  %174 = load i32, i32* %i, align 4
  %idxprom321 = sext i32 %174 to i64
  %arrayidx322 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx320, i64 0, i64 %idxprom321
  store i32 %sub319, i32* %arrayidx322, align 4
  %arrayidx323 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 3
  %175 = load i32, i32* %i, align 4
  %idxprom324 = sext i32 %175 to i64
  %arrayidx325 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx323, i64 0, i64 %idxprom324
  %176 = load i32, i32* %arrayidx325, align 4
  %arrayidx326 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 7
  %177 = load i32, i32* %i, align 4
  %idxprom327 = sext i32 %177 to i64
  %arrayidx328 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx326, i64 0, i64 %idxprom327
  %178 = load i32, i32* %arrayidx328, align 4
  %sub329 = sub nsw i32 %176, %178
  %arrayidx330 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 7
  %179 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %179 to i64
  %arrayidx332 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %sub329, i32* %arrayidx332, align 4
  %arrayidx333 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 0
  %180 = load i32, i32* %i, align 4
  %idxprom334 = sext i32 %180 to i64
  %arrayidx335 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx333, i64 0, i64 %idxprom334
  %181 = load i32, i32* %arrayidx335, align 4
  %arrayidx336 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 2
  %182 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %182 to i64
  %arrayidx338 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %183 = load i32, i32* %arrayidx338, align 4
  %add339 = add nsw i32 %181, %183
  %arrayidx340 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 0
  %184 = load i32, i32* %i, align 4
  %idxprom341 = sext i32 %184 to i64
  %arrayidx342 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx340, i64 0, i64 %idxprom341
  store i32 %add339, i32* %arrayidx342, align 4
  %arrayidx343 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 1
  %185 = load i32, i32* %i, align 4
  %idxprom344 = sext i32 %185 to i64
  %arrayidx345 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx343, i64 0, i64 %idxprom344
  %186 = load i32, i32* %arrayidx345, align 4
  %arrayidx346 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 3
  %187 = load i32, i32* %i, align 4
  %idxprom347 = sext i32 %187 to i64
  %arrayidx348 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx346, i64 0, i64 %idxprom347
  %188 = load i32, i32* %arrayidx348, align 4
  %add349 = add nsw i32 %186, %188
  %arrayidx350 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 1
  %189 = load i32, i32* %i, align 4
  %idxprom351 = sext i32 %189 to i64
  %arrayidx352 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx350, i64 0, i64 %idxprom351
  store i32 %add349, i32* %arrayidx352, align 4
  %arrayidx353 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 0
  %190 = load i32, i32* %i, align 4
  %idxprom354 = sext i32 %190 to i64
  %arrayidx355 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx353, i64 0, i64 %idxprom354
  %191 = load i32, i32* %arrayidx355, align 4
  %arrayidx356 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 2
  %192 = load i32, i32* %i, align 4
  %idxprom357 = sext i32 %192 to i64
  %arrayidx358 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx356, i64 0, i64 %idxprom357
  %193 = load i32, i32* %arrayidx358, align 4
  %sub359 = sub nsw i32 %191, %193
  %arrayidx360 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 2
  %194 = load i32, i32* %i, align 4
  %idxprom361 = sext i32 %194 to i64
  %arrayidx362 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx360, i64 0, i64 %idxprom361
  store i32 %sub359, i32* %arrayidx362, align 4
  %arrayidx363 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 1
  %195 = load i32, i32* %i, align 4
  %idxprom364 = sext i32 %195 to i64
  %arrayidx365 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx363, i64 0, i64 %idxprom364
  %196 = load i32, i32* %arrayidx365, align 4
  %arrayidx366 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 3
  %197 = load i32, i32* %i, align 4
  %idxprom367 = sext i32 %197 to i64
  %arrayidx368 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx366, i64 0, i64 %idxprom367
  %198 = load i32, i32* %arrayidx368, align 4
  %sub369 = sub nsw i32 %196, %198
  %arrayidx370 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 3
  %199 = load i32, i32* %i, align 4
  %idxprom371 = sext i32 %199 to i64
  %arrayidx372 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx370, i64 0, i64 %idxprom371
  store i32 %sub369, i32* %arrayidx372, align 4
  %arrayidx373 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 4
  %200 = load i32, i32* %i, align 4
  %idxprom374 = sext i32 %200 to i64
  %arrayidx375 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx373, i64 0, i64 %idxprom374
  %201 = load i32, i32* %arrayidx375, align 4
  %arrayidx376 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 6
  %202 = load i32, i32* %i, align 4
  %idxprom377 = sext i32 %202 to i64
  %arrayidx378 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx376, i64 0, i64 %idxprom377
  %203 = load i32, i32* %arrayidx378, align 4
  %add379 = add nsw i32 %201, %203
  %arrayidx380 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 4
  %204 = load i32, i32* %i, align 4
  %idxprom381 = sext i32 %204 to i64
  %arrayidx382 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx380, i64 0, i64 %idxprom381
  store i32 %add379, i32* %arrayidx382, align 4
  %arrayidx383 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 5
  %205 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %205 to i64
  %arrayidx385 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  %206 = load i32, i32* %arrayidx385, align 4
  %arrayidx386 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 7
  %207 = load i32, i32* %i, align 4
  %idxprom387 = sext i32 %207 to i64
  %arrayidx388 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx386, i64 0, i64 %idxprom387
  %208 = load i32, i32* %arrayidx388, align 4
  %add389 = add nsw i32 %206, %208
  %arrayidx390 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 5
  %209 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %209 to i64
  %arrayidx392 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  store i32 %add389, i32* %arrayidx392, align 4
  %arrayidx393 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 4
  %210 = load i32, i32* %i, align 4
  %idxprom394 = sext i32 %210 to i64
  %arrayidx395 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx393, i64 0, i64 %idxprom394
  %211 = load i32, i32* %arrayidx395, align 4
  %arrayidx396 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 6
  %212 = load i32, i32* %i, align 4
  %idxprom397 = sext i32 %212 to i64
  %arrayidx398 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx396, i64 0, i64 %idxprom397
  %213 = load i32, i32* %arrayidx398, align 4
  %sub399 = sub nsw i32 %211, %213
  %arrayidx400 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 6
  %214 = load i32, i32* %i, align 4
  %idxprom401 = sext i32 %214 to i64
  %arrayidx402 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx400, i64 0, i64 %idxprom401
  store i32 %sub399, i32* %arrayidx402, align 4
  %arrayidx403 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 5
  %215 = load i32, i32* %i, align 4
  %idxprom404 = sext i32 %215 to i64
  %arrayidx405 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx403, i64 0, i64 %idxprom404
  %216 = load i32, i32* %arrayidx405, align 4
  %arrayidx406 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m3, i64 0, i64 7
  %217 = load i32, i32* %i, align 4
  %idxprom407 = sext i32 %217 to i64
  %arrayidx408 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx406, i64 0, i64 %idxprom407
  %218 = load i32, i32* %arrayidx408, align 4
  %sub409 = sub nsw i32 %216, %218
  %arrayidx410 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 7
  %219 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %219 to i64
  %arrayidx412 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %sub409, i32* %arrayidx412, align 4
  %arrayidx413 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 0
  %220 = load i32, i32* %i, align 4
  %idxprom414 = sext i32 %220 to i64
  %arrayidx415 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx413, i64 0, i64 %idxprom414
  %221 = load i32, i32* %arrayidx415, align 4
  %arrayidx416 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 1
  %222 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %222 to i64
  %arrayidx418 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %223 = load i32, i32* %arrayidx418, align 4
  %add419 = add nsw i32 %221, %223
  %arrayidx420 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 0
  %224 = load i32, i32* %i, align 4
  %idxprom421 = sext i32 %224 to i64
  %arrayidx422 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx420, i64 0, i64 %idxprom421
  store i32 %add419, i32* %arrayidx422, align 4
  %arrayidx423 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 0
  %225 = load i32, i32* %i, align 4
  %idxprom424 = sext i32 %225 to i64
  %arrayidx425 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx423, i64 0, i64 %idxprom424
  %226 = load i32, i32* %arrayidx425, align 4
  %arrayidx426 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 1
  %227 = load i32, i32* %i, align 4
  %idxprom427 = sext i32 %227 to i64
  %arrayidx428 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx426, i64 0, i64 %idxprom427
  %228 = load i32, i32* %arrayidx428, align 4
  %sub429 = sub nsw i32 %226, %228
  %arrayidx430 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 1
  %229 = load i32, i32* %i, align 4
  %idxprom431 = sext i32 %229 to i64
  %arrayidx432 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx430, i64 0, i64 %idxprom431
  store i32 %sub429, i32* %arrayidx432, align 4
  %arrayidx433 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 2
  %230 = load i32, i32* %i, align 4
  %idxprom434 = sext i32 %230 to i64
  %arrayidx435 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx433, i64 0, i64 %idxprom434
  %231 = load i32, i32* %arrayidx435, align 4
  %arrayidx436 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 3
  %232 = load i32, i32* %i, align 4
  %idxprom437 = sext i32 %232 to i64
  %arrayidx438 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx436, i64 0, i64 %idxprom437
  %233 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %231, %233
  %arrayidx440 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 2
  %234 = load i32, i32* %i, align 4
  %idxprom441 = sext i32 %234 to i64
  %arrayidx442 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx440, i64 0, i64 %idxprom441
  store i32 %add439, i32* %arrayidx442, align 4
  %arrayidx443 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 2
  %235 = load i32, i32* %i, align 4
  %idxprom444 = sext i32 %235 to i64
  %arrayidx445 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx443, i64 0, i64 %idxprom444
  %236 = load i32, i32* %arrayidx445, align 4
  %arrayidx446 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 3
  %237 = load i32, i32* %i, align 4
  %idxprom447 = sext i32 %237 to i64
  %arrayidx448 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx446, i64 0, i64 %idxprom447
  %238 = load i32, i32* %arrayidx448, align 4
  %sub449 = sub nsw i32 %236, %238
  %arrayidx450 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 3
  %239 = load i32, i32* %i, align 4
  %idxprom451 = sext i32 %239 to i64
  %arrayidx452 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx450, i64 0, i64 %idxprom451
  store i32 %sub449, i32* %arrayidx452, align 4
  %arrayidx453 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 4
  %240 = load i32, i32* %i, align 4
  %idxprom454 = sext i32 %240 to i64
  %arrayidx455 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx453, i64 0, i64 %idxprom454
  %241 = load i32, i32* %arrayidx455, align 4
  %arrayidx456 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 5
  %242 = load i32, i32* %i, align 4
  %idxprom457 = sext i32 %242 to i64
  %arrayidx458 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx456, i64 0, i64 %idxprom457
  %243 = load i32, i32* %arrayidx458, align 4
  %add459 = add nsw i32 %241, %243
  %arrayidx460 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 4
  %244 = load i32, i32* %i, align 4
  %idxprom461 = sext i32 %244 to i64
  %arrayidx462 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx460, i64 0, i64 %idxprom461
  store i32 %add459, i32* %arrayidx462, align 4
  %arrayidx463 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 4
  %245 = load i32, i32* %i, align 4
  %idxprom464 = sext i32 %245 to i64
  %arrayidx465 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx463, i64 0, i64 %idxprom464
  %246 = load i32, i32* %arrayidx465, align 4
  %arrayidx466 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 5
  %247 = load i32, i32* %i, align 4
  %idxprom467 = sext i32 %247 to i64
  %arrayidx468 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx466, i64 0, i64 %idxprom467
  %248 = load i32, i32* %arrayidx468, align 4
  %sub469 = sub nsw i32 %246, %248
  %arrayidx470 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 5
  %249 = load i32, i32* %i, align 4
  %idxprom471 = sext i32 %249 to i64
  %arrayidx472 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx470, i64 0, i64 %idxprom471
  store i32 %sub469, i32* %arrayidx472, align 4
  %arrayidx473 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 6
  %250 = load i32, i32* %i, align 4
  %idxprom474 = sext i32 %250 to i64
  %arrayidx475 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx473, i64 0, i64 %idxprom474
  %251 = load i32, i32* %arrayidx475, align 4
  %arrayidx476 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 7
  %252 = load i32, i32* %i, align 4
  %idxprom477 = sext i32 %252 to i64
  %arrayidx478 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx476, i64 0, i64 %idxprom477
  %253 = load i32, i32* %arrayidx478, align 4
  %add479 = add nsw i32 %251, %253
  %arrayidx480 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 6
  %254 = load i32, i32* %i, align 4
  %idxprom481 = sext i32 %254 to i64
  %arrayidx482 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx480, i64 0, i64 %idxprom481
  store i32 %add479, i32* %arrayidx482, align 4
  %arrayidx483 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 6
  %255 = load i32, i32* %i, align 4
  %idxprom484 = sext i32 %255 to i64
  %arrayidx485 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx483, i64 0, i64 %idxprom484
  %256 = load i32, i32* %arrayidx485, align 4
  %arrayidx486 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m1, i64 0, i64 7
  %257 = load i32, i32* %i, align 4
  %idxprom487 = sext i32 %257 to i64
  %arrayidx488 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx486, i64 0, i64 %idxprom487
  %258 = load i32, i32* %arrayidx488, align 4
  %sub489 = sub nsw i32 %256, %258
  %arrayidx490 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 7
  %259 = load i32, i32* %i, align 4
  %idxprom491 = sext i32 %259 to i64
  %arrayidx492 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx490, i64 0, i64 %idxprom491
  store i32 %sub489, i32* %arrayidx492, align 4
  br label %for.inc493

for.inc493:                                       ; preds = %for.body252
  %260 = load i32, i32* %i, align 4
  %inc494 = add nsw i32 %260, 1
  store i32 %inc494, i32* %i, align 4
  br label %for.cond250

for.end495:                                       ; preds = %for.cond250
  store i32 0, i32* %j, align 4
  br label %for.cond496

for.cond496:                                      ; preds = %for.inc520, %for.end495
  %261 = load i32, i32* %j, align 4
  %cmp497 = icmp slt i32 %261, 8
  br i1 %cmp497, label %for.body498, label %for.end522

for.body498:                                      ; preds = %for.cond496
  store i32 0, i32* %i, align 4
  br label %for.cond499

for.cond499:                                      ; preds = %for.inc517, %for.body498
  %262 = load i32, i32* %i, align 4
  %cmp500 = icmp slt i32 %262, 8
  br i1 %cmp500, label %for.body501, label %for.end519

for.body501:                                      ; preds = %for.cond499
  %263 = load i32, i32* %j, align 4
  %idxprom502 = sext i32 %263 to i64
  %arrayidx503 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom502
  %264 = load i32, i32* %i, align 4
  %idxprom504 = sext i32 %264 to i64
  %arrayidx505 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx503, i64 0, i64 %idxprom504
  %265 = load i32, i32* %arrayidx505, align 4
  %cmp506 = icmp slt i32 %265, 0
  br i1 %cmp506, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body501
  %266 = load i32, i32* %j, align 4
  %idxprom507 = sext i32 %266 to i64
  %arrayidx508 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom507
  %267 = load i32, i32* %i, align 4
  %idxprom509 = sext i32 %267 to i64
  %arrayidx510 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx508, i64 0, i64 %idxprom509
  %268 = load i32, i32* %arrayidx510, align 4
  %sub511 = sub nsw i32 0, %268
  br label %cond.end

cond.false:                                       ; preds = %for.body501
  %269 = load i32, i32* %j, align 4
  %idxprom512 = sext i32 %269 to i64
  %arrayidx513 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %m2, i64 0, i64 %idxprom512
  %270 = load i32, i32* %i, align 4
  %idxprom514 = sext i32 %270 to i64
  %arrayidx515 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx513, i64 0, i64 %idxprom514
  %271 = load i32, i32* %arrayidx515, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub511, %cond.true ], [ %271, %cond.false ]
  %272 = load i32, i32* %sad, align 4
  %add516 = add nsw i32 %272, %cond
  store i32 %add516, i32* %sad, align 4
  br label %for.inc517

for.inc517:                                       ; preds = %cond.end
  %273 = load i32, i32* %i, align 4
  %inc518 = add nsw i32 %273, 1
  store i32 %inc518, i32* %i, align 4
  br label %for.cond499

for.end519:                                       ; preds = %for.cond499
  br label %for.inc520

for.inc520:                                       ; preds = %for.end519
  %274 = load i32, i32* %j, align 4
  %inc521 = add nsw i32 %274, 1
  store i32 %inc521, i32* %j, align 4
  br label %for.cond496

for.end522:                                       ; preds = %for.cond496
  %275 = load i32, i32* %sad, align 4
  %add523 = add nsw i32 %275, 2
  %shr = ashr i32 %add523, 2
  store i32 %shr, i32* %sad, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond524

for.cond524:                                      ; preds = %for.inc532, %if.else
  %276 = load i32, i32* %i, align 4
  %cmp525 = icmp slt i32 %276, 64
  br i1 %cmp525, label %for.body526, label %for.end534

for.body526:                                      ; preds = %for.cond524
  %277 = load i32*, i32** @byte_abs, align 8
  %278 = load i32*, i32** %diff.addr, align 8
  %279 = load i32, i32* %i, align 4
  %idxprom527 = sext i32 %279 to i64
  %arrayidx528 = getelementptr inbounds i32, i32* %278, i64 %idxprom527
  %280 = load i32, i32* %arrayidx528, align 4
  %idxprom529 = sext i32 %280 to i64
  %arrayidx530 = getelementptr inbounds i32, i32* %277, i64 %idxprom529
  %281 = load i32, i32* %arrayidx530, align 4
  %282 = load i32, i32* %sad, align 4
  %add531 = add nsw i32 %282, %281
  store i32 %add531, i32* %sad, align 4
  br label %for.inc532

for.inc532:                                       ; preds = %for.body526
  %283 = load i32, i32* %i, align 4
  %inc533 = add nsw i32 %283, 1
  store i32 %inc533, i32* %i, align 4
  br label %for.cond524

for.end534:                                       ; preds = %for.cond524
  br label %if.end

if.end:                                           ; preds = %for.end534, %for.end522
  %284 = load i32, i32* %sad, align 4
  ret i32 %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @find_SATD([16 x i32]* %curr_diff, i32 %use_hadamard, i32 %blocktype) #0 {
entry:
  %curr_diff.addr = alloca [16 x i32]*, align 8
  %use_hadamard.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %sad = alloca i32, align 4
  %block_size_x = alloca i32, align 4
  %block_size_y = alloca i32, align 4
  %block_size = alloca i32, align 4
  %diff = alloca [256 x i32], align 16
  store [16 x i32]* %curr_diff, [16 x i32]** %curr_diff.addr, align 8
  store i32 %use_hadamard, i32* %use_hadamard.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 0, i32* %sad, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 20
  %1 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 8
  store i32 %2, i32* %block_size_x, align 4
  %3 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size2 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %3, i32 0, i32 20
  %4 = load i32, i32* %blocktype.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size2, i64 0, i64 %idxprom3
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i64 0, i64 1
  %5 = load i32, i32* %arrayidx5, align 4
  store i32 %5, i32* %block_size_y, align 4
  %6 = load i32, i32* %blocktype.addr, align 4
  %cmp = icmp sgt i32 %6, 4
  %7 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 4, i32 8
  store i32 %cond, i32* %block_size, align 4
  store i32 0, i32* %k, align 4
  store i32 0, i32* %y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc30, %entry
  %8 = load i32, i32* %y, align 4
  %9 = load i32, i32* %block_size_y, align 4
  %cmp6 = icmp slt i32 %8, %9
  br i1 %cmp6, label %for.body, label %for.end32

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc27, %for.body
  %10 = load i32, i32* %x, align 4
  %11 = load i32, i32* %block_size_x, align 4
  %cmp8 = icmp slt i32 %10, %11
  br i1 %cmp8, label %for.body9, label %for.end29

for.body9:                                        ; preds = %for.cond7
  %12 = load i32, i32* %y, align 4
  store i32 %12, i32* %j, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc24, %for.body9
  %13 = load i32, i32* %j, align 4
  %14 = load i32, i32* %y, align 4
  %15 = load i32, i32* %block_size, align 4
  %add = add nsw i32 %14, %15
  %cmp11 = icmp slt i32 %13, %add
  br i1 %cmp11, label %for.body12, label %for.end26

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %x, align 4
  store i32 %16, i32* %i, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc, %for.body12
  %17 = load i32, i32* %i, align 4
  %18 = load i32, i32* %x, align 4
  %19 = load i32, i32* %block_size, align 4
  %add14 = add nsw i32 %18, %19
  %cmp15 = icmp slt i32 %17, %add14
  br i1 %cmp15, label %for.body16, label %for.end

for.body16:                                       ; preds = %for.cond13
  %20 = load [16 x i32]*, [16 x i32]** %curr_diff.addr, align 8
  %21 = load i32, i32* %j, align 4
  %idxprom17 = sext i32 %21 to i64
  %arrayidx18 = getelementptr inbounds [16 x i32], [16 x i32]* %20, i64 %idxprom17
  %22 = load i32, i32* %i, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx18, i64 0, i64 %idxprom19
  %23 = load i32, i32* %arrayidx20, align 4
  %24 = load i32, i32* %k, align 4
  %idxprom21 = sext i32 %24 to i64
  %arrayidx22 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 %idxprom21
  store i32 %23, i32* %arrayidx22, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body16
  %25 = load i32, i32* %i, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %i, align 4
  %26 = load i32, i32* %k, align 4
  %inc23 = add nsw i32 %26, 1
  store i32 %inc23, i32* %k, align 4
  br label %for.cond13

for.end:                                          ; preds = %for.cond13
  br label %for.inc24

for.inc24:                                        ; preds = %for.end
  %27 = load i32, i32* %j, align 4
  %inc25 = add nsw i32 %27, 1
  store i32 %inc25, i32* %j, align 4
  br label %for.cond10

for.end26:                                        ; preds = %for.cond10
  br label %for.inc27

for.inc27:                                        ; preds = %for.end26
  %28 = load i32, i32* %block_size, align 4
  %29 = load i32, i32* %x, align 4
  %add28 = add nsw i32 %29, %28
  store i32 %add28, i32* %x, align 4
  br label %for.cond7

for.end29:                                        ; preds = %for.cond7
  br label %for.inc30

for.inc30:                                        ; preds = %for.end29
  %30 = load i32, i32* %block_size, align 4
  %31 = load i32, i32* %y, align 4
  %add31 = add nsw i32 %31, %30
  store i32 %add31, i32* %y, align 4
  br label %for.cond

for.end32:                                        ; preds = %for.cond
  %32 = load i32, i32* %use_hadamard.addr, align 4
  %tobool = icmp ne i32 %32, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.end32
  %33 = load i32, i32* %blocktype.addr, align 4
  switch i32 %33, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb45
    i32 3, label %sw.bb45
    i32 4, label %sw.bb53
    i32 5, label %sw.bb57
    i32 6, label %sw.bb57
    i32 7, label %sw.bb65
  ]

sw.bb:                                            ; preds = %if.then
  %arraydecay = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 0
  %34 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %34, i32 0, i32 6
  %35 = load i32, i32* %hadamard, align 8
  %call = call i32 @SATD8X8(i32* %arraydecay, i32 %35)
  store i32 %call, i32* %sad, align 4
  %arrayidx33 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 64
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard34 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 6
  %37 = load i32, i32* %hadamard34, align 8
  %call35 = call i32 @SATD8X8(i32* %arrayidx33, i32 %37)
  %38 = load i32, i32* %sad, align 4
  %add36 = add nsw i32 %38, %call35
  store i32 %add36, i32* %sad, align 4
  %arrayidx37 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 128
  %39 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard38 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %39, i32 0, i32 6
  %40 = load i32, i32* %hadamard38, align 8
  %call39 = call i32 @SATD8X8(i32* %arrayidx37, i32 %40)
  %41 = load i32, i32* %sad, align 4
  %add40 = add nsw i32 %41, %call39
  store i32 %add40, i32* %sad, align 4
  %arrayidx41 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 192
  %42 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard42 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %42, i32 0, i32 6
  %43 = load i32, i32* %hadamard42, align 8
  %call43 = call i32 @SATD8X8(i32* %arrayidx41, i32 %43)
  %44 = load i32, i32* %sad, align 4
  %add44 = add nsw i32 %44, %call43
  store i32 %add44, i32* %sad, align 4
  br label %sw.epilog

sw.bb45:                                          ; preds = %if.then, %if.then
  %arraydecay46 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 0
  %45 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard47 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %45, i32 0, i32 6
  %46 = load i32, i32* %hadamard47, align 8
  %call48 = call i32 @SATD8X8(i32* %arraydecay46, i32 %46)
  store i32 %call48, i32* %sad, align 4
  %arrayidx49 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 64
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard50 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 6
  %48 = load i32, i32* %hadamard50, align 8
  %call51 = call i32 @SATD8X8(i32* %arrayidx49, i32 %48)
  %49 = load i32, i32* %sad, align 4
  %add52 = add nsw i32 %49, %call51
  store i32 %add52, i32* %sad, align 4
  br label %sw.epilog

sw.bb53:                                          ; preds = %if.then
  %arraydecay54 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 0
  %50 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard55 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %50, i32 0, i32 6
  %51 = load i32, i32* %hadamard55, align 8
  %call56 = call i32 @SATD8X8(i32* %arraydecay54, i32 %51)
  store i32 %call56, i32* %sad, align 4
  br label %sw.epilog

sw.bb57:                                          ; preds = %if.then, %if.then
  %arraydecay58 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 0
  %52 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard59 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %52, i32 0, i32 6
  %53 = load i32, i32* %hadamard59, align 8
  %call60 = call i32 @SATD(i32* %arraydecay58, i32 %53)
  store i32 %call60, i32* %sad, align 4
  %arrayidx61 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 16
  %54 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard62 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %54, i32 0, i32 6
  %55 = load i32, i32* %hadamard62, align 8
  %call63 = call i32 @SATD(i32* %arrayidx61, i32 %55)
  %56 = load i32, i32* %sad, align 4
  %add64 = add nsw i32 %56, %call63
  store i32 %add64, i32* %sad, align 4
  br label %sw.epilog

sw.bb65:                                          ; preds = %if.then
  %arraydecay66 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 0
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard67 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 6
  %58 = load i32, i32* %hadamard67, align 8
  %call68 = call i32 @SATD(i32* %arraydecay66, i32 %58)
  store i32 %call68, i32* %sad, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %if.then
  store i32 -1, i32* %sad, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb57, %sw.bb53, %sw.bb45, %sw.bb
  br label %if.end

if.else:                                          ; preds = %for.end32
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc77, %if.else
  %59 = load i32, i32* %i, align 4
  %60 = load i32, i32* %block_size_y, align 4
  %61 = load i32, i32* %block_size_x, align 4
  %mul = mul nsw i32 %60, %61
  %cmp70 = icmp slt i32 %59, %mul
  br i1 %cmp70, label %for.body71, label %for.end79

for.body71:                                       ; preds = %for.cond69
  %62 = load i32*, i32** @byte_abs, align 8
  %63 = load i32, i32* %i, align 4
  %idxprom72 = sext i32 %63 to i64
  %arrayidx73 = getelementptr inbounds [256 x i32], [256 x i32]* %diff, i64 0, i64 %idxprom72
  %64 = load i32, i32* %arrayidx73, align 4
  %idxprom74 = sext i32 %64 to i64
  %arrayidx75 = getelementptr inbounds i32, i32* %62, i64 %idxprom74
  %65 = load i32, i32* %arrayidx75, align 4
  %66 = load i32, i32* %sad, align 4
  %add76 = add nsw i32 %66, %65
  store i32 %add76, i32* %sad, align 4
  br label %for.inc77

for.inc77:                                        ; preds = %for.body71
  %67 = load i32, i32* %i, align 4
  %inc78 = add nsw i32 %67, 1
  store i32 %inc78, i32* %i, align 4
  br label %for.cond69

for.end79:                                        ; preds = %for.cond69
  br label %if.end

if.end:                                           ; preds = %for.end79, %sw.epilog
  %68 = load i32, i32* %sad, align 4
  ret i32 %68
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SubPelBlockMotionSearch(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %search_pos2.addr = alloca i32, align 4
  %search_pos4.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %curr_diff = alloca [16 x [16 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %d = alloca i32*, align 8
  %pos = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %mcost = alloca i32, align 4
  %abort_search = alloca i32, align 4
  %y0 = alloca i32, align 4
  %x0 = alloca i32, align 4
  %ry0 = alloca i32, align 4
  %rx0 = alloca i32, align 4
  %ry = alloca i32, align 4
  %cand_mv_x = alloca i32, align 4
  %cand_mv_y = alloca i32, align 4
  %max_pos_x4 = alloca i32, align 4
  %max_pos_y4 = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref_pic = alloca i16**, align 8
  %ref_picture = alloca %struct.storable_picture*, align 8
  %lambda_factor = alloca i32, align 4
  %mv_shift = alloca i32, align 4
  %check_position0 = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %pic4_pix_x = alloca i32, align 4
  %pic4_pix_y = alloca i32, align 4
  %min_pos2 = alloca i32, align 4
  %max_pos2 = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %apply_weights = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %halfpelhadamard = alloca i32, align 4
  %qpelstart = alloca i32, align 4
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i32 %search_pos2, i32* %search_pos2.addr, align 4
  store i32 %search_pos4, i32* %search_pos4.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load double, double* %lambda.addr, align 8
  %mul = fmul double 6.553600e+04, %0
  %add = fadd double %mul, 5.000000e-01
  %conv = fptosi double %add to i32
  store i32 %conv, i32* %lambda_factor, align 4
  store i32 0, i32* %mv_shift, align 4
  %1 = load i32, i32* %blocktype.addr, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i16*, i16** %mv_x.addr, align 8
  %3 = load i16, i16* %2, align 2
  %conv2 = sext i16 %3 to i32
  %cmp3 = icmp eq i32 %conv2, 0
  br i1 %cmp3, label %land.lhs.true5, label %land.end

land.lhs.true5:                                   ; preds = %land.lhs.true
  %4 = load i16*, i16** %mv_y.addr, align 8
  %5 = load i16, i16* %4, align 2
  %conv6 = sext i16 %5 to i32
  %cmp7 = icmp eq i32 %conv6, 0
  br i1 %cmp7, label %land.lhs.true9, label %land.end

land.lhs.true9:                                   ; preds = %land.lhs.true5
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 6
  %7 = load i32, i32* %hadamard, align 8
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true10, label %land.end

land.lhs.true10:                                  ; preds = %land.lhs.true9
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 85
  %9 = load i32, i32* %rdopt, align 8
  %tobool11 = icmp ne i32 %9, 0
  br i1 %tobool11, label %land.end, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 6
  %11 = load i32, i32* %type, align 8
  %cmp13 = icmp ne i32 %11, 1
  br i1 %cmp13, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true12
  %12 = load i16, i16* %ref.addr, align 2
  %conv15 = sext i16 %12 to i32
  %cmp16 = icmp eq i32 %conv15, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true12, %land.lhs.true10, %land.lhs.true9, %land.lhs.true5, %land.lhs.true, %entry
  %13 = phi i1 [ false, %land.lhs.true12 ], [ false, %land.lhs.true10 ], [ false, %land.lhs.true9 ], [ false, %land.lhs.true5 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp16, %land.rhs ]
  %land.ext = zext i1 %13 to i32
  store i32 %land.ext, i32* %check_position0, align 4
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 20
  %15 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom
  %arrayidx18 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %16 = load i32, i32* %arrayidx18, align 8
  store i32 %16, i32* %blocksize_x, align 4
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size19 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 20
  %18 = load i32, i32* %blocktype.addr, align 4
  %idxprom20 = sext i32 %18 to i64
  %arrayidx21 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size19, i64 0, i64 %idxprom20
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx21, i64 0, i64 1
  %19 = load i32, i32* %arrayidx22, align 4
  store i32 %19, i32* %blocksize_y, align 4
  %20 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %20, 2
  store i32 %shl, i32* %pic4_pix_x, align 4
  %21 = load i32, i32* %pic_pix_y.addr, align 4
  %shl23 = shl i32 %21, 2
  store i32 %shl23, i32* %pic4_pix_y, align 4
  %22 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard24 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %22, i32 0, i32 6
  %23 = load i32, i32* %hadamard24, align 8
  %tobool25 = icmp ne i32 %23, 0
  br i1 %tobool25, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 7
  %25 = load i32, i32* %hadamardqpel, align 4
  %tobool26 = icmp ne i32 %25, 0
  %26 = zext i1 %tobool26 to i64
  %cond = select i1 %tobool26, i32 1, i32 0
  br label %cond.end

cond.false:                                       ; preds = %land.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond27 = phi i32 [ %cond, %cond.true ], [ 1, %cond.false ]
  store i32 %cond27, i32* %min_pos2, align 4
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard28 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 6
  %28 = load i32, i32* %hadamard28, align 8
  %tobool29 = icmp ne i32 %28, 0
  br i1 %tobool29, label %cond.true30, label %cond.false37

cond.true30:                                      ; preds = %cond.end
  %29 = load i32, i32* %search_pos2.addr, align 4
  %cmp31 = icmp sgt i32 1, %29
  br i1 %cmp31, label %cond.true33, label %cond.false34

cond.true33:                                      ; preds = %cond.true30
  br label %cond.end35

cond.false34:                                     ; preds = %cond.true30
  %30 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.true33
  %cond36 = phi i32 [ 1, %cond.true33 ], [ %30, %cond.false34 ]
  br label %cond.end38

cond.false37:                                     ; preds = %cond.end
  %31 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end38

cond.end38:                                       ; preds = %cond.false37, %cond.end35
  %cond39 = phi i32 [ %cond36, %cond.end35 ], [ %31, %cond.false37 ]
  store i32 %cond39, i32* %max_pos2, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 90
  %33 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool40 = icmp ne i32 %33, 0
  br i1 %tobool40, label %land.lhs.true41, label %cond.false49

land.lhs.true41:                                  ; preds = %cond.end38
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 51
  %35 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 3
  %37 = load i32, i32* %current_mb_nr, align 4
  %idxprom42 = sext i32 %37 to i64
  %arrayidx43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %35, i64 %idxprom42
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx43, i32 0, i32 22
  %38 = load i32, i32* %mb_field, align 4
  %tobool44 = icmp ne i32 %38, 0
  br i1 %tobool44, label %cond.true45, label %cond.false49

cond.true45:                                      ; preds = %land.lhs.true41
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr46 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 3
  %40 = load i32, i32* %current_mb_nr46, align 4
  %rem = srem i32 %40, 2
  %tobool47 = icmp ne i32 %rem, 0
  %41 = zext i1 %tobool47 to i64
  %cond48 = select i1 %tobool47, i32 4, i32 2
  br label %cond.end50

cond.false49:                                     ; preds = %land.lhs.true41, %cond.end38
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false49, %cond.true45
  %cond51 = phi i32 [ %cond48, %cond.true45 ], [ 0, %cond.false49 ]
  store i32 %cond51, i32* %list_offset, align 4
  %42 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_pred_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %42, i32 0, i32 19
  %43 = load i32, i32* %weighted_pred_flag, align 8
  %tobool52 = icmp ne i32 %43, 0
  br i1 %tobool52, label %land.lhs.true53, label %lor.rhs

land.lhs.true53:                                  ; preds = %cond.end50
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 6
  %45 = load i32, i32* %type54, align 8
  %cmp55 = icmp eq i32 %45, 0
  br i1 %cmp55, label %lor.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true53
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type57 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 6
  %47 = load i32, i32* %type57, align 8
  %cmp58 = icmp eq i32 %47, 3
  br i1 %cmp58, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false, %cond.end50
  %48 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %48, i32 0, i32 20
  %49 = load i32, i32* %weighted_bipred_idc, align 4
  %tobool60 = icmp ne i32 %49, 0
  br i1 %tobool60, label %land.rhs61, label %land.end65

land.rhs61:                                       ; preds = %lor.rhs
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 6
  %51 = load i32, i32* %type62, align 8
  %cmp63 = icmp eq i32 %51, 1
  br label %land.end65

land.end65:                                       ; preds = %land.rhs61, %lor.rhs
  %52 = phi i1 [ false, %lor.rhs ], [ %cmp63, %land.rhs61 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end65, %lor.lhs.false, %land.lhs.true53
  %53 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true53 ], [ %52, %land.end65 ]
  %lor.ext = zext i1 %53 to i32
  store i32 %lor.ext, i32* %apply_weights, align 4
  %54 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel67 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %54, i32 0, i32 7
  %55 = load i32, i32* %hadamardqpel67, align 4
  %tobool68 = icmp ne i32 %55, 0
  br i1 %tobool68, label %cond.true69, label %cond.false70

cond.true69:                                      ; preds = %lor.end
  br label %cond.end72

cond.false70:                                     ; preds = %lor.end
  %56 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard71 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %56, i32 0, i32 6
  %57 = load i32, i32* %hadamard71, align 8
  br label %cond.end72

cond.end72:                                       ; preds = %cond.false70, %cond.true69
  %cond73 = phi i32 [ 0, %cond.true69 ], [ %57, %cond.false70 ]
  store i32 %cond73, i32* %halfpelhadamard, align 4
  %58 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel74 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %58, i32 0, i32 7
  %59 = load i32, i32* %hadamardqpel74, align 4
  %tobool75 = icmp ne i32 %59, 0
  %60 = zext i1 %tobool75 to i64
  %cond76 = select i1 %tobool75, i32 0, i32 1
  store i32 %cond76, i32* %qpelstart, align 4
  %61 = load i32, i32* %list.addr, align 4
  %62 = load i32, i32* %list_offset, align 4
  %add77 = add nsw i32 %61, %62
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom78
  %63 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx79, align 8
  %64 = load i16, i16* %ref.addr, align 2
  %idxprom80 = sext i16 %64 to i64
  %arrayidx81 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %63, i64 %idxprom80
  %65 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx81, align 8
  store %struct.storable_picture* %65, %struct.storable_picture** %ref_picture, align 8
  %66 = load i32, i32* %apply_weights, align 4
  %tobool82 = icmp ne i32 %66, 0
  br i1 %tobool82, label %land.lhs.true83, label %if.else

land.lhs.true83:                                  ; preds = %cond.end72
  %67 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %UseWeightedReferenceME = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %67, i32 0, i32 48
  %68 = load i32, i32* %UseWeightedReferenceME, align 4
  %tobool84 = icmp ne i32 %68, 0
  br i1 %tobool84, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true83
  %69 = load i32, i32* %list.addr, align 4
  %70 = load i32, i32* %list_offset, align 4
  %add85 = add nsw i32 %69, %70
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom86
  %71 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx87, align 8
  %72 = load i16, i16* %ref.addr, align 2
  %idxprom88 = sext i16 %72 to i64
  %arrayidx89 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %71, i64 %idxprom88
  %73 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx89, align 8
  %imgY_ups_w = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %73, i32 0, i32 29
  %74 = load i16**, i16*** %imgY_ups_w, align 8
  store i16** %74, i16*** %ref_pic, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true83, %cond.end72
  %75 = load i32, i32* %list.addr, align 4
  %76 = load i32, i32* %list_offset, align 4
  %add90 = add nsw i32 %75, %76
  %idxprom91 = sext i32 %add90 to i64
  %arrayidx92 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom91
  %77 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx92, align 8
  %78 = load i16, i16* %ref.addr, align 2
  %idxprom93 = sext i16 %78 to i64
  %arrayidx94 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %77, i64 %idxprom93
  %79 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx94, align 8
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %79, i32 0, i32 28
  %80 = load i16**, i16*** %imgY_ups, align 8
  store i16** %80, i16*** %ref_pic, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %81 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %81, i32 0, i32 18
  %82 = load i32, i32* %size_x, align 8
  store i32 %82, i32* %img_width, align 4
  %83 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %83, i32 0, i32 19
  %84 = load i32, i32* %size_y, align 4
  store i32 %84, i32* %img_height, align 4
  %85 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x95 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %85, i32 0, i32 18
  %86 = load i32, i32* %size_x95, align 8
  %87 = load i32, i32* %blocksize_x, align 4
  %sub = sub nsw i32 %86, %87
  %add96 = add nsw i32 %sub, 1
  %shl97 = shl i32 %add96, 2
  store i32 %shl97, i32* %max_pos_x4, align 4
  %88 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y98 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %88, i32 0, i32 19
  %89 = load i32, i32* %size_y98, align 4
  %90 = load i32, i32* %blocksize_y, align 4
  %sub99 = sub nsw i32 %89, %90
  %add100 = add nsw i32 %sub99, 1
  %shl101 = shl i32 %add100, 2
  store i32 %shl101, i32* %max_pos_y4, align 4
  %91 = load i16*, i16** %mv_x.addr, align 8
  %92 = load i16, i16* %91, align 2
  %conv102 = sext i16 %92 to i32
  %shl103 = shl i32 %conv102, 2
  %conv104 = trunc i32 %shl103 to i16
  store i16 %conv104, i16* %91, align 2
  %93 = load i16*, i16** %mv_y.addr, align 8
  %94 = load i16, i16* %93, align 2
  %conv105 = sext i16 %94 to i32
  %shl106 = shl i32 %conv105, 2
  %conv107 = trunc i32 %shl106 to i16
  store i16 %conv107, i16* %93, align 2
  %95 = load i32, i32* %pic4_pix_x, align 4
  %96 = load i16*, i16** %mv_x.addr, align 8
  %97 = load i16, i16* %96, align 2
  %conv108 = sext i16 %97 to i32
  %add109 = add nsw i32 %95, %conv108
  %cmp110 = icmp sgt i32 %add109, 1
  br i1 %cmp110, label %land.lhs.true112, label %if.else130

land.lhs.true112:                                 ; preds = %if.end
  %98 = load i32, i32* %pic4_pix_x, align 4
  %99 = load i16*, i16** %mv_x.addr, align 8
  %100 = load i16, i16* %99, align 2
  %conv113 = sext i16 %100 to i32
  %add114 = add nsw i32 %98, %conv113
  %101 = load i32, i32* %max_pos_x4, align 4
  %sub115 = sub nsw i32 %101, 2
  %cmp116 = icmp slt i32 %add114, %sub115
  br i1 %cmp116, label %land.lhs.true118, label %if.else130

land.lhs.true118:                                 ; preds = %land.lhs.true112
  %102 = load i32, i32* %pic4_pix_y, align 4
  %103 = load i16*, i16** %mv_y.addr, align 8
  %104 = load i16, i16* %103, align 2
  %conv119 = sext i16 %104 to i32
  %add120 = add nsw i32 %102, %conv119
  %cmp121 = icmp sgt i32 %add120, 1
  br i1 %cmp121, label %land.lhs.true123, label %if.else130

land.lhs.true123:                                 ; preds = %land.lhs.true118
  %105 = load i32, i32* %pic4_pix_y, align 4
  %106 = load i16*, i16** %mv_y.addr, align 8
  %107 = load i16, i16* %106, align 2
  %conv124 = sext i16 %107 to i32
  %add125 = add nsw i32 %105, %conv124
  %108 = load i32, i32* %max_pos_y4, align 4
  %sub126 = sub nsw i32 %108, 2
  %cmp127 = icmp slt i32 %add125, %sub126
  br i1 %cmp127, label %if.then129, label %if.else130

if.then129:                                       ; preds = %land.lhs.true123
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end131

if.else130:                                       ; preds = %land.lhs.true123, %land.lhs.true118, %land.lhs.true112, %if.end
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end131

if.end131:                                        ; preds = %if.else130, %if.then129
  store i32 0, i32* %best_pos, align 4
  %109 = load i32, i32* %min_pos2, align 4
  store i32 %109, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc382, %if.end131
  %110 = load i32, i32* %pos, align 4
  %111 = load i32, i32* %max_pos2, align 4
  %cmp132 = icmp slt i32 %110, %111
  br i1 %cmp132, label %for.body, label %for.end384

for.body:                                         ; preds = %for.cond
  %112 = load i16*, i16** %mv_x.addr, align 8
  %113 = load i16, i16* %112, align 2
  %conv134 = sext i16 %113 to i32
  %114 = load i32*, i32** @spiral_search_x, align 8
  %115 = load i32, i32* %pos, align 4
  %idxprom135 = sext i32 %115 to i64
  %arrayidx136 = getelementptr inbounds i32, i32* %114, i64 %idxprom135
  %116 = load i32, i32* %arrayidx136, align 4
  %shl137 = shl i32 %116, 1
  %add138 = add nsw i32 %conv134, %shl137
  store i32 %add138, i32* %cand_mv_x, align 4
  %117 = load i16*, i16** %mv_y.addr, align 8
  %118 = load i16, i16* %117, align 2
  %conv139 = sext i16 %118 to i32
  %119 = load i32*, i32** @spiral_search_y, align 8
  %120 = load i32, i32* %pos, align 4
  %idxprom140 = sext i32 %120 to i64
  %arrayidx141 = getelementptr inbounds i32, i32* %119, i64 %idxprom140
  %121 = load i32, i32* %arrayidx141, align 4
  %shl142 = shl i32 %121, 1
  %add143 = add nsw i32 %conv139, %shl142
  store i32 %add143, i32* %cand_mv_y, align 4
  %122 = load i32, i32* %lambda_factor, align 4
  %123 = load i32*, i32** @mvbits, align 8
  %124 = load i32, i32* %cand_mv_x, align 4
  %125 = load i32, i32* %mv_shift, align 4
  %shl144 = shl i32 %124, %125
  %126 = load i16, i16* %pred_mv_x.addr, align 2
  %conv145 = sext i16 %126 to i32
  %sub146 = sub nsw i32 %shl144, %conv145
  %idxprom147 = sext i32 %sub146 to i64
  %arrayidx148 = getelementptr inbounds i32, i32* %123, i64 %idxprom147
  %127 = load i32, i32* %arrayidx148, align 4
  %128 = load i32*, i32** @mvbits, align 8
  %129 = load i32, i32* %cand_mv_y, align 4
  %130 = load i32, i32* %mv_shift, align 4
  %shl149 = shl i32 %129, %130
  %131 = load i16, i16* %pred_mv_y.addr, align 2
  %conv150 = sext i16 %131 to i32
  %sub151 = sub nsw i32 %shl149, %conv150
  %idxprom152 = sext i32 %sub151 to i64
  %arrayidx153 = getelementptr inbounds i32, i32* %128, i64 %idxprom152
  %132 = load i32, i32* %arrayidx153, align 4
  %add154 = add nsw i32 %127, %132
  %mul155 = mul nsw i32 %122, %add154
  %shr = ashr i32 %mul155, 16
  store i32 %shr, i32* %mcost, align 4
  %133 = load i32, i32* %check_position0, align 4
  %tobool156 = icmp ne i32 %133, 0
  br i1 %tobool156, label %land.lhs.true157, label %if.end164

land.lhs.true157:                                 ; preds = %for.body
  %134 = load i32, i32* %pos, align 4
  %cmp158 = icmp eq i32 %134, 0
  br i1 %cmp158, label %if.then160, label %if.end164

if.then160:                                       ; preds = %land.lhs.true157
  %135 = load i32, i32* %lambda_factor, align 4
  %mul161 = mul nsw i32 %135, 16
  %shr162 = ashr i32 %mul161, 16
  %136 = load i32, i32* %mcost, align 4
  %sub163 = sub nsw i32 %136, %shr162
  store i32 %sub163, i32* %mcost, align 4
  br label %if.end164

if.end164:                                        ; preds = %if.then160, %land.lhs.true157, %for.body
  %137 = load i32, i32* %mcost, align 4
  %138 = load i32, i32* %min_mcost.addr, align 4
  %cmp165 = icmp sge i32 %137, %138
  br i1 %cmp165, label %if.then167, label %if.end168

if.then167:                                       ; preds = %if.end164
  br label %for.inc382

if.end168:                                        ; preds = %if.end164
  store i32 0, i32* %y0, align 4
  store i32 0, i32* %abort_search, align 4
  br label %for.cond169

for.cond169:                                      ; preds = %for.inc368, %if.end168
  %139 = load i32, i32* %y0, align 4
  %140 = load i32, i32* %blocksize_y, align 4
  %cmp170 = icmp slt i32 %139, %140
  br i1 %cmp170, label %land.rhs172, label %land.end174

land.rhs172:                                      ; preds = %for.cond169
  %141 = load i32, i32* %abort_search, align 4
  %tobool173 = icmp ne i32 %141, 0
  %lnot = xor i1 %tobool173, true
  br label %land.end174

land.end174:                                      ; preds = %land.rhs172, %for.cond169
  %142 = phi i1 [ false, %for.cond169 ], [ %lnot, %land.rhs172 ]
  br i1 %142, label %for.body176, label %for.end370

for.body176:                                      ; preds = %land.end174
  %143 = load i32, i32* %pic_pix_y.addr, align 4
  %144 = load i32, i32* %y0, align 4
  %add177 = add nsw i32 %143, %144
  %shl178 = shl i32 %add177, 2
  %145 = load i32, i32* %cand_mv_y, align 4
  %add179 = add nsw i32 %shl178, %145
  store i32 %add179, i32* %ry0, align 4
  store i32 0, i32* %x0, align 4
  br label %for.cond180

for.cond180:                                      ; preds = %for.inc365, %for.body176
  %146 = load i32, i32* %x0, align 4
  %147 = load i32, i32* %blocksize_x, align 4
  %cmp181 = icmp slt i32 %146, %147
  br i1 %cmp181, label %for.body183, label %for.end367

for.body183:                                      ; preds = %for.cond180
  %148 = load i32, i32* %pic_pix_x.addr, align 4
  %149 = load i32, i32* %x0, align 4
  %add184 = add nsw i32 %148, %149
  %shl185 = shl i32 %add184, 2
  %150 = load i32, i32* %cand_mv_x, align 4
  %add186 = add nsw i32 %shl185, %150
  store i32 %add186, i32* %rx0, align 4
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  store i32* %arraydecay, i32** %d, align 8
  %151 = load i16**, i16*** %orig_pic.addr, align 8
  %152 = load i32, i32* %y0, align 4
  %idxprom187 = sext i32 %152 to i64
  %arrayidx188 = getelementptr inbounds i16*, i16** %151, i64 %idxprom187
  %153 = load i16*, i16** %arrayidx188, align 8
  store i16* %153, i16** %orig_line, align 8
  %154 = load i32, i32* %ry0, align 4
  store i32 %154, i32* %ry, align 4
  %155 = load i16*, i16** %orig_line, align 8
  %156 = load i32, i32* %x0, align 4
  %idxprom189 = sext i32 %156 to i64
  %arrayidx190 = getelementptr inbounds i16, i16* %155, i64 %idxprom189
  %157 = load i16, i16* %arrayidx190, align 2
  %conv191 = zext i16 %157 to i32
  %158 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %159 = load i16**, i16*** %ref_pic, align 8
  %160 = load i32, i32* %ry, align 4
  %161 = load i32, i32* %rx0, align 4
  %162 = load i32, i32* %img_height, align 4
  %163 = load i32, i32* %img_width, align 4
  %call = call zeroext i16 %158(i16** %159, i32 %160, i32 %161, i32 %162, i32 %163)
  %conv192 = zext i16 %call to i32
  %sub193 = sub nsw i32 %conv191, %conv192
  %164 = load i32*, i32** %d, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %164, i32 1
  store i32* %incdec.ptr, i32** %d, align 8
  store i32 %sub193, i32* %164, align 4
  %165 = load i16*, i16** %orig_line, align 8
  %166 = load i32, i32* %x0, align 4
  %add194 = add nsw i32 %166, 1
  %idxprom195 = sext i32 %add194 to i64
  %arrayidx196 = getelementptr inbounds i16, i16* %165, i64 %idxprom195
  %167 = load i16, i16* %arrayidx196, align 2
  %conv197 = zext i16 %167 to i32
  %168 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %169 = load i16**, i16*** %ref_pic, align 8
  %170 = load i32, i32* %ry, align 4
  %171 = load i32, i32* %rx0, align 4
  %add198 = add nsw i32 %171, 4
  %172 = load i32, i32* %img_height, align 4
  %173 = load i32, i32* %img_width, align 4
  %call199 = call zeroext i16 %168(i16** %169, i32 %170, i32 %add198, i32 %172, i32 %173)
  %conv200 = zext i16 %call199 to i32
  %sub201 = sub nsw i32 %conv197, %conv200
  %174 = load i32*, i32** %d, align 8
  %incdec.ptr202 = getelementptr inbounds i32, i32* %174, i32 1
  store i32* %incdec.ptr202, i32** %d, align 8
  store i32 %sub201, i32* %174, align 4
  %175 = load i16*, i16** %orig_line, align 8
  %176 = load i32, i32* %x0, align 4
  %add203 = add nsw i32 %176, 2
  %idxprom204 = sext i32 %add203 to i64
  %arrayidx205 = getelementptr inbounds i16, i16* %175, i64 %idxprom204
  %177 = load i16, i16* %arrayidx205, align 2
  %conv206 = zext i16 %177 to i32
  %178 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %179 = load i16**, i16*** %ref_pic, align 8
  %180 = load i32, i32* %ry, align 4
  %181 = load i32, i32* %rx0, align 4
  %add207 = add nsw i32 %181, 8
  %182 = load i32, i32* %img_height, align 4
  %183 = load i32, i32* %img_width, align 4
  %call208 = call zeroext i16 %178(i16** %179, i32 %180, i32 %add207, i32 %182, i32 %183)
  %conv209 = zext i16 %call208 to i32
  %sub210 = sub nsw i32 %conv206, %conv209
  %184 = load i32*, i32** %d, align 8
  %incdec.ptr211 = getelementptr inbounds i32, i32* %184, i32 1
  store i32* %incdec.ptr211, i32** %d, align 8
  store i32 %sub210, i32* %184, align 4
  %185 = load i16*, i16** %orig_line, align 8
  %186 = load i32, i32* %x0, align 4
  %add212 = add nsw i32 %186, 3
  %idxprom213 = sext i32 %add212 to i64
  %arrayidx214 = getelementptr inbounds i16, i16* %185, i64 %idxprom213
  %187 = load i16, i16* %arrayidx214, align 2
  %conv215 = zext i16 %187 to i32
  %188 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %189 = load i16**, i16*** %ref_pic, align 8
  %190 = load i32, i32* %ry, align 4
  %191 = load i32, i32* %rx0, align 4
  %add216 = add nsw i32 %191, 12
  %192 = load i32, i32* %img_height, align 4
  %193 = load i32, i32* %img_width, align 4
  %call217 = call zeroext i16 %188(i16** %189, i32 %190, i32 %add216, i32 %192, i32 %193)
  %conv218 = zext i16 %call217 to i32
  %sub219 = sub nsw i32 %conv215, %conv218
  %194 = load i32*, i32** %d, align 8
  %incdec.ptr220 = getelementptr inbounds i32, i32* %194, i32 1
  store i32* %incdec.ptr220, i32** %d, align 8
  store i32 %sub219, i32* %194, align 4
  %195 = load i16**, i16*** %orig_pic.addr, align 8
  %196 = load i32, i32* %y0, align 4
  %add221 = add nsw i32 %196, 1
  %idxprom222 = sext i32 %add221 to i64
  %arrayidx223 = getelementptr inbounds i16*, i16** %195, i64 %idxprom222
  %197 = load i16*, i16** %arrayidx223, align 8
  store i16* %197, i16** %orig_line, align 8
  %198 = load i32, i32* %ry0, align 4
  %add224 = add nsw i32 %198, 4
  store i32 %add224, i32* %ry, align 4
  %199 = load i16*, i16** %orig_line, align 8
  %200 = load i32, i32* %x0, align 4
  %idxprom225 = sext i32 %200 to i64
  %arrayidx226 = getelementptr inbounds i16, i16* %199, i64 %idxprom225
  %201 = load i16, i16* %arrayidx226, align 2
  %conv227 = zext i16 %201 to i32
  %202 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %203 = load i16**, i16*** %ref_pic, align 8
  %204 = load i32, i32* %ry, align 4
  %205 = load i32, i32* %rx0, align 4
  %206 = load i32, i32* %img_height, align 4
  %207 = load i32, i32* %img_width, align 4
  %call228 = call zeroext i16 %202(i16** %203, i32 %204, i32 %205, i32 %206, i32 %207)
  %conv229 = zext i16 %call228 to i32
  %sub230 = sub nsw i32 %conv227, %conv229
  %208 = load i32*, i32** %d, align 8
  %incdec.ptr231 = getelementptr inbounds i32, i32* %208, i32 1
  store i32* %incdec.ptr231, i32** %d, align 8
  store i32 %sub230, i32* %208, align 4
  %209 = load i16*, i16** %orig_line, align 8
  %210 = load i32, i32* %x0, align 4
  %add232 = add nsw i32 %210, 1
  %idxprom233 = sext i32 %add232 to i64
  %arrayidx234 = getelementptr inbounds i16, i16* %209, i64 %idxprom233
  %211 = load i16, i16* %arrayidx234, align 2
  %conv235 = zext i16 %211 to i32
  %212 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %213 = load i16**, i16*** %ref_pic, align 8
  %214 = load i32, i32* %ry, align 4
  %215 = load i32, i32* %rx0, align 4
  %add236 = add nsw i32 %215, 4
  %216 = load i32, i32* %img_height, align 4
  %217 = load i32, i32* %img_width, align 4
  %call237 = call zeroext i16 %212(i16** %213, i32 %214, i32 %add236, i32 %216, i32 %217)
  %conv238 = zext i16 %call237 to i32
  %sub239 = sub nsw i32 %conv235, %conv238
  %218 = load i32*, i32** %d, align 8
  %incdec.ptr240 = getelementptr inbounds i32, i32* %218, i32 1
  store i32* %incdec.ptr240, i32** %d, align 8
  store i32 %sub239, i32* %218, align 4
  %219 = load i16*, i16** %orig_line, align 8
  %220 = load i32, i32* %x0, align 4
  %add241 = add nsw i32 %220, 2
  %idxprom242 = sext i32 %add241 to i64
  %arrayidx243 = getelementptr inbounds i16, i16* %219, i64 %idxprom242
  %221 = load i16, i16* %arrayidx243, align 2
  %conv244 = zext i16 %221 to i32
  %222 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %223 = load i16**, i16*** %ref_pic, align 8
  %224 = load i32, i32* %ry, align 4
  %225 = load i32, i32* %rx0, align 4
  %add245 = add nsw i32 %225, 8
  %226 = load i32, i32* %img_height, align 4
  %227 = load i32, i32* %img_width, align 4
  %call246 = call zeroext i16 %222(i16** %223, i32 %224, i32 %add245, i32 %226, i32 %227)
  %conv247 = zext i16 %call246 to i32
  %sub248 = sub nsw i32 %conv244, %conv247
  %228 = load i32*, i32** %d, align 8
  %incdec.ptr249 = getelementptr inbounds i32, i32* %228, i32 1
  store i32* %incdec.ptr249, i32** %d, align 8
  store i32 %sub248, i32* %228, align 4
  %229 = load i16*, i16** %orig_line, align 8
  %230 = load i32, i32* %x0, align 4
  %add250 = add nsw i32 %230, 3
  %idxprom251 = sext i32 %add250 to i64
  %arrayidx252 = getelementptr inbounds i16, i16* %229, i64 %idxprom251
  %231 = load i16, i16* %arrayidx252, align 2
  %conv253 = zext i16 %231 to i32
  %232 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %233 = load i16**, i16*** %ref_pic, align 8
  %234 = load i32, i32* %ry, align 4
  %235 = load i32, i32* %rx0, align 4
  %add254 = add nsw i32 %235, 12
  %236 = load i32, i32* %img_height, align 4
  %237 = load i32, i32* %img_width, align 4
  %call255 = call zeroext i16 %232(i16** %233, i32 %234, i32 %add254, i32 %236, i32 %237)
  %conv256 = zext i16 %call255 to i32
  %sub257 = sub nsw i32 %conv253, %conv256
  %238 = load i32*, i32** %d, align 8
  %incdec.ptr258 = getelementptr inbounds i32, i32* %238, i32 1
  store i32* %incdec.ptr258, i32** %d, align 8
  store i32 %sub257, i32* %238, align 4
  %239 = load i16**, i16*** %orig_pic.addr, align 8
  %240 = load i32, i32* %y0, align 4
  %add259 = add nsw i32 %240, 2
  %idxprom260 = sext i32 %add259 to i64
  %arrayidx261 = getelementptr inbounds i16*, i16** %239, i64 %idxprom260
  %241 = load i16*, i16** %arrayidx261, align 8
  store i16* %241, i16** %orig_line, align 8
  %242 = load i32, i32* %ry0, align 4
  %add262 = add nsw i32 %242, 8
  store i32 %add262, i32* %ry, align 4
  %243 = load i16*, i16** %orig_line, align 8
  %244 = load i32, i32* %x0, align 4
  %idxprom263 = sext i32 %244 to i64
  %arrayidx264 = getelementptr inbounds i16, i16* %243, i64 %idxprom263
  %245 = load i16, i16* %arrayidx264, align 2
  %conv265 = zext i16 %245 to i32
  %246 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %247 = load i16**, i16*** %ref_pic, align 8
  %248 = load i32, i32* %ry, align 4
  %249 = load i32, i32* %rx0, align 4
  %250 = load i32, i32* %img_height, align 4
  %251 = load i32, i32* %img_width, align 4
  %call266 = call zeroext i16 %246(i16** %247, i32 %248, i32 %249, i32 %250, i32 %251)
  %conv267 = zext i16 %call266 to i32
  %sub268 = sub nsw i32 %conv265, %conv267
  %252 = load i32*, i32** %d, align 8
  %incdec.ptr269 = getelementptr inbounds i32, i32* %252, i32 1
  store i32* %incdec.ptr269, i32** %d, align 8
  store i32 %sub268, i32* %252, align 4
  %253 = load i16*, i16** %orig_line, align 8
  %254 = load i32, i32* %x0, align 4
  %add270 = add nsw i32 %254, 1
  %idxprom271 = sext i32 %add270 to i64
  %arrayidx272 = getelementptr inbounds i16, i16* %253, i64 %idxprom271
  %255 = load i16, i16* %arrayidx272, align 2
  %conv273 = zext i16 %255 to i32
  %256 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %257 = load i16**, i16*** %ref_pic, align 8
  %258 = load i32, i32* %ry, align 4
  %259 = load i32, i32* %rx0, align 4
  %add274 = add nsw i32 %259, 4
  %260 = load i32, i32* %img_height, align 4
  %261 = load i32, i32* %img_width, align 4
  %call275 = call zeroext i16 %256(i16** %257, i32 %258, i32 %add274, i32 %260, i32 %261)
  %conv276 = zext i16 %call275 to i32
  %sub277 = sub nsw i32 %conv273, %conv276
  %262 = load i32*, i32** %d, align 8
  %incdec.ptr278 = getelementptr inbounds i32, i32* %262, i32 1
  store i32* %incdec.ptr278, i32** %d, align 8
  store i32 %sub277, i32* %262, align 4
  %263 = load i16*, i16** %orig_line, align 8
  %264 = load i32, i32* %x0, align 4
  %add279 = add nsw i32 %264, 2
  %idxprom280 = sext i32 %add279 to i64
  %arrayidx281 = getelementptr inbounds i16, i16* %263, i64 %idxprom280
  %265 = load i16, i16* %arrayidx281, align 2
  %conv282 = zext i16 %265 to i32
  %266 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %267 = load i16**, i16*** %ref_pic, align 8
  %268 = load i32, i32* %ry, align 4
  %269 = load i32, i32* %rx0, align 4
  %add283 = add nsw i32 %269, 8
  %270 = load i32, i32* %img_height, align 4
  %271 = load i32, i32* %img_width, align 4
  %call284 = call zeroext i16 %266(i16** %267, i32 %268, i32 %add283, i32 %270, i32 %271)
  %conv285 = zext i16 %call284 to i32
  %sub286 = sub nsw i32 %conv282, %conv285
  %272 = load i32*, i32** %d, align 8
  %incdec.ptr287 = getelementptr inbounds i32, i32* %272, i32 1
  store i32* %incdec.ptr287, i32** %d, align 8
  store i32 %sub286, i32* %272, align 4
  %273 = load i16*, i16** %orig_line, align 8
  %274 = load i32, i32* %x0, align 4
  %add288 = add nsw i32 %274, 3
  %idxprom289 = sext i32 %add288 to i64
  %arrayidx290 = getelementptr inbounds i16, i16* %273, i64 %idxprom289
  %275 = load i16, i16* %arrayidx290, align 2
  %conv291 = zext i16 %275 to i32
  %276 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %277 = load i16**, i16*** %ref_pic, align 8
  %278 = load i32, i32* %ry, align 4
  %279 = load i32, i32* %rx0, align 4
  %add292 = add nsw i32 %279, 12
  %280 = load i32, i32* %img_height, align 4
  %281 = load i32, i32* %img_width, align 4
  %call293 = call zeroext i16 %276(i16** %277, i32 %278, i32 %add292, i32 %280, i32 %281)
  %conv294 = zext i16 %call293 to i32
  %sub295 = sub nsw i32 %conv291, %conv294
  %282 = load i32*, i32** %d, align 8
  %incdec.ptr296 = getelementptr inbounds i32, i32* %282, i32 1
  store i32* %incdec.ptr296, i32** %d, align 8
  store i32 %sub295, i32* %282, align 4
  %283 = load i16**, i16*** %orig_pic.addr, align 8
  %284 = load i32, i32* %y0, align 4
  %add297 = add nsw i32 %284, 3
  %idxprom298 = sext i32 %add297 to i64
  %arrayidx299 = getelementptr inbounds i16*, i16** %283, i64 %idxprom298
  %285 = load i16*, i16** %arrayidx299, align 8
  store i16* %285, i16** %orig_line, align 8
  %286 = load i32, i32* %ry0, align 4
  %add300 = add nsw i32 %286, 12
  store i32 %add300, i32* %ry, align 4
  %287 = load i16*, i16** %orig_line, align 8
  %288 = load i32, i32* %x0, align 4
  %idxprom301 = sext i32 %288 to i64
  %arrayidx302 = getelementptr inbounds i16, i16* %287, i64 %idxprom301
  %289 = load i16, i16* %arrayidx302, align 2
  %conv303 = zext i16 %289 to i32
  %290 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %291 = load i16**, i16*** %ref_pic, align 8
  %292 = load i32, i32* %ry, align 4
  %293 = load i32, i32* %rx0, align 4
  %294 = load i32, i32* %img_height, align 4
  %295 = load i32, i32* %img_width, align 4
  %call304 = call zeroext i16 %290(i16** %291, i32 %292, i32 %293, i32 %294, i32 %295)
  %conv305 = zext i16 %call304 to i32
  %sub306 = sub nsw i32 %conv303, %conv305
  %296 = load i32*, i32** %d, align 8
  %incdec.ptr307 = getelementptr inbounds i32, i32* %296, i32 1
  store i32* %incdec.ptr307, i32** %d, align 8
  store i32 %sub306, i32* %296, align 4
  %297 = load i16*, i16** %orig_line, align 8
  %298 = load i32, i32* %x0, align 4
  %add308 = add nsw i32 %298, 1
  %idxprom309 = sext i32 %add308 to i64
  %arrayidx310 = getelementptr inbounds i16, i16* %297, i64 %idxprom309
  %299 = load i16, i16* %arrayidx310, align 2
  %conv311 = zext i16 %299 to i32
  %300 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %301 = load i16**, i16*** %ref_pic, align 8
  %302 = load i32, i32* %ry, align 4
  %303 = load i32, i32* %rx0, align 4
  %add312 = add nsw i32 %303, 4
  %304 = load i32, i32* %img_height, align 4
  %305 = load i32, i32* %img_width, align 4
  %call313 = call zeroext i16 %300(i16** %301, i32 %302, i32 %add312, i32 %304, i32 %305)
  %conv314 = zext i16 %call313 to i32
  %sub315 = sub nsw i32 %conv311, %conv314
  %306 = load i32*, i32** %d, align 8
  %incdec.ptr316 = getelementptr inbounds i32, i32* %306, i32 1
  store i32* %incdec.ptr316, i32** %d, align 8
  store i32 %sub315, i32* %306, align 4
  %307 = load i16*, i16** %orig_line, align 8
  %308 = load i32, i32* %x0, align 4
  %add317 = add nsw i32 %308, 2
  %idxprom318 = sext i32 %add317 to i64
  %arrayidx319 = getelementptr inbounds i16, i16* %307, i64 %idxprom318
  %309 = load i16, i16* %arrayidx319, align 2
  %conv320 = zext i16 %309 to i32
  %310 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %311 = load i16**, i16*** %ref_pic, align 8
  %312 = load i32, i32* %ry, align 4
  %313 = load i32, i32* %rx0, align 4
  %add321 = add nsw i32 %313, 8
  %314 = load i32, i32* %img_height, align 4
  %315 = load i32, i32* %img_width, align 4
  %call322 = call zeroext i16 %310(i16** %311, i32 %312, i32 %add321, i32 %314, i32 %315)
  %conv323 = zext i16 %call322 to i32
  %sub324 = sub nsw i32 %conv320, %conv323
  %316 = load i32*, i32** %d, align 8
  %incdec.ptr325 = getelementptr inbounds i32, i32* %316, i32 1
  store i32* %incdec.ptr325, i32** %d, align 8
  store i32 %sub324, i32* %316, align 4
  %317 = load i16*, i16** %orig_line, align 8
  %318 = load i32, i32* %x0, align 4
  %add326 = add nsw i32 %318, 3
  %idxprom327 = sext i32 %add326 to i64
  %arrayidx328 = getelementptr inbounds i16, i16* %317, i64 %idxprom327
  %319 = load i16, i16* %arrayidx328, align 2
  %conv329 = zext i16 %319 to i32
  %320 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %321 = load i16**, i16*** %ref_pic, align 8
  %322 = load i32, i32* %ry, align 4
  %323 = load i32, i32* %rx0, align 4
  %add330 = add nsw i32 %323, 12
  %324 = load i32, i32* %img_height, align 4
  %325 = load i32, i32* %img_width, align 4
  %call331 = call zeroext i16 %320(i16** %321, i32 %322, i32 %add330, i32 %324, i32 %325)
  %conv332 = zext i16 %call331 to i32
  %sub333 = sub nsw i32 %conv329, %conv332
  %326 = load i32*, i32** %d, align 8
  store i32 %sub333, i32* %326, align 4
  %327 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %327, i32 0, i32 123
  %328 = load i32, i32* %AllowTransform8x8, align 4
  %tobool334 = icmp ne i32 %328, 0
  br i1 %tobool334, label %if.else343, label %if.then335

if.then335:                                       ; preds = %for.body183
  %arraydecay336 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %329 = load i32, i32* %halfpelhadamard, align 4
  %call337 = call i32 @SATD(i32* %arraydecay336, i32 %329)
  %330 = load i32, i32* %mcost, align 4
  %add338 = add nsw i32 %330, %call337
  store i32 %add338, i32* %mcost, align 4
  %331 = load i32, i32* %min_mcost.addr, align 4
  %cmp339 = icmp sgt i32 %add338, %331
  br i1 %cmp339, label %if.then341, label %if.end342

if.then341:                                       ; preds = %if.then335
  store i32 1, i32* %abort_search, align 4
  br label %for.end367

if.end342:                                        ; preds = %if.then335
  br label %if.end364

if.else343:                                       ; preds = %for.body183
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond344

for.cond344:                                      ; preds = %for.inc361, %if.else343
  %332 = load i32, i32* %j, align 4
  %cmp345 = icmp slt i32 %332, 4
  br i1 %cmp345, label %for.body347, label %for.end363

for.body347:                                      ; preds = %for.cond344
  store i32 0, i32* %i, align 4
  br label %for.cond348

for.cond348:                                      ; preds = %for.inc, %for.body347
  %333 = load i32, i32* %i, align 4
  %cmp349 = icmp slt i32 %333, 4
  br i1 %cmp349, label %for.body351, label %for.end

for.body351:                                      ; preds = %for.cond348
  %334 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %334 to i64
  %arrayidx353 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom352
  %335 = load i32, i32* %arrayidx353, align 4
  %336 = load i32, i32* %y0, align 4
  %337 = load i32, i32* %j, align 4
  %add354 = add nsw i32 %336, %337
  %idxprom355 = sext i32 %add354 to i64
  %arrayidx356 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 %idxprom355
  %338 = load i32, i32* %x0, align 4
  %339 = load i32, i32* %i, align 4
  %add357 = add nsw i32 %338, %339
  %idxprom358 = sext i32 %add357 to i64
  %arrayidx359 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx356, i64 0, i64 %idxprom358
  store i32 %335, i32* %arrayidx359, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body351
  %340 = load i32, i32* %i, align 4
  %inc = add nsw i32 %340, 1
  store i32 %inc, i32* %i, align 4
  %341 = load i32, i32* %k, align 4
  %inc360 = add nsw i32 %341, 1
  store i32 %inc360, i32* %k, align 4
  br label %for.cond348

for.end:                                          ; preds = %for.cond348
  br label %for.inc361

for.inc361:                                       ; preds = %for.end
  %342 = load i32, i32* %j, align 4
  %inc362 = add nsw i32 %342, 1
  store i32 %inc362, i32* %j, align 4
  br label %for.cond344

for.end363:                                       ; preds = %for.cond344
  br label %if.end364

if.end364:                                        ; preds = %for.end363, %if.end342
  br label %for.inc365

for.inc365:                                       ; preds = %if.end364
  %343 = load i32, i32* %x0, align 4
  %add366 = add nsw i32 %343, 4
  store i32 %add366, i32* %x0, align 4
  br label %for.cond180

for.end367:                                       ; preds = %if.then341, %for.cond180
  br label %for.inc368

for.inc368:                                       ; preds = %for.end367
  %344 = load i32, i32* %y0, align 4
  %add369 = add nsw i32 %344, 4
  store i32 %add369, i32* %y0, align 4
  br label %for.cond169

for.end370:                                       ; preds = %land.end174
  %345 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8371 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %345, i32 0, i32 123
  %346 = load i32, i32* %AllowTransform8x8371, align 4
  %tobool372 = icmp ne i32 %346, 0
  br i1 %tobool372, label %if.then373, label %if.end377

if.then373:                                       ; preds = %for.end370
  %arraydecay374 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 0
  %347 = load i32, i32* %halfpelhadamard, align 4
  %348 = load i32, i32* %blocktype.addr, align 4
  %call375 = call i32 @find_SATD([16 x i32]* %arraydecay374, i32 %347, i32 %348)
  %349 = load i32, i32* %mcost, align 4
  %add376 = add nsw i32 %349, %call375
  store i32 %add376, i32* %mcost, align 4
  br label %if.end377

if.end377:                                        ; preds = %if.then373, %for.end370
  %350 = load i32, i32* %mcost, align 4
  %351 = load i32, i32* %min_mcost.addr, align 4
  %cmp378 = icmp slt i32 %350, %351
  br i1 %cmp378, label %if.then380, label %if.end381

if.then380:                                       ; preds = %if.end377
  %352 = load i32, i32* %mcost, align 4
  store i32 %352, i32* %min_mcost.addr, align 4
  %353 = load i32, i32* %pos, align 4
  store i32 %353, i32* %best_pos, align 4
  br label %if.end381

if.end381:                                        ; preds = %if.then380, %if.end377
  br label %for.inc382

for.inc382:                                       ; preds = %if.end381, %if.then167
  %354 = load i32, i32* %pos, align 4
  %inc383 = add nsw i32 %354, 1
  store i32 %inc383, i32* %pos, align 4
  br label %for.cond

for.end384:                                       ; preds = %for.cond
  %355 = load i32, i32* %best_pos, align 4
  %tobool385 = icmp ne i32 %355, 0
  br i1 %tobool385, label %if.then386, label %if.end399

if.then386:                                       ; preds = %for.end384
  %356 = load i32*, i32** @spiral_search_x, align 8
  %357 = load i32, i32* %best_pos, align 4
  %idxprom387 = sext i32 %357 to i64
  %arrayidx388 = getelementptr inbounds i32, i32* %356, i64 %idxprom387
  %358 = load i32, i32* %arrayidx388, align 4
  %shl389 = shl i32 %358, 1
  %359 = load i16*, i16** %mv_x.addr, align 8
  %360 = load i16, i16* %359, align 2
  %conv390 = sext i16 %360 to i32
  %add391 = add nsw i32 %conv390, %shl389
  %conv392 = trunc i32 %add391 to i16
  store i16 %conv392, i16* %359, align 2
  %361 = load i32*, i32** @spiral_search_y, align 8
  %362 = load i32, i32* %best_pos, align 4
  %idxprom393 = sext i32 %362 to i64
  %arrayidx394 = getelementptr inbounds i32, i32* %361, i64 %idxprom393
  %363 = load i32, i32* %arrayidx394, align 4
  %shl395 = shl i32 %363, 1
  %364 = load i16*, i16** %mv_y.addr, align 8
  %365 = load i16, i16* %364, align 2
  %conv396 = sext i16 %365 to i32
  %add397 = add nsw i32 %conv396, %shl395
  %conv398 = trunc i32 %add397 to i16
  store i16 %conv398, i16* %364, align 2
  br label %if.end399

if.end399:                                        ; preds = %if.then386, %for.end384
  %366 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel400 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %366, i32 0, i32 7
  %367 = load i32, i32* %hadamardqpel400, align 4
  %tobool401 = icmp ne i32 %367, 0
  br i1 %tobool401, label %if.then402, label %if.end403

if.then402:                                       ; preds = %if.end399
  store i32 2147483647, i32* %min_mcost.addr, align 4
  br label %if.end403

if.end403:                                        ; preds = %if.then402, %if.end399
  %368 = load i32, i32* %pic4_pix_x, align 4
  %369 = load i16*, i16** %mv_x.addr, align 8
  %370 = load i16, i16* %369, align 2
  %conv404 = sext i16 %370 to i32
  %add405 = add nsw i32 %368, %conv404
  %cmp406 = icmp sgt i32 %add405, 1
  br i1 %cmp406, label %land.lhs.true408, label %if.else426

land.lhs.true408:                                 ; preds = %if.end403
  %371 = load i32, i32* %pic4_pix_x, align 4
  %372 = load i16*, i16** %mv_x.addr, align 8
  %373 = load i16, i16* %372, align 2
  %conv409 = sext i16 %373 to i32
  %add410 = add nsw i32 %371, %conv409
  %374 = load i32, i32* %max_pos_x4, align 4
  %sub411 = sub nsw i32 %374, 1
  %cmp412 = icmp slt i32 %add410, %sub411
  br i1 %cmp412, label %land.lhs.true414, label %if.else426

land.lhs.true414:                                 ; preds = %land.lhs.true408
  %375 = load i32, i32* %pic4_pix_y, align 4
  %376 = load i16*, i16** %mv_y.addr, align 8
  %377 = load i16, i16* %376, align 2
  %conv415 = sext i16 %377 to i32
  %add416 = add nsw i32 %375, %conv415
  %cmp417 = icmp sgt i32 %add416, 1
  br i1 %cmp417, label %land.lhs.true419, label %if.else426

land.lhs.true419:                                 ; preds = %land.lhs.true414
  %378 = load i32, i32* %pic4_pix_y, align 4
  %379 = load i16*, i16** %mv_y.addr, align 8
  %380 = load i16, i16* %379, align 2
  %conv420 = sext i16 %380 to i32
  %add421 = add nsw i32 %378, %conv420
  %381 = load i32, i32* %max_pos_y4, align 4
  %sub422 = sub nsw i32 %381, 1
  %cmp423 = icmp slt i32 %add421, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %land.lhs.true419
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end427

if.else426:                                       ; preds = %land.lhs.true419, %land.lhs.true414, %land.lhs.true408, %if.end403
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end427

if.end427:                                        ; preds = %if.else426, %if.then425
  store i32 0, i32* %best_pos, align 4
  %382 = load i32, i32* %qpelstart, align 4
  store i32 %382, i32* %pos, align 4
  br label %for.cond428

for.cond428:                                      ; preds = %for.inc680, %if.end427
  %383 = load i32, i32* %pos, align 4
  %384 = load i32, i32* %search_pos4.addr, align 4
  %cmp429 = icmp slt i32 %383, %384
  br i1 %cmp429, label %for.body431, label %for.end682

for.body431:                                      ; preds = %for.cond428
  %385 = load i16*, i16** %mv_x.addr, align 8
  %386 = load i16, i16* %385, align 2
  %conv432 = sext i16 %386 to i32
  %387 = load i32*, i32** @spiral_search_x, align 8
  %388 = load i32, i32* %pos, align 4
  %idxprom433 = sext i32 %388 to i64
  %arrayidx434 = getelementptr inbounds i32, i32* %387, i64 %idxprom433
  %389 = load i32, i32* %arrayidx434, align 4
  %add435 = add nsw i32 %conv432, %389
  store i32 %add435, i32* %cand_mv_x, align 4
  %390 = load i16*, i16** %mv_y.addr, align 8
  %391 = load i16, i16* %390, align 2
  %conv436 = sext i16 %391 to i32
  %392 = load i32*, i32** @spiral_search_y, align 8
  %393 = load i32, i32* %pos, align 4
  %idxprom437 = sext i32 %393 to i64
  %arrayidx438 = getelementptr inbounds i32, i32* %392, i64 %idxprom437
  %394 = load i32, i32* %arrayidx438, align 4
  %add439 = add nsw i32 %conv436, %394
  store i32 %add439, i32* %cand_mv_y, align 4
  %395 = load i32, i32* %lambda_factor, align 4
  %396 = load i32*, i32** @mvbits, align 8
  %397 = load i32, i32* %cand_mv_x, align 4
  %398 = load i32, i32* %mv_shift, align 4
  %shl440 = shl i32 %397, %398
  %399 = load i16, i16* %pred_mv_x.addr, align 2
  %conv441 = sext i16 %399 to i32
  %sub442 = sub nsw i32 %shl440, %conv441
  %idxprom443 = sext i32 %sub442 to i64
  %arrayidx444 = getelementptr inbounds i32, i32* %396, i64 %idxprom443
  %400 = load i32, i32* %arrayidx444, align 4
  %401 = load i32*, i32** @mvbits, align 8
  %402 = load i32, i32* %cand_mv_y, align 4
  %403 = load i32, i32* %mv_shift, align 4
  %shl445 = shl i32 %402, %403
  %404 = load i16, i16* %pred_mv_y.addr, align 2
  %conv446 = sext i16 %404 to i32
  %sub447 = sub nsw i32 %shl445, %conv446
  %idxprom448 = sext i32 %sub447 to i64
  %arrayidx449 = getelementptr inbounds i32, i32* %401, i64 %idxprom448
  %405 = load i32, i32* %arrayidx449, align 4
  %add450 = add nsw i32 %400, %405
  %mul451 = mul nsw i32 %395, %add450
  %shr452 = ashr i32 %mul451, 16
  store i32 %shr452, i32* %mcost, align 4
  %406 = load i32, i32* %mcost, align 4
  %407 = load i32, i32* %min_mcost.addr, align 4
  %cmp453 = icmp sge i32 %406, %407
  br i1 %cmp453, label %if.then455, label %if.end456

if.then455:                                       ; preds = %for.body431
  br label %for.inc680

if.end456:                                        ; preds = %for.body431
  store i32 0, i32* %y0, align 4
  store i32 0, i32* %abort_search, align 4
  br label %for.cond457

for.cond457:                                      ; preds = %for.inc665, %if.end456
  %408 = load i32, i32* %y0, align 4
  %409 = load i32, i32* %blocksize_y, align 4
  %cmp458 = icmp slt i32 %408, %409
  br i1 %cmp458, label %land.rhs460, label %land.end463

land.rhs460:                                      ; preds = %for.cond457
  %410 = load i32, i32* %abort_search, align 4
  %tobool461 = icmp ne i32 %410, 0
  %lnot462 = xor i1 %tobool461, true
  br label %land.end463

land.end463:                                      ; preds = %land.rhs460, %for.cond457
  %411 = phi i1 [ false, %for.cond457 ], [ %lnot462, %land.rhs460 ]
  br i1 %411, label %for.body465, label %for.end667

for.body465:                                      ; preds = %land.end463
  %412 = load i32, i32* %pic_pix_y.addr, align 4
  %413 = load i32, i32* %y0, align 4
  %add466 = add nsw i32 %412, %413
  %shl467 = shl i32 %add466, 2
  %414 = load i32, i32* %cand_mv_y, align 4
  %add468 = add nsw i32 %shl467, %414
  store i32 %add468, i32* %ry0, align 4
  store i32 0, i32* %x0, align 4
  br label %for.cond469

for.cond469:                                      ; preds = %for.inc662, %for.body465
  %415 = load i32, i32* %x0, align 4
  %416 = load i32, i32* %blocksize_x, align 4
  %cmp470 = icmp slt i32 %415, %416
  br i1 %cmp470, label %for.body472, label %for.end664

for.body472:                                      ; preds = %for.cond469
  %417 = load i32, i32* %pic_pix_x.addr, align 4
  %418 = load i32, i32* %x0, align 4
  %add473 = add nsw i32 %417, %418
  %shl474 = shl i32 %add473, 2
  %419 = load i32, i32* %cand_mv_x, align 4
  %add475 = add nsw i32 %shl474, %419
  store i32 %add475, i32* %rx0, align 4
  %arraydecay476 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  store i32* %arraydecay476, i32** %d, align 8
  %420 = load i16**, i16*** %orig_pic.addr, align 8
  %421 = load i32, i32* %y0, align 4
  %idxprom477 = sext i32 %421 to i64
  %arrayidx478 = getelementptr inbounds i16*, i16** %420, i64 %idxprom477
  %422 = load i16*, i16** %arrayidx478, align 8
  store i16* %422, i16** %orig_line, align 8
  %423 = load i32, i32* %ry0, align 4
  store i32 %423, i32* %ry, align 4
  %424 = load i16*, i16** %orig_line, align 8
  %425 = load i32, i32* %x0, align 4
  %idxprom479 = sext i32 %425 to i64
  %arrayidx480 = getelementptr inbounds i16, i16* %424, i64 %idxprom479
  %426 = load i16, i16* %arrayidx480, align 2
  %conv481 = zext i16 %426 to i32
  %427 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %428 = load i16**, i16*** %ref_pic, align 8
  %429 = load i32, i32* %ry, align 4
  %430 = load i32, i32* %rx0, align 4
  %431 = load i32, i32* %img_height, align 4
  %432 = load i32, i32* %img_width, align 4
  %call482 = call zeroext i16 %427(i16** %428, i32 %429, i32 %430, i32 %431, i32 %432)
  %conv483 = zext i16 %call482 to i32
  %sub484 = sub nsw i32 %conv481, %conv483
  %433 = load i32*, i32** %d, align 8
  %incdec.ptr485 = getelementptr inbounds i32, i32* %433, i32 1
  store i32* %incdec.ptr485, i32** %d, align 8
  store i32 %sub484, i32* %433, align 4
  %434 = load i16*, i16** %orig_line, align 8
  %435 = load i32, i32* %x0, align 4
  %add486 = add nsw i32 %435, 1
  %idxprom487 = sext i32 %add486 to i64
  %arrayidx488 = getelementptr inbounds i16, i16* %434, i64 %idxprom487
  %436 = load i16, i16* %arrayidx488, align 2
  %conv489 = zext i16 %436 to i32
  %437 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %438 = load i16**, i16*** %ref_pic, align 8
  %439 = load i32, i32* %ry, align 4
  %440 = load i32, i32* %rx0, align 4
  %add490 = add nsw i32 %440, 4
  %441 = load i32, i32* %img_height, align 4
  %442 = load i32, i32* %img_width, align 4
  %call491 = call zeroext i16 %437(i16** %438, i32 %439, i32 %add490, i32 %441, i32 %442)
  %conv492 = zext i16 %call491 to i32
  %sub493 = sub nsw i32 %conv489, %conv492
  %443 = load i32*, i32** %d, align 8
  %incdec.ptr494 = getelementptr inbounds i32, i32* %443, i32 1
  store i32* %incdec.ptr494, i32** %d, align 8
  store i32 %sub493, i32* %443, align 4
  %444 = load i16*, i16** %orig_line, align 8
  %445 = load i32, i32* %x0, align 4
  %add495 = add nsw i32 %445, 2
  %idxprom496 = sext i32 %add495 to i64
  %arrayidx497 = getelementptr inbounds i16, i16* %444, i64 %idxprom496
  %446 = load i16, i16* %arrayidx497, align 2
  %conv498 = zext i16 %446 to i32
  %447 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %448 = load i16**, i16*** %ref_pic, align 8
  %449 = load i32, i32* %ry, align 4
  %450 = load i32, i32* %rx0, align 4
  %add499 = add nsw i32 %450, 8
  %451 = load i32, i32* %img_height, align 4
  %452 = load i32, i32* %img_width, align 4
  %call500 = call zeroext i16 %447(i16** %448, i32 %449, i32 %add499, i32 %451, i32 %452)
  %conv501 = zext i16 %call500 to i32
  %sub502 = sub nsw i32 %conv498, %conv501
  %453 = load i32*, i32** %d, align 8
  %incdec.ptr503 = getelementptr inbounds i32, i32* %453, i32 1
  store i32* %incdec.ptr503, i32** %d, align 8
  store i32 %sub502, i32* %453, align 4
  %454 = load i16*, i16** %orig_line, align 8
  %455 = load i32, i32* %x0, align 4
  %add504 = add nsw i32 %455, 3
  %idxprom505 = sext i32 %add504 to i64
  %arrayidx506 = getelementptr inbounds i16, i16* %454, i64 %idxprom505
  %456 = load i16, i16* %arrayidx506, align 2
  %conv507 = zext i16 %456 to i32
  %457 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %458 = load i16**, i16*** %ref_pic, align 8
  %459 = load i32, i32* %ry, align 4
  %460 = load i32, i32* %rx0, align 4
  %add508 = add nsw i32 %460, 12
  %461 = load i32, i32* %img_height, align 4
  %462 = load i32, i32* %img_width, align 4
  %call509 = call zeroext i16 %457(i16** %458, i32 %459, i32 %add508, i32 %461, i32 %462)
  %conv510 = zext i16 %call509 to i32
  %sub511 = sub nsw i32 %conv507, %conv510
  %463 = load i32*, i32** %d, align 8
  %incdec.ptr512 = getelementptr inbounds i32, i32* %463, i32 1
  store i32* %incdec.ptr512, i32** %d, align 8
  store i32 %sub511, i32* %463, align 4
  %464 = load i16**, i16*** %orig_pic.addr, align 8
  %465 = load i32, i32* %y0, align 4
  %add513 = add nsw i32 %465, 1
  %idxprom514 = sext i32 %add513 to i64
  %arrayidx515 = getelementptr inbounds i16*, i16** %464, i64 %idxprom514
  %466 = load i16*, i16** %arrayidx515, align 8
  store i16* %466, i16** %orig_line, align 8
  %467 = load i32, i32* %ry0, align 4
  %add516 = add nsw i32 %467, 4
  store i32 %add516, i32* %ry, align 4
  %468 = load i16*, i16** %orig_line, align 8
  %469 = load i32, i32* %x0, align 4
  %idxprom517 = sext i32 %469 to i64
  %arrayidx518 = getelementptr inbounds i16, i16* %468, i64 %idxprom517
  %470 = load i16, i16* %arrayidx518, align 2
  %conv519 = zext i16 %470 to i32
  %471 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %472 = load i16**, i16*** %ref_pic, align 8
  %473 = load i32, i32* %ry, align 4
  %474 = load i32, i32* %rx0, align 4
  %475 = load i32, i32* %img_height, align 4
  %476 = load i32, i32* %img_width, align 4
  %call520 = call zeroext i16 %471(i16** %472, i32 %473, i32 %474, i32 %475, i32 %476)
  %conv521 = zext i16 %call520 to i32
  %sub522 = sub nsw i32 %conv519, %conv521
  %477 = load i32*, i32** %d, align 8
  %incdec.ptr523 = getelementptr inbounds i32, i32* %477, i32 1
  store i32* %incdec.ptr523, i32** %d, align 8
  store i32 %sub522, i32* %477, align 4
  %478 = load i16*, i16** %orig_line, align 8
  %479 = load i32, i32* %x0, align 4
  %add524 = add nsw i32 %479, 1
  %idxprom525 = sext i32 %add524 to i64
  %arrayidx526 = getelementptr inbounds i16, i16* %478, i64 %idxprom525
  %480 = load i16, i16* %arrayidx526, align 2
  %conv527 = zext i16 %480 to i32
  %481 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %482 = load i16**, i16*** %ref_pic, align 8
  %483 = load i32, i32* %ry, align 4
  %484 = load i32, i32* %rx0, align 4
  %add528 = add nsw i32 %484, 4
  %485 = load i32, i32* %img_height, align 4
  %486 = load i32, i32* %img_width, align 4
  %call529 = call zeroext i16 %481(i16** %482, i32 %483, i32 %add528, i32 %485, i32 %486)
  %conv530 = zext i16 %call529 to i32
  %sub531 = sub nsw i32 %conv527, %conv530
  %487 = load i32*, i32** %d, align 8
  %incdec.ptr532 = getelementptr inbounds i32, i32* %487, i32 1
  store i32* %incdec.ptr532, i32** %d, align 8
  store i32 %sub531, i32* %487, align 4
  %488 = load i16*, i16** %orig_line, align 8
  %489 = load i32, i32* %x0, align 4
  %add533 = add nsw i32 %489, 2
  %idxprom534 = sext i32 %add533 to i64
  %arrayidx535 = getelementptr inbounds i16, i16* %488, i64 %idxprom534
  %490 = load i16, i16* %arrayidx535, align 2
  %conv536 = zext i16 %490 to i32
  %491 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %492 = load i16**, i16*** %ref_pic, align 8
  %493 = load i32, i32* %ry, align 4
  %494 = load i32, i32* %rx0, align 4
  %add537 = add nsw i32 %494, 8
  %495 = load i32, i32* %img_height, align 4
  %496 = load i32, i32* %img_width, align 4
  %call538 = call zeroext i16 %491(i16** %492, i32 %493, i32 %add537, i32 %495, i32 %496)
  %conv539 = zext i16 %call538 to i32
  %sub540 = sub nsw i32 %conv536, %conv539
  %497 = load i32*, i32** %d, align 8
  %incdec.ptr541 = getelementptr inbounds i32, i32* %497, i32 1
  store i32* %incdec.ptr541, i32** %d, align 8
  store i32 %sub540, i32* %497, align 4
  %498 = load i16*, i16** %orig_line, align 8
  %499 = load i32, i32* %x0, align 4
  %add542 = add nsw i32 %499, 3
  %idxprom543 = sext i32 %add542 to i64
  %arrayidx544 = getelementptr inbounds i16, i16* %498, i64 %idxprom543
  %500 = load i16, i16* %arrayidx544, align 2
  %conv545 = zext i16 %500 to i32
  %501 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %502 = load i16**, i16*** %ref_pic, align 8
  %503 = load i32, i32* %ry, align 4
  %504 = load i32, i32* %rx0, align 4
  %add546 = add nsw i32 %504, 12
  %505 = load i32, i32* %img_height, align 4
  %506 = load i32, i32* %img_width, align 4
  %call547 = call zeroext i16 %501(i16** %502, i32 %503, i32 %add546, i32 %505, i32 %506)
  %conv548 = zext i16 %call547 to i32
  %sub549 = sub nsw i32 %conv545, %conv548
  %507 = load i32*, i32** %d, align 8
  %incdec.ptr550 = getelementptr inbounds i32, i32* %507, i32 1
  store i32* %incdec.ptr550, i32** %d, align 8
  store i32 %sub549, i32* %507, align 4
  %508 = load i16**, i16*** %orig_pic.addr, align 8
  %509 = load i32, i32* %y0, align 4
  %add551 = add nsw i32 %509, 2
  %idxprom552 = sext i32 %add551 to i64
  %arrayidx553 = getelementptr inbounds i16*, i16** %508, i64 %idxprom552
  %510 = load i16*, i16** %arrayidx553, align 8
  store i16* %510, i16** %orig_line, align 8
  %511 = load i32, i32* %ry0, align 4
  %add554 = add nsw i32 %511, 8
  store i32 %add554, i32* %ry, align 4
  %512 = load i16*, i16** %orig_line, align 8
  %513 = load i32, i32* %x0, align 4
  %idxprom555 = sext i32 %513 to i64
  %arrayidx556 = getelementptr inbounds i16, i16* %512, i64 %idxprom555
  %514 = load i16, i16* %arrayidx556, align 2
  %conv557 = zext i16 %514 to i32
  %515 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %516 = load i16**, i16*** %ref_pic, align 8
  %517 = load i32, i32* %ry, align 4
  %518 = load i32, i32* %rx0, align 4
  %519 = load i32, i32* %img_height, align 4
  %520 = load i32, i32* %img_width, align 4
  %call558 = call zeroext i16 %515(i16** %516, i32 %517, i32 %518, i32 %519, i32 %520)
  %conv559 = zext i16 %call558 to i32
  %sub560 = sub nsw i32 %conv557, %conv559
  %521 = load i32*, i32** %d, align 8
  %incdec.ptr561 = getelementptr inbounds i32, i32* %521, i32 1
  store i32* %incdec.ptr561, i32** %d, align 8
  store i32 %sub560, i32* %521, align 4
  %522 = load i16*, i16** %orig_line, align 8
  %523 = load i32, i32* %x0, align 4
  %add562 = add nsw i32 %523, 1
  %idxprom563 = sext i32 %add562 to i64
  %arrayidx564 = getelementptr inbounds i16, i16* %522, i64 %idxprom563
  %524 = load i16, i16* %arrayidx564, align 2
  %conv565 = zext i16 %524 to i32
  %525 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %526 = load i16**, i16*** %ref_pic, align 8
  %527 = load i32, i32* %ry, align 4
  %528 = load i32, i32* %rx0, align 4
  %add566 = add nsw i32 %528, 4
  %529 = load i32, i32* %img_height, align 4
  %530 = load i32, i32* %img_width, align 4
  %call567 = call zeroext i16 %525(i16** %526, i32 %527, i32 %add566, i32 %529, i32 %530)
  %conv568 = zext i16 %call567 to i32
  %sub569 = sub nsw i32 %conv565, %conv568
  %531 = load i32*, i32** %d, align 8
  %incdec.ptr570 = getelementptr inbounds i32, i32* %531, i32 1
  store i32* %incdec.ptr570, i32** %d, align 8
  store i32 %sub569, i32* %531, align 4
  %532 = load i16*, i16** %orig_line, align 8
  %533 = load i32, i32* %x0, align 4
  %add571 = add nsw i32 %533, 2
  %idxprom572 = sext i32 %add571 to i64
  %arrayidx573 = getelementptr inbounds i16, i16* %532, i64 %idxprom572
  %534 = load i16, i16* %arrayidx573, align 2
  %conv574 = zext i16 %534 to i32
  %535 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %536 = load i16**, i16*** %ref_pic, align 8
  %537 = load i32, i32* %ry, align 4
  %538 = load i32, i32* %rx0, align 4
  %add575 = add nsw i32 %538, 8
  %539 = load i32, i32* %img_height, align 4
  %540 = load i32, i32* %img_width, align 4
  %call576 = call zeroext i16 %535(i16** %536, i32 %537, i32 %add575, i32 %539, i32 %540)
  %conv577 = zext i16 %call576 to i32
  %sub578 = sub nsw i32 %conv574, %conv577
  %541 = load i32*, i32** %d, align 8
  %incdec.ptr579 = getelementptr inbounds i32, i32* %541, i32 1
  store i32* %incdec.ptr579, i32** %d, align 8
  store i32 %sub578, i32* %541, align 4
  %542 = load i16*, i16** %orig_line, align 8
  %543 = load i32, i32* %x0, align 4
  %add580 = add nsw i32 %543, 3
  %idxprom581 = sext i32 %add580 to i64
  %arrayidx582 = getelementptr inbounds i16, i16* %542, i64 %idxprom581
  %544 = load i16, i16* %arrayidx582, align 2
  %conv583 = zext i16 %544 to i32
  %545 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %546 = load i16**, i16*** %ref_pic, align 8
  %547 = load i32, i32* %ry, align 4
  %548 = load i32, i32* %rx0, align 4
  %add584 = add nsw i32 %548, 12
  %549 = load i32, i32* %img_height, align 4
  %550 = load i32, i32* %img_width, align 4
  %call585 = call zeroext i16 %545(i16** %546, i32 %547, i32 %add584, i32 %549, i32 %550)
  %conv586 = zext i16 %call585 to i32
  %sub587 = sub nsw i32 %conv583, %conv586
  %551 = load i32*, i32** %d, align 8
  %incdec.ptr588 = getelementptr inbounds i32, i32* %551, i32 1
  store i32* %incdec.ptr588, i32** %d, align 8
  store i32 %sub587, i32* %551, align 4
  %552 = load i16**, i16*** %orig_pic.addr, align 8
  %553 = load i32, i32* %y0, align 4
  %add589 = add nsw i32 %553, 3
  %idxprom590 = sext i32 %add589 to i64
  %arrayidx591 = getelementptr inbounds i16*, i16** %552, i64 %idxprom590
  %554 = load i16*, i16** %arrayidx591, align 8
  store i16* %554, i16** %orig_line, align 8
  %555 = load i32, i32* %ry0, align 4
  %add592 = add nsw i32 %555, 12
  store i32 %add592, i32* %ry, align 4
  %556 = load i16*, i16** %orig_line, align 8
  %557 = load i32, i32* %x0, align 4
  %idxprom593 = sext i32 %557 to i64
  %arrayidx594 = getelementptr inbounds i16, i16* %556, i64 %idxprom593
  %558 = load i16, i16* %arrayidx594, align 2
  %conv595 = zext i16 %558 to i32
  %559 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %560 = load i16**, i16*** %ref_pic, align 8
  %561 = load i32, i32* %ry, align 4
  %562 = load i32, i32* %rx0, align 4
  %563 = load i32, i32* %img_height, align 4
  %564 = load i32, i32* %img_width, align 4
  %call596 = call zeroext i16 %559(i16** %560, i32 %561, i32 %562, i32 %563, i32 %564)
  %conv597 = zext i16 %call596 to i32
  %sub598 = sub nsw i32 %conv595, %conv597
  %565 = load i32*, i32** %d, align 8
  %incdec.ptr599 = getelementptr inbounds i32, i32* %565, i32 1
  store i32* %incdec.ptr599, i32** %d, align 8
  store i32 %sub598, i32* %565, align 4
  %566 = load i16*, i16** %orig_line, align 8
  %567 = load i32, i32* %x0, align 4
  %add600 = add nsw i32 %567, 1
  %idxprom601 = sext i32 %add600 to i64
  %arrayidx602 = getelementptr inbounds i16, i16* %566, i64 %idxprom601
  %568 = load i16, i16* %arrayidx602, align 2
  %conv603 = zext i16 %568 to i32
  %569 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %570 = load i16**, i16*** %ref_pic, align 8
  %571 = load i32, i32* %ry, align 4
  %572 = load i32, i32* %rx0, align 4
  %add604 = add nsw i32 %572, 4
  %573 = load i32, i32* %img_height, align 4
  %574 = load i32, i32* %img_width, align 4
  %call605 = call zeroext i16 %569(i16** %570, i32 %571, i32 %add604, i32 %573, i32 %574)
  %conv606 = zext i16 %call605 to i32
  %sub607 = sub nsw i32 %conv603, %conv606
  %575 = load i32*, i32** %d, align 8
  %incdec.ptr608 = getelementptr inbounds i32, i32* %575, i32 1
  store i32* %incdec.ptr608, i32** %d, align 8
  store i32 %sub607, i32* %575, align 4
  %576 = load i16*, i16** %orig_line, align 8
  %577 = load i32, i32* %x0, align 4
  %add609 = add nsw i32 %577, 2
  %idxprom610 = sext i32 %add609 to i64
  %arrayidx611 = getelementptr inbounds i16, i16* %576, i64 %idxprom610
  %578 = load i16, i16* %arrayidx611, align 2
  %conv612 = zext i16 %578 to i32
  %579 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %580 = load i16**, i16*** %ref_pic, align 8
  %581 = load i32, i32* %ry, align 4
  %582 = load i32, i32* %rx0, align 4
  %add613 = add nsw i32 %582, 8
  %583 = load i32, i32* %img_height, align 4
  %584 = load i32, i32* %img_width, align 4
  %call614 = call zeroext i16 %579(i16** %580, i32 %581, i32 %add613, i32 %583, i32 %584)
  %conv615 = zext i16 %call614 to i32
  %sub616 = sub nsw i32 %conv612, %conv615
  %585 = load i32*, i32** %d, align 8
  %incdec.ptr617 = getelementptr inbounds i32, i32* %585, i32 1
  store i32* %incdec.ptr617, i32** %d, align 8
  store i32 %sub616, i32* %585, align 4
  %586 = load i16*, i16** %orig_line, align 8
  %587 = load i32, i32* %x0, align 4
  %add618 = add nsw i32 %587, 3
  %idxprom619 = sext i32 %add618 to i64
  %arrayidx620 = getelementptr inbounds i16, i16* %586, i64 %idxprom619
  %588 = load i16, i16* %arrayidx620, align 2
  %conv621 = zext i16 %588 to i32
  %589 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %590 = load i16**, i16*** %ref_pic, align 8
  %591 = load i32, i32* %ry, align 4
  %592 = load i32, i32* %rx0, align 4
  %add622 = add nsw i32 %592, 12
  %593 = load i32, i32* %img_height, align 4
  %594 = load i32, i32* %img_width, align 4
  %call623 = call zeroext i16 %589(i16** %590, i32 %591, i32 %add622, i32 %593, i32 %594)
  %conv624 = zext i16 %call623 to i32
  %sub625 = sub nsw i32 %conv621, %conv624
  %595 = load i32*, i32** %d, align 8
  store i32 %sub625, i32* %595, align 4
  %596 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8626 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %596, i32 0, i32 123
  %597 = load i32, i32* %AllowTransform8x8626, align 4
  %tobool627 = icmp ne i32 %597, 0
  br i1 %tobool627, label %if.else637, label %if.then628

if.then628:                                       ; preds = %for.body472
  %arraydecay629 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %598 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard630 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %598, i32 0, i32 6
  %599 = load i32, i32* %hadamard630, align 8
  %call631 = call i32 @SATD(i32* %arraydecay629, i32 %599)
  %600 = load i32, i32* %mcost, align 4
  %add632 = add nsw i32 %600, %call631
  store i32 %add632, i32* %mcost, align 4
  %601 = load i32, i32* %min_mcost.addr, align 4
  %cmp633 = icmp sgt i32 %add632, %601
  br i1 %cmp633, label %if.then635, label %if.end636

if.then635:                                       ; preds = %if.then628
  store i32 1, i32* %abort_search, align 4
  br label %for.end664

if.end636:                                        ; preds = %if.then628
  br label %if.end661

if.else637:                                       ; preds = %for.body472
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond638

for.cond638:                                      ; preds = %for.inc658, %if.else637
  %602 = load i32, i32* %j, align 4
  %cmp639 = icmp slt i32 %602, 4
  br i1 %cmp639, label %for.body641, label %for.end660

for.body641:                                      ; preds = %for.cond638
  store i32 0, i32* %i, align 4
  br label %for.cond642

for.cond642:                                      ; preds = %for.inc654, %for.body641
  %603 = load i32, i32* %i, align 4
  %cmp643 = icmp slt i32 %603, 4
  br i1 %cmp643, label %for.body645, label %for.end657

for.body645:                                      ; preds = %for.cond642
  %604 = load i32, i32* %k, align 4
  %idxprom646 = sext i32 %604 to i64
  %arrayidx647 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom646
  %605 = load i32, i32* %arrayidx647, align 4
  %606 = load i32, i32* %y0, align 4
  %607 = load i32, i32* %j, align 4
  %add648 = add nsw i32 %606, %607
  %idxprom649 = sext i32 %add648 to i64
  %arrayidx650 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 %idxprom649
  %608 = load i32, i32* %x0, align 4
  %609 = load i32, i32* %i, align 4
  %add651 = add nsw i32 %608, %609
  %idxprom652 = sext i32 %add651 to i64
  %arrayidx653 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx650, i64 0, i64 %idxprom652
  store i32 %605, i32* %arrayidx653, align 4
  br label %for.inc654

for.inc654:                                       ; preds = %for.body645
  %610 = load i32, i32* %i, align 4
  %inc655 = add nsw i32 %610, 1
  store i32 %inc655, i32* %i, align 4
  %611 = load i32, i32* %k, align 4
  %inc656 = add nsw i32 %611, 1
  store i32 %inc656, i32* %k, align 4
  br label %for.cond642

for.end657:                                       ; preds = %for.cond642
  br label %for.inc658

for.inc658:                                       ; preds = %for.end657
  %612 = load i32, i32* %j, align 4
  %inc659 = add nsw i32 %612, 1
  store i32 %inc659, i32* %j, align 4
  br label %for.cond638

for.end660:                                       ; preds = %for.cond638
  br label %if.end661

if.end661:                                        ; preds = %for.end660, %if.end636
  br label %for.inc662

for.inc662:                                       ; preds = %if.end661
  %613 = load i32, i32* %x0, align 4
  %add663 = add nsw i32 %613, 4
  store i32 %add663, i32* %x0, align 4
  br label %for.cond469

for.end664:                                       ; preds = %if.then635, %for.cond469
  br label %for.inc665

for.inc665:                                       ; preds = %for.end664
  %614 = load i32, i32* %y0, align 4
  %add666 = add nsw i32 %614, 4
  store i32 %add666, i32* %y0, align 4
  br label %for.cond457

for.end667:                                       ; preds = %land.end463
  %615 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8668 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %615, i32 0, i32 123
  %616 = load i32, i32* %AllowTransform8x8668, align 4
  %tobool669 = icmp ne i32 %616, 0
  br i1 %tobool669, label %if.then670, label %if.end675

if.then670:                                       ; preds = %for.end667
  %arraydecay671 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 0
  %617 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard672 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %617, i32 0, i32 6
  %618 = load i32, i32* %hadamard672, align 8
  %619 = load i32, i32* %blocktype.addr, align 4
  %call673 = call i32 @find_SATD([16 x i32]* %arraydecay671, i32 %618, i32 %619)
  %620 = load i32, i32* %mcost, align 4
  %add674 = add nsw i32 %620, %call673
  store i32 %add674, i32* %mcost, align 4
  br label %if.end675

if.end675:                                        ; preds = %if.then670, %for.end667
  %621 = load i32, i32* %mcost, align 4
  %622 = load i32, i32* %min_mcost.addr, align 4
  %cmp676 = icmp slt i32 %621, %622
  br i1 %cmp676, label %if.then678, label %if.end679

if.then678:                                       ; preds = %if.end675
  %623 = load i32, i32* %mcost, align 4
  store i32 %623, i32* %min_mcost.addr, align 4
  %624 = load i32, i32* %pos, align 4
  store i32 %624, i32* %best_pos, align 4
  br label %if.end679

if.end679:                                        ; preds = %if.then678, %if.end675
  br label %for.inc680

for.inc680:                                       ; preds = %if.end679, %if.then455
  %625 = load i32, i32* %pos, align 4
  %inc681 = add nsw i32 %625, 1
  store i32 %inc681, i32* %pos, align 4
  br label %for.cond428

for.end682:                                       ; preds = %for.cond428
  %626 = load i32, i32* %best_pos, align 4
  %tobool683 = icmp ne i32 %626, 0
  br i1 %tobool683, label %if.then684, label %if.end695

if.then684:                                       ; preds = %for.end682
  %627 = load i32*, i32** @spiral_search_x, align 8
  %628 = load i32, i32* %best_pos, align 4
  %idxprom685 = sext i32 %628 to i64
  %arrayidx686 = getelementptr inbounds i32, i32* %627, i64 %idxprom685
  %629 = load i32, i32* %arrayidx686, align 4
  %630 = load i16*, i16** %mv_x.addr, align 8
  %631 = load i16, i16* %630, align 2
  %conv687 = sext i16 %631 to i32
  %add688 = add nsw i32 %conv687, %629
  %conv689 = trunc i32 %add688 to i16
  store i16 %conv689, i16* %630, align 2
  %632 = load i32*, i32** @spiral_search_y, align 8
  %633 = load i32, i32* %best_pos, align 4
  %idxprom690 = sext i32 %633 to i64
  %arrayidx691 = getelementptr inbounds i32, i32* %632, i64 %idxprom690
  %634 = load i32, i32* %arrayidx691, align 4
  %635 = load i16*, i16** %mv_y.addr, align 8
  %636 = load i16, i16* %635, align 2
  %conv692 = sext i16 %636 to i32
  %add693 = add nsw i32 %conv692, %634
  %conv694 = trunc i32 %add693 to i16
  store i16 %conv694, i16* %635, align 2
  br label %if.end695

if.end695:                                        ; preds = %if.then684, %for.end682
  %637 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %637
}

declare dso_local zeroext i16 @FastPelY_14(i16**, i32, i32, i32, i32) #2

declare dso_local zeroext i16 @UMVPelY_14(i16**, i32, i32, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @FullPelBlockMotionBiPred(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i32 %iteration, i16 signext %pred_mv_x1, i16 signext %pred_mv_y1, i16 signext %pred_mv_x2, i16 signext %pred_mv_y2, i16* %mv_x, i16* %mv_y, i16* %s_mv_x, i16* %s_mv_y, i32 %search_range, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %iteration.addr = alloca i32, align 4
  %pred_mv_x1.addr = alloca i16, align 2
  %pred_mv_y1.addr = alloca i16, align 2
  %pred_mv_x2.addr = alloca i16, align 2
  %pred_mv_y2.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %s_mv_x.addr = alloca i16*, align 8
  %s_mv_y.addr = alloca i16*, align 8
  %search_range.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pos = alloca i32, align 4
  %cand_x = alloca i32, align 4
  %cand_y = alloca i32, align 4
  %y = alloca i32, align 4
  %x4 = alloca i32, align 4
  %mcost = alloca i32, align 4
  %orig_line = alloca i16*, align 8
  %ref2_line = alloca i16*, align 8
  %ref1_line = alloca i16*, align 8
  %get_ref_line1 = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %get_ref_line2 = alloca i16* (i32, i16*, i32, i32, i32, i32)*, align 8
  %list_offset = alloca i32, align 4
  %ref1_pic = alloca i16*, align 8
  %ref2_pic = alloca i16*, align 8
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %best_pos = alloca i32, align 4
  %max_pos = alloca i32, align 4
  %lambda_factor = alloca i32, align 4
  %blocksize_y = alloca i32, align 4
  %blocksize_x = alloca i32, align 4
  %blocksize_x4 = alloca i32, align 4
  %pred_x1 = alloca i32, align 4
  %pred_y1 = alloca i32, align 4
  %pred_x2 = alloca i32, align 4
  %pred_y2 = alloca i32, align 4
  %center_x = alloca i16, align 2
  %center_y = alloca i16, align 2
  %ref1_center_x = alloca i16, align 2
  %ref1_center_y = alloca i16, align 2
  %bi_diff = alloca i32, align 4
  %apply_weights = alloca i16, align 2
  %weightSpic = alloca i16, align 2
  %weightRpic = alloca i16, align 2
  %offsetSpic = alloca i16, align 2
  %offsetRpic = alloca i16, align 2
  %weightedpel = alloca i16, align 2
  %pixel1 = alloca i16, align 2
  %pixel2 = alloca i16, align 2
  %offsetBi = alloca i16, align 2
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %iteration, i32* %iteration.addr, align 4
  store i16 %pred_mv_x1, i16* %pred_mv_x1.addr, align 2
  store i16 %pred_mv_y1, i16* %pred_mv_y1.addr, align 2
  store i16 %pred_mv_x2, i16* %pred_mv_x2.addr, align 2
  store i16 %pred_mv_y2, i16* %pred_mv_y2.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i16* %s_mv_x, i16** %s_mv_x.addr, align 8
  store i16* %s_mv_y, i16** %s_mv_y.addr, align 8
  store i32 %search_range, i32* %search_range.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 90
  %1 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %land.lhs.true, label %cond.false

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx, i32 0, i32 22
  %6 = load i32, i32* %mb_field, align 4
  %tobool1 = icmp ne i32 %6, 0
  br i1 %tobool1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 3
  %8 = load i32, i32* %current_mb_nr2, align 4
  %rem = srem i32 %8, 2
  %tobool3 = icmp ne i32 %rem, 0
  %9 = zext i1 %tobool3 to i64
  %cond = select i1 %tobool3, i32 4, i32 2
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond4 = phi i32 [ %cond, %cond.true ], [ 0, %cond.false ]
  store i32 %cond4, i32* %list_offset, align 4
  %10 = load i32, i32* %list.addr, align 4
  %11 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %10, %11
  %idxprom5 = sext i32 %add to i64
  %arrayidx6 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom5
  %12 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx6, align 8
  %13 = load i16, i16* %ref.addr, align 2
  %idxprom7 = sext i16 %13 to i64
  %arrayidx8 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %12, i64 %idxprom7
  %14 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx8, align 8
  %imgY_11 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %14, i32 0, i32 26
  %15 = load i16*, i16** %imgY_11, align 8
  store i16* %15, i16** %ref1_pic, align 8
  %16 = load i32, i32* %list.addr, align 4
  %cmp = icmp eq i32 %16, 0
  br i1 %cmp, label %cond.true9, label %cond.false11

cond.true9:                                       ; preds = %cond.end
  %17 = load i32, i32* %list_offset, align 4
  %add10 = add nsw i32 1, %17
  br label %cond.end12

cond.false11:                                     ; preds = %cond.end
  %18 = load i32, i32* %list_offset, align 4
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %cond.true9
  %cond13 = phi i32 [ %add10, %cond.true9 ], [ %18, %cond.false11 ]
  %idxprom14 = sext i32 %cond13 to i64
  %arrayidx15 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom14
  %19 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %19, i64 0
  %20 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx16, align 8
  %imgY_1117 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %20, i32 0, i32 26
  %21 = load i16*, i16** %imgY_1117, align 8
  store i16* %21, i16** %ref2_pic, align 8
  %22 = load i32, i32* %list.addr, align 4
  %23 = load i32, i32* %list_offset, align 4
  %add18 = add nsw i32 %22, %23
  %idxprom19 = sext i32 %add18 to i64
  %arrayidx20 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom19
  %24 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx20, align 8
  %25 = load i16, i16* %ref.addr, align 2
  %idxprom21 = sext i16 %25 to i64
  %arrayidx22 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %24, i64 %idxprom21
  %26 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx22, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %26, i32 0, i32 18
  %27 = load i32, i32* %size_x, align 8
  store i32 %27, i32* %img_width, align 4
  %28 = load i32, i32* %list.addr, align 4
  %29 = load i32, i32* %list_offset, align 4
  %add23 = add nsw i32 %28, %29
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom24
  %30 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx25, align 8
  %31 = load i16, i16* %ref.addr, align 2
  %idxprom26 = sext i16 %31 to i64
  %arrayidx27 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %30, i64 %idxprom26
  %32 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx27, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %32, i32 0, i32 19
  %33 = load i32, i32* %size_y, align 4
  store i32 %33, i32* %img_height, align 4
  store i32 0, i32* %best_pos, align 4
  %34 = load i32, i32* %search_range.addr, align 4
  %mul = mul nsw i32 2, %34
  %add28 = add nsw i32 %mul, 1
  %35 = load i32, i32* %search_range.addr, align 4
  %mul29 = mul nsw i32 2, %35
  %add30 = add nsw i32 %mul29, 1
  %mul31 = mul nsw i32 %add28, %add30
  store i32 %mul31, i32* %max_pos, align 4
  %36 = load double, double* %lambda.addr, align 8
  %mul32 = fmul double 6.553600e+04, %36
  %add33 = fadd double %mul32, 5.000000e-01
  %conv = fptosi double %add33 to i32
  store i32 %conv, i32* %lambda_factor, align 4
  %37 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %37, i32 0, i32 20
  %38 = load i32, i32* %blocktype.addr, align 4
  %idxprom34 = sext i32 %38 to i64
  %arrayidx35 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom34
  %arrayidx36 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx35, i64 0, i64 1
  %39 = load i32, i32* %arrayidx36, align 4
  store i32 %39, i32* %blocksize_y, align 4
  %40 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size37 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %40, i32 0, i32 20
  %41 = load i32, i32* %blocktype.addr, align 4
  %idxprom38 = sext i32 %41 to i64
  %arrayidx39 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size37, i64 0, i64 %idxprom38
  %arrayidx40 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx39, i64 0, i64 0
  %42 = load i32, i32* %arrayidx40, align 8
  store i32 %42, i32* %blocksize_x, align 4
  %43 = load i32, i32* %blocksize_x, align 4
  %shr = ashr i32 %43, 2
  store i32 %shr, i32* %blocksize_x4, align 4
  %44 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %44, 2
  %45 = load i16, i16* %pred_mv_x1.addr, align 2
  %conv41 = sext i16 %45 to i32
  %add42 = add nsw i32 %shl, %conv41
  store i32 %add42, i32* %pred_x1, align 4
  %46 = load i32, i32* %pic_pix_y.addr, align 4
  %shl43 = shl i32 %46, 2
  %47 = load i16, i16* %pred_mv_y1.addr, align 2
  %conv44 = sext i16 %47 to i32
  %add45 = add nsw i32 %shl43, %conv44
  store i32 %add45, i32* %pred_y1, align 4
  %48 = load i32, i32* %pic_pix_x.addr, align 4
  %shl46 = shl i32 %48, 2
  %49 = load i16, i16* %pred_mv_x2.addr, align 2
  %conv47 = sext i16 %49 to i32
  %add48 = add nsw i32 %shl46, %conv47
  store i32 %add48, i32* %pred_x2, align 4
  %50 = load i32, i32* %pic_pix_y.addr, align 4
  %shl49 = shl i32 %50, 2
  %51 = load i16, i16* %pred_mv_y2.addr, align 2
  %conv50 = sext i16 %51 to i32
  %add51 = add nsw i32 %shl49, %conv50
  store i32 %add51, i32* %pred_y2, align 4
  %52 = load i32, i32* %pic_pix_x.addr, align 4
  %53 = load i16*, i16** %mv_x.addr, align 8
  %54 = load i16, i16* %53, align 2
  %conv52 = sext i16 %54 to i32
  %add53 = add nsw i32 %52, %conv52
  %conv54 = trunc i32 %add53 to i16
  store i16 %conv54, i16* %center_x, align 2
  %55 = load i32, i32* %pic_pix_y.addr, align 4
  %56 = load i16*, i16** %mv_y.addr, align 8
  %57 = load i16, i16* %56, align 2
  %conv55 = sext i16 %57 to i32
  %add56 = add nsw i32 %55, %conv55
  %conv57 = trunc i32 %add56 to i16
  store i16 %conv57, i16* %center_y, align 2
  %58 = load i32, i32* %pic_pix_x.addr, align 4
  %59 = load i16*, i16** %s_mv_x.addr, align 8
  %60 = load i16, i16* %59, align 2
  %conv58 = sext i16 %60 to i32
  %add59 = add nsw i32 %58, %conv58
  %conv60 = trunc i32 %add59 to i16
  store i16 %conv60, i16* %ref1_center_x, align 2
  %61 = load i32, i32* %pic_pix_y.addr, align 4
  %62 = load i16*, i16** %s_mv_y.addr, align 8
  %63 = load i16, i16* %62, align 2
  %conv61 = sext i16 %63 to i32
  %add62 = add nsw i32 %61, %conv61
  %conv63 = trunc i32 %add62 to i16
  store i16 %conv63, i16* %ref1_center_y, align 2
  %64 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %64, i32 0, i32 20
  %65 = load i32, i32* %weighted_bipred_idc, align 4
  %cmp64 = icmp ugt i32 %65, 0
  %conv65 = zext i1 %cmp64 to i32
  %conv66 = trunc i32 %conv65 to i16
  store i16 %conv66, i16* %apply_weights, align 2
  %66 = load i16, i16* %apply_weights, align 2
  %conv67 = sext i16 %66 to i32
  %tobool68 = icmp ne i32 %conv67, 0
  br i1 %tobool68, label %cond.true69, label %cond.false89

cond.true69:                                      ; preds = %cond.end12
  %67 = load i32, i32* %list.addr, align 4
  %cmp70 = icmp eq i32 %67, 0
  br i1 %cmp70, label %cond.true72, label %cond.false79

cond.true72:                                      ; preds = %cond.true69
  %68 = load i32****, i32***** @wbp_weight, align 8
  %69 = load i32, i32* %list_offset, align 4
  %idxprom73 = sext i32 %69 to i64
  %arrayidx74 = getelementptr inbounds i32***, i32**** %68, i64 %idxprom73
  %70 = load i32***, i32**** %arrayidx74, align 8
  %71 = load i16, i16* %ref.addr, align 2
  %idxprom75 = sext i16 %71 to i64
  %arrayidx76 = getelementptr inbounds i32**, i32*** %70, i64 %idxprom75
  %72 = load i32**, i32*** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds i32*, i32** %72, i64 0
  %73 = load i32*, i32** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i32, i32* %73, i64 0
  %74 = load i32, i32* %arrayidx78, align 4
  br label %cond.end87

cond.false79:                                     ; preds = %cond.true69
  %75 = load i32****, i32***** @wbp_weight, align 8
  %76 = load i32, i32* %list_offset, align 4
  %add80 = add nsw i32 %76, 1
  %idxprom81 = sext i32 %add80 to i64
  %arrayidx82 = getelementptr inbounds i32***, i32**** %75, i64 %idxprom81
  %77 = load i32***, i32**** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i32**, i32*** %77, i64 0
  %78 = load i32**, i32*** %arrayidx83, align 8
  %79 = load i16, i16* %ref.addr, align 2
  %idxprom84 = sext i16 %79 to i64
  %arrayidx85 = getelementptr inbounds i32*, i32** %78, i64 %idxprom84
  %80 = load i32*, i32** %arrayidx85, align 8
  %arrayidx86 = getelementptr inbounds i32, i32* %80, i64 0
  %81 = load i32, i32* %arrayidx86, align 4
  br label %cond.end87

cond.end87:                                       ; preds = %cond.false79, %cond.true72
  %cond88 = phi i32 [ %74, %cond.true72 ], [ %81, %cond.false79 ]
  br label %cond.end91

cond.false89:                                     ; preds = %cond.end12
  %82 = load i32, i32* @luma_log_weight_denom, align 4
  %shl90 = shl i32 1, %82
  br label %cond.end91

cond.end91:                                       ; preds = %cond.false89, %cond.end87
  %cond92 = phi i32 [ %cond88, %cond.end87 ], [ %shl90, %cond.false89 ]
  %conv93 = trunc i32 %cond92 to i16
  store i16 %conv93, i16* %weightSpic, align 2
  %83 = load i16, i16* %apply_weights, align 2
  %conv94 = sext i16 %83 to i32
  %tobool95 = icmp ne i32 %conv94, 0
  br i1 %tobool95, label %cond.true96, label %cond.false116

cond.true96:                                      ; preds = %cond.end91
  %84 = load i32, i32* %list.addr, align 4
  %cmp97 = icmp eq i32 %84, 0
  br i1 %cmp97, label %cond.true99, label %cond.false107

cond.true99:                                      ; preds = %cond.true96
  %85 = load i32****, i32***** @wbp_weight, align 8
  %86 = load i32, i32* %list_offset, align 4
  %add100 = add nsw i32 %86, 1
  %idxprom101 = sext i32 %add100 to i64
  %arrayidx102 = getelementptr inbounds i32***, i32**** %85, i64 %idxprom101
  %87 = load i32***, i32**** %arrayidx102, align 8
  %88 = load i16, i16* %ref.addr, align 2
  %idxprom103 = sext i16 %88 to i64
  %arrayidx104 = getelementptr inbounds i32**, i32*** %87, i64 %idxprom103
  %89 = load i32**, i32*** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i32*, i32** %89, i64 0
  %90 = load i32*, i32** %arrayidx105, align 8
  %arrayidx106 = getelementptr inbounds i32, i32* %90, i64 0
  %91 = load i32, i32* %arrayidx106, align 4
  br label %cond.end114

cond.false107:                                    ; preds = %cond.true96
  %92 = load i32****, i32***** @wbp_weight, align 8
  %93 = load i32, i32* %list_offset, align 4
  %idxprom108 = sext i32 %93 to i64
  %arrayidx109 = getelementptr inbounds i32***, i32**** %92, i64 %idxprom108
  %94 = load i32***, i32**** %arrayidx109, align 8
  %arrayidx110 = getelementptr inbounds i32**, i32*** %94, i64 0
  %95 = load i32**, i32*** %arrayidx110, align 8
  %96 = load i16, i16* %ref.addr, align 2
  %idxprom111 = sext i16 %96 to i64
  %arrayidx112 = getelementptr inbounds i32*, i32** %95, i64 %idxprom111
  %97 = load i32*, i32** %arrayidx112, align 8
  %arrayidx113 = getelementptr inbounds i32, i32* %97, i64 0
  %98 = load i32, i32* %arrayidx113, align 4
  br label %cond.end114

cond.end114:                                      ; preds = %cond.false107, %cond.true99
  %cond115 = phi i32 [ %91, %cond.true99 ], [ %98, %cond.false107 ]
  br label %cond.end118

cond.false116:                                    ; preds = %cond.end91
  %99 = load i32, i32* @luma_log_weight_denom, align 4
  %shl117 = shl i32 1, %99
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false116, %cond.end114
  %cond119 = phi i32 [ %cond115, %cond.end114 ], [ %shl117, %cond.false116 ]
  %conv120 = trunc i32 %cond119 to i16
  store i16 %conv120, i16* %weightRpic, align 2
  %100 = load i16, i16* %apply_weights, align 2
  %conv121 = sext i16 %100 to i32
  %tobool122 = icmp ne i32 %conv121, 0
  br i1 %tobool122, label %cond.true123, label %cond.false140

cond.true123:                                     ; preds = %cond.end118
  %101 = load i32, i32* %list.addr, align 4
  %cmp124 = icmp eq i32 %101, 0
  br i1 %cmp124, label %cond.true126, label %cond.false132

cond.true126:                                     ; preds = %cond.true123
  %102 = load i32***, i32**** @wp_offset, align 8
  %103 = load i32, i32* %list_offset, align 4
  %idxprom127 = sext i32 %103 to i64
  %arrayidx128 = getelementptr inbounds i32**, i32*** %102, i64 %idxprom127
  %104 = load i32**, i32*** %arrayidx128, align 8
  %105 = load i16, i16* %ref.addr, align 2
  %idxprom129 = sext i16 %105 to i64
  %arrayidx130 = getelementptr inbounds i32*, i32** %104, i64 %idxprom129
  %106 = load i32*, i32** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i32, i32* %106, i64 0
  %107 = load i32, i32* %arrayidx131, align 4
  br label %cond.end138

cond.false132:                                    ; preds = %cond.true123
  %108 = load i32***, i32**** @wp_offset, align 8
  %109 = load i32, i32* %list_offset, align 4
  %add133 = add nsw i32 %109, 1
  %idxprom134 = sext i32 %add133 to i64
  %arrayidx135 = getelementptr inbounds i32**, i32*** %108, i64 %idxprom134
  %110 = load i32**, i32*** %arrayidx135, align 8
  %arrayidx136 = getelementptr inbounds i32*, i32** %110, i64 0
  %111 = load i32*, i32** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds i32, i32* %111, i64 0
  %112 = load i32, i32* %arrayidx137, align 4
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false132, %cond.true126
  %cond139 = phi i32 [ %107, %cond.true126 ], [ %112, %cond.false132 ]
  br label %cond.end141

cond.false140:                                    ; preds = %cond.end118
  br label %cond.end141

cond.end141:                                      ; preds = %cond.false140, %cond.end138
  %cond142 = phi i32 [ %cond139, %cond.end138 ], [ 0, %cond.false140 ]
  %conv143 = trunc i32 %cond142 to i16
  store i16 %conv143, i16* %offsetSpic, align 2
  %113 = load i16, i16* %apply_weights, align 2
  %conv144 = sext i16 %113 to i32
  %tobool145 = icmp ne i32 %conv144, 0
  br i1 %tobool145, label %cond.true146, label %cond.false163

cond.true146:                                     ; preds = %cond.end141
  %114 = load i32, i32* %list.addr, align 4
  %cmp147 = icmp eq i32 %114, 0
  br i1 %cmp147, label %cond.true149, label %cond.false156

cond.true149:                                     ; preds = %cond.true146
  %115 = load i32***, i32**** @wp_offset, align 8
  %116 = load i32, i32* %list_offset, align 4
  %add150 = add nsw i32 %116, 1
  %idxprom151 = sext i32 %add150 to i64
  %arrayidx152 = getelementptr inbounds i32**, i32*** %115, i64 %idxprom151
  %117 = load i32**, i32*** %arrayidx152, align 8
  %118 = load i16, i16* %ref.addr, align 2
  %idxprom153 = sext i16 %118 to i64
  %arrayidx154 = getelementptr inbounds i32*, i32** %117, i64 %idxprom153
  %119 = load i32*, i32** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i32, i32* %119, i64 0
  %120 = load i32, i32* %arrayidx155, align 4
  br label %cond.end161

cond.false156:                                    ; preds = %cond.true146
  %121 = load i32***, i32**** @wp_offset, align 8
  %122 = load i32, i32* %list_offset, align 4
  %idxprom157 = sext i32 %122 to i64
  %arrayidx158 = getelementptr inbounds i32**, i32*** %121, i64 %idxprom157
  %123 = load i32**, i32*** %arrayidx158, align 8
  %arrayidx159 = getelementptr inbounds i32*, i32** %123, i64 0
  %124 = load i32*, i32** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i32, i32* %124, i64 0
  %125 = load i32, i32* %arrayidx160, align 4
  br label %cond.end161

cond.end161:                                      ; preds = %cond.false156, %cond.true149
  %cond162 = phi i32 [ %120, %cond.true149 ], [ %125, %cond.false156 ]
  br label %cond.end164

cond.false163:                                    ; preds = %cond.end141
  br label %cond.end164

cond.end164:                                      ; preds = %cond.false163, %cond.end161
  %cond165 = phi i32 [ %cond162, %cond.end161 ], [ 0, %cond.false163 ]
  %conv166 = trunc i32 %cond165 to i16
  store i16 %conv166, i16* %offsetRpic, align 2
  %126 = load i16, i16* %offsetRpic, align 2
  %conv167 = sext i16 %126 to i32
  %127 = load i16, i16* %offsetSpic, align 2
  %conv168 = sext i16 %127 to i32
  %add169 = add nsw i32 %conv167, %conv168
  %add170 = add nsw i32 %add169, 1
  %shr171 = ashr i32 %add170, 1
  %conv172 = trunc i32 %shr171 to i16
  store i16 %conv172, i16* %offsetBi, align 2
  %128 = load i16, i16* %center_x, align 2
  %conv173 = sext i16 %128 to i32
  %129 = load i32, i32* %search_range.addr, align 4
  %cmp174 = icmp sgt i32 %conv173, %129
  br i1 %cmp174, label %land.lhs.true176, label %if.else

land.lhs.true176:                                 ; preds = %cond.end164
  %130 = load i16, i16* %center_x, align 2
  %conv177 = sext i16 %130 to i32
  %131 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %131, i32 0, i32 13
  %132 = load i32, i32* %width, align 4
  %sub = sub nsw i32 %132, 1
  %133 = load i32, i32* %search_range.addr, align 4
  %sub178 = sub nsw i32 %sub, %133
  %134 = load i32, i32* %blocksize_x, align 4
  %sub179 = sub nsw i32 %sub178, %134
  %cmp180 = icmp slt i32 %conv177, %sub179
  br i1 %cmp180, label %land.lhs.true182, label %if.else

land.lhs.true182:                                 ; preds = %land.lhs.true176
  %135 = load i16, i16* %center_y, align 2
  %conv183 = sext i16 %135 to i32
  %136 = load i32, i32* %search_range.addr, align 4
  %cmp184 = icmp sgt i32 %conv183, %136
  br i1 %cmp184, label %land.lhs.true186, label %if.else

land.lhs.true186:                                 ; preds = %land.lhs.true182
  %137 = load i16, i16* %center_y, align 2
  %conv187 = sext i16 %137 to i32
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 15
  %139 = load i32, i32* %height, align 4
  %sub188 = sub nsw i32 %139, 1
  %140 = load i32, i32* %search_range.addr, align 4
  %sub189 = sub nsw i32 %sub188, %140
  %141 = load i32, i32* %blocksize_y, align 4
  %sub190 = sub nsw i32 %sub189, %141
  %cmp191 = icmp slt i32 %conv187, %sub190
  br i1 %cmp191, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true186
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true186, %land.lhs.true182, %land.lhs.true176, %cond.end164
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %142 = load i16, i16* %ref1_center_x, align 2
  %conv193 = sext i16 %142 to i32
  %143 = load i32, i32* %search_range.addr, align 4
  %cmp194 = icmp sgt i32 %conv193, %143
  br i1 %cmp194, label %land.lhs.true196, label %if.else217

land.lhs.true196:                                 ; preds = %if.end
  %144 = load i16, i16* %ref1_center_x, align 2
  %conv197 = sext i16 %144 to i32
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width198 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 13
  %146 = load i32, i32* %width198, align 4
  %sub199 = sub nsw i32 %146, 1
  %147 = load i32, i32* %search_range.addr, align 4
  %sub200 = sub nsw i32 %sub199, %147
  %148 = load i32, i32* %blocksize_x, align 4
  %sub201 = sub nsw i32 %sub200, %148
  %cmp202 = icmp slt i32 %conv197, %sub201
  br i1 %cmp202, label %land.lhs.true204, label %if.else217

land.lhs.true204:                                 ; preds = %land.lhs.true196
  %149 = load i16, i16* %ref1_center_y, align 2
  %conv205 = sext i16 %149 to i32
  %150 = load i32, i32* %search_range.addr, align 4
  %cmp206 = icmp sgt i32 %conv205, %150
  br i1 %cmp206, label %land.lhs.true208, label %if.else217

land.lhs.true208:                                 ; preds = %land.lhs.true204
  %151 = load i16, i16* %ref1_center_y, align 2
  %conv209 = sext i16 %151 to i32
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height210 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 15
  %153 = load i32, i32* %height210, align 4
  %sub211 = sub nsw i32 %153, 1
  %154 = load i32, i32* %search_range.addr, align 4
  %sub212 = sub nsw i32 %sub211, %154
  %155 = load i32, i32* %blocksize_y, align 4
  %sub213 = sub nsw i32 %sub212, %155
  %cmp214 = icmp slt i32 %conv209, %sub213
  br i1 %cmp214, label %if.then216, label %if.else217

if.then216:                                       ; preds = %land.lhs.true208
  store i16* (i32, i16*, i32, i32, i32, i32)* @FastLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  br label %if.end218

if.else217:                                       ; preds = %land.lhs.true208, %land.lhs.true204, %land.lhs.true196, %if.end
  store i16* (i32, i16*, i32, i32, i32, i32)* @UMVLineX, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  br label %if.end218

if.end218:                                        ; preds = %if.else217, %if.then216
  store i32 0, i32* %pos, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc596, %if.end218
  %156 = load i32, i32* %pos, align 4
  %157 = load i32, i32* %max_pos, align 4
  %cmp219 = icmp slt i32 %156, %157
  br i1 %cmp219, label %for.body, label %for.end598

for.body:                                         ; preds = %for.cond
  %158 = load i16, i16* %center_x, align 2
  %conv221 = sext i16 %158 to i32
  %159 = load i32*, i32** @spiral_search_x, align 8
  %160 = load i32, i32* %pos, align 4
  %idxprom222 = sext i32 %160 to i64
  %arrayidx223 = getelementptr inbounds i32, i32* %159, i64 %idxprom222
  %161 = load i32, i32* %arrayidx223, align 4
  %add224 = add nsw i32 %conv221, %161
  store i32 %add224, i32* %cand_x, align 4
  %162 = load i16, i16* %center_y, align 2
  %conv225 = sext i16 %162 to i32
  %163 = load i32*, i32** @spiral_search_y, align 8
  %164 = load i32, i32* %pos, align 4
  %idxprom226 = sext i32 %164 to i64
  %arrayidx227 = getelementptr inbounds i32, i32* %163, i64 %idxprom226
  %165 = load i32, i32* %arrayidx227, align 4
  %add228 = add nsw i32 %conv225, %165
  store i32 %add228, i32* %cand_y, align 4
  %166 = load i32, i32* %lambda_factor, align 4
  %167 = load i32*, i32** @mvbits, align 8
  %168 = load i16, i16* %ref1_center_x, align 2
  %conv229 = sext i16 %168 to i32
  %shl230 = shl i32 %conv229, 2
  %169 = load i32, i32* %pred_x1, align 4
  %sub231 = sub nsw i32 %shl230, %169
  %idxprom232 = sext i32 %sub231 to i64
  %arrayidx233 = getelementptr inbounds i32, i32* %167, i64 %idxprom232
  %170 = load i32, i32* %arrayidx233, align 4
  %171 = load i32*, i32** @mvbits, align 8
  %172 = load i16, i16* %ref1_center_y, align 2
  %conv234 = sext i16 %172 to i32
  %shl235 = shl i32 %conv234, 2
  %173 = load i32, i32* %pred_y1, align 4
  %sub236 = sub nsw i32 %shl235, %173
  %idxprom237 = sext i32 %sub236 to i64
  %arrayidx238 = getelementptr inbounds i32, i32* %171, i64 %idxprom237
  %174 = load i32, i32* %arrayidx238, align 4
  %add239 = add nsw i32 %170, %174
  %mul240 = mul nsw i32 %166, %add239
  %shr241 = ashr i32 %mul240, 16
  store i32 %shr241, i32* %mcost, align 4
  %175 = load i32, i32* %lambda_factor, align 4
  %176 = load i32*, i32** @mvbits, align 8
  %177 = load i32, i32* %cand_x, align 4
  %shl242 = shl i32 %177, 2
  %178 = load i32, i32* %pred_x2, align 4
  %sub243 = sub nsw i32 %shl242, %178
  %idxprom244 = sext i32 %sub243 to i64
  %arrayidx245 = getelementptr inbounds i32, i32* %176, i64 %idxprom244
  %179 = load i32, i32* %arrayidx245, align 4
  %180 = load i32*, i32** @mvbits, align 8
  %181 = load i32, i32* %cand_y, align 4
  %shl246 = shl i32 %181, 2
  %182 = load i32, i32* %pred_y2, align 4
  %sub247 = sub nsw i32 %shl246, %182
  %idxprom248 = sext i32 %sub247 to i64
  %arrayidx249 = getelementptr inbounds i32, i32* %180, i64 %idxprom248
  %183 = load i32, i32* %arrayidx249, align 4
  %add250 = add nsw i32 %179, %183
  %mul251 = mul nsw i32 %175, %add250
  %shr252 = ashr i32 %mul251, 16
  %184 = load i32, i32* %mcost, align 4
  %add253 = add nsw i32 %184, %shr252
  store i32 %add253, i32* %mcost, align 4
  %185 = load i32, i32* %mcost, align 4
  %186 = load i32, i32* %min_mcost.addr, align 4
  %cmp254 = icmp sge i32 %185, %186
  br i1 %cmp254, label %if.then256, label %if.end257

if.then256:                                       ; preds = %for.body
  br label %for.inc596

if.end257:                                        ; preds = %for.body
  %187 = load i16, i16* %apply_weights, align 2
  %tobool258 = icmp ne i16 %187, 0
  br i1 %tobool258, label %if.then259, label %if.else516

if.then259:                                       ; preds = %if.end257
  store i32 0, i32* %y, align 4
  br label %for.cond260

for.cond260:                                      ; preds = %for.inc513, %if.then259
  %188 = load i32, i32* %y, align 4
  %189 = load i32, i32* %blocksize_y, align 4
  %cmp261 = icmp slt i32 %188, %189
  br i1 %cmp261, label %for.body263, label %for.end515

for.body263:                                      ; preds = %for.cond260
  %190 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  %191 = load i32, i32* %blocksize_x, align 4
  %192 = load i16*, i16** %ref2_pic, align 8
  %193 = load i32, i32* %cand_y, align 4
  %194 = load i32, i32* %y, align 4
  %add264 = add nsw i32 %193, %194
  %195 = load i32, i32* %cand_x, align 4
  %196 = load i32, i32* %img_height, align 4
  %197 = load i32, i32* %img_width, align 4
  %call = call i16* %190(i32 %191, i16* %192, i32 %add264, i32 %195, i32 %196, i32 %197)
  store i16* %call, i16** %ref2_line, align 8
  %198 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  %199 = load i32, i32* %blocksize_x, align 4
  %200 = load i16*, i16** %ref1_pic, align 8
  %201 = load i16, i16* %ref1_center_y, align 2
  %conv265 = sext i16 %201 to i32
  %202 = load i32, i32* %y, align 4
  %add266 = add nsw i32 %conv265, %202
  %203 = load i16, i16* %ref1_center_x, align 2
  %conv267 = sext i16 %203 to i32
  %204 = load i32, i32* %img_height, align 4
  %205 = load i32, i32* %img_width, align 4
  %call268 = call i16* %198(i32 %199, i16* %200, i32 %add266, i32 %conv267, i32 %204, i32 %205)
  store i16* %call268, i16** %ref1_line, align 8
  %206 = load i16**, i16*** %orig_pic.addr, align 8
  %207 = load i32, i32* %y, align 4
  %idxprom269 = sext i32 %207 to i64
  %arrayidx270 = getelementptr inbounds i16*, i16** %206, i64 %idxprom269
  %208 = load i16*, i16** %arrayidx270, align 8
  store i16* %208, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %for.cond271

for.cond271:                                      ; preds = %for.inc, %for.body263
  %209 = load i32, i32* %x4, align 4
  %210 = load i32, i32* %blocksize_x4, align 4
  %cmp272 = icmp slt i32 %209, %210
  br i1 %cmp272, label %for.body274, label %for.end

for.body274:                                      ; preds = %for.cond271
  %211 = load i16, i16* %weightSpic, align 2
  %conv275 = sext i16 %211 to i32
  %212 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr = getelementptr inbounds i16, i16* %212, i32 1
  store i16* %incdec.ptr, i16** %ref1_line, align 8
  %213 = load i16, i16* %212, align 2
  %conv276 = zext i16 %213 to i32
  %mul277 = mul nsw i32 %conv275, %conv276
  %conv278 = trunc i32 %mul277 to i16
  store i16 %conv278, i16* %pixel1, align 2
  %214 = load i16, i16* %weightRpic, align 2
  %conv279 = sext i16 %214 to i32
  %215 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr280 = getelementptr inbounds i16, i16* %215, i32 1
  store i16* %incdec.ptr280, i16** %ref2_line, align 8
  %216 = load i16, i16* %215, align 2
  %conv281 = zext i16 %216 to i32
  %mul282 = mul nsw i32 %conv279, %conv281
  %conv283 = trunc i32 %mul282 to i16
  store i16 %conv283, i16* %pixel2, align 2
  %217 = load i16, i16* %pixel1, align 2
  %conv284 = sext i16 %217 to i32
  %218 = load i16, i16* %pixel2, align 2
  %conv285 = sext i16 %218 to i32
  %add286 = add nsw i32 %conv284, %conv285
  %219 = load i32, i32* @wp_luma_round, align 4
  %mul287 = mul nsw i32 2, %219
  %add288 = add nsw i32 %add286, %mul287
  %220 = load i32, i32* @luma_log_weight_denom, align 4
  %add289 = add nsw i32 %220, 1
  %shr290 = ashr i32 %add288, %add289
  %221 = load i16, i16* %offsetBi, align 2
  %conv291 = sext i16 %221 to i32
  %add292 = add nsw i32 %shr290, %conv291
  %cmp293 = icmp slt i32 %add292, 0
  br i1 %cmp293, label %cond.true295, label %cond.false296

cond.true295:                                     ; preds = %for.body274
  br label %cond.end322

cond.false296:                                    ; preds = %for.body274
  %222 = load i16, i16* %pixel1, align 2
  %conv297 = sext i16 %222 to i32
  %223 = load i16, i16* %pixel2, align 2
  %conv298 = sext i16 %223 to i32
  %add299 = add nsw i32 %conv297, %conv298
  %224 = load i32, i32* @wp_luma_round, align 4
  %mul300 = mul nsw i32 2, %224
  %add301 = add nsw i32 %add299, %mul300
  %225 = load i32, i32* @luma_log_weight_denom, align 4
  %add302 = add nsw i32 %225, 1
  %shr303 = ashr i32 %add301, %add302
  %226 = load i16, i16* %offsetBi, align 2
  %conv304 = sext i16 %226 to i32
  %add305 = add nsw i32 %shr303, %conv304
  %227 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %227, i32 0, i32 155
  %228 = load i32, i32* %max_imgpel_value, align 4
  %cmp306 = icmp sgt i32 %add305, %228
  br i1 %cmp306, label %cond.true308, label %cond.false310

cond.true308:                                     ; preds = %cond.false296
  %229 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value309 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %229, i32 0, i32 155
  %230 = load i32, i32* %max_imgpel_value309, align 4
  br label %cond.end320

cond.false310:                                    ; preds = %cond.false296
  %231 = load i16, i16* %pixel1, align 2
  %conv311 = sext i16 %231 to i32
  %232 = load i16, i16* %pixel2, align 2
  %conv312 = sext i16 %232 to i32
  %add313 = add nsw i32 %conv311, %conv312
  %233 = load i32, i32* @wp_luma_round, align 4
  %mul314 = mul nsw i32 2, %233
  %add315 = add nsw i32 %add313, %mul314
  %234 = load i32, i32* @luma_log_weight_denom, align 4
  %add316 = add nsw i32 %234, 1
  %shr317 = ashr i32 %add315, %add316
  %235 = load i16, i16* %offsetBi, align 2
  %conv318 = sext i16 %235 to i32
  %add319 = add nsw i32 %shr317, %conv318
  br label %cond.end320

cond.end320:                                      ; preds = %cond.false310, %cond.true308
  %cond321 = phi i32 [ %230, %cond.true308 ], [ %add319, %cond.false310 ]
  br label %cond.end322

cond.end322:                                      ; preds = %cond.end320, %cond.true295
  %cond323 = phi i32 [ 0, %cond.true295 ], [ %cond321, %cond.end320 ]
  %conv324 = trunc i32 %cond323 to i16
  store i16 %conv324, i16* %weightedpel, align 2
  %236 = load i16*, i16** %orig_line, align 8
  %incdec.ptr325 = getelementptr inbounds i16, i16* %236, i32 1
  store i16* %incdec.ptr325, i16** %orig_line, align 8
  %237 = load i16, i16* %236, align 2
  %conv326 = zext i16 %237 to i32
  %238 = load i16, i16* %weightedpel, align 2
  %conv327 = sext i16 %238 to i32
  %sub328 = sub nsw i32 %conv326, %conv327
  store i32 %sub328, i32* %bi_diff, align 4
  %239 = load i32*, i32** @byte_abs, align 8
  %240 = load i32, i32* %bi_diff, align 4
  %idxprom329 = sext i32 %240 to i64
  %arrayidx330 = getelementptr inbounds i32, i32* %239, i64 %idxprom329
  %241 = load i32, i32* %arrayidx330, align 4
  %242 = load i32, i32* %mcost, align 4
  %add331 = add nsw i32 %242, %241
  store i32 %add331, i32* %mcost, align 4
  %243 = load i16, i16* %weightSpic, align 2
  %conv332 = sext i16 %243 to i32
  %244 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr333 = getelementptr inbounds i16, i16* %244, i32 1
  store i16* %incdec.ptr333, i16** %ref1_line, align 8
  %245 = load i16, i16* %244, align 2
  %conv334 = zext i16 %245 to i32
  %mul335 = mul nsw i32 %conv332, %conv334
  %conv336 = trunc i32 %mul335 to i16
  store i16 %conv336, i16* %pixel1, align 2
  %246 = load i16, i16* %weightRpic, align 2
  %conv337 = sext i16 %246 to i32
  %247 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr338 = getelementptr inbounds i16, i16* %247, i32 1
  store i16* %incdec.ptr338, i16** %ref2_line, align 8
  %248 = load i16, i16* %247, align 2
  %conv339 = zext i16 %248 to i32
  %mul340 = mul nsw i32 %conv337, %conv339
  %conv341 = trunc i32 %mul340 to i16
  store i16 %conv341, i16* %pixel2, align 2
  %249 = load i16, i16* %pixel1, align 2
  %conv342 = sext i16 %249 to i32
  %250 = load i16, i16* %pixel2, align 2
  %conv343 = sext i16 %250 to i32
  %add344 = add nsw i32 %conv342, %conv343
  %251 = load i32, i32* @wp_luma_round, align 4
  %mul345 = mul nsw i32 2, %251
  %add346 = add nsw i32 %add344, %mul345
  %252 = load i32, i32* @luma_log_weight_denom, align 4
  %add347 = add nsw i32 %252, 1
  %shr348 = ashr i32 %add346, %add347
  %253 = load i16, i16* %offsetBi, align 2
  %conv349 = sext i16 %253 to i32
  %add350 = add nsw i32 %shr348, %conv349
  %cmp351 = icmp slt i32 %add350, 0
  br i1 %cmp351, label %cond.true353, label %cond.false354

cond.true353:                                     ; preds = %cond.end322
  br label %cond.end381

cond.false354:                                    ; preds = %cond.end322
  %254 = load i16, i16* %pixel1, align 2
  %conv355 = sext i16 %254 to i32
  %255 = load i16, i16* %pixel2, align 2
  %conv356 = sext i16 %255 to i32
  %add357 = add nsw i32 %conv355, %conv356
  %256 = load i32, i32* @wp_luma_round, align 4
  %mul358 = mul nsw i32 2, %256
  %add359 = add nsw i32 %add357, %mul358
  %257 = load i32, i32* @luma_log_weight_denom, align 4
  %add360 = add nsw i32 %257, 1
  %shr361 = ashr i32 %add359, %add360
  %258 = load i16, i16* %offsetBi, align 2
  %conv362 = sext i16 %258 to i32
  %add363 = add nsw i32 %shr361, %conv362
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value364 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 155
  %260 = load i32, i32* %max_imgpel_value364, align 4
  %cmp365 = icmp sgt i32 %add363, %260
  br i1 %cmp365, label %cond.true367, label %cond.false369

cond.true367:                                     ; preds = %cond.false354
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value368 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 155
  %262 = load i32, i32* %max_imgpel_value368, align 4
  br label %cond.end379

cond.false369:                                    ; preds = %cond.false354
  %263 = load i16, i16* %pixel1, align 2
  %conv370 = sext i16 %263 to i32
  %264 = load i16, i16* %pixel2, align 2
  %conv371 = sext i16 %264 to i32
  %add372 = add nsw i32 %conv370, %conv371
  %265 = load i32, i32* @wp_luma_round, align 4
  %mul373 = mul nsw i32 2, %265
  %add374 = add nsw i32 %add372, %mul373
  %266 = load i32, i32* @luma_log_weight_denom, align 4
  %add375 = add nsw i32 %266, 1
  %shr376 = ashr i32 %add374, %add375
  %267 = load i16, i16* %offsetBi, align 2
  %conv377 = sext i16 %267 to i32
  %add378 = add nsw i32 %shr376, %conv377
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false369, %cond.true367
  %cond380 = phi i32 [ %262, %cond.true367 ], [ %add378, %cond.false369 ]
  br label %cond.end381

cond.end381:                                      ; preds = %cond.end379, %cond.true353
  %cond382 = phi i32 [ 0, %cond.true353 ], [ %cond380, %cond.end379 ]
  %conv383 = trunc i32 %cond382 to i16
  store i16 %conv383, i16* %weightedpel, align 2
  %268 = load i16*, i16** %orig_line, align 8
  %incdec.ptr384 = getelementptr inbounds i16, i16* %268, i32 1
  store i16* %incdec.ptr384, i16** %orig_line, align 8
  %269 = load i16, i16* %268, align 2
  %conv385 = zext i16 %269 to i32
  %270 = load i16, i16* %weightedpel, align 2
  %conv386 = sext i16 %270 to i32
  %sub387 = sub nsw i32 %conv385, %conv386
  store i32 %sub387, i32* %bi_diff, align 4
  %271 = load i32*, i32** @byte_abs, align 8
  %272 = load i32, i32* %bi_diff, align 4
  %idxprom388 = sext i32 %272 to i64
  %arrayidx389 = getelementptr inbounds i32, i32* %271, i64 %idxprom388
  %273 = load i32, i32* %arrayidx389, align 4
  %274 = load i32, i32* %mcost, align 4
  %add390 = add nsw i32 %274, %273
  store i32 %add390, i32* %mcost, align 4
  %275 = load i16, i16* %weightSpic, align 2
  %conv391 = sext i16 %275 to i32
  %276 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr392 = getelementptr inbounds i16, i16* %276, i32 1
  store i16* %incdec.ptr392, i16** %ref1_line, align 8
  %277 = load i16, i16* %276, align 2
  %conv393 = zext i16 %277 to i32
  %mul394 = mul nsw i32 %conv391, %conv393
  %conv395 = trunc i32 %mul394 to i16
  store i16 %conv395, i16* %pixel1, align 2
  %278 = load i16, i16* %weightRpic, align 2
  %conv396 = sext i16 %278 to i32
  %279 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr397 = getelementptr inbounds i16, i16* %279, i32 1
  store i16* %incdec.ptr397, i16** %ref2_line, align 8
  %280 = load i16, i16* %279, align 2
  %conv398 = zext i16 %280 to i32
  %mul399 = mul nsw i32 %conv396, %conv398
  %conv400 = trunc i32 %mul399 to i16
  store i16 %conv400, i16* %pixel2, align 2
  %281 = load i16, i16* %pixel1, align 2
  %conv401 = sext i16 %281 to i32
  %282 = load i16, i16* %pixel2, align 2
  %conv402 = sext i16 %282 to i32
  %add403 = add nsw i32 %conv401, %conv402
  %283 = load i32, i32* @wp_luma_round, align 4
  %mul404 = mul nsw i32 2, %283
  %add405 = add nsw i32 %add403, %mul404
  %284 = load i32, i32* @luma_log_weight_denom, align 4
  %add406 = add nsw i32 %284, 1
  %shr407 = ashr i32 %add405, %add406
  %285 = load i16, i16* %offsetBi, align 2
  %conv408 = sext i16 %285 to i32
  %add409 = add nsw i32 %shr407, %conv408
  %cmp410 = icmp slt i32 %add409, 0
  br i1 %cmp410, label %cond.true412, label %cond.false413

cond.true412:                                     ; preds = %cond.end381
  br label %cond.end440

cond.false413:                                    ; preds = %cond.end381
  %286 = load i16, i16* %pixel1, align 2
  %conv414 = sext i16 %286 to i32
  %287 = load i16, i16* %pixel2, align 2
  %conv415 = sext i16 %287 to i32
  %add416 = add nsw i32 %conv414, %conv415
  %288 = load i32, i32* @wp_luma_round, align 4
  %mul417 = mul nsw i32 2, %288
  %add418 = add nsw i32 %add416, %mul417
  %289 = load i32, i32* @luma_log_weight_denom, align 4
  %add419 = add nsw i32 %289, 1
  %shr420 = ashr i32 %add418, %add419
  %290 = load i16, i16* %offsetBi, align 2
  %conv421 = sext i16 %290 to i32
  %add422 = add nsw i32 %shr420, %conv421
  %291 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value423 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %291, i32 0, i32 155
  %292 = load i32, i32* %max_imgpel_value423, align 4
  %cmp424 = icmp sgt i32 %add422, %292
  br i1 %cmp424, label %cond.true426, label %cond.false428

cond.true426:                                     ; preds = %cond.false413
  %293 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value427 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %293, i32 0, i32 155
  %294 = load i32, i32* %max_imgpel_value427, align 4
  br label %cond.end438

cond.false428:                                    ; preds = %cond.false413
  %295 = load i16, i16* %pixel1, align 2
  %conv429 = sext i16 %295 to i32
  %296 = load i16, i16* %pixel2, align 2
  %conv430 = sext i16 %296 to i32
  %add431 = add nsw i32 %conv429, %conv430
  %297 = load i32, i32* @wp_luma_round, align 4
  %mul432 = mul nsw i32 2, %297
  %add433 = add nsw i32 %add431, %mul432
  %298 = load i32, i32* @luma_log_weight_denom, align 4
  %add434 = add nsw i32 %298, 1
  %shr435 = ashr i32 %add433, %add434
  %299 = load i16, i16* %offsetBi, align 2
  %conv436 = sext i16 %299 to i32
  %add437 = add nsw i32 %shr435, %conv436
  br label %cond.end438

cond.end438:                                      ; preds = %cond.false428, %cond.true426
  %cond439 = phi i32 [ %294, %cond.true426 ], [ %add437, %cond.false428 ]
  br label %cond.end440

cond.end440:                                      ; preds = %cond.end438, %cond.true412
  %cond441 = phi i32 [ 0, %cond.true412 ], [ %cond439, %cond.end438 ]
  %conv442 = trunc i32 %cond441 to i16
  store i16 %conv442, i16* %weightedpel, align 2
  %300 = load i16*, i16** %orig_line, align 8
  %incdec.ptr443 = getelementptr inbounds i16, i16* %300, i32 1
  store i16* %incdec.ptr443, i16** %orig_line, align 8
  %301 = load i16, i16* %300, align 2
  %conv444 = zext i16 %301 to i32
  %302 = load i16, i16* %weightedpel, align 2
  %conv445 = sext i16 %302 to i32
  %sub446 = sub nsw i32 %conv444, %conv445
  store i32 %sub446, i32* %bi_diff, align 4
  %303 = load i32*, i32** @byte_abs, align 8
  %304 = load i32, i32* %bi_diff, align 4
  %idxprom447 = sext i32 %304 to i64
  %arrayidx448 = getelementptr inbounds i32, i32* %303, i64 %idxprom447
  %305 = load i32, i32* %arrayidx448, align 4
  %306 = load i32, i32* %mcost, align 4
  %add449 = add nsw i32 %306, %305
  store i32 %add449, i32* %mcost, align 4
  %307 = load i16, i16* %weightSpic, align 2
  %conv450 = sext i16 %307 to i32
  %308 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr451 = getelementptr inbounds i16, i16* %308, i32 1
  store i16* %incdec.ptr451, i16** %ref1_line, align 8
  %309 = load i16, i16* %308, align 2
  %conv452 = zext i16 %309 to i32
  %mul453 = mul nsw i32 %conv450, %conv452
  %conv454 = trunc i32 %mul453 to i16
  store i16 %conv454, i16* %pixel1, align 2
  %310 = load i16, i16* %weightRpic, align 2
  %conv455 = sext i16 %310 to i32
  %311 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr456 = getelementptr inbounds i16, i16* %311, i32 1
  store i16* %incdec.ptr456, i16** %ref2_line, align 8
  %312 = load i16, i16* %311, align 2
  %conv457 = zext i16 %312 to i32
  %mul458 = mul nsw i32 %conv455, %conv457
  %conv459 = trunc i32 %mul458 to i16
  store i16 %conv459, i16* %pixel2, align 2
  %313 = load i16, i16* %pixel1, align 2
  %conv460 = sext i16 %313 to i32
  %314 = load i16, i16* %pixel2, align 2
  %conv461 = sext i16 %314 to i32
  %add462 = add nsw i32 %conv460, %conv461
  %315 = load i32, i32* @wp_luma_round, align 4
  %mul463 = mul nsw i32 2, %315
  %add464 = add nsw i32 %add462, %mul463
  %316 = load i32, i32* @luma_log_weight_denom, align 4
  %add465 = add nsw i32 %316, 1
  %shr466 = ashr i32 %add464, %add465
  %317 = load i16, i16* %offsetBi, align 2
  %conv467 = sext i16 %317 to i32
  %add468 = add nsw i32 %shr466, %conv467
  %cmp469 = icmp slt i32 %add468, 0
  br i1 %cmp469, label %cond.true471, label %cond.false472

cond.true471:                                     ; preds = %cond.end440
  br label %cond.end499

cond.false472:                                    ; preds = %cond.end440
  %318 = load i16, i16* %pixel1, align 2
  %conv473 = sext i16 %318 to i32
  %319 = load i16, i16* %pixel2, align 2
  %conv474 = sext i16 %319 to i32
  %add475 = add nsw i32 %conv473, %conv474
  %320 = load i32, i32* @wp_luma_round, align 4
  %mul476 = mul nsw i32 2, %320
  %add477 = add nsw i32 %add475, %mul476
  %321 = load i32, i32* @luma_log_weight_denom, align 4
  %add478 = add nsw i32 %321, 1
  %shr479 = ashr i32 %add477, %add478
  %322 = load i16, i16* %offsetBi, align 2
  %conv480 = sext i16 %322 to i32
  %add481 = add nsw i32 %shr479, %conv480
  %323 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value482 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %323, i32 0, i32 155
  %324 = load i32, i32* %max_imgpel_value482, align 4
  %cmp483 = icmp sgt i32 %add481, %324
  br i1 %cmp483, label %cond.true485, label %cond.false487

cond.true485:                                     ; preds = %cond.false472
  %325 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value486 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %325, i32 0, i32 155
  %326 = load i32, i32* %max_imgpel_value486, align 4
  br label %cond.end497

cond.false487:                                    ; preds = %cond.false472
  %327 = load i16, i16* %pixel1, align 2
  %conv488 = sext i16 %327 to i32
  %328 = load i16, i16* %pixel2, align 2
  %conv489 = sext i16 %328 to i32
  %add490 = add nsw i32 %conv488, %conv489
  %329 = load i32, i32* @wp_luma_round, align 4
  %mul491 = mul nsw i32 2, %329
  %add492 = add nsw i32 %add490, %mul491
  %330 = load i32, i32* @luma_log_weight_denom, align 4
  %add493 = add nsw i32 %330, 1
  %shr494 = ashr i32 %add492, %add493
  %331 = load i16, i16* %offsetBi, align 2
  %conv495 = sext i16 %331 to i32
  %add496 = add nsw i32 %shr494, %conv495
  br label %cond.end497

cond.end497:                                      ; preds = %cond.false487, %cond.true485
  %cond498 = phi i32 [ %326, %cond.true485 ], [ %add496, %cond.false487 ]
  br label %cond.end499

cond.end499:                                      ; preds = %cond.end497, %cond.true471
  %cond500 = phi i32 [ 0, %cond.true471 ], [ %cond498, %cond.end497 ]
  %conv501 = trunc i32 %cond500 to i16
  store i16 %conv501, i16* %weightedpel, align 2
  %332 = load i16*, i16** %orig_line, align 8
  %incdec.ptr502 = getelementptr inbounds i16, i16* %332, i32 1
  store i16* %incdec.ptr502, i16** %orig_line, align 8
  %333 = load i16, i16* %332, align 2
  %conv503 = zext i16 %333 to i32
  %334 = load i16, i16* %weightedpel, align 2
  %conv504 = sext i16 %334 to i32
  %sub505 = sub nsw i32 %conv503, %conv504
  store i32 %sub505, i32* %bi_diff, align 4
  %335 = load i32*, i32** @byte_abs, align 8
  %336 = load i32, i32* %bi_diff, align 4
  %idxprom506 = sext i32 %336 to i64
  %arrayidx507 = getelementptr inbounds i32, i32* %335, i64 %idxprom506
  %337 = load i32, i32* %arrayidx507, align 4
  %338 = load i32, i32* %mcost, align 4
  %add508 = add nsw i32 %338, %337
  store i32 %add508, i32* %mcost, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end499
  %339 = load i32, i32* %x4, align 4
  %inc = add nsw i32 %339, 1
  store i32 %inc, i32* %x4, align 4
  br label %for.cond271

for.end:                                          ; preds = %for.cond271
  %340 = load i32, i32* %mcost, align 4
  %341 = load i32, i32* %min_mcost.addr, align 4
  %cmp509 = icmp sge i32 %340, %341
  br i1 %cmp509, label %if.then511, label %if.end512

if.then511:                                       ; preds = %for.end
  br label %for.end515

if.end512:                                        ; preds = %for.end
  br label %for.inc513

for.inc513:                                       ; preds = %if.end512
  %342 = load i32, i32* %y, align 4
  %inc514 = add nsw i32 %342, 1
  store i32 %inc514, i32* %y, align 4
  br label %for.cond260

for.end515:                                       ; preds = %if.then511, %for.cond260
  br label %if.end591

if.else516:                                       ; preds = %if.end257
  store i32 0, i32* %y, align 4
  br label %for.cond517

for.cond517:                                      ; preds = %for.inc588, %if.else516
  %343 = load i32, i32* %y, align 4
  %344 = load i32, i32* %blocksize_y, align 4
  %cmp518 = icmp slt i32 %343, %344
  br i1 %cmp518, label %for.body520, label %for.end590

for.body520:                                      ; preds = %for.cond517
  %345 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line2, align 8
  %346 = load i32, i32* %blocksize_x, align 4
  %347 = load i16*, i16** %ref2_pic, align 8
  %348 = load i32, i32* %cand_y, align 4
  %349 = load i32, i32* %y, align 4
  %add521 = add nsw i32 %348, %349
  %350 = load i32, i32* %cand_x, align 4
  %351 = load i32, i32* %img_height, align 4
  %352 = load i32, i32* %img_width, align 4
  %call522 = call i16* %345(i32 %346, i16* %347, i32 %add521, i32 %350, i32 %351, i32 %352)
  store i16* %call522, i16** %ref2_line, align 8
  %353 = load i16* (i32, i16*, i32, i32, i32, i32)*, i16* (i32, i16*, i32, i32, i32, i32)** %get_ref_line1, align 8
  %354 = load i32, i32* %blocksize_x, align 4
  %355 = load i16*, i16** %ref1_pic, align 8
  %356 = load i16, i16* %ref1_center_y, align 2
  %conv523 = sext i16 %356 to i32
  %357 = load i32, i32* %y, align 4
  %add524 = add nsw i32 %conv523, %357
  %358 = load i16, i16* %ref1_center_x, align 2
  %conv525 = sext i16 %358 to i32
  %359 = load i32, i32* %img_height, align 4
  %360 = load i32, i32* %img_width, align 4
  %call526 = call i16* %353(i32 %354, i16* %355, i32 %add524, i32 %conv525, i32 %359, i32 %360)
  store i16* %call526, i16** %ref1_line, align 8
  %361 = load i16**, i16*** %orig_pic.addr, align 8
  %362 = load i32, i32* %y, align 4
  %idxprom527 = sext i32 %362 to i64
  %arrayidx528 = getelementptr inbounds i16*, i16** %361, i64 %idxprom527
  %363 = load i16*, i16** %arrayidx528, align 8
  store i16* %363, i16** %orig_line, align 8
  store i32 0, i32* %x4, align 4
  br label %for.cond529

for.cond529:                                      ; preds = %for.inc581, %for.body520
  %364 = load i32, i32* %x4, align 4
  %365 = load i32, i32* %blocksize_x4, align 4
  %cmp530 = icmp slt i32 %364, %365
  br i1 %cmp530, label %for.body532, label %for.end583

for.body532:                                      ; preds = %for.cond529
  %366 = load i16*, i16** %orig_line, align 8
  %incdec.ptr533 = getelementptr inbounds i16, i16* %366, i32 1
  store i16* %incdec.ptr533, i16** %orig_line, align 8
  %367 = load i16, i16* %366, align 2
  %conv534 = zext i16 %367 to i32
  %368 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr535 = getelementptr inbounds i16, i16* %368, i32 1
  store i16* %incdec.ptr535, i16** %ref1_line, align 8
  %369 = load i16, i16* %368, align 2
  %conv536 = zext i16 %369 to i32
  %370 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr537 = getelementptr inbounds i16, i16* %370, i32 1
  store i16* %incdec.ptr537, i16** %ref2_line, align 8
  %371 = load i16, i16* %370, align 2
  %conv538 = zext i16 %371 to i32
  %add539 = add nsw i32 %conv536, %conv538
  %shr540 = ashr i32 %add539, 1
  %sub541 = sub nsw i32 %conv534, %shr540
  store i32 %sub541, i32* %bi_diff, align 4
  %372 = load i32*, i32** @byte_abs, align 8
  %373 = load i32, i32* %bi_diff, align 4
  %idxprom542 = sext i32 %373 to i64
  %arrayidx543 = getelementptr inbounds i32, i32* %372, i64 %idxprom542
  %374 = load i32, i32* %arrayidx543, align 4
  %375 = load i32, i32* %mcost, align 4
  %add544 = add nsw i32 %375, %374
  store i32 %add544, i32* %mcost, align 4
  %376 = load i16*, i16** %orig_line, align 8
  %incdec.ptr545 = getelementptr inbounds i16, i16* %376, i32 1
  store i16* %incdec.ptr545, i16** %orig_line, align 8
  %377 = load i16, i16* %376, align 2
  %conv546 = zext i16 %377 to i32
  %378 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr547 = getelementptr inbounds i16, i16* %378, i32 1
  store i16* %incdec.ptr547, i16** %ref1_line, align 8
  %379 = load i16, i16* %378, align 2
  %conv548 = zext i16 %379 to i32
  %380 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr549 = getelementptr inbounds i16, i16* %380, i32 1
  store i16* %incdec.ptr549, i16** %ref2_line, align 8
  %381 = load i16, i16* %380, align 2
  %conv550 = zext i16 %381 to i32
  %add551 = add nsw i32 %conv548, %conv550
  %shr552 = ashr i32 %add551, 1
  %sub553 = sub nsw i32 %conv546, %shr552
  store i32 %sub553, i32* %bi_diff, align 4
  %382 = load i32*, i32** @byte_abs, align 8
  %383 = load i32, i32* %bi_diff, align 4
  %idxprom554 = sext i32 %383 to i64
  %arrayidx555 = getelementptr inbounds i32, i32* %382, i64 %idxprom554
  %384 = load i32, i32* %arrayidx555, align 4
  %385 = load i32, i32* %mcost, align 4
  %add556 = add nsw i32 %385, %384
  store i32 %add556, i32* %mcost, align 4
  %386 = load i16*, i16** %orig_line, align 8
  %incdec.ptr557 = getelementptr inbounds i16, i16* %386, i32 1
  store i16* %incdec.ptr557, i16** %orig_line, align 8
  %387 = load i16, i16* %386, align 2
  %conv558 = zext i16 %387 to i32
  %388 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr559 = getelementptr inbounds i16, i16* %388, i32 1
  store i16* %incdec.ptr559, i16** %ref1_line, align 8
  %389 = load i16, i16* %388, align 2
  %conv560 = zext i16 %389 to i32
  %390 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr561 = getelementptr inbounds i16, i16* %390, i32 1
  store i16* %incdec.ptr561, i16** %ref2_line, align 8
  %391 = load i16, i16* %390, align 2
  %conv562 = zext i16 %391 to i32
  %add563 = add nsw i32 %conv560, %conv562
  %shr564 = ashr i32 %add563, 1
  %sub565 = sub nsw i32 %conv558, %shr564
  store i32 %sub565, i32* %bi_diff, align 4
  %392 = load i32*, i32** @byte_abs, align 8
  %393 = load i32, i32* %bi_diff, align 4
  %idxprom566 = sext i32 %393 to i64
  %arrayidx567 = getelementptr inbounds i32, i32* %392, i64 %idxprom566
  %394 = load i32, i32* %arrayidx567, align 4
  %395 = load i32, i32* %mcost, align 4
  %add568 = add nsw i32 %395, %394
  store i32 %add568, i32* %mcost, align 4
  %396 = load i16*, i16** %orig_line, align 8
  %incdec.ptr569 = getelementptr inbounds i16, i16* %396, i32 1
  store i16* %incdec.ptr569, i16** %orig_line, align 8
  %397 = load i16, i16* %396, align 2
  %conv570 = zext i16 %397 to i32
  %398 = load i16*, i16** %ref1_line, align 8
  %incdec.ptr571 = getelementptr inbounds i16, i16* %398, i32 1
  store i16* %incdec.ptr571, i16** %ref1_line, align 8
  %399 = load i16, i16* %398, align 2
  %conv572 = zext i16 %399 to i32
  %400 = load i16*, i16** %ref2_line, align 8
  %incdec.ptr573 = getelementptr inbounds i16, i16* %400, i32 1
  store i16* %incdec.ptr573, i16** %ref2_line, align 8
  %401 = load i16, i16* %400, align 2
  %conv574 = zext i16 %401 to i32
  %add575 = add nsw i32 %conv572, %conv574
  %shr576 = ashr i32 %add575, 1
  %sub577 = sub nsw i32 %conv570, %shr576
  store i32 %sub577, i32* %bi_diff, align 4
  %402 = load i32*, i32** @byte_abs, align 8
  %403 = load i32, i32* %bi_diff, align 4
  %idxprom578 = sext i32 %403 to i64
  %arrayidx579 = getelementptr inbounds i32, i32* %402, i64 %idxprom578
  %404 = load i32, i32* %arrayidx579, align 4
  %405 = load i32, i32* %mcost, align 4
  %add580 = add nsw i32 %405, %404
  store i32 %add580, i32* %mcost, align 4
  br label %for.inc581

for.inc581:                                       ; preds = %for.body532
  %406 = load i32, i32* %x4, align 4
  %inc582 = add nsw i32 %406, 1
  store i32 %inc582, i32* %x4, align 4
  br label %for.cond529

for.end583:                                       ; preds = %for.cond529
  %407 = load i32, i32* %mcost, align 4
  %408 = load i32, i32* %min_mcost.addr, align 4
  %cmp584 = icmp sge i32 %407, %408
  br i1 %cmp584, label %if.then586, label %if.end587

if.then586:                                       ; preds = %for.end583
  br label %for.end590

if.end587:                                        ; preds = %for.end583
  br label %for.inc588

for.inc588:                                       ; preds = %if.end587
  %409 = load i32, i32* %y, align 4
  %inc589 = add nsw i32 %409, 1
  store i32 %inc589, i32* %y, align 4
  br label %for.cond517

for.end590:                                       ; preds = %if.then586, %for.cond517
  br label %if.end591

if.end591:                                        ; preds = %for.end590, %for.end515
  %410 = load i32, i32* %mcost, align 4
  %411 = load i32, i32* %min_mcost.addr, align 4
  %cmp592 = icmp slt i32 %410, %411
  br i1 %cmp592, label %if.then594, label %if.end595

if.then594:                                       ; preds = %if.end591
  %412 = load i32, i32* %pos, align 4
  store i32 %412, i32* %best_pos, align 4
  %413 = load i32, i32* %mcost, align 4
  store i32 %413, i32* %min_mcost.addr, align 4
  br label %if.end595

if.end595:                                        ; preds = %if.then594, %if.end591
  br label %for.inc596

for.inc596:                                       ; preds = %if.end595, %if.then256
  %414 = load i32, i32* %pos, align 4
  %inc597 = add nsw i32 %414, 1
  store i32 %inc597, i32* %pos, align 4
  br label %for.cond

for.end598:                                       ; preds = %for.cond
  %415 = load i32, i32* %best_pos, align 4
  %tobool599 = icmp ne i32 %415, 0
  br i1 %tobool599, label %if.then600, label %if.end611

if.then600:                                       ; preds = %for.end598
  %416 = load i32*, i32** @spiral_search_x, align 8
  %417 = load i32, i32* %best_pos, align 4
  %idxprom601 = sext i32 %417 to i64
  %arrayidx602 = getelementptr inbounds i32, i32* %416, i64 %idxprom601
  %418 = load i32, i32* %arrayidx602, align 4
  %419 = load i16*, i16** %mv_x.addr, align 8
  %420 = load i16, i16* %419, align 2
  %conv603 = sext i16 %420 to i32
  %add604 = add nsw i32 %conv603, %418
  %conv605 = trunc i32 %add604 to i16
  store i16 %conv605, i16* %419, align 2
  %421 = load i32*, i32** @spiral_search_y, align 8
  %422 = load i32, i32* %best_pos, align 4
  %idxprom606 = sext i32 %422 to i64
  %arrayidx607 = getelementptr inbounds i32, i32* %421, i64 %idxprom606
  %423 = load i32, i32* %arrayidx607, align 4
  %424 = load i16*, i16** %mv_y.addr, align 8
  %425 = load i16, i16* %424, align 2
  %conv608 = sext i16 %425 to i32
  %add609 = add nsw i32 %conv608, %423
  %conv610 = trunc i32 %add609 to i16
  store i16 %conv610, i16* %424, align 2
  br label %if.end611

if.end611:                                        ; preds = %if.then600, %for.end598
  %426 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SubPelBlockSearchBiPred(i16** %orig_pic, i16 signext %ref, i32 %list, i32 %pic_pix_x, i32 %pic_pix_y, i32 %blocktype, i16 signext %pred_mv_x, i16 signext %pred_mv_y, i16* %mv_x, i16* %mv_y, i16* %s_mv_x, i16* %s_mv_y, i32 %search_pos2, i32 %search_pos4, i32 %min_mcost, double %lambda) #0 {
entry:
  %orig_pic.addr = alloca i16**, align 8
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %pic_pix_x.addr = alloca i32, align 4
  %pic_pix_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %pred_mv_x.addr = alloca i16, align 2
  %pred_mv_y.addr = alloca i16, align 2
  %mv_x.addr = alloca i16*, align 8
  %mv_y.addr = alloca i16*, align 8
  %s_mv_x.addr = alloca i16*, align 8
  %s_mv_y.addr = alloca i16*, align 8
  %search_pos2.addr = alloca i32, align 4
  %search_pos4.addr = alloca i32, align 4
  %min_mcost.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %curr_diff = alloca [16 x [16 x i32]], align 16
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %d = alloca i32*, align 8
  %pos = alloca i16, align 2
  %best_pos = alloca i16, align 2
  %mcost = alloca i16, align 2
  %abort_search = alloca i16, align 2
  %y0 = alloca i16, align 2
  %x0 = alloca i16, align 2
  %ry0 = alloca i16, align 2
  %rx0 = alloca i16, align 2
  %ry = alloca i16, align 2
  %sy0 = alloca i16, align 2
  %sy = alloca i16, align 2
  %sx0 = alloca i16, align 2
  %cand_mv_x = alloca i16, align 2
  %cand_mv_y = alloca i16, align 2
  %max_pos_x4 = alloca i16, align 2
  %max_pos_y4 = alloca i16, align 2
  %orig_line = alloca i16*, align 8
  %ref_picture = alloca %struct.storable_picture*, align 8
  %lambda_factor = alloca i32, align 4
  %mv_shift = alloca i16, align 2
  %blocksize_x = alloca i16, align 2
  %blocksize_y = alloca i16, align 2
  %pic4_pix_x = alloca i16, align 2
  %pic4_pix_y = alloca i16, align 2
  %min_pos2 = alloca i16, align 2
  %max_pos2 = alloca i16, align 2
  %list_offset = alloca i16, align 2
  %apply_weights = alloca i16, align 2
  %weightSpic = alloca i16, align 2
  %weightRpic = alloca i16, align 2
  %offsetSpic = alloca i16, align 2
  %offsetRpic = alloca i16, align 2
  %offsetBi = alloca i16, align 2
  %weightedpel = alloca i32, align 4
  %img_width = alloca i32, align 4
  %img_height = alloca i32, align 4
  %halfpelhadamard = alloca i32, align 4
  %qpelstart = alloca i32, align 4
  %ref1_pic = alloca i16**, align 8
  %ref2_pic = alloca i16**, align 8
  store i16** %orig_pic, i16*** %orig_pic.addr, align 8
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %pic_pix_x, i32* %pic_pix_x.addr, align 4
  store i32 %pic_pix_y, i32* %pic_pix_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i16 %pred_mv_x, i16* %pred_mv_x.addr, align 2
  store i16 %pred_mv_y, i16* %pred_mv_y.addr, align 2
  store i16* %mv_x, i16** %mv_x.addr, align 8
  store i16* %mv_y, i16** %mv_y.addr, align 8
  store i16* %s_mv_x, i16** %s_mv_x.addr, align 8
  store i16* %s_mv_y, i16** %s_mv_y.addr, align 8
  store i32 %search_pos2, i32* %search_pos2.addr, align 4
  store i32 %search_pos4, i32* %search_pos4.addr, align 4
  store i32 %min_mcost, i32* %min_mcost.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load double, double* %lambda.addr, align 8
  %mul = fmul double 6.553600e+04, %0
  %add = fadd double %mul, 5.000000e-01
  %conv = fptosi double %add to i32
  store i32 %conv, i32* %lambda_factor, align 4
  store i16 0, i16* %mv_shift, align 2
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 20
  %2 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %3 = load i32, i32* %arrayidx1, align 8
  %conv2 = trunc i32 %3 to i16
  store i16 %conv2, i16* %blocksize_x, align 2
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 20
  %5 = load i32, i32* %blocktype.addr, align 4
  %idxprom4 = sext i32 %5 to i64
  %arrayidx5 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size3, i64 0, i64 %idxprom4
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx5, i64 0, i64 1
  %6 = load i32, i32* %arrayidx6, align 4
  %conv7 = trunc i32 %6 to i16
  store i16 %conv7, i16* %blocksize_y, align 2
  %7 = load i32, i32* %pic_pix_x.addr, align 4
  %shl = shl i32 %7, 2
  %conv8 = trunc i32 %shl to i16
  store i16 %conv8, i16* %pic4_pix_x, align 2
  %8 = load i32, i32* %pic_pix_y.addr, align 4
  %shl9 = shl i32 %8, 2
  %conv10 = trunc i32 %shl9 to i16
  store i16 %conv10, i16* %pic4_pix_y, align 2
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 6
  %10 = load i32, i32* %hadamard, align 8
  %tobool = icmp ne i32 %10, 0
  %11 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 0, i32 1
  %conv11 = trunc i32 %cond to i16
  store i16 %conv11, i16* %min_pos2, align 2
  %12 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard12 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %12, i32 0, i32 6
  %13 = load i32, i32* %hadamard12, align 8
  %tobool13 = icmp ne i32 %13, 0
  br i1 %tobool13, label %cond.true, label %cond.false17

cond.true:                                        ; preds = %entry
  %14 = load i32, i32* %search_pos2.addr, align 4
  %cmp = icmp sgt i32 1, %14
  br i1 %cmp, label %cond.true15, label %cond.false

cond.true15:                                      ; preds = %cond.true
  br label %cond.end

cond.false:                                       ; preds = %cond.true
  %15 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond16 = phi i32 [ 1, %cond.true15 ], [ %15, %cond.false ]
  br label %cond.end18

cond.false17:                                     ; preds = %entry
  %16 = load i32, i32* %search_pos2.addr, align 4
  br label %cond.end18

cond.end18:                                       ; preds = %cond.false17, %cond.end
  %cond19 = phi i32 [ %cond16, %cond.end ], [ %16, %cond.false17 ]
  %conv20 = trunc i32 %cond19 to i16
  store i16 %conv20, i16* %max_pos2, align 2
  %17 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %17, i32 0, i32 90
  %18 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool21 = icmp ne i32 %18, 0
  br i1 %tobool21, label %land.lhs.true, label %cond.false29

land.lhs.true:                                    ; preds = %cond.end18
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 51
  %20 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 3
  %22 = load i32, i32* %current_mb_nr, align 4
  %idxprom22 = sext i32 %22 to i64
  %arrayidx23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %20, i64 %idxprom22
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx23, i32 0, i32 22
  %23 = load i32, i32* %mb_field, align 4
  %tobool24 = icmp ne i32 %23, 0
  br i1 %tobool24, label %cond.true25, label %cond.false29

cond.true25:                                      ; preds = %land.lhs.true
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr26 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 3
  %25 = load i32, i32* %current_mb_nr26, align 4
  %rem = srem i32 %25, 2
  %tobool27 = icmp ne i32 %rem, 0
  %26 = zext i1 %tobool27 to i64
  %cond28 = select i1 %tobool27, i32 4, i32 2
  br label %cond.end30

cond.false29:                                     ; preds = %land.lhs.true, %cond.end18
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %cond.true25
  %cond31 = phi i32 [ %cond28, %cond.true25 ], [ 0, %cond.false29 ]
  %conv32 = trunc i32 %cond31 to i16
  store i16 %conv32, i16* %list_offset, align 2
  %27 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %weighted_bipred_idc = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %27, i32 0, i32 20
  %28 = load i32, i32* %weighted_bipred_idc, align 4
  %conv33 = trunc i32 %28 to i16
  store i16 %conv33, i16* %apply_weights, align 2
  %29 = load i16, i16* %apply_weights, align 2
  %conv34 = sext i16 %29 to i32
  %tobool35 = icmp ne i32 %conv34, 0
  br i1 %tobool35, label %cond.true36, label %cond.false57

cond.true36:                                      ; preds = %cond.end30
  %30 = load i32, i32* %list.addr, align 4
  %cmp37 = icmp eq i32 %30, 0
  br i1 %cmp37, label %cond.true39, label %cond.false46

cond.true39:                                      ; preds = %cond.true36
  %31 = load i32****, i32***** @wbp_weight, align 8
  %32 = load i16, i16* %list_offset, align 2
  %idxprom40 = sext i16 %32 to i64
  %arrayidx41 = getelementptr inbounds i32***, i32**** %31, i64 %idxprom40
  %33 = load i32***, i32**** %arrayidx41, align 8
  %34 = load i16, i16* %ref.addr, align 2
  %idxprom42 = sext i16 %34 to i64
  %arrayidx43 = getelementptr inbounds i32**, i32*** %33, i64 %idxprom42
  %35 = load i32**, i32*** %arrayidx43, align 8
  %arrayidx44 = getelementptr inbounds i32*, i32** %35, i64 0
  %36 = load i32*, i32** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds i32, i32* %36, i64 0
  %37 = load i32, i32* %arrayidx45, align 4
  br label %cond.end55

cond.false46:                                     ; preds = %cond.true36
  %38 = load i32****, i32***** @wbp_weight, align 8
  %39 = load i16, i16* %list_offset, align 2
  %conv47 = sext i16 %39 to i32
  %add48 = add nsw i32 %conv47, 1
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds i32***, i32**** %38, i64 %idxprom49
  %40 = load i32***, i32**** %arrayidx50, align 8
  %arrayidx51 = getelementptr inbounds i32**, i32*** %40, i64 0
  %41 = load i32**, i32*** %arrayidx51, align 8
  %42 = load i16, i16* %ref.addr, align 2
  %idxprom52 = sext i16 %42 to i64
  %arrayidx53 = getelementptr inbounds i32*, i32** %41, i64 %idxprom52
  %43 = load i32*, i32** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i32, i32* %43, i64 0
  %44 = load i32, i32* %arrayidx54, align 4
  br label %cond.end55

cond.end55:                                       ; preds = %cond.false46, %cond.true39
  %cond56 = phi i32 [ %37, %cond.true39 ], [ %44, %cond.false46 ]
  br label %cond.end58

cond.false57:                                     ; preds = %cond.end30
  br label %cond.end58

cond.end58:                                       ; preds = %cond.false57, %cond.end55
  %cond59 = phi i32 [ %cond56, %cond.end55 ], [ 1, %cond.false57 ]
  %conv60 = trunc i32 %cond59 to i16
  store i16 %conv60, i16* %weightSpic, align 2
  %45 = load i16, i16* %apply_weights, align 2
  %conv61 = sext i16 %45 to i32
  %tobool62 = icmp ne i32 %conv61, 0
  br i1 %tobool62, label %cond.true63, label %cond.false84

cond.true63:                                      ; preds = %cond.end58
  %46 = load i32, i32* %list.addr, align 4
  %cmp64 = icmp eq i32 %46, 0
  br i1 %cmp64, label %cond.true66, label %cond.false75

cond.true66:                                      ; preds = %cond.true63
  %47 = load i32****, i32***** @wbp_weight, align 8
  %48 = load i16, i16* %list_offset, align 2
  %conv67 = sext i16 %48 to i32
  %add68 = add nsw i32 %conv67, 1
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds i32***, i32**** %47, i64 %idxprom69
  %49 = load i32***, i32**** %arrayidx70, align 8
  %50 = load i16, i16* %ref.addr, align 2
  %idxprom71 = sext i16 %50 to i64
  %arrayidx72 = getelementptr inbounds i32**, i32*** %49, i64 %idxprom71
  %51 = load i32**, i32*** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i32*, i32** %51, i64 0
  %52 = load i32*, i32** %arrayidx73, align 8
  %arrayidx74 = getelementptr inbounds i32, i32* %52, i64 0
  %53 = load i32, i32* %arrayidx74, align 4
  br label %cond.end82

cond.false75:                                     ; preds = %cond.true63
  %54 = load i32****, i32***** @wbp_weight, align 8
  %55 = load i16, i16* %list_offset, align 2
  %idxprom76 = sext i16 %55 to i64
  %arrayidx77 = getelementptr inbounds i32***, i32**** %54, i64 %idxprom76
  %56 = load i32***, i32**** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i32**, i32*** %56, i64 0
  %57 = load i32**, i32*** %arrayidx78, align 8
  %58 = load i16, i16* %ref.addr, align 2
  %idxprom79 = sext i16 %58 to i64
  %arrayidx80 = getelementptr inbounds i32*, i32** %57, i64 %idxprom79
  %59 = load i32*, i32** %arrayidx80, align 8
  %arrayidx81 = getelementptr inbounds i32, i32* %59, i64 0
  %60 = load i32, i32* %arrayidx81, align 4
  br label %cond.end82

cond.end82:                                       ; preds = %cond.false75, %cond.true66
  %cond83 = phi i32 [ %53, %cond.true66 ], [ %60, %cond.false75 ]
  br label %cond.end85

cond.false84:                                     ; preds = %cond.end58
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false84, %cond.end82
  %cond86 = phi i32 [ %cond83, %cond.end82 ], [ 1, %cond.false84 ]
  %conv87 = trunc i32 %cond86 to i16
  store i16 %conv87, i16* %weightRpic, align 2
  %61 = load i16, i16* %apply_weights, align 2
  %conv88 = sext i16 %61 to i32
  %tobool89 = icmp ne i32 %conv88, 0
  br i1 %tobool89, label %cond.true90, label %cond.false108

cond.true90:                                      ; preds = %cond.end85
  %62 = load i32, i32* %list.addr, align 4
  %cmp91 = icmp eq i32 %62, 0
  br i1 %cmp91, label %cond.true93, label %cond.false99

cond.true93:                                      ; preds = %cond.true90
  %63 = load i32***, i32**** @wp_offset, align 8
  %64 = load i16, i16* %list_offset, align 2
  %idxprom94 = sext i16 %64 to i64
  %arrayidx95 = getelementptr inbounds i32**, i32*** %63, i64 %idxprom94
  %65 = load i32**, i32*** %arrayidx95, align 8
  %66 = load i16, i16* %ref.addr, align 2
  %idxprom96 = sext i16 %66 to i64
  %arrayidx97 = getelementptr inbounds i32*, i32** %65, i64 %idxprom96
  %67 = load i32*, i32** %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds i32, i32* %67, i64 0
  %68 = load i32, i32* %arrayidx98, align 4
  br label %cond.end106

cond.false99:                                     ; preds = %cond.true90
  %69 = load i32***, i32**** @wp_offset, align 8
  %70 = load i16, i16* %list_offset, align 2
  %conv100 = sext i16 %70 to i32
  %add101 = add nsw i32 %conv100, 1
  %idxprom102 = sext i32 %add101 to i64
  %arrayidx103 = getelementptr inbounds i32**, i32*** %69, i64 %idxprom102
  %71 = load i32**, i32*** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds i32*, i32** %71, i64 0
  %72 = load i32*, i32** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i32, i32* %72, i64 0
  %73 = load i32, i32* %arrayidx105, align 4
  br label %cond.end106

cond.end106:                                      ; preds = %cond.false99, %cond.true93
  %cond107 = phi i32 [ %68, %cond.true93 ], [ %73, %cond.false99 ]
  br label %cond.end109

cond.false108:                                    ; preds = %cond.end85
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false108, %cond.end106
  %cond110 = phi i32 [ %cond107, %cond.end106 ], [ 0, %cond.false108 ]
  %conv111 = trunc i32 %cond110 to i16
  store i16 %conv111, i16* %offsetSpic, align 2
  %74 = load i16, i16* %apply_weights, align 2
  %conv112 = sext i16 %74 to i32
  %tobool113 = icmp ne i32 %conv112, 0
  br i1 %tobool113, label %cond.true114, label %cond.false132

cond.true114:                                     ; preds = %cond.end109
  %75 = load i32, i32* %list.addr, align 4
  %cmp115 = icmp eq i32 %75, 0
  br i1 %cmp115, label %cond.true117, label %cond.false125

cond.true117:                                     ; preds = %cond.true114
  %76 = load i32***, i32**** @wp_offset, align 8
  %77 = load i16, i16* %list_offset, align 2
  %conv118 = sext i16 %77 to i32
  %add119 = add nsw i32 %conv118, 1
  %idxprom120 = sext i32 %add119 to i64
  %arrayidx121 = getelementptr inbounds i32**, i32*** %76, i64 %idxprom120
  %78 = load i32**, i32*** %arrayidx121, align 8
  %79 = load i16, i16* %ref.addr, align 2
  %idxprom122 = sext i16 %79 to i64
  %arrayidx123 = getelementptr inbounds i32*, i32** %78, i64 %idxprom122
  %80 = load i32*, i32** %arrayidx123, align 8
  %arrayidx124 = getelementptr inbounds i32, i32* %80, i64 0
  %81 = load i32, i32* %arrayidx124, align 4
  br label %cond.end130

cond.false125:                                    ; preds = %cond.true114
  %82 = load i32***, i32**** @wp_offset, align 8
  %83 = load i16, i16* %list_offset, align 2
  %idxprom126 = sext i16 %83 to i64
  %arrayidx127 = getelementptr inbounds i32**, i32*** %82, i64 %idxprom126
  %84 = load i32**, i32*** %arrayidx127, align 8
  %arrayidx128 = getelementptr inbounds i32*, i32** %84, i64 0
  %85 = load i32*, i32** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i32, i32* %85, i64 0
  %86 = load i32, i32* %arrayidx129, align 4
  br label %cond.end130

cond.end130:                                      ; preds = %cond.false125, %cond.true117
  %cond131 = phi i32 [ %81, %cond.true117 ], [ %86, %cond.false125 ]
  br label %cond.end133

cond.false132:                                    ; preds = %cond.end109
  br label %cond.end133

cond.end133:                                      ; preds = %cond.false132, %cond.end130
  %cond134 = phi i32 [ %cond131, %cond.end130 ], [ 0, %cond.false132 ]
  %conv135 = trunc i32 %cond134 to i16
  store i16 %conv135, i16* %offsetRpic, align 2
  %87 = load i16, i16* %offsetRpic, align 2
  %conv136 = sext i16 %87 to i32
  %88 = load i16, i16* %offsetSpic, align 2
  %conv137 = sext i16 %88 to i32
  %add138 = add nsw i32 %conv136, %conv137
  %add139 = add nsw i32 %add138, 1
  %shr = ashr i32 %add139, 1
  %conv140 = trunc i32 %shr to i16
  store i16 %conv140, i16* %offsetBi, align 2
  %89 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %89, i32 0, i32 7
  %90 = load i32, i32* %hadamardqpel, align 4
  %tobool141 = icmp ne i32 %90, 0
  br i1 %tobool141, label %cond.true142, label %cond.false143

cond.true142:                                     ; preds = %cond.end133
  br label %cond.end145

cond.false143:                                    ; preds = %cond.end133
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard144 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 6
  %92 = load i32, i32* %hadamard144, align 8
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false143, %cond.true142
  %cond146 = phi i32 [ 0, %cond.true142 ], [ %92, %cond.false143 ]
  store i32 %cond146, i32* %halfpelhadamard, align 4
  %93 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel147 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %93, i32 0, i32 7
  %94 = load i32, i32* %hadamardqpel147, align 4
  %tobool148 = icmp ne i32 %94, 0
  %95 = zext i1 %tobool148 to i64
  %cond149 = select i1 %tobool148, i32 0, i32 1
  store i32 %cond149, i32* %qpelstart, align 4
  %96 = load i32, i32* %list.addr, align 4
  %97 = load i16, i16* %list_offset, align 2
  %conv150 = sext i16 %97 to i32
  %add151 = add nsw i32 %96, %conv150
  %idxprom152 = sext i32 %add151 to i64
  %arrayidx153 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom152
  %98 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx153, align 8
  %99 = load i16, i16* %ref.addr, align 2
  %idxprom154 = sext i16 %99 to i64
  %arrayidx155 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %98, i64 %idxprom154
  %100 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx155, align 8
  %imgY_ups = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %100, i32 0, i32 28
  %101 = load i16**, i16*** %imgY_ups, align 8
  store i16** %101, i16*** %ref1_pic, align 8
  %102 = load i32, i32* %list.addr, align 4
  %cmp156 = icmp eq i32 %102, 0
  br i1 %cmp156, label %cond.true158, label %cond.false161

cond.true158:                                     ; preds = %cond.end145
  %103 = load i16, i16* %list_offset, align 2
  %conv159 = sext i16 %103 to i32
  %add160 = add nsw i32 1, %conv159
  br label %cond.end163

cond.false161:                                    ; preds = %cond.end145
  %104 = load i16, i16* %list_offset, align 2
  %conv162 = sext i16 %104 to i32
  br label %cond.end163

cond.end163:                                      ; preds = %cond.false161, %cond.true158
  %cond164 = phi i32 [ %add160, %cond.true158 ], [ %conv162, %cond.false161 ]
  %idxprom165 = sext i32 %cond164 to i64
  %arrayidx166 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom165
  %105 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx166, align 8
  %arrayidx167 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %105, i64 0
  %106 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx167, align 8
  %imgY_ups168 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %106, i32 0, i32 28
  %107 = load i16**, i16*** %imgY_ups168, align 8
  store i16** %107, i16*** %ref2_pic, align 8
  %108 = load i32, i32* %list.addr, align 4
  %109 = load i16, i16* %list_offset, align 2
  %conv169 = sext i16 %109 to i32
  %add170 = add nsw i32 %108, %conv169
  %idxprom171 = sext i32 %add170 to i64
  %arrayidx172 = getelementptr inbounds [6 x %struct.storable_picture**], [6 x %struct.storable_picture**]* @listX, i64 0, i64 %idxprom171
  %110 = load %struct.storable_picture**, %struct.storable_picture*** %arrayidx172, align 8
  %111 = load i16, i16* %ref.addr, align 2
  %idxprom173 = sext i16 %111 to i64
  %arrayidx174 = getelementptr inbounds %struct.storable_picture*, %struct.storable_picture** %110, i64 %idxprom173
  %112 = load %struct.storable_picture*, %struct.storable_picture** %arrayidx174, align 8
  store %struct.storable_picture* %112, %struct.storable_picture** %ref_picture, align 8
  %113 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %113, i32 0, i32 18
  %114 = load i32, i32* %size_x, align 8
  store i32 %114, i32* %img_width, align 4
  %115 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %115, i32 0, i32 19
  %116 = load i32, i32* %size_y, align 4
  store i32 %116, i32* %img_height, align 4
  %117 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_x175 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %117, i32 0, i32 18
  %118 = load i32, i32* %size_x175, align 8
  %119 = load i16, i16* %blocksize_x, align 2
  %conv176 = sext i16 %119 to i32
  %sub = sub nsw i32 %118, %conv176
  %add177 = add nsw i32 %sub, 1
  %shl178 = shl i32 %add177, 2
  %conv179 = trunc i32 %shl178 to i16
  store i16 %conv179, i16* %max_pos_x4, align 2
  %120 = load %struct.storable_picture*, %struct.storable_picture** %ref_picture, align 8
  %size_y180 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %120, i32 0, i32 19
  %121 = load i32, i32* %size_y180, align 4
  %122 = load i16, i16* %blocksize_y, align 2
  %conv181 = sext i16 %122 to i32
  %sub182 = sub nsw i32 %121, %conv181
  %add183 = add nsw i32 %sub182, 1
  %shl184 = shl i32 %add183, 2
  %conv185 = trunc i32 %shl184 to i16
  store i16 %conv185, i16* %max_pos_y4, align 2
  %123 = load i16*, i16** %mv_x.addr, align 8
  %124 = load i16, i16* %123, align 2
  %conv186 = sext i16 %124 to i32
  %shl187 = shl i32 %conv186, 2
  %conv188 = trunc i32 %shl187 to i16
  store i16 %conv188, i16* %123, align 2
  %125 = load i16*, i16** %mv_y.addr, align 8
  %126 = load i16, i16* %125, align 2
  %conv189 = sext i16 %126 to i32
  %shl190 = shl i32 %conv189, 2
  %conv191 = trunc i32 %shl190 to i16
  store i16 %conv191, i16* %125, align 2
  %127 = load i16, i16* %pic4_pix_x, align 2
  %conv192 = sext i16 %127 to i32
  %128 = load i16*, i16** %mv_x.addr, align 8
  %129 = load i16, i16* %128, align 2
  %conv193 = sext i16 %129 to i32
  %add194 = add nsw i32 %conv192, %conv193
  %cmp195 = icmp sgt i32 %add194, 1
  br i1 %cmp195, label %land.lhs.true197, label %if.else

land.lhs.true197:                                 ; preds = %cond.end163
  %130 = load i16, i16* %pic4_pix_x, align 2
  %conv198 = sext i16 %130 to i32
  %131 = load i16*, i16** %mv_x.addr, align 8
  %132 = load i16, i16* %131, align 2
  %conv199 = sext i16 %132 to i32
  %add200 = add nsw i32 %conv198, %conv199
  %133 = load i16, i16* %max_pos_x4, align 2
  %conv201 = sext i16 %133 to i32
  %sub202 = sub nsw i32 %conv201, 2
  %cmp203 = icmp slt i32 %add200, %sub202
  br i1 %cmp203, label %land.lhs.true205, label %if.else

land.lhs.true205:                                 ; preds = %land.lhs.true197
  %134 = load i16, i16* %pic4_pix_y, align 2
  %conv206 = sext i16 %134 to i32
  %135 = load i16*, i16** %mv_y.addr, align 8
  %136 = load i16, i16* %135, align 2
  %conv207 = sext i16 %136 to i32
  %add208 = add nsw i32 %conv206, %conv207
  %cmp209 = icmp sgt i32 %add208, 1
  br i1 %cmp209, label %land.lhs.true211, label %if.else

land.lhs.true211:                                 ; preds = %land.lhs.true205
  %137 = load i16, i16* %pic4_pix_y, align 2
  %conv212 = sext i16 %137 to i32
  %138 = load i16*, i16** %mv_y.addr, align 8
  %139 = load i16, i16* %138, align 2
  %conv213 = sext i16 %139 to i32
  %add214 = add nsw i32 %conv212, %conv213
  %140 = load i16, i16* %max_pos_y4, align 2
  %conv215 = sext i16 %140 to i32
  %sub216 = sub nsw i32 %conv215, 2
  %cmp217 = icmp slt i32 %add214, %sub216
  br i1 %cmp217, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true211
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end

if.else:                                          ; preds = %land.lhs.true211, %land.lhs.true205, %land.lhs.true197, %cond.end163
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %141 = load i16, i16* %pic4_pix_x, align 2
  %conv219 = sext i16 %141 to i32
  %142 = load i16*, i16** %s_mv_x.addr, align 8
  %143 = load i16, i16* %142, align 2
  %conv220 = sext i16 %143 to i32
  %add221 = add nsw i32 %conv219, %conv220
  %cmp222 = icmp sgt i32 %add221, 1
  br i1 %cmp222, label %land.lhs.true224, label %if.else247

land.lhs.true224:                                 ; preds = %if.end
  %144 = load i16, i16* %pic4_pix_x, align 2
  %conv225 = sext i16 %144 to i32
  %145 = load i16*, i16** %s_mv_x.addr, align 8
  %146 = load i16, i16* %145, align 2
  %conv226 = sext i16 %146 to i32
  %add227 = add nsw i32 %conv225, %conv226
  %147 = load i16, i16* %max_pos_x4, align 2
  %conv228 = sext i16 %147 to i32
  %sub229 = sub nsw i32 %conv228, 2
  %cmp230 = icmp slt i32 %add227, %sub229
  br i1 %cmp230, label %land.lhs.true232, label %if.else247

land.lhs.true232:                                 ; preds = %land.lhs.true224
  %148 = load i16, i16* %pic4_pix_y, align 2
  %conv233 = sext i16 %148 to i32
  %149 = load i16*, i16** %s_mv_y.addr, align 8
  %150 = load i16, i16* %149, align 2
  %conv234 = sext i16 %150 to i32
  %add235 = add nsw i32 %conv233, %conv234
  %cmp236 = icmp sgt i32 %add235, 1
  br i1 %cmp236, label %land.lhs.true238, label %if.else247

land.lhs.true238:                                 ; preds = %land.lhs.true232
  %151 = load i16, i16* %pic4_pix_y, align 2
  %conv239 = sext i16 %151 to i32
  %152 = load i16*, i16** %s_mv_y.addr, align 8
  %153 = load i16, i16* %152, align 2
  %conv240 = sext i16 %153 to i32
  %add241 = add nsw i32 %conv239, %conv240
  %154 = load i16, i16* %max_pos_y4, align 2
  %conv242 = sext i16 %154 to i32
  %sub243 = sub nsw i32 %conv242, 2
  %cmp244 = icmp slt i32 %add241, %sub243
  br i1 %cmp244, label %if.then246, label %if.else247

if.then246:                                       ; preds = %land.lhs.true238
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  br label %if.end248

if.else247:                                       ; preds = %land.lhs.true238, %land.lhs.true232, %land.lhs.true224, %if.end
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  br label %if.end248

if.end248:                                        ; preds = %if.else247, %if.then246
  store i16 0, i16* %best_pos, align 2
  %155 = load i16, i16* %min_pos2, align 2
  store i16 %155, i16* %pos, align 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc2108, %if.end248
  %156 = load i16, i16* %pos, align 2
  %conv249 = sext i16 %156 to i32
  %157 = load i16, i16* %max_pos2, align 2
  %conv250 = sext i16 %157 to i32
  %cmp251 = icmp slt i32 %conv249, %conv250
  br i1 %cmp251, label %for.body, label %for.end2110

for.body:                                         ; preds = %for.cond
  %158 = load i16*, i16** %mv_x.addr, align 8
  %159 = load i16, i16* %158, align 2
  %conv253 = sext i16 %159 to i32
  %160 = load i32*, i32** @spiral_search_x, align 8
  %161 = load i16, i16* %pos, align 2
  %idxprom254 = sext i16 %161 to i64
  %arrayidx255 = getelementptr inbounds i32, i32* %160, i64 %idxprom254
  %162 = load i32, i32* %arrayidx255, align 4
  %shl256 = shl i32 %162, 1
  %add257 = add nsw i32 %conv253, %shl256
  %conv258 = trunc i32 %add257 to i16
  store i16 %conv258, i16* %cand_mv_x, align 2
  %163 = load i16*, i16** %mv_y.addr, align 8
  %164 = load i16, i16* %163, align 2
  %conv259 = sext i16 %164 to i32
  %165 = load i32*, i32** @spiral_search_y, align 8
  %166 = load i16, i16* %pos, align 2
  %idxprom260 = sext i16 %166 to i64
  %arrayidx261 = getelementptr inbounds i32, i32* %165, i64 %idxprom260
  %167 = load i32, i32* %arrayidx261, align 4
  %shl262 = shl i32 %167, 1
  %add263 = add nsw i32 %conv259, %shl262
  %conv264 = trunc i32 %add263 to i16
  store i16 %conv264, i16* %cand_mv_y, align 2
  %168 = load i32, i32* %lambda_factor, align 4
  %169 = load i32*, i32** @mvbits, align 8
  %170 = load i16, i16* %cand_mv_x, align 2
  %conv265 = sext i16 %170 to i32
  %171 = load i16, i16* %mv_shift, align 2
  %conv266 = sext i16 %171 to i32
  %shl267 = shl i32 %conv265, %conv266
  %172 = load i16, i16* %pred_mv_x.addr, align 2
  %conv268 = sext i16 %172 to i32
  %sub269 = sub nsw i32 %shl267, %conv268
  %idxprom270 = sext i32 %sub269 to i64
  %arrayidx271 = getelementptr inbounds i32, i32* %169, i64 %idxprom270
  %173 = load i32, i32* %arrayidx271, align 4
  %174 = load i32*, i32** @mvbits, align 8
  %175 = load i16, i16* %cand_mv_y, align 2
  %conv272 = sext i16 %175 to i32
  %176 = load i16, i16* %mv_shift, align 2
  %conv273 = sext i16 %176 to i32
  %shl274 = shl i32 %conv272, %conv273
  %177 = load i16, i16* %pred_mv_y.addr, align 2
  %conv275 = sext i16 %177 to i32
  %sub276 = sub nsw i32 %shl274, %conv275
  %idxprom277 = sext i32 %sub276 to i64
  %arrayidx278 = getelementptr inbounds i32, i32* %174, i64 %idxprom277
  %178 = load i32, i32* %arrayidx278, align 4
  %add279 = add nsw i32 %173, %178
  %mul280 = mul nsw i32 %168, %add279
  %shr281 = ashr i32 %mul280, 16
  %conv282 = trunc i32 %shr281 to i16
  store i16 %conv282, i16* %mcost, align 2
  store i16 0, i16* %y0, align 2
  store i16 0, i16* %abort_search, align 2
  br label %for.cond283

for.cond283:                                      ; preds = %for.inc2088, %for.body
  %179 = load i16, i16* %y0, align 2
  %conv284 = sext i16 %179 to i32
  %180 = load i16, i16* %blocksize_y, align 2
  %conv285 = sext i16 %180 to i32
  %cmp286 = icmp slt i32 %conv284, %conv285
  br i1 %cmp286, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond283
  %181 = load i16, i16* %abort_search, align 2
  %tobool288 = icmp ne i16 %181, 0
  %lnot = xor i1 %tobool288, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond283
  %182 = phi i1 [ false, %for.cond283 ], [ %lnot, %land.rhs ]
  br i1 %182, label %for.body289, label %for.end2092

for.body289:                                      ; preds = %land.end
  %183 = load i32, i32* %pic_pix_y.addr, align 4
  %184 = load i16, i16* %y0, align 2
  %conv290 = sext i16 %184 to i32
  %add291 = add nsw i32 %183, %conv290
  %shl292 = shl i32 %add291, 2
  %185 = load i16*, i16** %s_mv_y.addr, align 8
  %186 = load i16, i16* %185, align 2
  %conv293 = sext i16 %186 to i32
  %add294 = add nsw i32 %shl292, %conv293
  %conv295 = trunc i32 %add294 to i16
  store i16 %conv295, i16* %sy0, align 2
  %187 = load i32, i32* %pic_pix_y.addr, align 4
  %188 = load i16, i16* %y0, align 2
  %conv296 = sext i16 %188 to i32
  %add297 = add nsw i32 %187, %conv296
  %shl298 = shl i32 %add297, 2
  %189 = load i16, i16* %cand_mv_y, align 2
  %conv299 = sext i16 %189 to i32
  %add300 = add nsw i32 %shl298, %conv299
  %conv301 = trunc i32 %add300 to i16
  store i16 %conv301, i16* %ry0, align 2
  %190 = load i16, i16* %apply_weights, align 2
  %tobool302 = icmp ne i16 %190, 0
  br i1 %tobool302, label %if.then303, label %if.else1703

if.then303:                                       ; preds = %for.body289
  store i16 0, i16* %x0, align 2
  br label %for.cond304

for.cond304:                                      ; preds = %for.inc1698, %if.then303
  %191 = load i16, i16* %x0, align 2
  %conv305 = sext i16 %191 to i32
  %192 = load i16, i16* %blocksize_x, align 2
  %conv306 = sext i16 %192 to i32
  %cmp307 = icmp slt i32 %conv305, %conv306
  br i1 %cmp307, label %for.body309, label %for.end1702

for.body309:                                      ; preds = %for.cond304
  %193 = load i32, i32* %pic_pix_x.addr, align 4
  %194 = load i16, i16* %x0, align 2
  %conv310 = sext i16 %194 to i32
  %add311 = add nsw i32 %193, %conv310
  %shl312 = shl i32 %add311, 2
  %195 = load i16*, i16** %s_mv_x.addr, align 8
  %196 = load i16, i16* %195, align 2
  %conv313 = sext i16 %196 to i32
  %add314 = add nsw i32 %shl312, %conv313
  %conv315 = trunc i32 %add314 to i16
  store i16 %conv315, i16* %sx0, align 2
  %197 = load i32, i32* %pic_pix_x.addr, align 4
  %198 = load i16, i16* %x0, align 2
  %conv316 = sext i16 %198 to i32
  %add317 = add nsw i32 %197, %conv316
  %shl318 = shl i32 %add317, 2
  %199 = load i16, i16* %cand_mv_x, align 2
  %conv319 = sext i16 %199 to i32
  %add320 = add nsw i32 %shl318, %conv319
  %conv321 = trunc i32 %add320 to i16
  store i16 %conv321, i16* %rx0, align 2
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  store i32* %arraydecay, i32** %d, align 8
  %200 = load i16, i16* %sy0, align 2
  store i16 %200, i16* %sy, align 2
  %201 = load i16, i16* %ry0, align 2
  store i16 %201, i16* %ry, align 2
  %202 = load i16**, i16*** %orig_pic.addr, align 8
  %203 = load i16, i16* %y0, align 2
  %idxprom322 = sext i16 %203 to i64
  %arrayidx323 = getelementptr inbounds i16*, i16** %202, i64 %idxprom322
  %204 = load i16*, i16** %arrayidx323, align 8
  store i16* %204, i16** %orig_line, align 8
  %205 = load i16, i16* %weightSpic, align 2
  %conv324 = sext i16 %205 to i32
  %206 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %207 = load i16**, i16*** %ref1_pic, align 8
  %208 = load i16, i16* %sy, align 2
  %conv325 = sext i16 %208 to i32
  %209 = load i16, i16* %sx0, align 2
  %conv326 = sext i16 %209 to i32
  %210 = load i32, i32* %img_height, align 4
  %211 = load i32, i32* %img_width, align 4
  %call = call zeroext i16 %206(i16** %207, i32 %conv325, i32 %conv326, i32 %210, i32 %211)
  %conv327 = zext i16 %call to i32
  %mul328 = mul nsw i32 %conv324, %conv327
  %212 = load i16, i16* %weightRpic, align 2
  %conv329 = sext i16 %212 to i32
  %213 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %214 = load i16**, i16*** %ref2_pic, align 8
  %215 = load i16, i16* %ry, align 2
  %conv330 = sext i16 %215 to i32
  %216 = load i16, i16* %rx0, align 2
  %conv331 = sext i16 %216 to i32
  %217 = load i32, i32* %img_height, align 4
  %218 = load i32, i32* %img_width, align 4
  %call332 = call zeroext i16 %213(i16** %214, i32 %conv330, i32 %conv331, i32 %217, i32 %218)
  %conv333 = zext i16 %call332 to i32
  %mul334 = mul nsw i32 %conv329, %conv333
  %add335 = add nsw i32 %mul328, %mul334
  %219 = load i32, i32* @wp_luma_round, align 4
  %mul336 = mul nsw i32 2, %219
  %add337 = add nsw i32 %add335, %mul336
  %220 = load i32, i32* @luma_log_weight_denom, align 4
  %add338 = add nsw i32 %220, 1
  %shr339 = ashr i32 %add337, %add338
  %221 = load i16, i16* %offsetBi, align 2
  %conv340 = sext i16 %221 to i32
  %add341 = add nsw i32 %shr339, %conv340
  %cmp342 = icmp slt i32 %add341, 0
  br i1 %cmp342, label %cond.true344, label %cond.false345

cond.true344:                                     ; preds = %for.body309
  br label %cond.end391

cond.false345:                                    ; preds = %for.body309
  %222 = load i16, i16* %weightSpic, align 2
  %conv346 = sext i16 %222 to i32
  %223 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %224 = load i16**, i16*** %ref1_pic, align 8
  %225 = load i16, i16* %sy, align 2
  %conv347 = sext i16 %225 to i32
  %226 = load i16, i16* %sx0, align 2
  %conv348 = sext i16 %226 to i32
  %227 = load i32, i32* %img_height, align 4
  %228 = load i32, i32* %img_width, align 4
  %call349 = call zeroext i16 %223(i16** %224, i32 %conv347, i32 %conv348, i32 %227, i32 %228)
  %conv350 = zext i16 %call349 to i32
  %mul351 = mul nsw i32 %conv346, %conv350
  %229 = load i16, i16* %weightRpic, align 2
  %conv352 = sext i16 %229 to i32
  %230 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %231 = load i16**, i16*** %ref2_pic, align 8
  %232 = load i16, i16* %ry, align 2
  %conv353 = sext i16 %232 to i32
  %233 = load i16, i16* %rx0, align 2
  %conv354 = sext i16 %233 to i32
  %234 = load i32, i32* %img_height, align 4
  %235 = load i32, i32* %img_width, align 4
  %call355 = call zeroext i16 %230(i16** %231, i32 %conv353, i32 %conv354, i32 %234, i32 %235)
  %conv356 = zext i16 %call355 to i32
  %mul357 = mul nsw i32 %conv352, %conv356
  %add358 = add nsw i32 %mul351, %mul357
  %236 = load i32, i32* @wp_luma_round, align 4
  %mul359 = mul nsw i32 2, %236
  %add360 = add nsw i32 %add358, %mul359
  %237 = load i32, i32* @luma_log_weight_denom, align 4
  %add361 = add nsw i32 %237, 1
  %shr362 = ashr i32 %add360, %add361
  %238 = load i16, i16* %offsetBi, align 2
  %conv363 = sext i16 %238 to i32
  %add364 = add nsw i32 %shr362, %conv363
  %239 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %239, i32 0, i32 155
  %240 = load i32, i32* %max_imgpel_value, align 4
  %cmp365 = icmp sgt i32 %add364, %240
  br i1 %cmp365, label %cond.true367, label %cond.false369

cond.true367:                                     ; preds = %cond.false345
  %241 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value368 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %241, i32 0, i32 155
  %242 = load i32, i32* %max_imgpel_value368, align 4
  br label %cond.end389

cond.false369:                                    ; preds = %cond.false345
  %243 = load i16, i16* %weightSpic, align 2
  %conv370 = sext i16 %243 to i32
  %244 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %245 = load i16**, i16*** %ref1_pic, align 8
  %246 = load i16, i16* %sy, align 2
  %conv371 = sext i16 %246 to i32
  %247 = load i16, i16* %sx0, align 2
  %conv372 = sext i16 %247 to i32
  %248 = load i32, i32* %img_height, align 4
  %249 = load i32, i32* %img_width, align 4
  %call373 = call zeroext i16 %244(i16** %245, i32 %conv371, i32 %conv372, i32 %248, i32 %249)
  %conv374 = zext i16 %call373 to i32
  %mul375 = mul nsw i32 %conv370, %conv374
  %250 = load i16, i16* %weightRpic, align 2
  %conv376 = sext i16 %250 to i32
  %251 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %252 = load i16**, i16*** %ref2_pic, align 8
  %253 = load i16, i16* %ry, align 2
  %conv377 = sext i16 %253 to i32
  %254 = load i16, i16* %rx0, align 2
  %conv378 = sext i16 %254 to i32
  %255 = load i32, i32* %img_height, align 4
  %256 = load i32, i32* %img_width, align 4
  %call379 = call zeroext i16 %251(i16** %252, i32 %conv377, i32 %conv378, i32 %255, i32 %256)
  %conv380 = zext i16 %call379 to i32
  %mul381 = mul nsw i32 %conv376, %conv380
  %add382 = add nsw i32 %mul375, %mul381
  %257 = load i32, i32* @wp_luma_round, align 4
  %mul383 = mul nsw i32 2, %257
  %add384 = add nsw i32 %add382, %mul383
  %258 = load i32, i32* @luma_log_weight_denom, align 4
  %add385 = add nsw i32 %258, 1
  %shr386 = ashr i32 %add384, %add385
  %259 = load i16, i16* %offsetBi, align 2
  %conv387 = sext i16 %259 to i32
  %add388 = add nsw i32 %shr386, %conv387
  br label %cond.end389

cond.end389:                                      ; preds = %cond.false369, %cond.true367
  %cond390 = phi i32 [ %242, %cond.true367 ], [ %add388, %cond.false369 ]
  br label %cond.end391

cond.end391:                                      ; preds = %cond.end389, %cond.true344
  %cond392 = phi i32 [ 0, %cond.true344 ], [ %cond390, %cond.end389 ]
  store i32 %cond392, i32* %weightedpel, align 4
  %260 = load i16*, i16** %orig_line, align 8
  %261 = load i16, i16* %x0, align 2
  %idxprom393 = sext i16 %261 to i64
  %arrayidx394 = getelementptr inbounds i16, i16* %260, i64 %idxprom393
  %262 = load i16, i16* %arrayidx394, align 2
  %conv395 = zext i16 %262 to i32
  %263 = load i32, i32* %weightedpel, align 4
  %sub396 = sub nsw i32 %conv395, %263
  %264 = load i32*, i32** %d, align 8
  %incdec.ptr = getelementptr inbounds i32, i32* %264, i32 1
  store i32* %incdec.ptr, i32** %d, align 8
  store i32 %sub396, i32* %264, align 4
  %265 = load i16, i16* %weightSpic, align 2
  %conv397 = sext i16 %265 to i32
  %266 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %267 = load i16**, i16*** %ref1_pic, align 8
  %268 = load i16, i16* %sy, align 2
  %conv398 = sext i16 %268 to i32
  %269 = load i16, i16* %sx0, align 2
  %conv399 = sext i16 %269 to i32
  %add400 = add nsw i32 %conv399, 4
  %270 = load i32, i32* %img_height, align 4
  %271 = load i32, i32* %img_width, align 4
  %call401 = call zeroext i16 %266(i16** %267, i32 %conv398, i32 %add400, i32 %270, i32 %271)
  %conv402 = zext i16 %call401 to i32
  %mul403 = mul nsw i32 %conv397, %conv402
  %272 = load i16, i16* %weightRpic, align 2
  %conv404 = sext i16 %272 to i32
  %273 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %274 = load i16**, i16*** %ref2_pic, align 8
  %275 = load i16, i16* %ry, align 2
  %conv405 = sext i16 %275 to i32
  %276 = load i16, i16* %rx0, align 2
  %conv406 = sext i16 %276 to i32
  %add407 = add nsw i32 %conv406, 4
  %277 = load i32, i32* %img_height, align 4
  %278 = load i32, i32* %img_width, align 4
  %call408 = call zeroext i16 %273(i16** %274, i32 %conv405, i32 %add407, i32 %277, i32 %278)
  %conv409 = zext i16 %call408 to i32
  %mul410 = mul nsw i32 %conv404, %conv409
  %add411 = add nsw i32 %mul403, %mul410
  %279 = load i32, i32* @wp_luma_round, align 4
  %mul412 = mul nsw i32 2, %279
  %add413 = add nsw i32 %add411, %mul412
  %280 = load i32, i32* @luma_log_weight_denom, align 4
  %add414 = add nsw i32 %280, 1
  %shr415 = ashr i32 %add413, %add414
  %281 = load i16, i16* %offsetBi, align 2
  %conv416 = sext i16 %281 to i32
  %add417 = add nsw i32 %shr415, %conv416
  %cmp418 = icmp slt i32 %add417, 0
  br i1 %cmp418, label %cond.true420, label %cond.false421

cond.true420:                                     ; preds = %cond.end391
  br label %cond.end472

cond.false421:                                    ; preds = %cond.end391
  %282 = load i16, i16* %weightSpic, align 2
  %conv422 = sext i16 %282 to i32
  %283 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %284 = load i16**, i16*** %ref1_pic, align 8
  %285 = load i16, i16* %sy, align 2
  %conv423 = sext i16 %285 to i32
  %286 = load i16, i16* %sx0, align 2
  %conv424 = sext i16 %286 to i32
  %add425 = add nsw i32 %conv424, 4
  %287 = load i32, i32* %img_height, align 4
  %288 = load i32, i32* %img_width, align 4
  %call426 = call zeroext i16 %283(i16** %284, i32 %conv423, i32 %add425, i32 %287, i32 %288)
  %conv427 = zext i16 %call426 to i32
  %mul428 = mul nsw i32 %conv422, %conv427
  %289 = load i16, i16* %weightRpic, align 2
  %conv429 = sext i16 %289 to i32
  %290 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %291 = load i16**, i16*** %ref2_pic, align 8
  %292 = load i16, i16* %ry, align 2
  %conv430 = sext i16 %292 to i32
  %293 = load i16, i16* %rx0, align 2
  %conv431 = sext i16 %293 to i32
  %add432 = add nsw i32 %conv431, 4
  %294 = load i32, i32* %img_height, align 4
  %295 = load i32, i32* %img_width, align 4
  %call433 = call zeroext i16 %290(i16** %291, i32 %conv430, i32 %add432, i32 %294, i32 %295)
  %conv434 = zext i16 %call433 to i32
  %mul435 = mul nsw i32 %conv429, %conv434
  %add436 = add nsw i32 %mul428, %mul435
  %296 = load i32, i32* @wp_luma_round, align 4
  %mul437 = mul nsw i32 2, %296
  %add438 = add nsw i32 %add436, %mul437
  %297 = load i32, i32* @luma_log_weight_denom, align 4
  %add439 = add nsw i32 %297, 1
  %shr440 = ashr i32 %add438, %add439
  %298 = load i16, i16* %offsetBi, align 2
  %conv441 = sext i16 %298 to i32
  %add442 = add nsw i32 %shr440, %conv441
  %299 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value443 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %299, i32 0, i32 155
  %300 = load i32, i32* %max_imgpel_value443, align 4
  %cmp444 = icmp sgt i32 %add442, %300
  br i1 %cmp444, label %cond.true446, label %cond.false448

cond.true446:                                     ; preds = %cond.false421
  %301 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value447 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %301, i32 0, i32 155
  %302 = load i32, i32* %max_imgpel_value447, align 4
  br label %cond.end470

cond.false448:                                    ; preds = %cond.false421
  %303 = load i16, i16* %weightSpic, align 2
  %conv449 = sext i16 %303 to i32
  %304 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %305 = load i16**, i16*** %ref1_pic, align 8
  %306 = load i16, i16* %sy, align 2
  %conv450 = sext i16 %306 to i32
  %307 = load i16, i16* %sx0, align 2
  %conv451 = sext i16 %307 to i32
  %add452 = add nsw i32 %conv451, 4
  %308 = load i32, i32* %img_height, align 4
  %309 = load i32, i32* %img_width, align 4
  %call453 = call zeroext i16 %304(i16** %305, i32 %conv450, i32 %add452, i32 %308, i32 %309)
  %conv454 = zext i16 %call453 to i32
  %mul455 = mul nsw i32 %conv449, %conv454
  %310 = load i16, i16* %weightRpic, align 2
  %conv456 = sext i16 %310 to i32
  %311 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %312 = load i16**, i16*** %ref2_pic, align 8
  %313 = load i16, i16* %ry, align 2
  %conv457 = sext i16 %313 to i32
  %314 = load i16, i16* %rx0, align 2
  %conv458 = sext i16 %314 to i32
  %add459 = add nsw i32 %conv458, 4
  %315 = load i32, i32* %img_height, align 4
  %316 = load i32, i32* %img_width, align 4
  %call460 = call zeroext i16 %311(i16** %312, i32 %conv457, i32 %add459, i32 %315, i32 %316)
  %conv461 = zext i16 %call460 to i32
  %mul462 = mul nsw i32 %conv456, %conv461
  %add463 = add nsw i32 %mul455, %mul462
  %317 = load i32, i32* @wp_luma_round, align 4
  %mul464 = mul nsw i32 2, %317
  %add465 = add nsw i32 %add463, %mul464
  %318 = load i32, i32* @luma_log_weight_denom, align 4
  %add466 = add nsw i32 %318, 1
  %shr467 = ashr i32 %add465, %add466
  %319 = load i16, i16* %offsetBi, align 2
  %conv468 = sext i16 %319 to i32
  %add469 = add nsw i32 %shr467, %conv468
  br label %cond.end470

cond.end470:                                      ; preds = %cond.false448, %cond.true446
  %cond471 = phi i32 [ %302, %cond.true446 ], [ %add469, %cond.false448 ]
  br label %cond.end472

cond.end472:                                      ; preds = %cond.end470, %cond.true420
  %cond473 = phi i32 [ 0, %cond.true420 ], [ %cond471, %cond.end470 ]
  store i32 %cond473, i32* %weightedpel, align 4
  %320 = load i16*, i16** %orig_line, align 8
  %321 = load i16, i16* %x0, align 2
  %conv474 = sext i16 %321 to i32
  %add475 = add nsw i32 %conv474, 1
  %idxprom476 = sext i32 %add475 to i64
  %arrayidx477 = getelementptr inbounds i16, i16* %320, i64 %idxprom476
  %322 = load i16, i16* %arrayidx477, align 2
  %conv478 = zext i16 %322 to i32
  %323 = load i32, i32* %weightedpel, align 4
  %sub479 = sub nsw i32 %conv478, %323
  %324 = load i32*, i32** %d, align 8
  %incdec.ptr480 = getelementptr inbounds i32, i32* %324, i32 1
  store i32* %incdec.ptr480, i32** %d, align 8
  store i32 %sub479, i32* %324, align 4
  %325 = load i16, i16* %weightSpic, align 2
  %conv481 = sext i16 %325 to i32
  %326 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %327 = load i16**, i16*** %ref1_pic, align 8
  %328 = load i16, i16* %sy, align 2
  %conv482 = sext i16 %328 to i32
  %329 = load i16, i16* %sx0, align 2
  %conv483 = sext i16 %329 to i32
  %add484 = add nsw i32 %conv483, 8
  %330 = load i32, i32* %img_height, align 4
  %331 = load i32, i32* %img_width, align 4
  %call485 = call zeroext i16 %326(i16** %327, i32 %conv482, i32 %add484, i32 %330, i32 %331)
  %conv486 = zext i16 %call485 to i32
  %mul487 = mul nsw i32 %conv481, %conv486
  %332 = load i16, i16* %weightRpic, align 2
  %conv488 = sext i16 %332 to i32
  %333 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %334 = load i16**, i16*** %ref2_pic, align 8
  %335 = load i16, i16* %ry, align 2
  %conv489 = sext i16 %335 to i32
  %336 = load i16, i16* %rx0, align 2
  %conv490 = sext i16 %336 to i32
  %add491 = add nsw i32 %conv490, 8
  %337 = load i32, i32* %img_height, align 4
  %338 = load i32, i32* %img_width, align 4
  %call492 = call zeroext i16 %333(i16** %334, i32 %conv489, i32 %add491, i32 %337, i32 %338)
  %conv493 = zext i16 %call492 to i32
  %mul494 = mul nsw i32 %conv488, %conv493
  %add495 = add nsw i32 %mul487, %mul494
  %339 = load i32, i32* @wp_luma_round, align 4
  %mul496 = mul nsw i32 2, %339
  %add497 = add nsw i32 %add495, %mul496
  %340 = load i32, i32* @luma_log_weight_denom, align 4
  %add498 = add nsw i32 %340, 1
  %shr499 = ashr i32 %add497, %add498
  %341 = load i16, i16* %offsetBi, align 2
  %conv500 = sext i16 %341 to i32
  %add501 = add nsw i32 %shr499, %conv500
  %cmp502 = icmp slt i32 %add501, 0
  br i1 %cmp502, label %cond.true504, label %cond.false505

cond.true504:                                     ; preds = %cond.end472
  br label %cond.end556

cond.false505:                                    ; preds = %cond.end472
  %342 = load i16, i16* %weightSpic, align 2
  %conv506 = sext i16 %342 to i32
  %343 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %344 = load i16**, i16*** %ref1_pic, align 8
  %345 = load i16, i16* %sy, align 2
  %conv507 = sext i16 %345 to i32
  %346 = load i16, i16* %sx0, align 2
  %conv508 = sext i16 %346 to i32
  %add509 = add nsw i32 %conv508, 8
  %347 = load i32, i32* %img_height, align 4
  %348 = load i32, i32* %img_width, align 4
  %call510 = call zeroext i16 %343(i16** %344, i32 %conv507, i32 %add509, i32 %347, i32 %348)
  %conv511 = zext i16 %call510 to i32
  %mul512 = mul nsw i32 %conv506, %conv511
  %349 = load i16, i16* %weightRpic, align 2
  %conv513 = sext i16 %349 to i32
  %350 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %351 = load i16**, i16*** %ref2_pic, align 8
  %352 = load i16, i16* %ry, align 2
  %conv514 = sext i16 %352 to i32
  %353 = load i16, i16* %rx0, align 2
  %conv515 = sext i16 %353 to i32
  %add516 = add nsw i32 %conv515, 8
  %354 = load i32, i32* %img_height, align 4
  %355 = load i32, i32* %img_width, align 4
  %call517 = call zeroext i16 %350(i16** %351, i32 %conv514, i32 %add516, i32 %354, i32 %355)
  %conv518 = zext i16 %call517 to i32
  %mul519 = mul nsw i32 %conv513, %conv518
  %add520 = add nsw i32 %mul512, %mul519
  %356 = load i32, i32* @wp_luma_round, align 4
  %mul521 = mul nsw i32 2, %356
  %add522 = add nsw i32 %add520, %mul521
  %357 = load i32, i32* @luma_log_weight_denom, align 4
  %add523 = add nsw i32 %357, 1
  %shr524 = ashr i32 %add522, %add523
  %358 = load i16, i16* %offsetBi, align 2
  %conv525 = sext i16 %358 to i32
  %add526 = add nsw i32 %shr524, %conv525
  %359 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value527 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %359, i32 0, i32 155
  %360 = load i32, i32* %max_imgpel_value527, align 4
  %cmp528 = icmp sgt i32 %add526, %360
  br i1 %cmp528, label %cond.true530, label %cond.false532

cond.true530:                                     ; preds = %cond.false505
  %361 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value531 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %361, i32 0, i32 155
  %362 = load i32, i32* %max_imgpel_value531, align 4
  br label %cond.end554

cond.false532:                                    ; preds = %cond.false505
  %363 = load i16, i16* %weightSpic, align 2
  %conv533 = sext i16 %363 to i32
  %364 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %365 = load i16**, i16*** %ref1_pic, align 8
  %366 = load i16, i16* %sy, align 2
  %conv534 = sext i16 %366 to i32
  %367 = load i16, i16* %sx0, align 2
  %conv535 = sext i16 %367 to i32
  %add536 = add nsw i32 %conv535, 8
  %368 = load i32, i32* %img_height, align 4
  %369 = load i32, i32* %img_width, align 4
  %call537 = call zeroext i16 %364(i16** %365, i32 %conv534, i32 %add536, i32 %368, i32 %369)
  %conv538 = zext i16 %call537 to i32
  %mul539 = mul nsw i32 %conv533, %conv538
  %370 = load i16, i16* %weightRpic, align 2
  %conv540 = sext i16 %370 to i32
  %371 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %372 = load i16**, i16*** %ref2_pic, align 8
  %373 = load i16, i16* %ry, align 2
  %conv541 = sext i16 %373 to i32
  %374 = load i16, i16* %rx0, align 2
  %conv542 = sext i16 %374 to i32
  %add543 = add nsw i32 %conv542, 8
  %375 = load i32, i32* %img_height, align 4
  %376 = load i32, i32* %img_width, align 4
  %call544 = call zeroext i16 %371(i16** %372, i32 %conv541, i32 %add543, i32 %375, i32 %376)
  %conv545 = zext i16 %call544 to i32
  %mul546 = mul nsw i32 %conv540, %conv545
  %add547 = add nsw i32 %mul539, %mul546
  %377 = load i32, i32* @wp_luma_round, align 4
  %mul548 = mul nsw i32 2, %377
  %add549 = add nsw i32 %add547, %mul548
  %378 = load i32, i32* @luma_log_weight_denom, align 4
  %add550 = add nsw i32 %378, 1
  %shr551 = ashr i32 %add549, %add550
  %379 = load i16, i16* %offsetBi, align 2
  %conv552 = sext i16 %379 to i32
  %add553 = add nsw i32 %shr551, %conv552
  br label %cond.end554

cond.end554:                                      ; preds = %cond.false532, %cond.true530
  %cond555 = phi i32 [ %362, %cond.true530 ], [ %add553, %cond.false532 ]
  br label %cond.end556

cond.end556:                                      ; preds = %cond.end554, %cond.true504
  %cond557 = phi i32 [ 0, %cond.true504 ], [ %cond555, %cond.end554 ]
  store i32 %cond557, i32* %weightedpel, align 4
  %380 = load i16*, i16** %orig_line, align 8
  %381 = load i16, i16* %x0, align 2
  %conv558 = sext i16 %381 to i32
  %add559 = add nsw i32 %conv558, 2
  %idxprom560 = sext i32 %add559 to i64
  %arrayidx561 = getelementptr inbounds i16, i16* %380, i64 %idxprom560
  %382 = load i16, i16* %arrayidx561, align 2
  %conv562 = zext i16 %382 to i32
  %383 = load i32, i32* %weightedpel, align 4
  %sub563 = sub nsw i32 %conv562, %383
  %384 = load i32*, i32** %d, align 8
  %incdec.ptr564 = getelementptr inbounds i32, i32* %384, i32 1
  store i32* %incdec.ptr564, i32** %d, align 8
  store i32 %sub563, i32* %384, align 4
  %385 = load i16, i16* %weightSpic, align 2
  %conv565 = sext i16 %385 to i32
  %386 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %387 = load i16**, i16*** %ref1_pic, align 8
  %388 = load i16, i16* %sy, align 2
  %conv566 = sext i16 %388 to i32
  %389 = load i16, i16* %sx0, align 2
  %conv567 = sext i16 %389 to i32
  %add568 = add nsw i32 %conv567, 12
  %390 = load i32, i32* %img_height, align 4
  %391 = load i32, i32* %img_width, align 4
  %call569 = call zeroext i16 %386(i16** %387, i32 %conv566, i32 %add568, i32 %390, i32 %391)
  %conv570 = zext i16 %call569 to i32
  %mul571 = mul nsw i32 %conv565, %conv570
  %392 = load i16, i16* %weightRpic, align 2
  %conv572 = sext i16 %392 to i32
  %393 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %394 = load i16**, i16*** %ref2_pic, align 8
  %395 = load i16, i16* %ry, align 2
  %conv573 = sext i16 %395 to i32
  %396 = load i16, i16* %rx0, align 2
  %conv574 = sext i16 %396 to i32
  %add575 = add nsw i32 %conv574, 12
  %397 = load i32, i32* %img_height, align 4
  %398 = load i32, i32* %img_width, align 4
  %call576 = call zeroext i16 %393(i16** %394, i32 %conv573, i32 %add575, i32 %397, i32 %398)
  %conv577 = zext i16 %call576 to i32
  %mul578 = mul nsw i32 %conv572, %conv577
  %add579 = add nsw i32 %mul571, %mul578
  %399 = load i32, i32* @wp_luma_round, align 4
  %mul580 = mul nsw i32 2, %399
  %add581 = add nsw i32 %add579, %mul580
  %400 = load i32, i32* @luma_log_weight_denom, align 4
  %add582 = add nsw i32 %400, 1
  %shr583 = ashr i32 %add581, %add582
  %401 = load i16, i16* %offsetBi, align 2
  %conv584 = sext i16 %401 to i32
  %add585 = add nsw i32 %shr583, %conv584
  %cmp586 = icmp slt i32 %add585, 0
  br i1 %cmp586, label %cond.true588, label %cond.false589

cond.true588:                                     ; preds = %cond.end556
  br label %cond.end640

cond.false589:                                    ; preds = %cond.end556
  %402 = load i16, i16* %weightSpic, align 2
  %conv590 = sext i16 %402 to i32
  %403 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %404 = load i16**, i16*** %ref1_pic, align 8
  %405 = load i16, i16* %sy, align 2
  %conv591 = sext i16 %405 to i32
  %406 = load i16, i16* %sx0, align 2
  %conv592 = sext i16 %406 to i32
  %add593 = add nsw i32 %conv592, 12
  %407 = load i32, i32* %img_height, align 4
  %408 = load i32, i32* %img_width, align 4
  %call594 = call zeroext i16 %403(i16** %404, i32 %conv591, i32 %add593, i32 %407, i32 %408)
  %conv595 = zext i16 %call594 to i32
  %mul596 = mul nsw i32 %conv590, %conv595
  %409 = load i16, i16* %weightRpic, align 2
  %conv597 = sext i16 %409 to i32
  %410 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %411 = load i16**, i16*** %ref2_pic, align 8
  %412 = load i16, i16* %ry, align 2
  %conv598 = sext i16 %412 to i32
  %413 = load i16, i16* %rx0, align 2
  %conv599 = sext i16 %413 to i32
  %add600 = add nsw i32 %conv599, 12
  %414 = load i32, i32* %img_height, align 4
  %415 = load i32, i32* %img_width, align 4
  %call601 = call zeroext i16 %410(i16** %411, i32 %conv598, i32 %add600, i32 %414, i32 %415)
  %conv602 = zext i16 %call601 to i32
  %mul603 = mul nsw i32 %conv597, %conv602
  %add604 = add nsw i32 %mul596, %mul603
  %416 = load i32, i32* @wp_luma_round, align 4
  %mul605 = mul nsw i32 2, %416
  %add606 = add nsw i32 %add604, %mul605
  %417 = load i32, i32* @luma_log_weight_denom, align 4
  %add607 = add nsw i32 %417, 1
  %shr608 = ashr i32 %add606, %add607
  %418 = load i16, i16* %offsetBi, align 2
  %conv609 = sext i16 %418 to i32
  %add610 = add nsw i32 %shr608, %conv609
  %419 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value611 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %419, i32 0, i32 155
  %420 = load i32, i32* %max_imgpel_value611, align 4
  %cmp612 = icmp sgt i32 %add610, %420
  br i1 %cmp612, label %cond.true614, label %cond.false616

cond.true614:                                     ; preds = %cond.false589
  %421 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value615 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %421, i32 0, i32 155
  %422 = load i32, i32* %max_imgpel_value615, align 4
  br label %cond.end638

cond.false616:                                    ; preds = %cond.false589
  %423 = load i16, i16* %weightSpic, align 2
  %conv617 = sext i16 %423 to i32
  %424 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %425 = load i16**, i16*** %ref1_pic, align 8
  %426 = load i16, i16* %sy, align 2
  %conv618 = sext i16 %426 to i32
  %427 = load i16, i16* %sx0, align 2
  %conv619 = sext i16 %427 to i32
  %add620 = add nsw i32 %conv619, 12
  %428 = load i32, i32* %img_height, align 4
  %429 = load i32, i32* %img_width, align 4
  %call621 = call zeroext i16 %424(i16** %425, i32 %conv618, i32 %add620, i32 %428, i32 %429)
  %conv622 = zext i16 %call621 to i32
  %mul623 = mul nsw i32 %conv617, %conv622
  %430 = load i16, i16* %weightRpic, align 2
  %conv624 = sext i16 %430 to i32
  %431 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %432 = load i16**, i16*** %ref2_pic, align 8
  %433 = load i16, i16* %ry, align 2
  %conv625 = sext i16 %433 to i32
  %434 = load i16, i16* %rx0, align 2
  %conv626 = sext i16 %434 to i32
  %add627 = add nsw i32 %conv626, 12
  %435 = load i32, i32* %img_height, align 4
  %436 = load i32, i32* %img_width, align 4
  %call628 = call zeroext i16 %431(i16** %432, i32 %conv625, i32 %add627, i32 %435, i32 %436)
  %conv629 = zext i16 %call628 to i32
  %mul630 = mul nsw i32 %conv624, %conv629
  %add631 = add nsw i32 %mul623, %mul630
  %437 = load i32, i32* @wp_luma_round, align 4
  %mul632 = mul nsw i32 2, %437
  %add633 = add nsw i32 %add631, %mul632
  %438 = load i32, i32* @luma_log_weight_denom, align 4
  %add634 = add nsw i32 %438, 1
  %shr635 = ashr i32 %add633, %add634
  %439 = load i16, i16* %offsetBi, align 2
  %conv636 = sext i16 %439 to i32
  %add637 = add nsw i32 %shr635, %conv636
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false616, %cond.true614
  %cond639 = phi i32 [ %422, %cond.true614 ], [ %add637, %cond.false616 ]
  br label %cond.end640

cond.end640:                                      ; preds = %cond.end638, %cond.true588
  %cond641 = phi i32 [ 0, %cond.true588 ], [ %cond639, %cond.end638 ]
  store i32 %cond641, i32* %weightedpel, align 4
  %440 = load i16*, i16** %orig_line, align 8
  %441 = load i16, i16* %x0, align 2
  %conv642 = sext i16 %441 to i32
  %add643 = add nsw i32 %conv642, 3
  %idxprom644 = sext i32 %add643 to i64
  %arrayidx645 = getelementptr inbounds i16, i16* %440, i64 %idxprom644
  %442 = load i16, i16* %arrayidx645, align 2
  %conv646 = zext i16 %442 to i32
  %443 = load i32, i32* %weightedpel, align 4
  %sub647 = sub nsw i32 %conv646, %443
  %444 = load i32*, i32** %d, align 8
  %incdec.ptr648 = getelementptr inbounds i32, i32* %444, i32 1
  store i32* %incdec.ptr648, i32** %d, align 8
  store i32 %sub647, i32* %444, align 4
  %445 = load i16, i16* %sy0, align 2
  %conv649 = sext i16 %445 to i32
  %add650 = add nsw i32 %conv649, 4
  %conv651 = trunc i32 %add650 to i16
  store i16 %conv651, i16* %sy, align 2
  %446 = load i16, i16* %ry0, align 2
  %conv652 = sext i16 %446 to i32
  %add653 = add nsw i32 %conv652, 4
  %conv654 = trunc i32 %add653 to i16
  store i16 %conv654, i16* %ry, align 2
  %447 = load i16**, i16*** %orig_pic.addr, align 8
  %448 = load i16, i16* %y0, align 2
  %conv655 = sext i16 %448 to i32
  %add656 = add nsw i32 %conv655, 1
  %idxprom657 = sext i32 %add656 to i64
  %arrayidx658 = getelementptr inbounds i16*, i16** %447, i64 %idxprom657
  %449 = load i16*, i16** %arrayidx658, align 8
  store i16* %449, i16** %orig_line, align 8
  %450 = load i16, i16* %weightSpic, align 2
  %conv659 = sext i16 %450 to i32
  %451 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %452 = load i16**, i16*** %ref1_pic, align 8
  %453 = load i16, i16* %sy, align 2
  %conv660 = sext i16 %453 to i32
  %454 = load i16, i16* %sx0, align 2
  %conv661 = sext i16 %454 to i32
  %455 = load i32, i32* %img_height, align 4
  %456 = load i32, i32* %img_width, align 4
  %call662 = call zeroext i16 %451(i16** %452, i32 %conv660, i32 %conv661, i32 %455, i32 %456)
  %conv663 = zext i16 %call662 to i32
  %mul664 = mul nsw i32 %conv659, %conv663
  %457 = load i16, i16* %weightRpic, align 2
  %conv665 = sext i16 %457 to i32
  %458 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %459 = load i16**, i16*** %ref2_pic, align 8
  %460 = load i16, i16* %ry, align 2
  %conv666 = sext i16 %460 to i32
  %461 = load i16, i16* %rx0, align 2
  %conv667 = sext i16 %461 to i32
  %462 = load i32, i32* %img_height, align 4
  %463 = load i32, i32* %img_width, align 4
  %call668 = call zeroext i16 %458(i16** %459, i32 %conv666, i32 %conv667, i32 %462, i32 %463)
  %conv669 = zext i16 %call668 to i32
  %mul670 = mul nsw i32 %conv665, %conv669
  %add671 = add nsw i32 %mul664, %mul670
  %464 = load i32, i32* @wp_luma_round, align 4
  %mul672 = mul nsw i32 2, %464
  %add673 = add nsw i32 %add671, %mul672
  %465 = load i32, i32* @luma_log_weight_denom, align 4
  %add674 = add nsw i32 %465, 1
  %shr675 = ashr i32 %add673, %add674
  %466 = load i16, i16* %offsetBi, align 2
  %conv676 = sext i16 %466 to i32
  %add677 = add nsw i32 %shr675, %conv676
  %cmp678 = icmp slt i32 %add677, 0
  br i1 %cmp678, label %cond.true680, label %cond.false681

cond.true680:                                     ; preds = %cond.end640
  br label %cond.end728

cond.false681:                                    ; preds = %cond.end640
  %467 = load i16, i16* %weightSpic, align 2
  %conv682 = sext i16 %467 to i32
  %468 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %469 = load i16**, i16*** %ref1_pic, align 8
  %470 = load i16, i16* %sy, align 2
  %conv683 = sext i16 %470 to i32
  %471 = load i16, i16* %sx0, align 2
  %conv684 = sext i16 %471 to i32
  %472 = load i32, i32* %img_height, align 4
  %473 = load i32, i32* %img_width, align 4
  %call685 = call zeroext i16 %468(i16** %469, i32 %conv683, i32 %conv684, i32 %472, i32 %473)
  %conv686 = zext i16 %call685 to i32
  %mul687 = mul nsw i32 %conv682, %conv686
  %474 = load i16, i16* %weightRpic, align 2
  %conv688 = sext i16 %474 to i32
  %475 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %476 = load i16**, i16*** %ref2_pic, align 8
  %477 = load i16, i16* %ry, align 2
  %conv689 = sext i16 %477 to i32
  %478 = load i16, i16* %rx0, align 2
  %conv690 = sext i16 %478 to i32
  %479 = load i32, i32* %img_height, align 4
  %480 = load i32, i32* %img_width, align 4
  %call691 = call zeroext i16 %475(i16** %476, i32 %conv689, i32 %conv690, i32 %479, i32 %480)
  %conv692 = zext i16 %call691 to i32
  %mul693 = mul nsw i32 %conv688, %conv692
  %add694 = add nsw i32 %mul687, %mul693
  %481 = load i32, i32* @wp_luma_round, align 4
  %mul695 = mul nsw i32 2, %481
  %add696 = add nsw i32 %add694, %mul695
  %482 = load i32, i32* @luma_log_weight_denom, align 4
  %add697 = add nsw i32 %482, 1
  %shr698 = ashr i32 %add696, %add697
  %483 = load i16, i16* %offsetBi, align 2
  %conv699 = sext i16 %483 to i32
  %add700 = add nsw i32 %shr698, %conv699
  %484 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value701 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %484, i32 0, i32 155
  %485 = load i32, i32* %max_imgpel_value701, align 4
  %cmp702 = icmp sgt i32 %add700, %485
  br i1 %cmp702, label %cond.true704, label %cond.false706

cond.true704:                                     ; preds = %cond.false681
  %486 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value705 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %486, i32 0, i32 155
  %487 = load i32, i32* %max_imgpel_value705, align 4
  br label %cond.end726

cond.false706:                                    ; preds = %cond.false681
  %488 = load i16, i16* %weightSpic, align 2
  %conv707 = sext i16 %488 to i32
  %489 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %490 = load i16**, i16*** %ref1_pic, align 8
  %491 = load i16, i16* %sy, align 2
  %conv708 = sext i16 %491 to i32
  %492 = load i16, i16* %sx0, align 2
  %conv709 = sext i16 %492 to i32
  %493 = load i32, i32* %img_height, align 4
  %494 = load i32, i32* %img_width, align 4
  %call710 = call zeroext i16 %489(i16** %490, i32 %conv708, i32 %conv709, i32 %493, i32 %494)
  %conv711 = zext i16 %call710 to i32
  %mul712 = mul nsw i32 %conv707, %conv711
  %495 = load i16, i16* %weightRpic, align 2
  %conv713 = sext i16 %495 to i32
  %496 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %497 = load i16**, i16*** %ref2_pic, align 8
  %498 = load i16, i16* %ry, align 2
  %conv714 = sext i16 %498 to i32
  %499 = load i16, i16* %rx0, align 2
  %conv715 = sext i16 %499 to i32
  %500 = load i32, i32* %img_height, align 4
  %501 = load i32, i32* %img_width, align 4
  %call716 = call zeroext i16 %496(i16** %497, i32 %conv714, i32 %conv715, i32 %500, i32 %501)
  %conv717 = zext i16 %call716 to i32
  %mul718 = mul nsw i32 %conv713, %conv717
  %add719 = add nsw i32 %mul712, %mul718
  %502 = load i32, i32* @wp_luma_round, align 4
  %mul720 = mul nsw i32 2, %502
  %add721 = add nsw i32 %add719, %mul720
  %503 = load i32, i32* @luma_log_weight_denom, align 4
  %add722 = add nsw i32 %503, 1
  %shr723 = ashr i32 %add721, %add722
  %504 = load i16, i16* %offsetBi, align 2
  %conv724 = sext i16 %504 to i32
  %add725 = add nsw i32 %shr723, %conv724
  br label %cond.end726

cond.end726:                                      ; preds = %cond.false706, %cond.true704
  %cond727 = phi i32 [ %487, %cond.true704 ], [ %add725, %cond.false706 ]
  br label %cond.end728

cond.end728:                                      ; preds = %cond.end726, %cond.true680
  %cond729 = phi i32 [ 0, %cond.true680 ], [ %cond727, %cond.end726 ]
  store i32 %cond729, i32* %weightedpel, align 4
  %505 = load i16*, i16** %orig_line, align 8
  %506 = load i16, i16* %x0, align 2
  %idxprom730 = sext i16 %506 to i64
  %arrayidx731 = getelementptr inbounds i16, i16* %505, i64 %idxprom730
  %507 = load i16, i16* %arrayidx731, align 2
  %conv732 = zext i16 %507 to i32
  %508 = load i32, i32* %weightedpel, align 4
  %sub733 = sub nsw i32 %conv732, %508
  %509 = load i32*, i32** %d, align 8
  %incdec.ptr734 = getelementptr inbounds i32, i32* %509, i32 1
  store i32* %incdec.ptr734, i32** %d, align 8
  store i32 %sub733, i32* %509, align 4
  %510 = load i16, i16* %weightSpic, align 2
  %conv735 = sext i16 %510 to i32
  %511 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %512 = load i16**, i16*** %ref1_pic, align 8
  %513 = load i16, i16* %sy, align 2
  %conv736 = sext i16 %513 to i32
  %514 = load i16, i16* %sx0, align 2
  %conv737 = sext i16 %514 to i32
  %add738 = add nsw i32 %conv737, 4
  %515 = load i32, i32* %img_height, align 4
  %516 = load i32, i32* %img_width, align 4
  %call739 = call zeroext i16 %511(i16** %512, i32 %conv736, i32 %add738, i32 %515, i32 %516)
  %conv740 = zext i16 %call739 to i32
  %mul741 = mul nsw i32 %conv735, %conv740
  %517 = load i16, i16* %weightRpic, align 2
  %conv742 = sext i16 %517 to i32
  %518 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %519 = load i16**, i16*** %ref2_pic, align 8
  %520 = load i16, i16* %ry, align 2
  %conv743 = sext i16 %520 to i32
  %521 = load i16, i16* %rx0, align 2
  %conv744 = sext i16 %521 to i32
  %add745 = add nsw i32 %conv744, 4
  %522 = load i32, i32* %img_height, align 4
  %523 = load i32, i32* %img_width, align 4
  %call746 = call zeroext i16 %518(i16** %519, i32 %conv743, i32 %add745, i32 %522, i32 %523)
  %conv747 = zext i16 %call746 to i32
  %mul748 = mul nsw i32 %conv742, %conv747
  %add749 = add nsw i32 %mul741, %mul748
  %524 = load i32, i32* @wp_luma_round, align 4
  %mul750 = mul nsw i32 2, %524
  %add751 = add nsw i32 %add749, %mul750
  %525 = load i32, i32* @luma_log_weight_denom, align 4
  %add752 = add nsw i32 %525, 1
  %shr753 = ashr i32 %add751, %add752
  %526 = load i16, i16* %offsetBi, align 2
  %conv754 = sext i16 %526 to i32
  %add755 = add nsw i32 %shr753, %conv754
  %cmp756 = icmp slt i32 %add755, 0
  br i1 %cmp756, label %cond.true758, label %cond.false759

cond.true758:                                     ; preds = %cond.end728
  br label %cond.end810

cond.false759:                                    ; preds = %cond.end728
  %527 = load i16, i16* %weightSpic, align 2
  %conv760 = sext i16 %527 to i32
  %528 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %529 = load i16**, i16*** %ref1_pic, align 8
  %530 = load i16, i16* %sy, align 2
  %conv761 = sext i16 %530 to i32
  %531 = load i16, i16* %sx0, align 2
  %conv762 = sext i16 %531 to i32
  %add763 = add nsw i32 %conv762, 4
  %532 = load i32, i32* %img_height, align 4
  %533 = load i32, i32* %img_width, align 4
  %call764 = call zeroext i16 %528(i16** %529, i32 %conv761, i32 %add763, i32 %532, i32 %533)
  %conv765 = zext i16 %call764 to i32
  %mul766 = mul nsw i32 %conv760, %conv765
  %534 = load i16, i16* %weightRpic, align 2
  %conv767 = sext i16 %534 to i32
  %535 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %536 = load i16**, i16*** %ref2_pic, align 8
  %537 = load i16, i16* %ry, align 2
  %conv768 = sext i16 %537 to i32
  %538 = load i16, i16* %rx0, align 2
  %conv769 = sext i16 %538 to i32
  %add770 = add nsw i32 %conv769, 4
  %539 = load i32, i32* %img_height, align 4
  %540 = load i32, i32* %img_width, align 4
  %call771 = call zeroext i16 %535(i16** %536, i32 %conv768, i32 %add770, i32 %539, i32 %540)
  %conv772 = zext i16 %call771 to i32
  %mul773 = mul nsw i32 %conv767, %conv772
  %add774 = add nsw i32 %mul766, %mul773
  %541 = load i32, i32* @wp_luma_round, align 4
  %mul775 = mul nsw i32 2, %541
  %add776 = add nsw i32 %add774, %mul775
  %542 = load i32, i32* @luma_log_weight_denom, align 4
  %add777 = add nsw i32 %542, 1
  %shr778 = ashr i32 %add776, %add777
  %543 = load i16, i16* %offsetBi, align 2
  %conv779 = sext i16 %543 to i32
  %add780 = add nsw i32 %shr778, %conv779
  %544 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value781 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %544, i32 0, i32 155
  %545 = load i32, i32* %max_imgpel_value781, align 4
  %cmp782 = icmp sgt i32 %add780, %545
  br i1 %cmp782, label %cond.true784, label %cond.false786

cond.true784:                                     ; preds = %cond.false759
  %546 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value785 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %546, i32 0, i32 155
  %547 = load i32, i32* %max_imgpel_value785, align 4
  br label %cond.end808

cond.false786:                                    ; preds = %cond.false759
  %548 = load i16, i16* %weightSpic, align 2
  %conv787 = sext i16 %548 to i32
  %549 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %550 = load i16**, i16*** %ref1_pic, align 8
  %551 = load i16, i16* %sy, align 2
  %conv788 = sext i16 %551 to i32
  %552 = load i16, i16* %sx0, align 2
  %conv789 = sext i16 %552 to i32
  %add790 = add nsw i32 %conv789, 4
  %553 = load i32, i32* %img_height, align 4
  %554 = load i32, i32* %img_width, align 4
  %call791 = call zeroext i16 %549(i16** %550, i32 %conv788, i32 %add790, i32 %553, i32 %554)
  %conv792 = zext i16 %call791 to i32
  %mul793 = mul nsw i32 %conv787, %conv792
  %555 = load i16, i16* %weightRpic, align 2
  %conv794 = sext i16 %555 to i32
  %556 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %557 = load i16**, i16*** %ref2_pic, align 8
  %558 = load i16, i16* %ry, align 2
  %conv795 = sext i16 %558 to i32
  %559 = load i16, i16* %rx0, align 2
  %conv796 = sext i16 %559 to i32
  %add797 = add nsw i32 %conv796, 4
  %560 = load i32, i32* %img_height, align 4
  %561 = load i32, i32* %img_width, align 4
  %call798 = call zeroext i16 %556(i16** %557, i32 %conv795, i32 %add797, i32 %560, i32 %561)
  %conv799 = zext i16 %call798 to i32
  %mul800 = mul nsw i32 %conv794, %conv799
  %add801 = add nsw i32 %mul793, %mul800
  %562 = load i32, i32* @wp_luma_round, align 4
  %mul802 = mul nsw i32 2, %562
  %add803 = add nsw i32 %add801, %mul802
  %563 = load i32, i32* @luma_log_weight_denom, align 4
  %add804 = add nsw i32 %563, 1
  %shr805 = ashr i32 %add803, %add804
  %564 = load i16, i16* %offsetBi, align 2
  %conv806 = sext i16 %564 to i32
  %add807 = add nsw i32 %shr805, %conv806
  br label %cond.end808

cond.end808:                                      ; preds = %cond.false786, %cond.true784
  %cond809 = phi i32 [ %547, %cond.true784 ], [ %add807, %cond.false786 ]
  br label %cond.end810

cond.end810:                                      ; preds = %cond.end808, %cond.true758
  %cond811 = phi i32 [ 0, %cond.true758 ], [ %cond809, %cond.end808 ]
  store i32 %cond811, i32* %weightedpel, align 4
  %565 = load i16*, i16** %orig_line, align 8
  %566 = load i16, i16* %x0, align 2
  %conv812 = sext i16 %566 to i32
  %add813 = add nsw i32 %conv812, 1
  %idxprom814 = sext i32 %add813 to i64
  %arrayidx815 = getelementptr inbounds i16, i16* %565, i64 %idxprom814
  %567 = load i16, i16* %arrayidx815, align 2
  %conv816 = zext i16 %567 to i32
  %568 = load i32, i32* %weightedpel, align 4
  %sub817 = sub nsw i32 %conv816, %568
  %569 = load i32*, i32** %d, align 8
  %incdec.ptr818 = getelementptr inbounds i32, i32* %569, i32 1
  store i32* %incdec.ptr818, i32** %d, align 8
  store i32 %sub817, i32* %569, align 4
  %570 = load i16, i16* %weightSpic, align 2
  %conv819 = sext i16 %570 to i32
  %571 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %572 = load i16**, i16*** %ref1_pic, align 8
  %573 = load i16, i16* %sy, align 2
  %conv820 = sext i16 %573 to i32
  %574 = load i16, i16* %sx0, align 2
  %conv821 = sext i16 %574 to i32
  %add822 = add nsw i32 %conv821, 8
  %575 = load i32, i32* %img_height, align 4
  %576 = load i32, i32* %img_width, align 4
  %call823 = call zeroext i16 %571(i16** %572, i32 %conv820, i32 %add822, i32 %575, i32 %576)
  %conv824 = zext i16 %call823 to i32
  %mul825 = mul nsw i32 %conv819, %conv824
  %577 = load i16, i16* %weightRpic, align 2
  %conv826 = sext i16 %577 to i32
  %578 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %579 = load i16**, i16*** %ref2_pic, align 8
  %580 = load i16, i16* %ry, align 2
  %conv827 = sext i16 %580 to i32
  %581 = load i16, i16* %rx0, align 2
  %conv828 = sext i16 %581 to i32
  %add829 = add nsw i32 %conv828, 8
  %582 = load i32, i32* %img_height, align 4
  %583 = load i32, i32* %img_width, align 4
  %call830 = call zeroext i16 %578(i16** %579, i32 %conv827, i32 %add829, i32 %582, i32 %583)
  %conv831 = zext i16 %call830 to i32
  %mul832 = mul nsw i32 %conv826, %conv831
  %add833 = add nsw i32 %mul825, %mul832
  %584 = load i32, i32* @wp_luma_round, align 4
  %mul834 = mul nsw i32 2, %584
  %add835 = add nsw i32 %add833, %mul834
  %585 = load i32, i32* @luma_log_weight_denom, align 4
  %add836 = add nsw i32 %585, 1
  %shr837 = ashr i32 %add835, %add836
  %586 = load i16, i16* %offsetBi, align 2
  %conv838 = sext i16 %586 to i32
  %add839 = add nsw i32 %shr837, %conv838
  %cmp840 = icmp slt i32 %add839, 0
  br i1 %cmp840, label %cond.true842, label %cond.false843

cond.true842:                                     ; preds = %cond.end810
  br label %cond.end894

cond.false843:                                    ; preds = %cond.end810
  %587 = load i16, i16* %weightSpic, align 2
  %conv844 = sext i16 %587 to i32
  %588 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %589 = load i16**, i16*** %ref1_pic, align 8
  %590 = load i16, i16* %sy, align 2
  %conv845 = sext i16 %590 to i32
  %591 = load i16, i16* %sx0, align 2
  %conv846 = sext i16 %591 to i32
  %add847 = add nsw i32 %conv846, 8
  %592 = load i32, i32* %img_height, align 4
  %593 = load i32, i32* %img_width, align 4
  %call848 = call zeroext i16 %588(i16** %589, i32 %conv845, i32 %add847, i32 %592, i32 %593)
  %conv849 = zext i16 %call848 to i32
  %mul850 = mul nsw i32 %conv844, %conv849
  %594 = load i16, i16* %weightRpic, align 2
  %conv851 = sext i16 %594 to i32
  %595 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %596 = load i16**, i16*** %ref2_pic, align 8
  %597 = load i16, i16* %ry, align 2
  %conv852 = sext i16 %597 to i32
  %598 = load i16, i16* %rx0, align 2
  %conv853 = sext i16 %598 to i32
  %add854 = add nsw i32 %conv853, 8
  %599 = load i32, i32* %img_height, align 4
  %600 = load i32, i32* %img_width, align 4
  %call855 = call zeroext i16 %595(i16** %596, i32 %conv852, i32 %add854, i32 %599, i32 %600)
  %conv856 = zext i16 %call855 to i32
  %mul857 = mul nsw i32 %conv851, %conv856
  %add858 = add nsw i32 %mul850, %mul857
  %601 = load i32, i32* @wp_luma_round, align 4
  %mul859 = mul nsw i32 2, %601
  %add860 = add nsw i32 %add858, %mul859
  %602 = load i32, i32* @luma_log_weight_denom, align 4
  %add861 = add nsw i32 %602, 1
  %shr862 = ashr i32 %add860, %add861
  %603 = load i16, i16* %offsetBi, align 2
  %conv863 = sext i16 %603 to i32
  %add864 = add nsw i32 %shr862, %conv863
  %604 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value865 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %604, i32 0, i32 155
  %605 = load i32, i32* %max_imgpel_value865, align 4
  %cmp866 = icmp sgt i32 %add864, %605
  br i1 %cmp866, label %cond.true868, label %cond.false870

cond.true868:                                     ; preds = %cond.false843
  %606 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value869 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %606, i32 0, i32 155
  %607 = load i32, i32* %max_imgpel_value869, align 4
  br label %cond.end892

cond.false870:                                    ; preds = %cond.false843
  %608 = load i16, i16* %weightSpic, align 2
  %conv871 = sext i16 %608 to i32
  %609 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %610 = load i16**, i16*** %ref1_pic, align 8
  %611 = load i16, i16* %sy, align 2
  %conv872 = sext i16 %611 to i32
  %612 = load i16, i16* %sx0, align 2
  %conv873 = sext i16 %612 to i32
  %add874 = add nsw i32 %conv873, 8
  %613 = load i32, i32* %img_height, align 4
  %614 = load i32, i32* %img_width, align 4
  %call875 = call zeroext i16 %609(i16** %610, i32 %conv872, i32 %add874, i32 %613, i32 %614)
  %conv876 = zext i16 %call875 to i32
  %mul877 = mul nsw i32 %conv871, %conv876
  %615 = load i16, i16* %weightRpic, align 2
  %conv878 = sext i16 %615 to i32
  %616 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %617 = load i16**, i16*** %ref2_pic, align 8
  %618 = load i16, i16* %ry, align 2
  %conv879 = sext i16 %618 to i32
  %619 = load i16, i16* %rx0, align 2
  %conv880 = sext i16 %619 to i32
  %add881 = add nsw i32 %conv880, 8
  %620 = load i32, i32* %img_height, align 4
  %621 = load i32, i32* %img_width, align 4
  %call882 = call zeroext i16 %616(i16** %617, i32 %conv879, i32 %add881, i32 %620, i32 %621)
  %conv883 = zext i16 %call882 to i32
  %mul884 = mul nsw i32 %conv878, %conv883
  %add885 = add nsw i32 %mul877, %mul884
  %622 = load i32, i32* @wp_luma_round, align 4
  %mul886 = mul nsw i32 2, %622
  %add887 = add nsw i32 %add885, %mul886
  %623 = load i32, i32* @luma_log_weight_denom, align 4
  %add888 = add nsw i32 %623, 1
  %shr889 = ashr i32 %add887, %add888
  %624 = load i16, i16* %offsetBi, align 2
  %conv890 = sext i16 %624 to i32
  %add891 = add nsw i32 %shr889, %conv890
  br label %cond.end892

cond.end892:                                      ; preds = %cond.false870, %cond.true868
  %cond893 = phi i32 [ %607, %cond.true868 ], [ %add891, %cond.false870 ]
  br label %cond.end894

cond.end894:                                      ; preds = %cond.end892, %cond.true842
  %cond895 = phi i32 [ 0, %cond.true842 ], [ %cond893, %cond.end892 ]
  store i32 %cond895, i32* %weightedpel, align 4
  %625 = load i16*, i16** %orig_line, align 8
  %626 = load i16, i16* %x0, align 2
  %conv896 = sext i16 %626 to i32
  %add897 = add nsw i32 %conv896, 2
  %idxprom898 = sext i32 %add897 to i64
  %arrayidx899 = getelementptr inbounds i16, i16* %625, i64 %idxprom898
  %627 = load i16, i16* %arrayidx899, align 2
  %conv900 = zext i16 %627 to i32
  %628 = load i32, i32* %weightedpel, align 4
  %sub901 = sub nsw i32 %conv900, %628
  %629 = load i32*, i32** %d, align 8
  %incdec.ptr902 = getelementptr inbounds i32, i32* %629, i32 1
  store i32* %incdec.ptr902, i32** %d, align 8
  store i32 %sub901, i32* %629, align 4
  %630 = load i16, i16* %weightSpic, align 2
  %conv903 = sext i16 %630 to i32
  %631 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %632 = load i16**, i16*** %ref1_pic, align 8
  %633 = load i16, i16* %sy, align 2
  %conv904 = sext i16 %633 to i32
  %634 = load i16, i16* %sx0, align 2
  %conv905 = sext i16 %634 to i32
  %add906 = add nsw i32 %conv905, 12
  %635 = load i32, i32* %img_height, align 4
  %636 = load i32, i32* %img_width, align 4
  %call907 = call zeroext i16 %631(i16** %632, i32 %conv904, i32 %add906, i32 %635, i32 %636)
  %conv908 = zext i16 %call907 to i32
  %mul909 = mul nsw i32 %conv903, %conv908
  %637 = load i16, i16* %weightRpic, align 2
  %conv910 = sext i16 %637 to i32
  %638 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %639 = load i16**, i16*** %ref2_pic, align 8
  %640 = load i16, i16* %ry, align 2
  %conv911 = sext i16 %640 to i32
  %641 = load i16, i16* %rx0, align 2
  %conv912 = sext i16 %641 to i32
  %add913 = add nsw i32 %conv912, 12
  %642 = load i32, i32* %img_height, align 4
  %643 = load i32, i32* %img_width, align 4
  %call914 = call zeroext i16 %638(i16** %639, i32 %conv911, i32 %add913, i32 %642, i32 %643)
  %conv915 = zext i16 %call914 to i32
  %mul916 = mul nsw i32 %conv910, %conv915
  %add917 = add nsw i32 %mul909, %mul916
  %644 = load i32, i32* @wp_luma_round, align 4
  %mul918 = mul nsw i32 2, %644
  %add919 = add nsw i32 %add917, %mul918
  %645 = load i32, i32* @luma_log_weight_denom, align 4
  %add920 = add nsw i32 %645, 1
  %shr921 = ashr i32 %add919, %add920
  %646 = load i16, i16* %offsetBi, align 2
  %conv922 = sext i16 %646 to i32
  %add923 = add nsw i32 %shr921, %conv922
  %cmp924 = icmp slt i32 %add923, 0
  br i1 %cmp924, label %cond.true926, label %cond.false927

cond.true926:                                     ; preds = %cond.end894
  br label %cond.end978

cond.false927:                                    ; preds = %cond.end894
  %647 = load i16, i16* %weightSpic, align 2
  %conv928 = sext i16 %647 to i32
  %648 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %649 = load i16**, i16*** %ref1_pic, align 8
  %650 = load i16, i16* %sy, align 2
  %conv929 = sext i16 %650 to i32
  %651 = load i16, i16* %sx0, align 2
  %conv930 = sext i16 %651 to i32
  %add931 = add nsw i32 %conv930, 12
  %652 = load i32, i32* %img_height, align 4
  %653 = load i32, i32* %img_width, align 4
  %call932 = call zeroext i16 %648(i16** %649, i32 %conv929, i32 %add931, i32 %652, i32 %653)
  %conv933 = zext i16 %call932 to i32
  %mul934 = mul nsw i32 %conv928, %conv933
  %654 = load i16, i16* %weightRpic, align 2
  %conv935 = sext i16 %654 to i32
  %655 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %656 = load i16**, i16*** %ref2_pic, align 8
  %657 = load i16, i16* %ry, align 2
  %conv936 = sext i16 %657 to i32
  %658 = load i16, i16* %rx0, align 2
  %conv937 = sext i16 %658 to i32
  %add938 = add nsw i32 %conv937, 12
  %659 = load i32, i32* %img_height, align 4
  %660 = load i32, i32* %img_width, align 4
  %call939 = call zeroext i16 %655(i16** %656, i32 %conv936, i32 %add938, i32 %659, i32 %660)
  %conv940 = zext i16 %call939 to i32
  %mul941 = mul nsw i32 %conv935, %conv940
  %add942 = add nsw i32 %mul934, %mul941
  %661 = load i32, i32* @wp_luma_round, align 4
  %mul943 = mul nsw i32 2, %661
  %add944 = add nsw i32 %add942, %mul943
  %662 = load i32, i32* @luma_log_weight_denom, align 4
  %add945 = add nsw i32 %662, 1
  %shr946 = ashr i32 %add944, %add945
  %663 = load i16, i16* %offsetBi, align 2
  %conv947 = sext i16 %663 to i32
  %add948 = add nsw i32 %shr946, %conv947
  %664 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value949 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %664, i32 0, i32 155
  %665 = load i32, i32* %max_imgpel_value949, align 4
  %cmp950 = icmp sgt i32 %add948, %665
  br i1 %cmp950, label %cond.true952, label %cond.false954

cond.true952:                                     ; preds = %cond.false927
  %666 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value953 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %666, i32 0, i32 155
  %667 = load i32, i32* %max_imgpel_value953, align 4
  br label %cond.end976

cond.false954:                                    ; preds = %cond.false927
  %668 = load i16, i16* %weightSpic, align 2
  %conv955 = sext i16 %668 to i32
  %669 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %670 = load i16**, i16*** %ref1_pic, align 8
  %671 = load i16, i16* %sy, align 2
  %conv956 = sext i16 %671 to i32
  %672 = load i16, i16* %sx0, align 2
  %conv957 = sext i16 %672 to i32
  %add958 = add nsw i32 %conv957, 12
  %673 = load i32, i32* %img_height, align 4
  %674 = load i32, i32* %img_width, align 4
  %call959 = call zeroext i16 %669(i16** %670, i32 %conv956, i32 %add958, i32 %673, i32 %674)
  %conv960 = zext i16 %call959 to i32
  %mul961 = mul nsw i32 %conv955, %conv960
  %675 = load i16, i16* %weightRpic, align 2
  %conv962 = sext i16 %675 to i32
  %676 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %677 = load i16**, i16*** %ref2_pic, align 8
  %678 = load i16, i16* %ry, align 2
  %conv963 = sext i16 %678 to i32
  %679 = load i16, i16* %rx0, align 2
  %conv964 = sext i16 %679 to i32
  %add965 = add nsw i32 %conv964, 12
  %680 = load i32, i32* %img_height, align 4
  %681 = load i32, i32* %img_width, align 4
  %call966 = call zeroext i16 %676(i16** %677, i32 %conv963, i32 %add965, i32 %680, i32 %681)
  %conv967 = zext i16 %call966 to i32
  %mul968 = mul nsw i32 %conv962, %conv967
  %add969 = add nsw i32 %mul961, %mul968
  %682 = load i32, i32* @wp_luma_round, align 4
  %mul970 = mul nsw i32 2, %682
  %add971 = add nsw i32 %add969, %mul970
  %683 = load i32, i32* @luma_log_weight_denom, align 4
  %add972 = add nsw i32 %683, 1
  %shr973 = ashr i32 %add971, %add972
  %684 = load i16, i16* %offsetBi, align 2
  %conv974 = sext i16 %684 to i32
  %add975 = add nsw i32 %shr973, %conv974
  br label %cond.end976

cond.end976:                                      ; preds = %cond.false954, %cond.true952
  %cond977 = phi i32 [ %667, %cond.true952 ], [ %add975, %cond.false954 ]
  br label %cond.end978

cond.end978:                                      ; preds = %cond.end976, %cond.true926
  %cond979 = phi i32 [ 0, %cond.true926 ], [ %cond977, %cond.end976 ]
  store i32 %cond979, i32* %weightedpel, align 4
  %685 = load i16*, i16** %orig_line, align 8
  %686 = load i16, i16* %x0, align 2
  %conv980 = sext i16 %686 to i32
  %add981 = add nsw i32 %conv980, 3
  %idxprom982 = sext i32 %add981 to i64
  %arrayidx983 = getelementptr inbounds i16, i16* %685, i64 %idxprom982
  %687 = load i16, i16* %arrayidx983, align 2
  %conv984 = zext i16 %687 to i32
  %688 = load i32, i32* %weightedpel, align 4
  %sub985 = sub nsw i32 %conv984, %688
  %689 = load i32*, i32** %d, align 8
  %incdec.ptr986 = getelementptr inbounds i32, i32* %689, i32 1
  store i32* %incdec.ptr986, i32** %d, align 8
  store i32 %sub985, i32* %689, align 4
  %690 = load i16, i16* %sy0, align 2
  %conv987 = sext i16 %690 to i32
  %add988 = add nsw i32 %conv987, 8
  %conv989 = trunc i32 %add988 to i16
  store i16 %conv989, i16* %sy, align 2
  %691 = load i16, i16* %ry0, align 2
  %conv990 = sext i16 %691 to i32
  %add991 = add nsw i32 %conv990, 8
  %conv992 = trunc i32 %add991 to i16
  store i16 %conv992, i16* %ry, align 2
  %692 = load i16**, i16*** %orig_pic.addr, align 8
  %693 = load i16, i16* %y0, align 2
  %conv993 = sext i16 %693 to i32
  %add994 = add nsw i32 %conv993, 2
  %idxprom995 = sext i32 %add994 to i64
  %arrayidx996 = getelementptr inbounds i16*, i16** %692, i64 %idxprom995
  %694 = load i16*, i16** %arrayidx996, align 8
  store i16* %694, i16** %orig_line, align 8
  %695 = load i16, i16* %weightSpic, align 2
  %conv997 = sext i16 %695 to i32
  %696 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %697 = load i16**, i16*** %ref1_pic, align 8
  %698 = load i16, i16* %sy, align 2
  %conv998 = sext i16 %698 to i32
  %699 = load i16, i16* %sx0, align 2
  %conv999 = sext i16 %699 to i32
  %700 = load i32, i32* %img_height, align 4
  %701 = load i32, i32* %img_width, align 4
  %call1000 = call zeroext i16 %696(i16** %697, i32 %conv998, i32 %conv999, i32 %700, i32 %701)
  %conv1001 = zext i16 %call1000 to i32
  %mul1002 = mul nsw i32 %conv997, %conv1001
  %702 = load i16, i16* %weightRpic, align 2
  %conv1003 = sext i16 %702 to i32
  %703 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %704 = load i16**, i16*** %ref2_pic, align 8
  %705 = load i16, i16* %ry, align 2
  %conv1004 = sext i16 %705 to i32
  %706 = load i16, i16* %rx0, align 2
  %conv1005 = sext i16 %706 to i32
  %707 = load i32, i32* %img_height, align 4
  %708 = load i32, i32* %img_width, align 4
  %call1006 = call zeroext i16 %703(i16** %704, i32 %conv1004, i32 %conv1005, i32 %707, i32 %708)
  %conv1007 = zext i16 %call1006 to i32
  %mul1008 = mul nsw i32 %conv1003, %conv1007
  %add1009 = add nsw i32 %mul1002, %mul1008
  %709 = load i32, i32* @wp_luma_round, align 4
  %mul1010 = mul nsw i32 2, %709
  %add1011 = add nsw i32 %add1009, %mul1010
  %710 = load i32, i32* @luma_log_weight_denom, align 4
  %add1012 = add nsw i32 %710, 1
  %shr1013 = ashr i32 %add1011, %add1012
  %711 = load i16, i16* %offsetBi, align 2
  %conv1014 = sext i16 %711 to i32
  %add1015 = add nsw i32 %shr1013, %conv1014
  %cmp1016 = icmp slt i32 %add1015, 0
  br i1 %cmp1016, label %cond.true1018, label %cond.false1019

cond.true1018:                                    ; preds = %cond.end978
  br label %cond.end1066

cond.false1019:                                   ; preds = %cond.end978
  %712 = load i16, i16* %weightSpic, align 2
  %conv1020 = sext i16 %712 to i32
  %713 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %714 = load i16**, i16*** %ref1_pic, align 8
  %715 = load i16, i16* %sy, align 2
  %conv1021 = sext i16 %715 to i32
  %716 = load i16, i16* %sx0, align 2
  %conv1022 = sext i16 %716 to i32
  %717 = load i32, i32* %img_height, align 4
  %718 = load i32, i32* %img_width, align 4
  %call1023 = call zeroext i16 %713(i16** %714, i32 %conv1021, i32 %conv1022, i32 %717, i32 %718)
  %conv1024 = zext i16 %call1023 to i32
  %mul1025 = mul nsw i32 %conv1020, %conv1024
  %719 = load i16, i16* %weightRpic, align 2
  %conv1026 = sext i16 %719 to i32
  %720 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %721 = load i16**, i16*** %ref2_pic, align 8
  %722 = load i16, i16* %ry, align 2
  %conv1027 = sext i16 %722 to i32
  %723 = load i16, i16* %rx0, align 2
  %conv1028 = sext i16 %723 to i32
  %724 = load i32, i32* %img_height, align 4
  %725 = load i32, i32* %img_width, align 4
  %call1029 = call zeroext i16 %720(i16** %721, i32 %conv1027, i32 %conv1028, i32 %724, i32 %725)
  %conv1030 = zext i16 %call1029 to i32
  %mul1031 = mul nsw i32 %conv1026, %conv1030
  %add1032 = add nsw i32 %mul1025, %mul1031
  %726 = load i32, i32* @wp_luma_round, align 4
  %mul1033 = mul nsw i32 2, %726
  %add1034 = add nsw i32 %add1032, %mul1033
  %727 = load i32, i32* @luma_log_weight_denom, align 4
  %add1035 = add nsw i32 %727, 1
  %shr1036 = ashr i32 %add1034, %add1035
  %728 = load i16, i16* %offsetBi, align 2
  %conv1037 = sext i16 %728 to i32
  %add1038 = add nsw i32 %shr1036, %conv1037
  %729 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1039 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %729, i32 0, i32 155
  %730 = load i32, i32* %max_imgpel_value1039, align 4
  %cmp1040 = icmp sgt i32 %add1038, %730
  br i1 %cmp1040, label %cond.true1042, label %cond.false1044

cond.true1042:                                    ; preds = %cond.false1019
  %731 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1043 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %731, i32 0, i32 155
  %732 = load i32, i32* %max_imgpel_value1043, align 4
  br label %cond.end1064

cond.false1044:                                   ; preds = %cond.false1019
  %733 = load i16, i16* %weightSpic, align 2
  %conv1045 = sext i16 %733 to i32
  %734 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %735 = load i16**, i16*** %ref1_pic, align 8
  %736 = load i16, i16* %sy, align 2
  %conv1046 = sext i16 %736 to i32
  %737 = load i16, i16* %sx0, align 2
  %conv1047 = sext i16 %737 to i32
  %738 = load i32, i32* %img_height, align 4
  %739 = load i32, i32* %img_width, align 4
  %call1048 = call zeroext i16 %734(i16** %735, i32 %conv1046, i32 %conv1047, i32 %738, i32 %739)
  %conv1049 = zext i16 %call1048 to i32
  %mul1050 = mul nsw i32 %conv1045, %conv1049
  %740 = load i16, i16* %weightRpic, align 2
  %conv1051 = sext i16 %740 to i32
  %741 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %742 = load i16**, i16*** %ref2_pic, align 8
  %743 = load i16, i16* %ry, align 2
  %conv1052 = sext i16 %743 to i32
  %744 = load i16, i16* %rx0, align 2
  %conv1053 = sext i16 %744 to i32
  %745 = load i32, i32* %img_height, align 4
  %746 = load i32, i32* %img_width, align 4
  %call1054 = call zeroext i16 %741(i16** %742, i32 %conv1052, i32 %conv1053, i32 %745, i32 %746)
  %conv1055 = zext i16 %call1054 to i32
  %mul1056 = mul nsw i32 %conv1051, %conv1055
  %add1057 = add nsw i32 %mul1050, %mul1056
  %747 = load i32, i32* @wp_luma_round, align 4
  %mul1058 = mul nsw i32 2, %747
  %add1059 = add nsw i32 %add1057, %mul1058
  %748 = load i32, i32* @luma_log_weight_denom, align 4
  %add1060 = add nsw i32 %748, 1
  %shr1061 = ashr i32 %add1059, %add1060
  %749 = load i16, i16* %offsetBi, align 2
  %conv1062 = sext i16 %749 to i32
  %add1063 = add nsw i32 %shr1061, %conv1062
  br label %cond.end1064

cond.end1064:                                     ; preds = %cond.false1044, %cond.true1042
  %cond1065 = phi i32 [ %732, %cond.true1042 ], [ %add1063, %cond.false1044 ]
  br label %cond.end1066

cond.end1066:                                     ; preds = %cond.end1064, %cond.true1018
  %cond1067 = phi i32 [ 0, %cond.true1018 ], [ %cond1065, %cond.end1064 ]
  store i32 %cond1067, i32* %weightedpel, align 4
  %750 = load i16*, i16** %orig_line, align 8
  %751 = load i16, i16* %x0, align 2
  %idxprom1068 = sext i16 %751 to i64
  %arrayidx1069 = getelementptr inbounds i16, i16* %750, i64 %idxprom1068
  %752 = load i16, i16* %arrayidx1069, align 2
  %conv1070 = zext i16 %752 to i32
  %753 = load i32, i32* %weightedpel, align 4
  %sub1071 = sub nsw i32 %conv1070, %753
  %754 = load i32*, i32** %d, align 8
  %incdec.ptr1072 = getelementptr inbounds i32, i32* %754, i32 1
  store i32* %incdec.ptr1072, i32** %d, align 8
  store i32 %sub1071, i32* %754, align 4
  %755 = load i16, i16* %weightSpic, align 2
  %conv1073 = sext i16 %755 to i32
  %756 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %757 = load i16**, i16*** %ref1_pic, align 8
  %758 = load i16, i16* %sy, align 2
  %conv1074 = sext i16 %758 to i32
  %759 = load i16, i16* %sx0, align 2
  %conv1075 = sext i16 %759 to i32
  %add1076 = add nsw i32 %conv1075, 4
  %760 = load i32, i32* %img_height, align 4
  %761 = load i32, i32* %img_width, align 4
  %call1077 = call zeroext i16 %756(i16** %757, i32 %conv1074, i32 %add1076, i32 %760, i32 %761)
  %conv1078 = zext i16 %call1077 to i32
  %mul1079 = mul nsw i32 %conv1073, %conv1078
  %762 = load i16, i16* %weightRpic, align 2
  %conv1080 = sext i16 %762 to i32
  %763 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %764 = load i16**, i16*** %ref2_pic, align 8
  %765 = load i16, i16* %ry, align 2
  %conv1081 = sext i16 %765 to i32
  %766 = load i16, i16* %rx0, align 2
  %conv1082 = sext i16 %766 to i32
  %add1083 = add nsw i32 %conv1082, 4
  %767 = load i32, i32* %img_height, align 4
  %768 = load i32, i32* %img_width, align 4
  %call1084 = call zeroext i16 %763(i16** %764, i32 %conv1081, i32 %add1083, i32 %767, i32 %768)
  %conv1085 = zext i16 %call1084 to i32
  %mul1086 = mul nsw i32 %conv1080, %conv1085
  %add1087 = add nsw i32 %mul1079, %mul1086
  %769 = load i32, i32* @wp_luma_round, align 4
  %mul1088 = mul nsw i32 2, %769
  %add1089 = add nsw i32 %add1087, %mul1088
  %770 = load i32, i32* @luma_log_weight_denom, align 4
  %add1090 = add nsw i32 %770, 1
  %shr1091 = ashr i32 %add1089, %add1090
  %771 = load i16, i16* %offsetBi, align 2
  %conv1092 = sext i16 %771 to i32
  %add1093 = add nsw i32 %shr1091, %conv1092
  %cmp1094 = icmp slt i32 %add1093, 0
  br i1 %cmp1094, label %cond.true1096, label %cond.false1097

cond.true1096:                                    ; preds = %cond.end1066
  br label %cond.end1148

cond.false1097:                                   ; preds = %cond.end1066
  %772 = load i16, i16* %weightSpic, align 2
  %conv1098 = sext i16 %772 to i32
  %773 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %774 = load i16**, i16*** %ref1_pic, align 8
  %775 = load i16, i16* %sy, align 2
  %conv1099 = sext i16 %775 to i32
  %776 = load i16, i16* %sx0, align 2
  %conv1100 = sext i16 %776 to i32
  %add1101 = add nsw i32 %conv1100, 4
  %777 = load i32, i32* %img_height, align 4
  %778 = load i32, i32* %img_width, align 4
  %call1102 = call zeroext i16 %773(i16** %774, i32 %conv1099, i32 %add1101, i32 %777, i32 %778)
  %conv1103 = zext i16 %call1102 to i32
  %mul1104 = mul nsw i32 %conv1098, %conv1103
  %779 = load i16, i16* %weightRpic, align 2
  %conv1105 = sext i16 %779 to i32
  %780 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %781 = load i16**, i16*** %ref2_pic, align 8
  %782 = load i16, i16* %ry, align 2
  %conv1106 = sext i16 %782 to i32
  %783 = load i16, i16* %rx0, align 2
  %conv1107 = sext i16 %783 to i32
  %add1108 = add nsw i32 %conv1107, 4
  %784 = load i32, i32* %img_height, align 4
  %785 = load i32, i32* %img_width, align 4
  %call1109 = call zeroext i16 %780(i16** %781, i32 %conv1106, i32 %add1108, i32 %784, i32 %785)
  %conv1110 = zext i16 %call1109 to i32
  %mul1111 = mul nsw i32 %conv1105, %conv1110
  %add1112 = add nsw i32 %mul1104, %mul1111
  %786 = load i32, i32* @wp_luma_round, align 4
  %mul1113 = mul nsw i32 2, %786
  %add1114 = add nsw i32 %add1112, %mul1113
  %787 = load i32, i32* @luma_log_weight_denom, align 4
  %add1115 = add nsw i32 %787, 1
  %shr1116 = ashr i32 %add1114, %add1115
  %788 = load i16, i16* %offsetBi, align 2
  %conv1117 = sext i16 %788 to i32
  %add1118 = add nsw i32 %shr1116, %conv1117
  %789 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %789, i32 0, i32 155
  %790 = load i32, i32* %max_imgpel_value1119, align 4
  %cmp1120 = icmp sgt i32 %add1118, %790
  br i1 %cmp1120, label %cond.true1122, label %cond.false1124

cond.true1122:                                    ; preds = %cond.false1097
  %791 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1123 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %791, i32 0, i32 155
  %792 = load i32, i32* %max_imgpel_value1123, align 4
  br label %cond.end1146

cond.false1124:                                   ; preds = %cond.false1097
  %793 = load i16, i16* %weightSpic, align 2
  %conv1125 = sext i16 %793 to i32
  %794 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %795 = load i16**, i16*** %ref1_pic, align 8
  %796 = load i16, i16* %sy, align 2
  %conv1126 = sext i16 %796 to i32
  %797 = load i16, i16* %sx0, align 2
  %conv1127 = sext i16 %797 to i32
  %add1128 = add nsw i32 %conv1127, 4
  %798 = load i32, i32* %img_height, align 4
  %799 = load i32, i32* %img_width, align 4
  %call1129 = call zeroext i16 %794(i16** %795, i32 %conv1126, i32 %add1128, i32 %798, i32 %799)
  %conv1130 = zext i16 %call1129 to i32
  %mul1131 = mul nsw i32 %conv1125, %conv1130
  %800 = load i16, i16* %weightRpic, align 2
  %conv1132 = sext i16 %800 to i32
  %801 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %802 = load i16**, i16*** %ref2_pic, align 8
  %803 = load i16, i16* %ry, align 2
  %conv1133 = sext i16 %803 to i32
  %804 = load i16, i16* %rx0, align 2
  %conv1134 = sext i16 %804 to i32
  %add1135 = add nsw i32 %conv1134, 4
  %805 = load i32, i32* %img_height, align 4
  %806 = load i32, i32* %img_width, align 4
  %call1136 = call zeroext i16 %801(i16** %802, i32 %conv1133, i32 %add1135, i32 %805, i32 %806)
  %conv1137 = zext i16 %call1136 to i32
  %mul1138 = mul nsw i32 %conv1132, %conv1137
  %add1139 = add nsw i32 %mul1131, %mul1138
  %807 = load i32, i32* @wp_luma_round, align 4
  %mul1140 = mul nsw i32 2, %807
  %add1141 = add nsw i32 %add1139, %mul1140
  %808 = load i32, i32* @luma_log_weight_denom, align 4
  %add1142 = add nsw i32 %808, 1
  %shr1143 = ashr i32 %add1141, %add1142
  %809 = load i16, i16* %offsetBi, align 2
  %conv1144 = sext i16 %809 to i32
  %add1145 = add nsw i32 %shr1143, %conv1144
  br label %cond.end1146

cond.end1146:                                     ; preds = %cond.false1124, %cond.true1122
  %cond1147 = phi i32 [ %792, %cond.true1122 ], [ %add1145, %cond.false1124 ]
  br label %cond.end1148

cond.end1148:                                     ; preds = %cond.end1146, %cond.true1096
  %cond1149 = phi i32 [ 0, %cond.true1096 ], [ %cond1147, %cond.end1146 ]
  store i32 %cond1149, i32* %weightedpel, align 4
  %810 = load i16*, i16** %orig_line, align 8
  %811 = load i16, i16* %x0, align 2
  %conv1150 = sext i16 %811 to i32
  %add1151 = add nsw i32 %conv1150, 1
  %idxprom1152 = sext i32 %add1151 to i64
  %arrayidx1153 = getelementptr inbounds i16, i16* %810, i64 %idxprom1152
  %812 = load i16, i16* %arrayidx1153, align 2
  %conv1154 = zext i16 %812 to i32
  %813 = load i32, i32* %weightedpel, align 4
  %sub1155 = sub nsw i32 %conv1154, %813
  %814 = load i32*, i32** %d, align 8
  %incdec.ptr1156 = getelementptr inbounds i32, i32* %814, i32 1
  store i32* %incdec.ptr1156, i32** %d, align 8
  store i32 %sub1155, i32* %814, align 4
  %815 = load i16, i16* %weightSpic, align 2
  %conv1157 = sext i16 %815 to i32
  %816 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %817 = load i16**, i16*** %ref1_pic, align 8
  %818 = load i16, i16* %sy, align 2
  %conv1158 = sext i16 %818 to i32
  %819 = load i16, i16* %sx0, align 2
  %conv1159 = sext i16 %819 to i32
  %add1160 = add nsw i32 %conv1159, 8
  %820 = load i32, i32* %img_height, align 4
  %821 = load i32, i32* %img_width, align 4
  %call1161 = call zeroext i16 %816(i16** %817, i32 %conv1158, i32 %add1160, i32 %820, i32 %821)
  %conv1162 = zext i16 %call1161 to i32
  %mul1163 = mul nsw i32 %conv1157, %conv1162
  %822 = load i16, i16* %weightRpic, align 2
  %conv1164 = sext i16 %822 to i32
  %823 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %824 = load i16**, i16*** %ref2_pic, align 8
  %825 = load i16, i16* %ry, align 2
  %conv1165 = sext i16 %825 to i32
  %826 = load i16, i16* %rx0, align 2
  %conv1166 = sext i16 %826 to i32
  %add1167 = add nsw i32 %conv1166, 8
  %827 = load i32, i32* %img_height, align 4
  %828 = load i32, i32* %img_width, align 4
  %call1168 = call zeroext i16 %823(i16** %824, i32 %conv1165, i32 %add1167, i32 %827, i32 %828)
  %conv1169 = zext i16 %call1168 to i32
  %mul1170 = mul nsw i32 %conv1164, %conv1169
  %add1171 = add nsw i32 %mul1163, %mul1170
  %829 = load i32, i32* @wp_luma_round, align 4
  %mul1172 = mul nsw i32 2, %829
  %add1173 = add nsw i32 %add1171, %mul1172
  %830 = load i32, i32* @luma_log_weight_denom, align 4
  %add1174 = add nsw i32 %830, 1
  %shr1175 = ashr i32 %add1173, %add1174
  %831 = load i16, i16* %offsetBi, align 2
  %conv1176 = sext i16 %831 to i32
  %add1177 = add nsw i32 %shr1175, %conv1176
  %cmp1178 = icmp slt i32 %add1177, 0
  br i1 %cmp1178, label %cond.true1180, label %cond.false1181

cond.true1180:                                    ; preds = %cond.end1148
  br label %cond.end1232

cond.false1181:                                   ; preds = %cond.end1148
  %832 = load i16, i16* %weightSpic, align 2
  %conv1182 = sext i16 %832 to i32
  %833 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %834 = load i16**, i16*** %ref1_pic, align 8
  %835 = load i16, i16* %sy, align 2
  %conv1183 = sext i16 %835 to i32
  %836 = load i16, i16* %sx0, align 2
  %conv1184 = sext i16 %836 to i32
  %add1185 = add nsw i32 %conv1184, 8
  %837 = load i32, i32* %img_height, align 4
  %838 = load i32, i32* %img_width, align 4
  %call1186 = call zeroext i16 %833(i16** %834, i32 %conv1183, i32 %add1185, i32 %837, i32 %838)
  %conv1187 = zext i16 %call1186 to i32
  %mul1188 = mul nsw i32 %conv1182, %conv1187
  %839 = load i16, i16* %weightRpic, align 2
  %conv1189 = sext i16 %839 to i32
  %840 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %841 = load i16**, i16*** %ref2_pic, align 8
  %842 = load i16, i16* %ry, align 2
  %conv1190 = sext i16 %842 to i32
  %843 = load i16, i16* %rx0, align 2
  %conv1191 = sext i16 %843 to i32
  %add1192 = add nsw i32 %conv1191, 8
  %844 = load i32, i32* %img_height, align 4
  %845 = load i32, i32* %img_width, align 4
  %call1193 = call zeroext i16 %840(i16** %841, i32 %conv1190, i32 %add1192, i32 %844, i32 %845)
  %conv1194 = zext i16 %call1193 to i32
  %mul1195 = mul nsw i32 %conv1189, %conv1194
  %add1196 = add nsw i32 %mul1188, %mul1195
  %846 = load i32, i32* @wp_luma_round, align 4
  %mul1197 = mul nsw i32 2, %846
  %add1198 = add nsw i32 %add1196, %mul1197
  %847 = load i32, i32* @luma_log_weight_denom, align 4
  %add1199 = add nsw i32 %847, 1
  %shr1200 = ashr i32 %add1198, %add1199
  %848 = load i16, i16* %offsetBi, align 2
  %conv1201 = sext i16 %848 to i32
  %add1202 = add nsw i32 %shr1200, %conv1201
  %849 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %849, i32 0, i32 155
  %850 = load i32, i32* %max_imgpel_value1203, align 4
  %cmp1204 = icmp sgt i32 %add1202, %850
  br i1 %cmp1204, label %cond.true1206, label %cond.false1208

cond.true1206:                                    ; preds = %cond.false1181
  %851 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1207 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %851, i32 0, i32 155
  %852 = load i32, i32* %max_imgpel_value1207, align 4
  br label %cond.end1230

cond.false1208:                                   ; preds = %cond.false1181
  %853 = load i16, i16* %weightSpic, align 2
  %conv1209 = sext i16 %853 to i32
  %854 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %855 = load i16**, i16*** %ref1_pic, align 8
  %856 = load i16, i16* %sy, align 2
  %conv1210 = sext i16 %856 to i32
  %857 = load i16, i16* %sx0, align 2
  %conv1211 = sext i16 %857 to i32
  %add1212 = add nsw i32 %conv1211, 8
  %858 = load i32, i32* %img_height, align 4
  %859 = load i32, i32* %img_width, align 4
  %call1213 = call zeroext i16 %854(i16** %855, i32 %conv1210, i32 %add1212, i32 %858, i32 %859)
  %conv1214 = zext i16 %call1213 to i32
  %mul1215 = mul nsw i32 %conv1209, %conv1214
  %860 = load i16, i16* %weightRpic, align 2
  %conv1216 = sext i16 %860 to i32
  %861 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %862 = load i16**, i16*** %ref2_pic, align 8
  %863 = load i16, i16* %ry, align 2
  %conv1217 = sext i16 %863 to i32
  %864 = load i16, i16* %rx0, align 2
  %conv1218 = sext i16 %864 to i32
  %add1219 = add nsw i32 %conv1218, 8
  %865 = load i32, i32* %img_height, align 4
  %866 = load i32, i32* %img_width, align 4
  %call1220 = call zeroext i16 %861(i16** %862, i32 %conv1217, i32 %add1219, i32 %865, i32 %866)
  %conv1221 = zext i16 %call1220 to i32
  %mul1222 = mul nsw i32 %conv1216, %conv1221
  %add1223 = add nsw i32 %mul1215, %mul1222
  %867 = load i32, i32* @wp_luma_round, align 4
  %mul1224 = mul nsw i32 2, %867
  %add1225 = add nsw i32 %add1223, %mul1224
  %868 = load i32, i32* @luma_log_weight_denom, align 4
  %add1226 = add nsw i32 %868, 1
  %shr1227 = ashr i32 %add1225, %add1226
  %869 = load i16, i16* %offsetBi, align 2
  %conv1228 = sext i16 %869 to i32
  %add1229 = add nsw i32 %shr1227, %conv1228
  br label %cond.end1230

cond.end1230:                                     ; preds = %cond.false1208, %cond.true1206
  %cond1231 = phi i32 [ %852, %cond.true1206 ], [ %add1229, %cond.false1208 ]
  br label %cond.end1232

cond.end1232:                                     ; preds = %cond.end1230, %cond.true1180
  %cond1233 = phi i32 [ 0, %cond.true1180 ], [ %cond1231, %cond.end1230 ]
  store i32 %cond1233, i32* %weightedpel, align 4
  %870 = load i16*, i16** %orig_line, align 8
  %871 = load i16, i16* %x0, align 2
  %conv1234 = sext i16 %871 to i32
  %add1235 = add nsw i32 %conv1234, 2
  %idxprom1236 = sext i32 %add1235 to i64
  %arrayidx1237 = getelementptr inbounds i16, i16* %870, i64 %idxprom1236
  %872 = load i16, i16* %arrayidx1237, align 2
  %conv1238 = zext i16 %872 to i32
  %873 = load i32, i32* %weightedpel, align 4
  %sub1239 = sub nsw i32 %conv1238, %873
  %874 = load i32*, i32** %d, align 8
  %incdec.ptr1240 = getelementptr inbounds i32, i32* %874, i32 1
  store i32* %incdec.ptr1240, i32** %d, align 8
  store i32 %sub1239, i32* %874, align 4
  %875 = load i16, i16* %weightSpic, align 2
  %conv1241 = sext i16 %875 to i32
  %876 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %877 = load i16**, i16*** %ref1_pic, align 8
  %878 = load i16, i16* %sy, align 2
  %conv1242 = sext i16 %878 to i32
  %879 = load i16, i16* %sx0, align 2
  %conv1243 = sext i16 %879 to i32
  %add1244 = add nsw i32 %conv1243, 12
  %880 = load i32, i32* %img_height, align 4
  %881 = load i32, i32* %img_width, align 4
  %call1245 = call zeroext i16 %876(i16** %877, i32 %conv1242, i32 %add1244, i32 %880, i32 %881)
  %conv1246 = zext i16 %call1245 to i32
  %mul1247 = mul nsw i32 %conv1241, %conv1246
  %882 = load i16, i16* %weightRpic, align 2
  %conv1248 = sext i16 %882 to i32
  %883 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %884 = load i16**, i16*** %ref2_pic, align 8
  %885 = load i16, i16* %ry, align 2
  %conv1249 = sext i16 %885 to i32
  %886 = load i16, i16* %rx0, align 2
  %conv1250 = sext i16 %886 to i32
  %add1251 = add nsw i32 %conv1250, 12
  %887 = load i32, i32* %img_height, align 4
  %888 = load i32, i32* %img_width, align 4
  %call1252 = call zeroext i16 %883(i16** %884, i32 %conv1249, i32 %add1251, i32 %887, i32 %888)
  %conv1253 = zext i16 %call1252 to i32
  %mul1254 = mul nsw i32 %conv1248, %conv1253
  %add1255 = add nsw i32 %mul1247, %mul1254
  %889 = load i32, i32* @wp_luma_round, align 4
  %mul1256 = mul nsw i32 2, %889
  %add1257 = add nsw i32 %add1255, %mul1256
  %890 = load i32, i32* @luma_log_weight_denom, align 4
  %add1258 = add nsw i32 %890, 1
  %shr1259 = ashr i32 %add1257, %add1258
  %891 = load i16, i16* %offsetBi, align 2
  %conv1260 = sext i16 %891 to i32
  %add1261 = add nsw i32 %shr1259, %conv1260
  %cmp1262 = icmp slt i32 %add1261, 0
  br i1 %cmp1262, label %cond.true1264, label %cond.false1265

cond.true1264:                                    ; preds = %cond.end1232
  br label %cond.end1316

cond.false1265:                                   ; preds = %cond.end1232
  %892 = load i16, i16* %weightSpic, align 2
  %conv1266 = sext i16 %892 to i32
  %893 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %894 = load i16**, i16*** %ref1_pic, align 8
  %895 = load i16, i16* %sy, align 2
  %conv1267 = sext i16 %895 to i32
  %896 = load i16, i16* %sx0, align 2
  %conv1268 = sext i16 %896 to i32
  %add1269 = add nsw i32 %conv1268, 12
  %897 = load i32, i32* %img_height, align 4
  %898 = load i32, i32* %img_width, align 4
  %call1270 = call zeroext i16 %893(i16** %894, i32 %conv1267, i32 %add1269, i32 %897, i32 %898)
  %conv1271 = zext i16 %call1270 to i32
  %mul1272 = mul nsw i32 %conv1266, %conv1271
  %899 = load i16, i16* %weightRpic, align 2
  %conv1273 = sext i16 %899 to i32
  %900 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %901 = load i16**, i16*** %ref2_pic, align 8
  %902 = load i16, i16* %ry, align 2
  %conv1274 = sext i16 %902 to i32
  %903 = load i16, i16* %rx0, align 2
  %conv1275 = sext i16 %903 to i32
  %add1276 = add nsw i32 %conv1275, 12
  %904 = load i32, i32* %img_height, align 4
  %905 = load i32, i32* %img_width, align 4
  %call1277 = call zeroext i16 %900(i16** %901, i32 %conv1274, i32 %add1276, i32 %904, i32 %905)
  %conv1278 = zext i16 %call1277 to i32
  %mul1279 = mul nsw i32 %conv1273, %conv1278
  %add1280 = add nsw i32 %mul1272, %mul1279
  %906 = load i32, i32* @wp_luma_round, align 4
  %mul1281 = mul nsw i32 2, %906
  %add1282 = add nsw i32 %add1280, %mul1281
  %907 = load i32, i32* @luma_log_weight_denom, align 4
  %add1283 = add nsw i32 %907, 1
  %shr1284 = ashr i32 %add1282, %add1283
  %908 = load i16, i16* %offsetBi, align 2
  %conv1285 = sext i16 %908 to i32
  %add1286 = add nsw i32 %shr1284, %conv1285
  %909 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1287 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %909, i32 0, i32 155
  %910 = load i32, i32* %max_imgpel_value1287, align 4
  %cmp1288 = icmp sgt i32 %add1286, %910
  br i1 %cmp1288, label %cond.true1290, label %cond.false1292

cond.true1290:                                    ; preds = %cond.false1265
  %911 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %911, i32 0, i32 155
  %912 = load i32, i32* %max_imgpel_value1291, align 4
  br label %cond.end1314

cond.false1292:                                   ; preds = %cond.false1265
  %913 = load i16, i16* %weightSpic, align 2
  %conv1293 = sext i16 %913 to i32
  %914 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %915 = load i16**, i16*** %ref1_pic, align 8
  %916 = load i16, i16* %sy, align 2
  %conv1294 = sext i16 %916 to i32
  %917 = load i16, i16* %sx0, align 2
  %conv1295 = sext i16 %917 to i32
  %add1296 = add nsw i32 %conv1295, 12
  %918 = load i32, i32* %img_height, align 4
  %919 = load i32, i32* %img_width, align 4
  %call1297 = call zeroext i16 %914(i16** %915, i32 %conv1294, i32 %add1296, i32 %918, i32 %919)
  %conv1298 = zext i16 %call1297 to i32
  %mul1299 = mul nsw i32 %conv1293, %conv1298
  %920 = load i16, i16* %weightRpic, align 2
  %conv1300 = sext i16 %920 to i32
  %921 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %922 = load i16**, i16*** %ref2_pic, align 8
  %923 = load i16, i16* %ry, align 2
  %conv1301 = sext i16 %923 to i32
  %924 = load i16, i16* %rx0, align 2
  %conv1302 = sext i16 %924 to i32
  %add1303 = add nsw i32 %conv1302, 12
  %925 = load i32, i32* %img_height, align 4
  %926 = load i32, i32* %img_width, align 4
  %call1304 = call zeroext i16 %921(i16** %922, i32 %conv1301, i32 %add1303, i32 %925, i32 %926)
  %conv1305 = zext i16 %call1304 to i32
  %mul1306 = mul nsw i32 %conv1300, %conv1305
  %add1307 = add nsw i32 %mul1299, %mul1306
  %927 = load i32, i32* @wp_luma_round, align 4
  %mul1308 = mul nsw i32 2, %927
  %add1309 = add nsw i32 %add1307, %mul1308
  %928 = load i32, i32* @luma_log_weight_denom, align 4
  %add1310 = add nsw i32 %928, 1
  %shr1311 = ashr i32 %add1309, %add1310
  %929 = load i16, i16* %offsetBi, align 2
  %conv1312 = sext i16 %929 to i32
  %add1313 = add nsw i32 %shr1311, %conv1312
  br label %cond.end1314

cond.end1314:                                     ; preds = %cond.false1292, %cond.true1290
  %cond1315 = phi i32 [ %912, %cond.true1290 ], [ %add1313, %cond.false1292 ]
  br label %cond.end1316

cond.end1316:                                     ; preds = %cond.end1314, %cond.true1264
  %cond1317 = phi i32 [ 0, %cond.true1264 ], [ %cond1315, %cond.end1314 ]
  store i32 %cond1317, i32* %weightedpel, align 4
  %930 = load i16*, i16** %orig_line, align 8
  %931 = load i16, i16* %x0, align 2
  %conv1318 = sext i16 %931 to i32
  %add1319 = add nsw i32 %conv1318, 3
  %idxprom1320 = sext i32 %add1319 to i64
  %arrayidx1321 = getelementptr inbounds i16, i16* %930, i64 %idxprom1320
  %932 = load i16, i16* %arrayidx1321, align 2
  %conv1322 = zext i16 %932 to i32
  %933 = load i32, i32* %weightedpel, align 4
  %sub1323 = sub nsw i32 %conv1322, %933
  %934 = load i32*, i32** %d, align 8
  %incdec.ptr1324 = getelementptr inbounds i32, i32* %934, i32 1
  store i32* %incdec.ptr1324, i32** %d, align 8
  store i32 %sub1323, i32* %934, align 4
  %935 = load i16, i16* %sy0, align 2
  %conv1325 = sext i16 %935 to i32
  %add1326 = add nsw i32 %conv1325, 12
  %conv1327 = trunc i32 %add1326 to i16
  store i16 %conv1327, i16* %sy, align 2
  %936 = load i16, i16* %ry0, align 2
  %conv1328 = sext i16 %936 to i32
  %add1329 = add nsw i32 %conv1328, 12
  %conv1330 = trunc i32 %add1329 to i16
  store i16 %conv1330, i16* %ry, align 2
  %937 = load i16**, i16*** %orig_pic.addr, align 8
  %938 = load i16, i16* %y0, align 2
  %conv1331 = sext i16 %938 to i32
  %add1332 = add nsw i32 %conv1331, 3
  %idxprom1333 = sext i32 %add1332 to i64
  %arrayidx1334 = getelementptr inbounds i16*, i16** %937, i64 %idxprom1333
  %939 = load i16*, i16** %arrayidx1334, align 8
  store i16* %939, i16** %orig_line, align 8
  %940 = load i16, i16* %weightSpic, align 2
  %conv1335 = sext i16 %940 to i32
  %941 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %942 = load i16**, i16*** %ref1_pic, align 8
  %943 = load i16, i16* %sy, align 2
  %conv1336 = sext i16 %943 to i32
  %944 = load i16, i16* %sx0, align 2
  %conv1337 = sext i16 %944 to i32
  %945 = load i32, i32* %img_height, align 4
  %946 = load i32, i32* %img_width, align 4
  %call1338 = call zeroext i16 %941(i16** %942, i32 %conv1336, i32 %conv1337, i32 %945, i32 %946)
  %conv1339 = zext i16 %call1338 to i32
  %mul1340 = mul nsw i32 %conv1335, %conv1339
  %947 = load i16, i16* %weightRpic, align 2
  %conv1341 = sext i16 %947 to i32
  %948 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %949 = load i16**, i16*** %ref2_pic, align 8
  %950 = load i16, i16* %ry, align 2
  %conv1342 = sext i16 %950 to i32
  %951 = load i16, i16* %rx0, align 2
  %conv1343 = sext i16 %951 to i32
  %952 = load i32, i32* %img_height, align 4
  %953 = load i32, i32* %img_width, align 4
  %call1344 = call zeroext i16 %948(i16** %949, i32 %conv1342, i32 %conv1343, i32 %952, i32 %953)
  %conv1345 = zext i16 %call1344 to i32
  %mul1346 = mul nsw i32 %conv1341, %conv1345
  %add1347 = add nsw i32 %mul1340, %mul1346
  %954 = load i32, i32* @wp_luma_round, align 4
  %mul1348 = mul nsw i32 2, %954
  %add1349 = add nsw i32 %add1347, %mul1348
  %955 = load i32, i32* @luma_log_weight_denom, align 4
  %add1350 = add nsw i32 %955, 1
  %shr1351 = ashr i32 %add1349, %add1350
  %956 = load i16, i16* %offsetBi, align 2
  %conv1352 = sext i16 %956 to i32
  %add1353 = add nsw i32 %shr1351, %conv1352
  %cmp1354 = icmp slt i32 %add1353, 0
  br i1 %cmp1354, label %cond.true1356, label %cond.false1357

cond.true1356:                                    ; preds = %cond.end1316
  br label %cond.end1404

cond.false1357:                                   ; preds = %cond.end1316
  %957 = load i16, i16* %weightSpic, align 2
  %conv1358 = sext i16 %957 to i32
  %958 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %959 = load i16**, i16*** %ref1_pic, align 8
  %960 = load i16, i16* %sy, align 2
  %conv1359 = sext i16 %960 to i32
  %961 = load i16, i16* %sx0, align 2
  %conv1360 = sext i16 %961 to i32
  %962 = load i32, i32* %img_height, align 4
  %963 = load i32, i32* %img_width, align 4
  %call1361 = call zeroext i16 %958(i16** %959, i32 %conv1359, i32 %conv1360, i32 %962, i32 %963)
  %conv1362 = zext i16 %call1361 to i32
  %mul1363 = mul nsw i32 %conv1358, %conv1362
  %964 = load i16, i16* %weightRpic, align 2
  %conv1364 = sext i16 %964 to i32
  %965 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %966 = load i16**, i16*** %ref2_pic, align 8
  %967 = load i16, i16* %ry, align 2
  %conv1365 = sext i16 %967 to i32
  %968 = load i16, i16* %rx0, align 2
  %conv1366 = sext i16 %968 to i32
  %969 = load i32, i32* %img_height, align 4
  %970 = load i32, i32* %img_width, align 4
  %call1367 = call zeroext i16 %965(i16** %966, i32 %conv1365, i32 %conv1366, i32 %969, i32 %970)
  %conv1368 = zext i16 %call1367 to i32
  %mul1369 = mul nsw i32 %conv1364, %conv1368
  %add1370 = add nsw i32 %mul1363, %mul1369
  %971 = load i32, i32* @wp_luma_round, align 4
  %mul1371 = mul nsw i32 2, %971
  %add1372 = add nsw i32 %add1370, %mul1371
  %972 = load i32, i32* @luma_log_weight_denom, align 4
  %add1373 = add nsw i32 %972, 1
  %shr1374 = ashr i32 %add1372, %add1373
  %973 = load i16, i16* %offsetBi, align 2
  %conv1375 = sext i16 %973 to i32
  %add1376 = add nsw i32 %shr1374, %conv1375
  %974 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1377 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %974, i32 0, i32 155
  %975 = load i32, i32* %max_imgpel_value1377, align 4
  %cmp1378 = icmp sgt i32 %add1376, %975
  br i1 %cmp1378, label %cond.true1380, label %cond.false1382

cond.true1380:                                    ; preds = %cond.false1357
  %976 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1381 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %976, i32 0, i32 155
  %977 = load i32, i32* %max_imgpel_value1381, align 4
  br label %cond.end1402

cond.false1382:                                   ; preds = %cond.false1357
  %978 = load i16, i16* %weightSpic, align 2
  %conv1383 = sext i16 %978 to i32
  %979 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %980 = load i16**, i16*** %ref1_pic, align 8
  %981 = load i16, i16* %sy, align 2
  %conv1384 = sext i16 %981 to i32
  %982 = load i16, i16* %sx0, align 2
  %conv1385 = sext i16 %982 to i32
  %983 = load i32, i32* %img_height, align 4
  %984 = load i32, i32* %img_width, align 4
  %call1386 = call zeroext i16 %979(i16** %980, i32 %conv1384, i32 %conv1385, i32 %983, i32 %984)
  %conv1387 = zext i16 %call1386 to i32
  %mul1388 = mul nsw i32 %conv1383, %conv1387
  %985 = load i16, i16* %weightRpic, align 2
  %conv1389 = sext i16 %985 to i32
  %986 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %987 = load i16**, i16*** %ref2_pic, align 8
  %988 = load i16, i16* %ry, align 2
  %conv1390 = sext i16 %988 to i32
  %989 = load i16, i16* %rx0, align 2
  %conv1391 = sext i16 %989 to i32
  %990 = load i32, i32* %img_height, align 4
  %991 = load i32, i32* %img_width, align 4
  %call1392 = call zeroext i16 %986(i16** %987, i32 %conv1390, i32 %conv1391, i32 %990, i32 %991)
  %conv1393 = zext i16 %call1392 to i32
  %mul1394 = mul nsw i32 %conv1389, %conv1393
  %add1395 = add nsw i32 %mul1388, %mul1394
  %992 = load i32, i32* @wp_luma_round, align 4
  %mul1396 = mul nsw i32 2, %992
  %add1397 = add nsw i32 %add1395, %mul1396
  %993 = load i32, i32* @luma_log_weight_denom, align 4
  %add1398 = add nsw i32 %993, 1
  %shr1399 = ashr i32 %add1397, %add1398
  %994 = load i16, i16* %offsetBi, align 2
  %conv1400 = sext i16 %994 to i32
  %add1401 = add nsw i32 %shr1399, %conv1400
  br label %cond.end1402

cond.end1402:                                     ; preds = %cond.false1382, %cond.true1380
  %cond1403 = phi i32 [ %977, %cond.true1380 ], [ %add1401, %cond.false1382 ]
  br label %cond.end1404

cond.end1404:                                     ; preds = %cond.end1402, %cond.true1356
  %cond1405 = phi i32 [ 0, %cond.true1356 ], [ %cond1403, %cond.end1402 ]
  store i32 %cond1405, i32* %weightedpel, align 4
  %995 = load i16*, i16** %orig_line, align 8
  %996 = load i16, i16* %x0, align 2
  %idxprom1406 = sext i16 %996 to i64
  %arrayidx1407 = getelementptr inbounds i16, i16* %995, i64 %idxprom1406
  %997 = load i16, i16* %arrayidx1407, align 2
  %conv1408 = zext i16 %997 to i32
  %998 = load i32, i32* %weightedpel, align 4
  %sub1409 = sub nsw i32 %conv1408, %998
  %999 = load i32*, i32** %d, align 8
  %incdec.ptr1410 = getelementptr inbounds i32, i32* %999, i32 1
  store i32* %incdec.ptr1410, i32** %d, align 8
  store i32 %sub1409, i32* %999, align 4
  %1000 = load i16, i16* %weightSpic, align 2
  %conv1411 = sext i16 %1000 to i32
  %1001 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1002 = load i16**, i16*** %ref1_pic, align 8
  %1003 = load i16, i16* %sy, align 2
  %conv1412 = sext i16 %1003 to i32
  %1004 = load i16, i16* %sx0, align 2
  %conv1413 = sext i16 %1004 to i32
  %add1414 = add nsw i32 %conv1413, 4
  %1005 = load i32, i32* %img_height, align 4
  %1006 = load i32, i32* %img_width, align 4
  %call1415 = call zeroext i16 %1001(i16** %1002, i32 %conv1412, i32 %add1414, i32 %1005, i32 %1006)
  %conv1416 = zext i16 %call1415 to i32
  %mul1417 = mul nsw i32 %conv1411, %conv1416
  %1007 = load i16, i16* %weightRpic, align 2
  %conv1418 = sext i16 %1007 to i32
  %1008 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1009 = load i16**, i16*** %ref2_pic, align 8
  %1010 = load i16, i16* %ry, align 2
  %conv1419 = sext i16 %1010 to i32
  %1011 = load i16, i16* %rx0, align 2
  %conv1420 = sext i16 %1011 to i32
  %add1421 = add nsw i32 %conv1420, 4
  %1012 = load i32, i32* %img_height, align 4
  %1013 = load i32, i32* %img_width, align 4
  %call1422 = call zeroext i16 %1008(i16** %1009, i32 %conv1419, i32 %add1421, i32 %1012, i32 %1013)
  %conv1423 = zext i16 %call1422 to i32
  %mul1424 = mul nsw i32 %conv1418, %conv1423
  %add1425 = add nsw i32 %mul1417, %mul1424
  %1014 = load i32, i32* @wp_luma_round, align 4
  %mul1426 = mul nsw i32 2, %1014
  %add1427 = add nsw i32 %add1425, %mul1426
  %1015 = load i32, i32* @luma_log_weight_denom, align 4
  %add1428 = add nsw i32 %1015, 1
  %shr1429 = ashr i32 %add1427, %add1428
  %1016 = load i16, i16* %offsetBi, align 2
  %conv1430 = sext i16 %1016 to i32
  %add1431 = add nsw i32 %shr1429, %conv1430
  %cmp1432 = icmp slt i32 %add1431, 0
  br i1 %cmp1432, label %cond.true1434, label %cond.false1435

cond.true1434:                                    ; preds = %cond.end1404
  br label %cond.end1486

cond.false1435:                                   ; preds = %cond.end1404
  %1017 = load i16, i16* %weightSpic, align 2
  %conv1436 = sext i16 %1017 to i32
  %1018 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1019 = load i16**, i16*** %ref1_pic, align 8
  %1020 = load i16, i16* %sy, align 2
  %conv1437 = sext i16 %1020 to i32
  %1021 = load i16, i16* %sx0, align 2
  %conv1438 = sext i16 %1021 to i32
  %add1439 = add nsw i32 %conv1438, 4
  %1022 = load i32, i32* %img_height, align 4
  %1023 = load i32, i32* %img_width, align 4
  %call1440 = call zeroext i16 %1018(i16** %1019, i32 %conv1437, i32 %add1439, i32 %1022, i32 %1023)
  %conv1441 = zext i16 %call1440 to i32
  %mul1442 = mul nsw i32 %conv1436, %conv1441
  %1024 = load i16, i16* %weightRpic, align 2
  %conv1443 = sext i16 %1024 to i32
  %1025 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1026 = load i16**, i16*** %ref2_pic, align 8
  %1027 = load i16, i16* %ry, align 2
  %conv1444 = sext i16 %1027 to i32
  %1028 = load i16, i16* %rx0, align 2
  %conv1445 = sext i16 %1028 to i32
  %add1446 = add nsw i32 %conv1445, 4
  %1029 = load i32, i32* %img_height, align 4
  %1030 = load i32, i32* %img_width, align 4
  %call1447 = call zeroext i16 %1025(i16** %1026, i32 %conv1444, i32 %add1446, i32 %1029, i32 %1030)
  %conv1448 = zext i16 %call1447 to i32
  %mul1449 = mul nsw i32 %conv1443, %conv1448
  %add1450 = add nsw i32 %mul1442, %mul1449
  %1031 = load i32, i32* @wp_luma_round, align 4
  %mul1451 = mul nsw i32 2, %1031
  %add1452 = add nsw i32 %add1450, %mul1451
  %1032 = load i32, i32* @luma_log_weight_denom, align 4
  %add1453 = add nsw i32 %1032, 1
  %shr1454 = ashr i32 %add1452, %add1453
  %1033 = load i16, i16* %offsetBi, align 2
  %conv1455 = sext i16 %1033 to i32
  %add1456 = add nsw i32 %shr1454, %conv1455
  %1034 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1457 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1034, i32 0, i32 155
  %1035 = load i32, i32* %max_imgpel_value1457, align 4
  %cmp1458 = icmp sgt i32 %add1456, %1035
  br i1 %cmp1458, label %cond.true1460, label %cond.false1462

cond.true1460:                                    ; preds = %cond.false1435
  %1036 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1461 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1036, i32 0, i32 155
  %1037 = load i32, i32* %max_imgpel_value1461, align 4
  br label %cond.end1484

cond.false1462:                                   ; preds = %cond.false1435
  %1038 = load i16, i16* %weightSpic, align 2
  %conv1463 = sext i16 %1038 to i32
  %1039 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1040 = load i16**, i16*** %ref1_pic, align 8
  %1041 = load i16, i16* %sy, align 2
  %conv1464 = sext i16 %1041 to i32
  %1042 = load i16, i16* %sx0, align 2
  %conv1465 = sext i16 %1042 to i32
  %add1466 = add nsw i32 %conv1465, 4
  %1043 = load i32, i32* %img_height, align 4
  %1044 = load i32, i32* %img_width, align 4
  %call1467 = call zeroext i16 %1039(i16** %1040, i32 %conv1464, i32 %add1466, i32 %1043, i32 %1044)
  %conv1468 = zext i16 %call1467 to i32
  %mul1469 = mul nsw i32 %conv1463, %conv1468
  %1045 = load i16, i16* %weightRpic, align 2
  %conv1470 = sext i16 %1045 to i32
  %1046 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1047 = load i16**, i16*** %ref2_pic, align 8
  %1048 = load i16, i16* %ry, align 2
  %conv1471 = sext i16 %1048 to i32
  %1049 = load i16, i16* %rx0, align 2
  %conv1472 = sext i16 %1049 to i32
  %add1473 = add nsw i32 %conv1472, 4
  %1050 = load i32, i32* %img_height, align 4
  %1051 = load i32, i32* %img_width, align 4
  %call1474 = call zeroext i16 %1046(i16** %1047, i32 %conv1471, i32 %add1473, i32 %1050, i32 %1051)
  %conv1475 = zext i16 %call1474 to i32
  %mul1476 = mul nsw i32 %conv1470, %conv1475
  %add1477 = add nsw i32 %mul1469, %mul1476
  %1052 = load i32, i32* @wp_luma_round, align 4
  %mul1478 = mul nsw i32 2, %1052
  %add1479 = add nsw i32 %add1477, %mul1478
  %1053 = load i32, i32* @luma_log_weight_denom, align 4
  %add1480 = add nsw i32 %1053, 1
  %shr1481 = ashr i32 %add1479, %add1480
  %1054 = load i16, i16* %offsetBi, align 2
  %conv1482 = sext i16 %1054 to i32
  %add1483 = add nsw i32 %shr1481, %conv1482
  br label %cond.end1484

cond.end1484:                                     ; preds = %cond.false1462, %cond.true1460
  %cond1485 = phi i32 [ %1037, %cond.true1460 ], [ %add1483, %cond.false1462 ]
  br label %cond.end1486

cond.end1486:                                     ; preds = %cond.end1484, %cond.true1434
  %cond1487 = phi i32 [ 0, %cond.true1434 ], [ %cond1485, %cond.end1484 ]
  store i32 %cond1487, i32* %weightedpel, align 4
  %1055 = load i16*, i16** %orig_line, align 8
  %1056 = load i16, i16* %x0, align 2
  %conv1488 = sext i16 %1056 to i32
  %add1489 = add nsw i32 %conv1488, 1
  %idxprom1490 = sext i32 %add1489 to i64
  %arrayidx1491 = getelementptr inbounds i16, i16* %1055, i64 %idxprom1490
  %1057 = load i16, i16* %arrayidx1491, align 2
  %conv1492 = zext i16 %1057 to i32
  %1058 = load i32, i32* %weightedpel, align 4
  %sub1493 = sub nsw i32 %conv1492, %1058
  %1059 = load i32*, i32** %d, align 8
  %incdec.ptr1494 = getelementptr inbounds i32, i32* %1059, i32 1
  store i32* %incdec.ptr1494, i32** %d, align 8
  store i32 %sub1493, i32* %1059, align 4
  %1060 = load i16, i16* %weightSpic, align 2
  %conv1495 = sext i16 %1060 to i32
  %1061 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1062 = load i16**, i16*** %ref1_pic, align 8
  %1063 = load i16, i16* %sy, align 2
  %conv1496 = sext i16 %1063 to i32
  %1064 = load i16, i16* %sx0, align 2
  %conv1497 = sext i16 %1064 to i32
  %add1498 = add nsw i32 %conv1497, 8
  %1065 = load i32, i32* %img_height, align 4
  %1066 = load i32, i32* %img_width, align 4
  %call1499 = call zeroext i16 %1061(i16** %1062, i32 %conv1496, i32 %add1498, i32 %1065, i32 %1066)
  %conv1500 = zext i16 %call1499 to i32
  %mul1501 = mul nsw i32 %conv1495, %conv1500
  %1067 = load i16, i16* %weightRpic, align 2
  %conv1502 = sext i16 %1067 to i32
  %1068 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1069 = load i16**, i16*** %ref2_pic, align 8
  %1070 = load i16, i16* %ry, align 2
  %conv1503 = sext i16 %1070 to i32
  %1071 = load i16, i16* %rx0, align 2
  %conv1504 = sext i16 %1071 to i32
  %add1505 = add nsw i32 %conv1504, 8
  %1072 = load i32, i32* %img_height, align 4
  %1073 = load i32, i32* %img_width, align 4
  %call1506 = call zeroext i16 %1068(i16** %1069, i32 %conv1503, i32 %add1505, i32 %1072, i32 %1073)
  %conv1507 = zext i16 %call1506 to i32
  %mul1508 = mul nsw i32 %conv1502, %conv1507
  %add1509 = add nsw i32 %mul1501, %mul1508
  %1074 = load i32, i32* @wp_luma_round, align 4
  %mul1510 = mul nsw i32 2, %1074
  %add1511 = add nsw i32 %add1509, %mul1510
  %1075 = load i32, i32* @luma_log_weight_denom, align 4
  %add1512 = add nsw i32 %1075, 1
  %shr1513 = ashr i32 %add1511, %add1512
  %1076 = load i16, i16* %offsetBi, align 2
  %conv1514 = sext i16 %1076 to i32
  %add1515 = add nsw i32 %shr1513, %conv1514
  %cmp1516 = icmp slt i32 %add1515, 0
  br i1 %cmp1516, label %cond.true1518, label %cond.false1519

cond.true1518:                                    ; preds = %cond.end1486
  br label %cond.end1570

cond.false1519:                                   ; preds = %cond.end1486
  %1077 = load i16, i16* %weightSpic, align 2
  %conv1520 = sext i16 %1077 to i32
  %1078 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1079 = load i16**, i16*** %ref1_pic, align 8
  %1080 = load i16, i16* %sy, align 2
  %conv1521 = sext i16 %1080 to i32
  %1081 = load i16, i16* %sx0, align 2
  %conv1522 = sext i16 %1081 to i32
  %add1523 = add nsw i32 %conv1522, 8
  %1082 = load i32, i32* %img_height, align 4
  %1083 = load i32, i32* %img_width, align 4
  %call1524 = call zeroext i16 %1078(i16** %1079, i32 %conv1521, i32 %add1523, i32 %1082, i32 %1083)
  %conv1525 = zext i16 %call1524 to i32
  %mul1526 = mul nsw i32 %conv1520, %conv1525
  %1084 = load i16, i16* %weightRpic, align 2
  %conv1527 = sext i16 %1084 to i32
  %1085 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1086 = load i16**, i16*** %ref2_pic, align 8
  %1087 = load i16, i16* %ry, align 2
  %conv1528 = sext i16 %1087 to i32
  %1088 = load i16, i16* %rx0, align 2
  %conv1529 = sext i16 %1088 to i32
  %add1530 = add nsw i32 %conv1529, 8
  %1089 = load i32, i32* %img_height, align 4
  %1090 = load i32, i32* %img_width, align 4
  %call1531 = call zeroext i16 %1085(i16** %1086, i32 %conv1528, i32 %add1530, i32 %1089, i32 %1090)
  %conv1532 = zext i16 %call1531 to i32
  %mul1533 = mul nsw i32 %conv1527, %conv1532
  %add1534 = add nsw i32 %mul1526, %mul1533
  %1091 = load i32, i32* @wp_luma_round, align 4
  %mul1535 = mul nsw i32 2, %1091
  %add1536 = add nsw i32 %add1534, %mul1535
  %1092 = load i32, i32* @luma_log_weight_denom, align 4
  %add1537 = add nsw i32 %1092, 1
  %shr1538 = ashr i32 %add1536, %add1537
  %1093 = load i16, i16* %offsetBi, align 2
  %conv1539 = sext i16 %1093 to i32
  %add1540 = add nsw i32 %shr1538, %conv1539
  %1094 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1094, i32 0, i32 155
  %1095 = load i32, i32* %max_imgpel_value1541, align 4
  %cmp1542 = icmp sgt i32 %add1540, %1095
  br i1 %cmp1542, label %cond.true1544, label %cond.false1546

cond.true1544:                                    ; preds = %cond.false1519
  %1096 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1096, i32 0, i32 155
  %1097 = load i32, i32* %max_imgpel_value1545, align 4
  br label %cond.end1568

cond.false1546:                                   ; preds = %cond.false1519
  %1098 = load i16, i16* %weightSpic, align 2
  %conv1547 = sext i16 %1098 to i32
  %1099 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1100 = load i16**, i16*** %ref1_pic, align 8
  %1101 = load i16, i16* %sy, align 2
  %conv1548 = sext i16 %1101 to i32
  %1102 = load i16, i16* %sx0, align 2
  %conv1549 = sext i16 %1102 to i32
  %add1550 = add nsw i32 %conv1549, 8
  %1103 = load i32, i32* %img_height, align 4
  %1104 = load i32, i32* %img_width, align 4
  %call1551 = call zeroext i16 %1099(i16** %1100, i32 %conv1548, i32 %add1550, i32 %1103, i32 %1104)
  %conv1552 = zext i16 %call1551 to i32
  %mul1553 = mul nsw i32 %conv1547, %conv1552
  %1105 = load i16, i16* %weightRpic, align 2
  %conv1554 = sext i16 %1105 to i32
  %1106 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1107 = load i16**, i16*** %ref2_pic, align 8
  %1108 = load i16, i16* %ry, align 2
  %conv1555 = sext i16 %1108 to i32
  %1109 = load i16, i16* %rx0, align 2
  %conv1556 = sext i16 %1109 to i32
  %add1557 = add nsw i32 %conv1556, 8
  %1110 = load i32, i32* %img_height, align 4
  %1111 = load i32, i32* %img_width, align 4
  %call1558 = call zeroext i16 %1106(i16** %1107, i32 %conv1555, i32 %add1557, i32 %1110, i32 %1111)
  %conv1559 = zext i16 %call1558 to i32
  %mul1560 = mul nsw i32 %conv1554, %conv1559
  %add1561 = add nsw i32 %mul1553, %mul1560
  %1112 = load i32, i32* @wp_luma_round, align 4
  %mul1562 = mul nsw i32 2, %1112
  %add1563 = add nsw i32 %add1561, %mul1562
  %1113 = load i32, i32* @luma_log_weight_denom, align 4
  %add1564 = add nsw i32 %1113, 1
  %shr1565 = ashr i32 %add1563, %add1564
  %1114 = load i16, i16* %offsetBi, align 2
  %conv1566 = sext i16 %1114 to i32
  %add1567 = add nsw i32 %shr1565, %conv1566
  br label %cond.end1568

cond.end1568:                                     ; preds = %cond.false1546, %cond.true1544
  %cond1569 = phi i32 [ %1097, %cond.true1544 ], [ %add1567, %cond.false1546 ]
  br label %cond.end1570

cond.end1570:                                     ; preds = %cond.end1568, %cond.true1518
  %cond1571 = phi i32 [ 0, %cond.true1518 ], [ %cond1569, %cond.end1568 ]
  store i32 %cond1571, i32* %weightedpel, align 4
  %1115 = load i16*, i16** %orig_line, align 8
  %1116 = load i16, i16* %x0, align 2
  %conv1572 = sext i16 %1116 to i32
  %add1573 = add nsw i32 %conv1572, 2
  %idxprom1574 = sext i32 %add1573 to i64
  %arrayidx1575 = getelementptr inbounds i16, i16* %1115, i64 %idxprom1574
  %1117 = load i16, i16* %arrayidx1575, align 2
  %conv1576 = zext i16 %1117 to i32
  %1118 = load i32, i32* %weightedpel, align 4
  %sub1577 = sub nsw i32 %conv1576, %1118
  %1119 = load i32*, i32** %d, align 8
  %incdec.ptr1578 = getelementptr inbounds i32, i32* %1119, i32 1
  store i32* %incdec.ptr1578, i32** %d, align 8
  store i32 %sub1577, i32* %1119, align 4
  %1120 = load i16, i16* %weightSpic, align 2
  %conv1579 = sext i16 %1120 to i32
  %1121 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1122 = load i16**, i16*** %ref1_pic, align 8
  %1123 = load i16, i16* %sy, align 2
  %conv1580 = sext i16 %1123 to i32
  %1124 = load i16, i16* %sx0, align 2
  %conv1581 = sext i16 %1124 to i32
  %add1582 = add nsw i32 %conv1581, 12
  %1125 = load i32, i32* %img_height, align 4
  %1126 = load i32, i32* %img_width, align 4
  %call1583 = call zeroext i16 %1121(i16** %1122, i32 %conv1580, i32 %add1582, i32 %1125, i32 %1126)
  %conv1584 = zext i16 %call1583 to i32
  %mul1585 = mul nsw i32 %conv1579, %conv1584
  %1127 = load i16, i16* %weightRpic, align 2
  %conv1586 = sext i16 %1127 to i32
  %1128 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1129 = load i16**, i16*** %ref2_pic, align 8
  %1130 = load i16, i16* %ry, align 2
  %conv1587 = sext i16 %1130 to i32
  %1131 = load i16, i16* %rx0, align 2
  %conv1588 = sext i16 %1131 to i32
  %add1589 = add nsw i32 %conv1588, 12
  %1132 = load i32, i32* %img_height, align 4
  %1133 = load i32, i32* %img_width, align 4
  %call1590 = call zeroext i16 %1128(i16** %1129, i32 %conv1587, i32 %add1589, i32 %1132, i32 %1133)
  %conv1591 = zext i16 %call1590 to i32
  %mul1592 = mul nsw i32 %conv1586, %conv1591
  %add1593 = add nsw i32 %mul1585, %mul1592
  %1134 = load i32, i32* @wp_luma_round, align 4
  %mul1594 = mul nsw i32 2, %1134
  %add1595 = add nsw i32 %add1593, %mul1594
  %1135 = load i32, i32* @luma_log_weight_denom, align 4
  %add1596 = add nsw i32 %1135, 1
  %shr1597 = ashr i32 %add1595, %add1596
  %1136 = load i16, i16* %offsetBi, align 2
  %conv1598 = sext i16 %1136 to i32
  %add1599 = add nsw i32 %shr1597, %conv1598
  %cmp1600 = icmp slt i32 %add1599, 0
  br i1 %cmp1600, label %cond.true1602, label %cond.false1603

cond.true1602:                                    ; preds = %cond.end1570
  br label %cond.end1654

cond.false1603:                                   ; preds = %cond.end1570
  %1137 = load i16, i16* %weightSpic, align 2
  %conv1604 = sext i16 %1137 to i32
  %1138 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1139 = load i16**, i16*** %ref1_pic, align 8
  %1140 = load i16, i16* %sy, align 2
  %conv1605 = sext i16 %1140 to i32
  %1141 = load i16, i16* %sx0, align 2
  %conv1606 = sext i16 %1141 to i32
  %add1607 = add nsw i32 %conv1606, 12
  %1142 = load i32, i32* %img_height, align 4
  %1143 = load i32, i32* %img_width, align 4
  %call1608 = call zeroext i16 %1138(i16** %1139, i32 %conv1605, i32 %add1607, i32 %1142, i32 %1143)
  %conv1609 = zext i16 %call1608 to i32
  %mul1610 = mul nsw i32 %conv1604, %conv1609
  %1144 = load i16, i16* %weightRpic, align 2
  %conv1611 = sext i16 %1144 to i32
  %1145 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1146 = load i16**, i16*** %ref2_pic, align 8
  %1147 = load i16, i16* %ry, align 2
  %conv1612 = sext i16 %1147 to i32
  %1148 = load i16, i16* %rx0, align 2
  %conv1613 = sext i16 %1148 to i32
  %add1614 = add nsw i32 %conv1613, 12
  %1149 = load i32, i32* %img_height, align 4
  %1150 = load i32, i32* %img_width, align 4
  %call1615 = call zeroext i16 %1145(i16** %1146, i32 %conv1612, i32 %add1614, i32 %1149, i32 %1150)
  %conv1616 = zext i16 %call1615 to i32
  %mul1617 = mul nsw i32 %conv1611, %conv1616
  %add1618 = add nsw i32 %mul1610, %mul1617
  %1151 = load i32, i32* @wp_luma_round, align 4
  %mul1619 = mul nsw i32 2, %1151
  %add1620 = add nsw i32 %add1618, %mul1619
  %1152 = load i32, i32* @luma_log_weight_denom, align 4
  %add1621 = add nsw i32 %1152, 1
  %shr1622 = ashr i32 %add1620, %add1621
  %1153 = load i16, i16* %offsetBi, align 2
  %conv1623 = sext i16 %1153 to i32
  %add1624 = add nsw i32 %shr1622, %conv1623
  %1154 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1625 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1154, i32 0, i32 155
  %1155 = load i32, i32* %max_imgpel_value1625, align 4
  %cmp1626 = icmp sgt i32 %add1624, %1155
  br i1 %cmp1626, label %cond.true1628, label %cond.false1630

cond.true1628:                                    ; preds = %cond.false1603
  %1156 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value1629 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1156, i32 0, i32 155
  %1157 = load i32, i32* %max_imgpel_value1629, align 4
  br label %cond.end1652

cond.false1630:                                   ; preds = %cond.false1603
  %1158 = load i16, i16* %weightSpic, align 2
  %conv1631 = sext i16 %1158 to i32
  %1159 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1160 = load i16**, i16*** %ref1_pic, align 8
  %1161 = load i16, i16* %sy, align 2
  %conv1632 = sext i16 %1161 to i32
  %1162 = load i16, i16* %sx0, align 2
  %conv1633 = sext i16 %1162 to i32
  %add1634 = add nsw i32 %conv1633, 12
  %1163 = load i32, i32* %img_height, align 4
  %1164 = load i32, i32* %img_width, align 4
  %call1635 = call zeroext i16 %1159(i16** %1160, i32 %conv1632, i32 %add1634, i32 %1163, i32 %1164)
  %conv1636 = zext i16 %call1635 to i32
  %mul1637 = mul nsw i32 %conv1631, %conv1636
  %1165 = load i16, i16* %weightRpic, align 2
  %conv1638 = sext i16 %1165 to i32
  %1166 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1167 = load i16**, i16*** %ref2_pic, align 8
  %1168 = load i16, i16* %ry, align 2
  %conv1639 = sext i16 %1168 to i32
  %1169 = load i16, i16* %rx0, align 2
  %conv1640 = sext i16 %1169 to i32
  %add1641 = add nsw i32 %conv1640, 12
  %1170 = load i32, i32* %img_height, align 4
  %1171 = load i32, i32* %img_width, align 4
  %call1642 = call zeroext i16 %1166(i16** %1167, i32 %conv1639, i32 %add1641, i32 %1170, i32 %1171)
  %conv1643 = zext i16 %call1642 to i32
  %mul1644 = mul nsw i32 %conv1638, %conv1643
  %add1645 = add nsw i32 %mul1637, %mul1644
  %1172 = load i32, i32* @wp_luma_round, align 4
  %mul1646 = mul nsw i32 2, %1172
  %add1647 = add nsw i32 %add1645, %mul1646
  %1173 = load i32, i32* @luma_log_weight_denom, align 4
  %add1648 = add nsw i32 %1173, 1
  %shr1649 = ashr i32 %add1647, %add1648
  %1174 = load i16, i16* %offsetBi, align 2
  %conv1650 = sext i16 %1174 to i32
  %add1651 = add nsw i32 %shr1649, %conv1650
  br label %cond.end1652

cond.end1652:                                     ; preds = %cond.false1630, %cond.true1628
  %cond1653 = phi i32 [ %1157, %cond.true1628 ], [ %add1651, %cond.false1630 ]
  br label %cond.end1654

cond.end1654:                                     ; preds = %cond.end1652, %cond.true1602
  %cond1655 = phi i32 [ 0, %cond.true1602 ], [ %cond1653, %cond.end1652 ]
  store i32 %cond1655, i32* %weightedpel, align 4
  %1175 = load i16*, i16** %orig_line, align 8
  %1176 = load i16, i16* %x0, align 2
  %conv1656 = sext i16 %1176 to i32
  %add1657 = add nsw i32 %conv1656, 3
  %idxprom1658 = sext i32 %add1657 to i64
  %arrayidx1659 = getelementptr inbounds i16, i16* %1175, i64 %idxprom1658
  %1177 = load i16, i16* %arrayidx1659, align 2
  %conv1660 = zext i16 %1177 to i32
  %1178 = load i32, i32* %weightedpel, align 4
  %sub1661 = sub nsw i32 %conv1660, %1178
  %1179 = load i32*, i32** %d, align 8
  store i32 %sub1661, i32* %1179, align 4
  %1180 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1180, i32 0, i32 123
  %1181 = load i32, i32* %AllowTransform8x8, align 4
  %tobool1662 = icmp ne i32 %1181, 0
  br i1 %tobool1662, label %if.else1674, label %if.then1663

if.then1663:                                      ; preds = %cond.end1654
  %arraydecay1664 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %1182 = load i32, i32* %halfpelhadamard, align 4
  %call1665 = call i32 @SATD(i32* %arraydecay1664, i32 %1182)
  %1183 = load i16, i16* %mcost, align 2
  %conv1666 = sext i16 %1183 to i32
  %add1667 = add nsw i32 %conv1666, %call1665
  %conv1668 = trunc i32 %add1667 to i16
  store i16 %conv1668, i16* %mcost, align 2
  %conv1669 = sext i16 %conv1668 to i32
  %1184 = load i32, i32* %min_mcost.addr, align 4
  %cmp1670 = icmp sgt i32 %conv1669, %1184
  br i1 %cmp1670, label %if.then1672, label %if.end1673

if.then1672:                                      ; preds = %if.then1663
  store i16 1, i16* %abort_search, align 2
  br label %for.end1702

if.end1673:                                       ; preds = %if.then1663
  br label %if.end1697

if.else1674:                                      ; preds = %cond.end1654
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond1675

for.cond1675:                                     ; preds = %for.inc1694, %if.else1674
  %1185 = load i32, i32* %j, align 4
  %cmp1676 = icmp slt i32 %1185, 4
  br i1 %cmp1676, label %for.body1678, label %for.end1696

for.body1678:                                     ; preds = %for.cond1675
  store i32 0, i32* %i, align 4
  br label %for.cond1679

for.cond1679:                                     ; preds = %for.inc, %for.body1678
  %1186 = load i32, i32* %i, align 4
  %cmp1680 = icmp slt i32 %1186, 4
  br i1 %cmp1680, label %for.body1682, label %for.end

for.body1682:                                     ; preds = %for.cond1679
  %1187 = load i32, i32* %k, align 4
  %idxprom1683 = sext i32 %1187 to i64
  %arrayidx1684 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom1683
  %1188 = load i32, i32* %arrayidx1684, align 4
  %1189 = load i16, i16* %y0, align 2
  %conv1685 = sext i16 %1189 to i32
  %1190 = load i32, i32* %j, align 4
  %add1686 = add nsw i32 %conv1685, %1190
  %idxprom1687 = sext i32 %add1686 to i64
  %arrayidx1688 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 %idxprom1687
  %1191 = load i16, i16* %x0, align 2
  %conv1689 = sext i16 %1191 to i32
  %1192 = load i32, i32* %i, align 4
  %add1690 = add nsw i32 %conv1689, %1192
  %idxprom1691 = sext i32 %add1690 to i64
  %arrayidx1692 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx1688, i64 0, i64 %idxprom1691
  store i32 %1188, i32* %arrayidx1692, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body1682
  %1193 = load i32, i32* %i, align 4
  %inc = add nsw i32 %1193, 1
  store i32 %inc, i32* %i, align 4
  %1194 = load i32, i32* %k, align 4
  %inc1693 = add nsw i32 %1194, 1
  store i32 %inc1693, i32* %k, align 4
  br label %for.cond1679

for.end:                                          ; preds = %for.cond1679
  br label %for.inc1694

for.inc1694:                                      ; preds = %for.end
  %1195 = load i32, i32* %j, align 4
  %inc1695 = add nsw i32 %1195, 1
  store i32 %inc1695, i32* %j, align 4
  br label %for.cond1675

for.end1696:                                      ; preds = %for.cond1675
  br label %if.end1697

if.end1697:                                       ; preds = %for.end1696, %if.end1673
  br label %for.inc1698

for.inc1698:                                      ; preds = %if.end1697
  %1196 = load i16, i16* %x0, align 2
  %conv1699 = sext i16 %1196 to i32
  %add1700 = add nsw i32 %conv1699, 4
  %conv1701 = trunc i32 %add1700 to i16
  store i16 %conv1701, i16* %x0, align 2
  br label %for.cond304

for.end1702:                                      ; preds = %if.then1672, %for.cond304
  br label %if.end2087

if.else1703:                                      ; preds = %for.body289
  store i16 0, i16* %x0, align 2
  br label %for.cond1704

for.cond1704:                                     ; preds = %for.inc2082, %if.else1703
  %1197 = load i16, i16* %x0, align 2
  %conv1705 = sext i16 %1197 to i32
  %1198 = load i16, i16* %blocksize_x, align 2
  %conv1706 = sext i16 %1198 to i32
  %cmp1707 = icmp slt i32 %conv1705, %conv1706
  br i1 %cmp1707, label %for.body1709, label %for.end2086

for.body1709:                                     ; preds = %for.cond1704
  %1199 = load i32, i32* %pic_pix_x.addr, align 4
  %1200 = load i16, i16* %x0, align 2
  %conv1710 = sext i16 %1200 to i32
  %add1711 = add nsw i32 %1199, %conv1710
  %shl1712 = shl i32 %add1711, 2
  %1201 = load i16*, i16** %s_mv_x.addr, align 8
  %1202 = load i16, i16* %1201, align 2
  %conv1713 = sext i16 %1202 to i32
  %add1714 = add nsw i32 %shl1712, %conv1713
  %conv1715 = trunc i32 %add1714 to i16
  store i16 %conv1715, i16* %sx0, align 2
  %1203 = load i32, i32* %pic_pix_x.addr, align 4
  %1204 = load i16, i16* %x0, align 2
  %conv1716 = sext i16 %1204 to i32
  %add1717 = add nsw i32 %1203, %conv1716
  %shl1718 = shl i32 %add1717, 2
  %1205 = load i16, i16* %cand_mv_x, align 2
  %conv1719 = sext i16 %1205 to i32
  %add1720 = add nsw i32 %shl1718, %conv1719
  %conv1721 = trunc i32 %add1720 to i16
  store i16 %conv1721, i16* %rx0, align 2
  %arraydecay1722 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  store i32* %arraydecay1722, i32** %d, align 8
  %1206 = load i16, i16* %sy0, align 2
  store i16 %1206, i16* %sy, align 2
  %1207 = load i16, i16* %ry0, align 2
  store i16 %1207, i16* %ry, align 2
  %1208 = load i16**, i16*** %orig_pic.addr, align 8
  %1209 = load i16, i16* %y0, align 2
  %idxprom1723 = sext i16 %1209 to i64
  %arrayidx1724 = getelementptr inbounds i16*, i16** %1208, i64 %idxprom1723
  %1210 = load i16*, i16** %arrayidx1724, align 8
  store i16* %1210, i16** %orig_line, align 8
  %1211 = load i16*, i16** %orig_line, align 8
  %1212 = load i16, i16* %x0, align 2
  %idxprom1725 = sext i16 %1212 to i64
  %arrayidx1726 = getelementptr inbounds i16, i16* %1211, i64 %idxprom1725
  %1213 = load i16, i16* %arrayidx1726, align 2
  %conv1727 = zext i16 %1213 to i32
  %1214 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1215 = load i16**, i16*** %ref1_pic, align 8
  %1216 = load i16, i16* %sy, align 2
  %conv1728 = sext i16 %1216 to i32
  %1217 = load i16, i16* %sx0, align 2
  %conv1729 = sext i16 %1217 to i32
  %1218 = load i32, i32* %img_height, align 4
  %1219 = load i32, i32* %img_width, align 4
  %call1730 = call zeroext i16 %1214(i16** %1215, i32 %conv1728, i32 %conv1729, i32 %1218, i32 %1219)
  %conv1731 = zext i16 %call1730 to i32
  %1220 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1221 = load i16**, i16*** %ref2_pic, align 8
  %1222 = load i16, i16* %ry, align 2
  %conv1732 = sext i16 %1222 to i32
  %1223 = load i16, i16* %rx0, align 2
  %conv1733 = sext i16 %1223 to i32
  %1224 = load i32, i32* %img_height, align 4
  %1225 = load i32, i32* %img_width, align 4
  %call1734 = call zeroext i16 %1220(i16** %1221, i32 %conv1732, i32 %conv1733, i32 %1224, i32 %1225)
  %conv1735 = zext i16 %call1734 to i32
  %add1736 = add nsw i32 %conv1731, %conv1735
  %shr1737 = ashr i32 %add1736, 1
  %sub1738 = sub nsw i32 %conv1727, %shr1737
  %1226 = load i32*, i32** %d, align 8
  %incdec.ptr1739 = getelementptr inbounds i32, i32* %1226, i32 1
  store i32* %incdec.ptr1739, i32** %d, align 8
  store i32 %sub1738, i32* %1226, align 4
  %1227 = load i16*, i16** %orig_line, align 8
  %1228 = load i16, i16* %x0, align 2
  %conv1740 = sext i16 %1228 to i32
  %add1741 = add nsw i32 %conv1740, 1
  %idxprom1742 = sext i32 %add1741 to i64
  %arrayidx1743 = getelementptr inbounds i16, i16* %1227, i64 %idxprom1742
  %1229 = load i16, i16* %arrayidx1743, align 2
  %conv1744 = zext i16 %1229 to i32
  %1230 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1231 = load i16**, i16*** %ref1_pic, align 8
  %1232 = load i16, i16* %sy, align 2
  %conv1745 = sext i16 %1232 to i32
  %1233 = load i16, i16* %sx0, align 2
  %conv1746 = sext i16 %1233 to i32
  %add1747 = add nsw i32 %conv1746, 4
  %1234 = load i32, i32* %img_height, align 4
  %1235 = load i32, i32* %img_width, align 4
  %call1748 = call zeroext i16 %1230(i16** %1231, i32 %conv1745, i32 %add1747, i32 %1234, i32 %1235)
  %conv1749 = zext i16 %call1748 to i32
  %1236 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1237 = load i16**, i16*** %ref2_pic, align 8
  %1238 = load i16, i16* %ry, align 2
  %conv1750 = sext i16 %1238 to i32
  %1239 = load i16, i16* %rx0, align 2
  %conv1751 = sext i16 %1239 to i32
  %add1752 = add nsw i32 %conv1751, 4
  %1240 = load i32, i32* %img_height, align 4
  %1241 = load i32, i32* %img_width, align 4
  %call1753 = call zeroext i16 %1236(i16** %1237, i32 %conv1750, i32 %add1752, i32 %1240, i32 %1241)
  %conv1754 = zext i16 %call1753 to i32
  %add1755 = add nsw i32 %conv1749, %conv1754
  %shr1756 = ashr i32 %add1755, 1
  %sub1757 = sub nsw i32 %conv1744, %shr1756
  %1242 = load i32*, i32** %d, align 8
  %incdec.ptr1758 = getelementptr inbounds i32, i32* %1242, i32 1
  store i32* %incdec.ptr1758, i32** %d, align 8
  store i32 %sub1757, i32* %1242, align 4
  %1243 = load i16*, i16** %orig_line, align 8
  %1244 = load i16, i16* %x0, align 2
  %conv1759 = sext i16 %1244 to i32
  %add1760 = add nsw i32 %conv1759, 2
  %idxprom1761 = sext i32 %add1760 to i64
  %arrayidx1762 = getelementptr inbounds i16, i16* %1243, i64 %idxprom1761
  %1245 = load i16, i16* %arrayidx1762, align 2
  %conv1763 = zext i16 %1245 to i32
  %1246 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1247 = load i16**, i16*** %ref1_pic, align 8
  %1248 = load i16, i16* %sy, align 2
  %conv1764 = sext i16 %1248 to i32
  %1249 = load i16, i16* %sx0, align 2
  %conv1765 = sext i16 %1249 to i32
  %add1766 = add nsw i32 %conv1765, 8
  %1250 = load i32, i32* %img_height, align 4
  %1251 = load i32, i32* %img_width, align 4
  %call1767 = call zeroext i16 %1246(i16** %1247, i32 %conv1764, i32 %add1766, i32 %1250, i32 %1251)
  %conv1768 = zext i16 %call1767 to i32
  %1252 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1253 = load i16**, i16*** %ref2_pic, align 8
  %1254 = load i16, i16* %ry, align 2
  %conv1769 = sext i16 %1254 to i32
  %1255 = load i16, i16* %rx0, align 2
  %conv1770 = sext i16 %1255 to i32
  %add1771 = add nsw i32 %conv1770, 8
  %1256 = load i32, i32* %img_height, align 4
  %1257 = load i32, i32* %img_width, align 4
  %call1772 = call zeroext i16 %1252(i16** %1253, i32 %conv1769, i32 %add1771, i32 %1256, i32 %1257)
  %conv1773 = zext i16 %call1772 to i32
  %add1774 = add nsw i32 %conv1768, %conv1773
  %shr1775 = ashr i32 %add1774, 1
  %sub1776 = sub nsw i32 %conv1763, %shr1775
  %1258 = load i32*, i32** %d, align 8
  %incdec.ptr1777 = getelementptr inbounds i32, i32* %1258, i32 1
  store i32* %incdec.ptr1777, i32** %d, align 8
  store i32 %sub1776, i32* %1258, align 4
  %1259 = load i16*, i16** %orig_line, align 8
  %1260 = load i16, i16* %x0, align 2
  %conv1778 = sext i16 %1260 to i32
  %add1779 = add nsw i32 %conv1778, 3
  %idxprom1780 = sext i32 %add1779 to i64
  %arrayidx1781 = getelementptr inbounds i16, i16* %1259, i64 %idxprom1780
  %1261 = load i16, i16* %arrayidx1781, align 2
  %conv1782 = zext i16 %1261 to i32
  %1262 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1263 = load i16**, i16*** %ref1_pic, align 8
  %1264 = load i16, i16* %sy, align 2
  %conv1783 = sext i16 %1264 to i32
  %1265 = load i16, i16* %sx0, align 2
  %conv1784 = sext i16 %1265 to i32
  %add1785 = add nsw i32 %conv1784, 12
  %1266 = load i32, i32* %img_height, align 4
  %1267 = load i32, i32* %img_width, align 4
  %call1786 = call zeroext i16 %1262(i16** %1263, i32 %conv1783, i32 %add1785, i32 %1266, i32 %1267)
  %conv1787 = zext i16 %call1786 to i32
  %1268 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1269 = load i16**, i16*** %ref2_pic, align 8
  %1270 = load i16, i16* %ry, align 2
  %conv1788 = sext i16 %1270 to i32
  %1271 = load i16, i16* %rx0, align 2
  %conv1789 = sext i16 %1271 to i32
  %add1790 = add nsw i32 %conv1789, 12
  %1272 = load i32, i32* %img_height, align 4
  %1273 = load i32, i32* %img_width, align 4
  %call1791 = call zeroext i16 %1268(i16** %1269, i32 %conv1788, i32 %add1790, i32 %1272, i32 %1273)
  %conv1792 = zext i16 %call1791 to i32
  %add1793 = add nsw i32 %conv1787, %conv1792
  %shr1794 = ashr i32 %add1793, 1
  %sub1795 = sub nsw i32 %conv1782, %shr1794
  %1274 = load i32*, i32** %d, align 8
  %incdec.ptr1796 = getelementptr inbounds i32, i32* %1274, i32 1
  store i32* %incdec.ptr1796, i32** %d, align 8
  store i32 %sub1795, i32* %1274, align 4
  %1275 = load i16, i16* %sy0, align 2
  %conv1797 = sext i16 %1275 to i32
  %add1798 = add nsw i32 %conv1797, 4
  %conv1799 = trunc i32 %add1798 to i16
  store i16 %conv1799, i16* %sy, align 2
  %1276 = load i16, i16* %ry0, align 2
  %conv1800 = sext i16 %1276 to i32
  %add1801 = add nsw i32 %conv1800, 4
  %conv1802 = trunc i32 %add1801 to i16
  store i16 %conv1802, i16* %ry, align 2
  %1277 = load i16**, i16*** %orig_pic.addr, align 8
  %1278 = load i16, i16* %y0, align 2
  %conv1803 = sext i16 %1278 to i32
  %add1804 = add nsw i32 %conv1803, 1
  %idxprom1805 = sext i32 %add1804 to i64
  %arrayidx1806 = getelementptr inbounds i16*, i16** %1277, i64 %idxprom1805
  %1279 = load i16*, i16** %arrayidx1806, align 8
  store i16* %1279, i16** %orig_line, align 8
  %1280 = load i16*, i16** %orig_line, align 8
  %1281 = load i16, i16* %x0, align 2
  %idxprom1807 = sext i16 %1281 to i64
  %arrayidx1808 = getelementptr inbounds i16, i16* %1280, i64 %idxprom1807
  %1282 = load i16, i16* %arrayidx1808, align 2
  %conv1809 = zext i16 %1282 to i32
  %1283 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1284 = load i16**, i16*** %ref1_pic, align 8
  %1285 = load i16, i16* %sy, align 2
  %conv1810 = sext i16 %1285 to i32
  %1286 = load i16, i16* %sx0, align 2
  %conv1811 = sext i16 %1286 to i32
  %1287 = load i32, i32* %img_height, align 4
  %1288 = load i32, i32* %img_width, align 4
  %call1812 = call zeroext i16 %1283(i16** %1284, i32 %conv1810, i32 %conv1811, i32 %1287, i32 %1288)
  %conv1813 = zext i16 %call1812 to i32
  %1289 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1290 = load i16**, i16*** %ref2_pic, align 8
  %1291 = load i16, i16* %ry, align 2
  %conv1814 = sext i16 %1291 to i32
  %1292 = load i16, i16* %rx0, align 2
  %conv1815 = sext i16 %1292 to i32
  %1293 = load i32, i32* %img_height, align 4
  %1294 = load i32, i32* %img_width, align 4
  %call1816 = call zeroext i16 %1289(i16** %1290, i32 %conv1814, i32 %conv1815, i32 %1293, i32 %1294)
  %conv1817 = zext i16 %call1816 to i32
  %add1818 = add nsw i32 %conv1813, %conv1817
  %shr1819 = ashr i32 %add1818, 2
  %sub1820 = sub nsw i32 %conv1809, %shr1819
  %1295 = load i32*, i32** %d, align 8
  %incdec.ptr1821 = getelementptr inbounds i32, i32* %1295, i32 1
  store i32* %incdec.ptr1821, i32** %d, align 8
  store i32 %sub1820, i32* %1295, align 4
  %1296 = load i16*, i16** %orig_line, align 8
  %1297 = load i16, i16* %x0, align 2
  %conv1822 = sext i16 %1297 to i32
  %add1823 = add nsw i32 %conv1822, 1
  %idxprom1824 = sext i32 %add1823 to i64
  %arrayidx1825 = getelementptr inbounds i16, i16* %1296, i64 %idxprom1824
  %1298 = load i16, i16* %arrayidx1825, align 2
  %conv1826 = zext i16 %1298 to i32
  %1299 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1300 = load i16**, i16*** %ref1_pic, align 8
  %1301 = load i16, i16* %sy, align 2
  %conv1827 = sext i16 %1301 to i32
  %1302 = load i16, i16* %sx0, align 2
  %conv1828 = sext i16 %1302 to i32
  %add1829 = add nsw i32 %conv1828, 4
  %1303 = load i32, i32* %img_height, align 4
  %1304 = load i32, i32* %img_width, align 4
  %call1830 = call zeroext i16 %1299(i16** %1300, i32 %conv1827, i32 %add1829, i32 %1303, i32 %1304)
  %conv1831 = zext i16 %call1830 to i32
  %1305 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1306 = load i16**, i16*** %ref2_pic, align 8
  %1307 = load i16, i16* %ry, align 2
  %conv1832 = sext i16 %1307 to i32
  %1308 = load i16, i16* %rx0, align 2
  %conv1833 = sext i16 %1308 to i32
  %add1834 = add nsw i32 %conv1833, 4
  %1309 = load i32, i32* %img_height, align 4
  %1310 = load i32, i32* %img_width, align 4
  %call1835 = call zeroext i16 %1305(i16** %1306, i32 %conv1832, i32 %add1834, i32 %1309, i32 %1310)
  %conv1836 = zext i16 %call1835 to i32
  %add1837 = add nsw i32 %conv1831, %conv1836
  %shr1838 = ashr i32 %add1837, 2
  %sub1839 = sub nsw i32 %conv1826, %shr1838
  %1311 = load i32*, i32** %d, align 8
  %incdec.ptr1840 = getelementptr inbounds i32, i32* %1311, i32 1
  store i32* %incdec.ptr1840, i32** %d, align 8
  store i32 %sub1839, i32* %1311, align 4
  %1312 = load i16*, i16** %orig_line, align 8
  %1313 = load i16, i16* %x0, align 2
  %conv1841 = sext i16 %1313 to i32
  %add1842 = add nsw i32 %conv1841, 2
  %idxprom1843 = sext i32 %add1842 to i64
  %arrayidx1844 = getelementptr inbounds i16, i16* %1312, i64 %idxprom1843
  %1314 = load i16, i16* %arrayidx1844, align 2
  %conv1845 = zext i16 %1314 to i32
  %1315 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1316 = load i16**, i16*** %ref1_pic, align 8
  %1317 = load i16, i16* %sy, align 2
  %conv1846 = sext i16 %1317 to i32
  %1318 = load i16, i16* %sx0, align 2
  %conv1847 = sext i16 %1318 to i32
  %add1848 = add nsw i32 %conv1847, 8
  %1319 = load i32, i32* %img_height, align 4
  %1320 = load i32, i32* %img_width, align 4
  %call1849 = call zeroext i16 %1315(i16** %1316, i32 %conv1846, i32 %add1848, i32 %1319, i32 %1320)
  %conv1850 = zext i16 %call1849 to i32
  %1321 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1322 = load i16**, i16*** %ref2_pic, align 8
  %1323 = load i16, i16* %ry, align 2
  %conv1851 = sext i16 %1323 to i32
  %1324 = load i16, i16* %rx0, align 2
  %conv1852 = sext i16 %1324 to i32
  %add1853 = add nsw i32 %conv1852, 8
  %1325 = load i32, i32* %img_height, align 4
  %1326 = load i32, i32* %img_width, align 4
  %call1854 = call zeroext i16 %1321(i16** %1322, i32 %conv1851, i32 %add1853, i32 %1325, i32 %1326)
  %conv1855 = zext i16 %call1854 to i32
  %add1856 = add nsw i32 %conv1850, %conv1855
  %shr1857 = ashr i32 %add1856, 2
  %sub1858 = sub nsw i32 %conv1845, %shr1857
  %1327 = load i32*, i32** %d, align 8
  %incdec.ptr1859 = getelementptr inbounds i32, i32* %1327, i32 1
  store i32* %incdec.ptr1859, i32** %d, align 8
  store i32 %sub1858, i32* %1327, align 4
  %1328 = load i16*, i16** %orig_line, align 8
  %1329 = load i16, i16* %x0, align 2
  %conv1860 = sext i16 %1329 to i32
  %add1861 = add nsw i32 %conv1860, 3
  %idxprom1862 = sext i32 %add1861 to i64
  %arrayidx1863 = getelementptr inbounds i16, i16* %1328, i64 %idxprom1862
  %1330 = load i16, i16* %arrayidx1863, align 2
  %conv1864 = zext i16 %1330 to i32
  %1331 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1332 = load i16**, i16*** %ref1_pic, align 8
  %1333 = load i16, i16* %sy, align 2
  %conv1865 = sext i16 %1333 to i32
  %1334 = load i16, i16* %sx0, align 2
  %conv1866 = sext i16 %1334 to i32
  %add1867 = add nsw i32 %conv1866, 12
  %1335 = load i32, i32* %img_height, align 4
  %1336 = load i32, i32* %img_width, align 4
  %call1868 = call zeroext i16 %1331(i16** %1332, i32 %conv1865, i32 %add1867, i32 %1335, i32 %1336)
  %conv1869 = zext i16 %call1868 to i32
  %1337 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1338 = load i16**, i16*** %ref2_pic, align 8
  %1339 = load i16, i16* %ry, align 2
  %conv1870 = sext i16 %1339 to i32
  %1340 = load i16, i16* %rx0, align 2
  %conv1871 = sext i16 %1340 to i32
  %add1872 = add nsw i32 %conv1871, 12
  %1341 = load i32, i32* %img_height, align 4
  %1342 = load i32, i32* %img_width, align 4
  %call1873 = call zeroext i16 %1337(i16** %1338, i32 %conv1870, i32 %add1872, i32 %1341, i32 %1342)
  %conv1874 = zext i16 %call1873 to i32
  %add1875 = add nsw i32 %conv1869, %conv1874
  %shr1876 = ashr i32 %add1875, 2
  %sub1877 = sub nsw i32 %conv1864, %shr1876
  %1343 = load i32*, i32** %d, align 8
  %incdec.ptr1878 = getelementptr inbounds i32, i32* %1343, i32 1
  store i32* %incdec.ptr1878, i32** %d, align 8
  store i32 %sub1877, i32* %1343, align 4
  %1344 = load i16, i16* %sy0, align 2
  %conv1879 = sext i16 %1344 to i32
  %add1880 = add nsw i32 %conv1879, 8
  %conv1881 = trunc i32 %add1880 to i16
  store i16 %conv1881, i16* %sy, align 2
  %1345 = load i16, i16* %ry0, align 2
  %conv1882 = sext i16 %1345 to i32
  %add1883 = add nsw i32 %conv1882, 8
  %conv1884 = trunc i32 %add1883 to i16
  store i16 %conv1884, i16* %ry, align 2
  %1346 = load i16**, i16*** %orig_pic.addr, align 8
  %1347 = load i16, i16* %y0, align 2
  %conv1885 = sext i16 %1347 to i32
  %add1886 = add nsw i32 %conv1885, 2
  %idxprom1887 = sext i32 %add1886 to i64
  %arrayidx1888 = getelementptr inbounds i16*, i16** %1346, i64 %idxprom1887
  %1348 = load i16*, i16** %arrayidx1888, align 8
  store i16* %1348, i16** %orig_line, align 8
  %1349 = load i16*, i16** %orig_line, align 8
  %1350 = load i16, i16* %x0, align 2
  %idxprom1889 = sext i16 %1350 to i64
  %arrayidx1890 = getelementptr inbounds i16, i16* %1349, i64 %idxprom1889
  %1351 = load i16, i16* %arrayidx1890, align 2
  %conv1891 = zext i16 %1351 to i32
  %1352 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1353 = load i16**, i16*** %ref1_pic, align 8
  %1354 = load i16, i16* %sy, align 2
  %conv1892 = sext i16 %1354 to i32
  %1355 = load i16, i16* %sx0, align 2
  %conv1893 = sext i16 %1355 to i32
  %1356 = load i32, i32* %img_height, align 4
  %1357 = load i32, i32* %img_width, align 4
  %call1894 = call zeroext i16 %1352(i16** %1353, i32 %conv1892, i32 %conv1893, i32 %1356, i32 %1357)
  %conv1895 = zext i16 %call1894 to i32
  %1358 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1359 = load i16**, i16*** %ref2_pic, align 8
  %1360 = load i16, i16* %ry, align 2
  %conv1896 = sext i16 %1360 to i32
  %1361 = load i16, i16* %rx0, align 2
  %conv1897 = sext i16 %1361 to i32
  %1362 = load i32, i32* %img_height, align 4
  %1363 = load i32, i32* %img_width, align 4
  %call1898 = call zeroext i16 %1358(i16** %1359, i32 %conv1896, i32 %conv1897, i32 %1362, i32 %1363)
  %conv1899 = zext i16 %call1898 to i32
  %add1900 = add nsw i32 %conv1895, %conv1899
  %shr1901 = ashr i32 %add1900, 1
  %sub1902 = sub nsw i32 %conv1891, %shr1901
  %1364 = load i32*, i32** %d, align 8
  %incdec.ptr1903 = getelementptr inbounds i32, i32* %1364, i32 1
  store i32* %incdec.ptr1903, i32** %d, align 8
  store i32 %sub1902, i32* %1364, align 4
  %1365 = load i16*, i16** %orig_line, align 8
  %1366 = load i16, i16* %x0, align 2
  %conv1904 = sext i16 %1366 to i32
  %add1905 = add nsw i32 %conv1904, 1
  %idxprom1906 = sext i32 %add1905 to i64
  %arrayidx1907 = getelementptr inbounds i16, i16* %1365, i64 %idxprom1906
  %1367 = load i16, i16* %arrayidx1907, align 2
  %conv1908 = zext i16 %1367 to i32
  %1368 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1369 = load i16**, i16*** %ref1_pic, align 8
  %1370 = load i16, i16* %sy, align 2
  %conv1909 = sext i16 %1370 to i32
  %1371 = load i16, i16* %sx0, align 2
  %conv1910 = sext i16 %1371 to i32
  %add1911 = add nsw i32 %conv1910, 4
  %1372 = load i32, i32* %img_height, align 4
  %1373 = load i32, i32* %img_width, align 4
  %call1912 = call zeroext i16 %1368(i16** %1369, i32 %conv1909, i32 %add1911, i32 %1372, i32 %1373)
  %conv1913 = zext i16 %call1912 to i32
  %1374 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1375 = load i16**, i16*** %ref2_pic, align 8
  %1376 = load i16, i16* %ry, align 2
  %conv1914 = sext i16 %1376 to i32
  %1377 = load i16, i16* %rx0, align 2
  %conv1915 = sext i16 %1377 to i32
  %add1916 = add nsw i32 %conv1915, 4
  %1378 = load i32, i32* %img_height, align 4
  %1379 = load i32, i32* %img_width, align 4
  %call1917 = call zeroext i16 %1374(i16** %1375, i32 %conv1914, i32 %add1916, i32 %1378, i32 %1379)
  %conv1918 = zext i16 %call1917 to i32
  %add1919 = add nsw i32 %conv1913, %conv1918
  %shr1920 = ashr i32 %add1919, 1
  %sub1921 = sub nsw i32 %conv1908, %shr1920
  %1380 = load i32*, i32** %d, align 8
  %incdec.ptr1922 = getelementptr inbounds i32, i32* %1380, i32 1
  store i32* %incdec.ptr1922, i32** %d, align 8
  store i32 %sub1921, i32* %1380, align 4
  %1381 = load i16*, i16** %orig_line, align 8
  %1382 = load i16, i16* %x0, align 2
  %conv1923 = sext i16 %1382 to i32
  %add1924 = add nsw i32 %conv1923, 2
  %idxprom1925 = sext i32 %add1924 to i64
  %arrayidx1926 = getelementptr inbounds i16, i16* %1381, i64 %idxprom1925
  %1383 = load i16, i16* %arrayidx1926, align 2
  %conv1927 = zext i16 %1383 to i32
  %1384 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1385 = load i16**, i16*** %ref1_pic, align 8
  %1386 = load i16, i16* %sy, align 2
  %conv1928 = sext i16 %1386 to i32
  %1387 = load i16, i16* %sx0, align 2
  %conv1929 = sext i16 %1387 to i32
  %add1930 = add nsw i32 %conv1929, 8
  %1388 = load i32, i32* %img_height, align 4
  %1389 = load i32, i32* %img_width, align 4
  %call1931 = call zeroext i16 %1384(i16** %1385, i32 %conv1928, i32 %add1930, i32 %1388, i32 %1389)
  %conv1932 = zext i16 %call1931 to i32
  %1390 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1391 = load i16**, i16*** %ref2_pic, align 8
  %1392 = load i16, i16* %ry, align 2
  %conv1933 = sext i16 %1392 to i32
  %1393 = load i16, i16* %rx0, align 2
  %conv1934 = sext i16 %1393 to i32
  %add1935 = add nsw i32 %conv1934, 8
  %1394 = load i32, i32* %img_height, align 4
  %1395 = load i32, i32* %img_width, align 4
  %call1936 = call zeroext i16 %1390(i16** %1391, i32 %conv1933, i32 %add1935, i32 %1394, i32 %1395)
  %conv1937 = zext i16 %call1936 to i32
  %add1938 = add nsw i32 %conv1932, %conv1937
  %shr1939 = ashr i32 %add1938, 1
  %sub1940 = sub nsw i32 %conv1927, %shr1939
  %1396 = load i32*, i32** %d, align 8
  %incdec.ptr1941 = getelementptr inbounds i32, i32* %1396, i32 1
  store i32* %incdec.ptr1941, i32** %d, align 8
  store i32 %sub1940, i32* %1396, align 4
  %1397 = load i16*, i16** %orig_line, align 8
  %1398 = load i16, i16* %x0, align 2
  %conv1942 = sext i16 %1398 to i32
  %add1943 = add nsw i32 %conv1942, 3
  %idxprom1944 = sext i32 %add1943 to i64
  %arrayidx1945 = getelementptr inbounds i16, i16* %1397, i64 %idxprom1944
  %1399 = load i16, i16* %arrayidx1945, align 2
  %conv1946 = zext i16 %1399 to i32
  %1400 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1401 = load i16**, i16*** %ref1_pic, align 8
  %1402 = load i16, i16* %sy, align 2
  %conv1947 = sext i16 %1402 to i32
  %1403 = load i16, i16* %sx0, align 2
  %conv1948 = sext i16 %1403 to i32
  %add1949 = add nsw i32 %conv1948, 12
  %1404 = load i32, i32* %img_height, align 4
  %1405 = load i32, i32* %img_width, align 4
  %call1950 = call zeroext i16 %1400(i16** %1401, i32 %conv1947, i32 %add1949, i32 %1404, i32 %1405)
  %conv1951 = zext i16 %call1950 to i32
  %1406 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1407 = load i16**, i16*** %ref2_pic, align 8
  %1408 = load i16, i16* %ry, align 2
  %conv1952 = sext i16 %1408 to i32
  %1409 = load i16, i16* %rx0, align 2
  %conv1953 = sext i16 %1409 to i32
  %add1954 = add nsw i32 %conv1953, 12
  %1410 = load i32, i32* %img_height, align 4
  %1411 = load i32, i32* %img_width, align 4
  %call1955 = call zeroext i16 %1406(i16** %1407, i32 %conv1952, i32 %add1954, i32 %1410, i32 %1411)
  %conv1956 = zext i16 %call1955 to i32
  %add1957 = add nsw i32 %conv1951, %conv1956
  %shr1958 = ashr i32 %add1957, 1
  %sub1959 = sub nsw i32 %conv1946, %shr1958
  %1412 = load i32*, i32** %d, align 8
  %incdec.ptr1960 = getelementptr inbounds i32, i32* %1412, i32 1
  store i32* %incdec.ptr1960, i32** %d, align 8
  store i32 %sub1959, i32* %1412, align 4
  %1413 = load i16, i16* %sy0, align 2
  %conv1961 = sext i16 %1413 to i32
  %add1962 = add nsw i32 %conv1961, 12
  %conv1963 = trunc i32 %add1962 to i16
  store i16 %conv1963, i16* %sy, align 2
  %1414 = load i16, i16* %ry0, align 2
  %conv1964 = sext i16 %1414 to i32
  %add1965 = add nsw i32 %conv1964, 12
  %conv1966 = trunc i32 %add1965 to i16
  store i16 %conv1966, i16* %ry, align 2
  %1415 = load i16**, i16*** %orig_pic.addr, align 8
  %1416 = load i16, i16* %y0, align 2
  %conv1967 = sext i16 %1416 to i32
  %add1968 = add nsw i32 %conv1967, 3
  %idxprom1969 = sext i32 %add1968 to i64
  %arrayidx1970 = getelementptr inbounds i16*, i16** %1415, i64 %idxprom1969
  %1417 = load i16*, i16** %arrayidx1970, align 8
  store i16* %1417, i16** %orig_line, align 8
  %1418 = load i16*, i16** %orig_line, align 8
  %1419 = load i16, i16* %x0, align 2
  %idxprom1971 = sext i16 %1419 to i64
  %arrayidx1972 = getelementptr inbounds i16, i16* %1418, i64 %idxprom1971
  %1420 = load i16, i16* %arrayidx1972, align 2
  %conv1973 = zext i16 %1420 to i32
  %1421 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1422 = load i16**, i16*** %ref1_pic, align 8
  %1423 = load i16, i16* %sy, align 2
  %conv1974 = sext i16 %1423 to i32
  %1424 = load i16, i16* %sx0, align 2
  %conv1975 = sext i16 %1424 to i32
  %1425 = load i32, i32* %img_height, align 4
  %1426 = load i32, i32* %img_width, align 4
  %call1976 = call zeroext i16 %1421(i16** %1422, i32 %conv1974, i32 %conv1975, i32 %1425, i32 %1426)
  %conv1977 = zext i16 %call1976 to i32
  %1427 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1428 = load i16**, i16*** %ref2_pic, align 8
  %1429 = load i16, i16* %ry, align 2
  %conv1978 = sext i16 %1429 to i32
  %1430 = load i16, i16* %rx0, align 2
  %conv1979 = sext i16 %1430 to i32
  %1431 = load i32, i32* %img_height, align 4
  %1432 = load i32, i32* %img_width, align 4
  %call1980 = call zeroext i16 %1427(i16** %1428, i32 %conv1978, i32 %conv1979, i32 %1431, i32 %1432)
  %conv1981 = zext i16 %call1980 to i32
  %add1982 = add nsw i32 %conv1977, %conv1981
  %shr1983 = ashr i32 %add1982, 1
  %sub1984 = sub nsw i32 %conv1973, %shr1983
  %1433 = load i32*, i32** %d, align 8
  %incdec.ptr1985 = getelementptr inbounds i32, i32* %1433, i32 1
  store i32* %incdec.ptr1985, i32** %d, align 8
  store i32 %sub1984, i32* %1433, align 4
  %1434 = load i16*, i16** %orig_line, align 8
  %1435 = load i16, i16* %x0, align 2
  %conv1986 = sext i16 %1435 to i32
  %add1987 = add nsw i32 %conv1986, 1
  %idxprom1988 = sext i32 %add1987 to i64
  %arrayidx1989 = getelementptr inbounds i16, i16* %1434, i64 %idxprom1988
  %1436 = load i16, i16* %arrayidx1989, align 2
  %conv1990 = zext i16 %1436 to i32
  %1437 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1438 = load i16**, i16*** %ref1_pic, align 8
  %1439 = load i16, i16* %sy, align 2
  %conv1991 = sext i16 %1439 to i32
  %1440 = load i16, i16* %sx0, align 2
  %conv1992 = sext i16 %1440 to i32
  %add1993 = add nsw i32 %conv1992, 4
  %1441 = load i32, i32* %img_height, align 4
  %1442 = load i32, i32* %img_width, align 4
  %call1994 = call zeroext i16 %1437(i16** %1438, i32 %conv1991, i32 %add1993, i32 %1441, i32 %1442)
  %conv1995 = zext i16 %call1994 to i32
  %1443 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1444 = load i16**, i16*** %ref2_pic, align 8
  %1445 = load i16, i16* %ry, align 2
  %conv1996 = sext i16 %1445 to i32
  %1446 = load i16, i16* %rx0, align 2
  %conv1997 = sext i16 %1446 to i32
  %add1998 = add nsw i32 %conv1997, 4
  %1447 = load i32, i32* %img_height, align 4
  %1448 = load i32, i32* %img_width, align 4
  %call1999 = call zeroext i16 %1443(i16** %1444, i32 %conv1996, i32 %add1998, i32 %1447, i32 %1448)
  %conv2000 = zext i16 %call1999 to i32
  %add2001 = add nsw i32 %conv1995, %conv2000
  %shr2002 = ashr i32 %add2001, 1
  %sub2003 = sub nsw i32 %conv1990, %shr2002
  %1449 = load i32*, i32** %d, align 8
  %incdec.ptr2004 = getelementptr inbounds i32, i32* %1449, i32 1
  store i32* %incdec.ptr2004, i32** %d, align 8
  store i32 %sub2003, i32* %1449, align 4
  %1450 = load i16*, i16** %orig_line, align 8
  %1451 = load i16, i16* %x0, align 2
  %conv2005 = sext i16 %1451 to i32
  %add2006 = add nsw i32 %conv2005, 2
  %idxprom2007 = sext i32 %add2006 to i64
  %arrayidx2008 = getelementptr inbounds i16, i16* %1450, i64 %idxprom2007
  %1452 = load i16, i16* %arrayidx2008, align 2
  %conv2009 = zext i16 %1452 to i32
  %1453 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1454 = load i16**, i16*** %ref1_pic, align 8
  %1455 = load i16, i16* %sy, align 2
  %conv2010 = sext i16 %1455 to i32
  %1456 = load i16, i16* %sx0, align 2
  %conv2011 = sext i16 %1456 to i32
  %add2012 = add nsw i32 %conv2011, 8
  %1457 = load i32, i32* %img_height, align 4
  %1458 = load i32, i32* %img_width, align 4
  %call2013 = call zeroext i16 %1453(i16** %1454, i32 %conv2010, i32 %add2012, i32 %1457, i32 %1458)
  %conv2014 = zext i16 %call2013 to i32
  %1459 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1460 = load i16**, i16*** %ref2_pic, align 8
  %1461 = load i16, i16* %ry, align 2
  %conv2015 = sext i16 %1461 to i32
  %1462 = load i16, i16* %rx0, align 2
  %conv2016 = sext i16 %1462 to i32
  %add2017 = add nsw i32 %conv2016, 8
  %1463 = load i32, i32* %img_height, align 4
  %1464 = load i32, i32* %img_width, align 4
  %call2018 = call zeroext i16 %1459(i16** %1460, i32 %conv2015, i32 %add2017, i32 %1463, i32 %1464)
  %conv2019 = zext i16 %call2018 to i32
  %add2020 = add nsw i32 %conv2014, %conv2019
  %shr2021 = ashr i32 %add2020, 1
  %sub2022 = sub nsw i32 %conv2009, %shr2021
  %1465 = load i32*, i32** %d, align 8
  %incdec.ptr2023 = getelementptr inbounds i32, i32* %1465, i32 1
  store i32* %incdec.ptr2023, i32** %d, align 8
  store i32 %sub2022, i32* %1465, align 4
  %1466 = load i16*, i16** %orig_line, align 8
  %1467 = load i16, i16* %x0, align 2
  %conv2024 = sext i16 %1467 to i32
  %add2025 = add nsw i32 %conv2024, 3
  %idxprom2026 = sext i32 %add2025 to i64
  %arrayidx2027 = getelementptr inbounds i16, i16* %1466, i64 %idxprom2026
  %1468 = load i16, i16* %arrayidx2027, align 2
  %conv2028 = zext i16 %1468 to i32
  %1469 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1470 = load i16**, i16*** %ref1_pic, align 8
  %1471 = load i16, i16* %sy, align 2
  %conv2029 = sext i16 %1471 to i32
  %1472 = load i16, i16* %sx0, align 2
  %conv2030 = sext i16 %1472 to i32
  %add2031 = add nsw i32 %conv2030, 12
  %1473 = load i32, i32* %img_height, align 4
  %1474 = load i32, i32* %img_width, align 4
  %call2032 = call zeroext i16 %1469(i16** %1470, i32 %conv2029, i32 %add2031, i32 %1473, i32 %1474)
  %conv2033 = zext i16 %call2032 to i32
  %1475 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1476 = load i16**, i16*** %ref2_pic, align 8
  %1477 = load i16, i16* %ry, align 2
  %conv2034 = sext i16 %1477 to i32
  %1478 = load i16, i16* %rx0, align 2
  %conv2035 = sext i16 %1478 to i32
  %add2036 = add nsw i32 %conv2035, 12
  %1479 = load i32, i32* %img_height, align 4
  %1480 = load i32, i32* %img_width, align 4
  %call2037 = call zeroext i16 %1475(i16** %1476, i32 %conv2034, i32 %add2036, i32 %1479, i32 %1480)
  %conv2038 = zext i16 %call2037 to i32
  %add2039 = add nsw i32 %conv2033, %conv2038
  %shr2040 = ashr i32 %add2039, 1
  %sub2041 = sub nsw i32 %conv2028, %shr2040
  %1481 = load i32*, i32** %d, align 8
  store i32 %sub2041, i32* %1481, align 4
  %1482 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x82042 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1482, i32 0, i32 123
  %1483 = load i32, i32* %AllowTransform8x82042, align 4
  %tobool2043 = icmp ne i32 %1483, 0
  br i1 %tobool2043, label %if.else2055, label %if.then2044

if.then2044:                                      ; preds = %for.body1709
  %arraydecay2045 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %1484 = load i32, i32* %halfpelhadamard, align 4
  %call2046 = call i32 @SATD(i32* %arraydecay2045, i32 %1484)
  %1485 = load i16, i16* %mcost, align 2
  %conv2047 = sext i16 %1485 to i32
  %add2048 = add nsw i32 %conv2047, %call2046
  %conv2049 = trunc i32 %add2048 to i16
  store i16 %conv2049, i16* %mcost, align 2
  %conv2050 = sext i16 %conv2049 to i32
  %1486 = load i32, i32* %min_mcost.addr, align 4
  %cmp2051 = icmp sgt i32 %conv2050, %1486
  br i1 %cmp2051, label %if.then2053, label %if.end2054

if.then2053:                                      ; preds = %if.then2044
  store i16 1, i16* %abort_search, align 2
  br label %for.end2086

if.end2054:                                       ; preds = %if.then2044
  br label %if.end2081

if.else2055:                                      ; preds = %for.body1709
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond2056

for.cond2056:                                     ; preds = %for.inc2078, %if.else2055
  %1487 = load i32, i32* %j, align 4
  %cmp2057 = icmp slt i32 %1487, 4
  br i1 %cmp2057, label %for.body2059, label %for.end2080

for.body2059:                                     ; preds = %for.cond2056
  store i32 0, i32* %i, align 4
  br label %for.cond2060

for.cond2060:                                     ; preds = %for.inc2074, %for.body2059
  %1488 = load i32, i32* %i, align 4
  %cmp2061 = icmp slt i32 %1488, 4
  br i1 %cmp2061, label %for.body2063, label %for.end2077

for.body2063:                                     ; preds = %for.cond2060
  %1489 = load i32, i32* %k, align 4
  %idxprom2064 = sext i32 %1489 to i64
  %arrayidx2065 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom2064
  %1490 = load i32, i32* %arrayidx2065, align 4
  %1491 = load i16, i16* %y0, align 2
  %conv2066 = sext i16 %1491 to i32
  %1492 = load i32, i32* %j, align 4
  %add2067 = add nsw i32 %conv2066, %1492
  %idxprom2068 = sext i32 %add2067 to i64
  %arrayidx2069 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 %idxprom2068
  %1493 = load i16, i16* %x0, align 2
  %conv2070 = sext i16 %1493 to i32
  %1494 = load i32, i32* %i, align 4
  %add2071 = add nsw i32 %conv2070, %1494
  %idxprom2072 = sext i32 %add2071 to i64
  %arrayidx2073 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx2069, i64 0, i64 %idxprom2072
  store i32 %1490, i32* %arrayidx2073, align 4
  br label %for.inc2074

for.inc2074:                                      ; preds = %for.body2063
  %1495 = load i32, i32* %i, align 4
  %inc2075 = add nsw i32 %1495, 1
  store i32 %inc2075, i32* %i, align 4
  %1496 = load i32, i32* %k, align 4
  %inc2076 = add nsw i32 %1496, 1
  store i32 %inc2076, i32* %k, align 4
  br label %for.cond2060

for.end2077:                                      ; preds = %for.cond2060
  br label %for.inc2078

for.inc2078:                                      ; preds = %for.end2077
  %1497 = load i32, i32* %j, align 4
  %inc2079 = add nsw i32 %1497, 1
  store i32 %inc2079, i32* %j, align 4
  br label %for.cond2056

for.end2080:                                      ; preds = %for.cond2056
  br label %if.end2081

if.end2081:                                       ; preds = %for.end2080, %if.end2054
  br label %for.inc2082

for.inc2082:                                      ; preds = %if.end2081
  %1498 = load i16, i16* %x0, align 2
  %conv2083 = sext i16 %1498 to i32
  %add2084 = add nsw i32 %conv2083, 4
  %conv2085 = trunc i32 %add2084 to i16
  store i16 %conv2085, i16* %x0, align 2
  br label %for.cond1704

for.end2086:                                      ; preds = %if.then2053, %for.cond1704
  br label %if.end2087

if.end2087:                                       ; preds = %for.end2086, %for.end1702
  br label %for.inc2088

for.inc2088:                                      ; preds = %if.end2087
  %1499 = load i16, i16* %y0, align 2
  %conv2089 = sext i16 %1499 to i32
  %add2090 = add nsw i32 %conv2089, 4
  %conv2091 = trunc i32 %add2090 to i16
  store i16 %conv2091, i16* %y0, align 2
  br label %for.cond283

for.end2092:                                      ; preds = %land.end
  %1500 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x82093 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1500, i32 0, i32 123
  %1501 = load i32, i32* %AllowTransform8x82093, align 4
  %tobool2094 = icmp ne i32 %1501, 0
  br i1 %tobool2094, label %if.then2095, label %if.end2101

if.then2095:                                      ; preds = %for.end2092
  %arraydecay2096 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 0
  %1502 = load i32, i32* %halfpelhadamard, align 4
  %1503 = load i32, i32* %blocktype.addr, align 4
  %call2097 = call i32 @find_SATD([16 x i32]* %arraydecay2096, i32 %1502, i32 %1503)
  %1504 = load i16, i16* %mcost, align 2
  %conv2098 = sext i16 %1504 to i32
  %add2099 = add nsw i32 %conv2098, %call2097
  %conv2100 = trunc i32 %add2099 to i16
  store i16 %conv2100, i16* %mcost, align 2
  br label %if.end2101

if.end2101:                                       ; preds = %if.then2095, %for.end2092
  %1505 = load i16, i16* %mcost, align 2
  %conv2102 = sext i16 %1505 to i32
  %1506 = load i32, i32* %min_mcost.addr, align 4
  %cmp2103 = icmp slt i32 %conv2102, %1506
  br i1 %cmp2103, label %if.then2105, label %if.end2107

if.then2105:                                      ; preds = %if.end2101
  %1507 = load i16, i16* %mcost, align 2
  %conv2106 = sext i16 %1507 to i32
  store i32 %conv2106, i32* %min_mcost.addr, align 4
  %1508 = load i16, i16* %pos, align 2
  store i16 %1508, i16* %best_pos, align 2
  br label %if.end2107

if.end2107:                                       ; preds = %if.then2105, %if.end2101
  br label %for.inc2108

for.inc2108:                                      ; preds = %if.end2107
  %1509 = load i16, i16* %pos, align 2
  %inc2109 = add i16 %1509, 1
  store i16 %inc2109, i16* %pos, align 2
  br label %for.cond

for.end2110:                                      ; preds = %for.cond
  %1510 = load i16, i16* %best_pos, align 2
  %tobool2111 = icmp ne i16 %1510, 0
  br i1 %tobool2111, label %if.then2112, label %if.end2125

if.then2112:                                      ; preds = %for.end2110
  %1511 = load i32*, i32** @spiral_search_x, align 8
  %1512 = load i16, i16* %best_pos, align 2
  %idxprom2113 = sext i16 %1512 to i64
  %arrayidx2114 = getelementptr inbounds i32, i32* %1511, i64 %idxprom2113
  %1513 = load i32, i32* %arrayidx2114, align 4
  %shl2115 = shl i32 %1513, 1
  %1514 = load i16*, i16** %mv_x.addr, align 8
  %1515 = load i16, i16* %1514, align 2
  %conv2116 = sext i16 %1515 to i32
  %add2117 = add nsw i32 %conv2116, %shl2115
  %conv2118 = trunc i32 %add2117 to i16
  store i16 %conv2118, i16* %1514, align 2
  %1516 = load i32*, i32** @spiral_search_y, align 8
  %1517 = load i16, i16* %best_pos, align 2
  %idxprom2119 = sext i16 %1517 to i64
  %arrayidx2120 = getelementptr inbounds i32, i32* %1516, i64 %idxprom2119
  %1518 = load i32, i32* %arrayidx2120, align 4
  %shl2121 = shl i32 %1518, 1
  %1519 = load i16*, i16** %mv_y.addr, align 8
  %1520 = load i16, i16* %1519, align 2
  %conv2122 = sext i16 %1520 to i32
  %add2123 = add nsw i32 %conv2122, %shl2121
  %conv2124 = trunc i32 %add2123 to i16
  store i16 %conv2124, i16* %1519, align 2
  br label %if.end2125

if.end2125:                                       ; preds = %if.then2112, %for.end2110
  %1521 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel2126 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1521, i32 0, i32 7
  %1522 = load i32, i32* %hadamardqpel2126, align 4
  %tobool2127 = icmp ne i32 %1522, 0
  br i1 %tobool2127, label %if.then2128, label %if.end2129

if.then2128:                                      ; preds = %if.end2125
  store i32 2147483647, i32* %min_mcost.addr, align 4
  br label %if.end2129

if.end2129:                                       ; preds = %if.then2128, %if.end2125
  %1523 = load i16, i16* %pic4_pix_x, align 2
  %conv2130 = sext i16 %1523 to i32
  %1524 = load i16*, i16** %mv_x.addr, align 8
  %1525 = load i16, i16* %1524, align 2
  %conv2131 = sext i16 %1525 to i32
  %add2132 = add nsw i32 %conv2130, %conv2131
  %cmp2133 = icmp sgt i32 %add2132, 1
  br i1 %cmp2133, label %land.lhs.true2135, label %if.else2158

land.lhs.true2135:                                ; preds = %if.end2129
  %1526 = load i16, i16* %pic4_pix_x, align 2
  %conv2136 = sext i16 %1526 to i32
  %1527 = load i16*, i16** %mv_x.addr, align 8
  %1528 = load i16, i16* %1527, align 2
  %conv2137 = sext i16 %1528 to i32
  %add2138 = add nsw i32 %conv2136, %conv2137
  %1529 = load i16, i16* %max_pos_x4, align 2
  %conv2139 = sext i16 %1529 to i32
  %sub2140 = sub nsw i32 %conv2139, 1
  %cmp2141 = icmp slt i32 %add2138, %sub2140
  br i1 %cmp2141, label %land.lhs.true2143, label %if.else2158

land.lhs.true2143:                                ; preds = %land.lhs.true2135
  %1530 = load i16, i16* %pic4_pix_y, align 2
  %conv2144 = sext i16 %1530 to i32
  %1531 = load i16*, i16** %mv_y.addr, align 8
  %1532 = load i16, i16* %1531, align 2
  %conv2145 = sext i16 %1532 to i32
  %add2146 = add nsw i32 %conv2144, %conv2145
  %cmp2147 = icmp sgt i32 %add2146, 1
  br i1 %cmp2147, label %land.lhs.true2149, label %if.else2158

land.lhs.true2149:                                ; preds = %land.lhs.true2143
  %1533 = load i16, i16* %pic4_pix_y, align 2
  %conv2150 = sext i16 %1533 to i32
  %1534 = load i16*, i16** %mv_y.addr, align 8
  %1535 = load i16, i16* %1534, align 2
  %conv2151 = sext i16 %1535 to i32
  %add2152 = add nsw i32 %conv2150, %conv2151
  %1536 = load i16, i16* %max_pos_y4, align 2
  %conv2153 = sext i16 %1536 to i32
  %sub2154 = sub nsw i32 %conv2153, 1
  %cmp2155 = icmp slt i32 %add2152, %sub2154
  br i1 %cmp2155, label %if.then2157, label %if.else2158

if.then2157:                                      ; preds = %land.lhs.true2149
  store i16 (i16**, i32, i32, i32, i32)* @FastPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end2159

if.else2158:                                      ; preds = %land.lhs.true2149, %land.lhs.true2143, %land.lhs.true2135, %if.end2129
  store i16 (i16**, i32, i32, i32, i32)* @UMVPelY_14, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  br label %if.end2159

if.end2159:                                       ; preds = %if.else2158, %if.then2157
  store i16 0, i16* %best_pos, align 2
  %1537 = load i32, i32* %qpelstart, align 4
  %conv2160 = trunc i32 %1537 to i16
  store i16 %conv2160, i16* %pos, align 2
  br label %for.cond2161

for.cond2161:                                     ; preds = %for.inc4033, %if.end2159
  %1538 = load i16, i16* %pos, align 2
  %conv2162 = sext i16 %1538 to i32
  %1539 = load i32, i32* %search_pos4.addr, align 4
  %cmp2163 = icmp slt i32 %conv2162, %1539
  br i1 %cmp2163, label %for.body2165, label %for.end4035

for.body2165:                                     ; preds = %for.cond2161
  %1540 = load i16*, i16** %mv_x.addr, align 8
  %1541 = load i16, i16* %1540, align 2
  %conv2166 = sext i16 %1541 to i32
  %1542 = load i32*, i32** @spiral_search_x, align 8
  %1543 = load i16, i16* %pos, align 2
  %idxprom2167 = sext i16 %1543 to i64
  %arrayidx2168 = getelementptr inbounds i32, i32* %1542, i64 %idxprom2167
  %1544 = load i32, i32* %arrayidx2168, align 4
  %add2169 = add nsw i32 %conv2166, %1544
  %conv2170 = trunc i32 %add2169 to i16
  store i16 %conv2170, i16* %cand_mv_x, align 2
  %1545 = load i16*, i16** %mv_y.addr, align 8
  %1546 = load i16, i16* %1545, align 2
  %conv2171 = sext i16 %1546 to i32
  %1547 = load i32*, i32** @spiral_search_y, align 8
  %1548 = load i16, i16* %pos, align 2
  %idxprom2172 = sext i16 %1548 to i64
  %arrayidx2173 = getelementptr inbounds i32, i32* %1547, i64 %idxprom2172
  %1549 = load i32, i32* %arrayidx2173, align 4
  %add2174 = add nsw i32 %conv2171, %1549
  %conv2175 = trunc i32 %add2174 to i16
  store i16 %conv2175, i16* %cand_mv_y, align 2
  %1550 = load i32, i32* %lambda_factor, align 4
  %1551 = load i32*, i32** @mvbits, align 8
  %1552 = load i16, i16* %cand_mv_x, align 2
  %conv2176 = sext i16 %1552 to i32
  %1553 = load i16, i16* %mv_shift, align 2
  %conv2177 = sext i16 %1553 to i32
  %shl2178 = shl i32 %conv2176, %conv2177
  %1554 = load i16, i16* %pred_mv_x.addr, align 2
  %conv2179 = sext i16 %1554 to i32
  %sub2180 = sub nsw i32 %shl2178, %conv2179
  %idxprom2181 = sext i32 %sub2180 to i64
  %arrayidx2182 = getelementptr inbounds i32, i32* %1551, i64 %idxprom2181
  %1555 = load i32, i32* %arrayidx2182, align 4
  %1556 = load i32*, i32** @mvbits, align 8
  %1557 = load i16, i16* %cand_mv_y, align 2
  %conv2183 = sext i16 %1557 to i32
  %1558 = load i16, i16* %mv_shift, align 2
  %conv2184 = sext i16 %1558 to i32
  %shl2185 = shl i32 %conv2183, %conv2184
  %1559 = load i16, i16* %pred_mv_y.addr, align 2
  %conv2186 = sext i16 %1559 to i32
  %sub2187 = sub nsw i32 %shl2185, %conv2186
  %idxprom2188 = sext i32 %sub2187 to i64
  %arrayidx2189 = getelementptr inbounds i32, i32* %1556, i64 %idxprom2188
  %1560 = load i32, i32* %arrayidx2189, align 4
  %add2190 = add nsw i32 %1555, %1560
  %mul2191 = mul nsw i32 %1550, %add2190
  %shr2192 = ashr i32 %mul2191, 16
  %conv2193 = trunc i32 %shr2192 to i16
  store i16 %conv2193, i16* %mcost, align 2
  store i16 0, i16* %y0, align 2
  store i16 0, i16* %abort_search, align 2
  br label %for.cond2194

for.cond2194:                                     ; preds = %for.inc4012, %for.body2165
  %1561 = load i16, i16* %y0, align 2
  %conv2195 = sext i16 %1561 to i32
  %1562 = load i16, i16* %blocksize_y, align 2
  %conv2196 = sext i16 %1562 to i32
  %cmp2197 = icmp slt i32 %conv2195, %conv2196
  br i1 %cmp2197, label %land.rhs2199, label %land.end2202

land.rhs2199:                                     ; preds = %for.cond2194
  %1563 = load i16, i16* %abort_search, align 2
  %tobool2200 = icmp ne i16 %1563, 0
  %lnot2201 = xor i1 %tobool2200, true
  br label %land.end2202

land.end2202:                                     ; preds = %land.rhs2199, %for.cond2194
  %1564 = phi i1 [ false, %for.cond2194 ], [ %lnot2201, %land.rhs2199 ]
  br i1 %1564, label %for.body2203, label %for.end4016

for.body2203:                                     ; preds = %land.end2202
  %1565 = load i32, i32* %pic_pix_y.addr, align 4
  %1566 = load i16, i16* %y0, align 2
  %conv2204 = sext i16 %1566 to i32
  %add2205 = add nsw i32 %1565, %conv2204
  %shl2206 = shl i32 %add2205, 2
  %1567 = load i16*, i16** %s_mv_y.addr, align 8
  %1568 = load i16, i16* %1567, align 2
  %conv2207 = sext i16 %1568 to i32
  %add2208 = add nsw i32 %shl2206, %conv2207
  %conv2209 = trunc i32 %add2208 to i16
  store i16 %conv2209, i16* %sy0, align 2
  %1569 = load i32, i32* %pic_pix_y.addr, align 4
  %1570 = load i16, i16* %y0, align 2
  %conv2210 = sext i16 %1570 to i32
  %add2211 = add nsw i32 %1569, %conv2210
  %shl2212 = shl i32 %add2211, 2
  %1571 = load i16, i16* %cand_mv_y, align 2
  %conv2213 = sext i16 %1571 to i32
  %add2214 = add nsw i32 %shl2212, %conv2213
  %conv2215 = trunc i32 %add2214 to i16
  store i16 %conv2215, i16* %ry0, align 2
  %1572 = load i16, i16* %apply_weights, align 2
  %tobool2216 = icmp ne i16 %1572, 0
  br i1 %tobool2216, label %if.then2217, label %if.else3626

if.then2217:                                      ; preds = %for.body2203
  store i16 0, i16* %x0, align 2
  br label %for.cond2218

for.cond2218:                                     ; preds = %for.inc3621, %if.then2217
  %1573 = load i16, i16* %x0, align 2
  %conv2219 = sext i16 %1573 to i32
  %1574 = load i16, i16* %blocksize_x, align 2
  %conv2220 = sext i16 %1574 to i32
  %cmp2221 = icmp slt i32 %conv2219, %conv2220
  br i1 %cmp2221, label %for.body2223, label %for.end3625

for.body2223:                                     ; preds = %for.cond2218
  %1575 = load i16, i16* %sy0, align 2
  store i16 %1575, i16* %sy, align 2
  %1576 = load i32, i32* %pic_pix_x.addr, align 4
  %1577 = load i16, i16* %x0, align 2
  %conv2224 = sext i16 %1577 to i32
  %add2225 = add nsw i32 %1576, %conv2224
  %shl2226 = shl i32 %add2225, 2
  %1578 = load i16*, i16** %s_mv_x.addr, align 8
  %1579 = load i16, i16* %1578, align 2
  %conv2227 = sext i16 %1579 to i32
  %add2228 = add nsw i32 %shl2226, %conv2227
  %conv2229 = trunc i32 %add2228 to i16
  store i16 %conv2229, i16* %sx0, align 2
  %1580 = load i32, i32* %pic_pix_x.addr, align 4
  %1581 = load i16, i16* %x0, align 2
  %conv2230 = sext i16 %1581 to i32
  %add2231 = add nsw i32 %1580, %conv2230
  %shl2232 = shl i32 %add2231, 2
  %1582 = load i16, i16* %cand_mv_x, align 2
  %conv2233 = sext i16 %1582 to i32
  %add2234 = add nsw i32 %shl2232, %conv2233
  %conv2235 = trunc i32 %add2234 to i16
  store i16 %conv2235, i16* %rx0, align 2
  %arraydecay2236 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  store i32* %arraydecay2236, i32** %d, align 8
  %1583 = load i16, i16* %sy0, align 2
  store i16 %1583, i16* %sy, align 2
  %1584 = load i16**, i16*** %orig_pic.addr, align 8
  %1585 = load i16, i16* %y0, align 2
  %idxprom2237 = sext i16 %1585 to i64
  %arrayidx2238 = getelementptr inbounds i16*, i16** %1584, i64 %idxprom2237
  %1586 = load i16*, i16** %arrayidx2238, align 8
  store i16* %1586, i16** %orig_line, align 8
  %1587 = load i16, i16* %ry0, align 2
  store i16 %1587, i16* %ry, align 2
  %1588 = load i16, i16* %weightSpic, align 2
  %conv2239 = sext i16 %1588 to i32
  %1589 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1590 = load i16**, i16*** %ref1_pic, align 8
  %1591 = load i16, i16* %sy, align 2
  %conv2240 = sext i16 %1591 to i32
  %1592 = load i16, i16* %sx0, align 2
  %conv2241 = sext i16 %1592 to i32
  %1593 = load i32, i32* %img_height, align 4
  %1594 = load i32, i32* %img_width, align 4
  %call2242 = call zeroext i16 %1589(i16** %1590, i32 %conv2240, i32 %conv2241, i32 %1593, i32 %1594)
  %conv2243 = zext i16 %call2242 to i32
  %mul2244 = mul nsw i32 %conv2239, %conv2243
  %1595 = load i16, i16* %weightRpic, align 2
  %conv2245 = sext i16 %1595 to i32
  %1596 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1597 = load i16**, i16*** %ref2_pic, align 8
  %1598 = load i16, i16* %ry, align 2
  %conv2246 = sext i16 %1598 to i32
  %1599 = load i16, i16* %rx0, align 2
  %conv2247 = sext i16 %1599 to i32
  %1600 = load i32, i32* %img_height, align 4
  %1601 = load i32, i32* %img_width, align 4
  %call2248 = call zeroext i16 %1596(i16** %1597, i32 %conv2246, i32 %conv2247, i32 %1600, i32 %1601)
  %conv2249 = zext i16 %call2248 to i32
  %mul2250 = mul nsw i32 %conv2245, %conv2249
  %add2251 = add nsw i32 %mul2244, %mul2250
  %1602 = load i32, i32* @wp_luma_round, align 4
  %mul2252 = mul nsw i32 2, %1602
  %add2253 = add nsw i32 %add2251, %mul2252
  %1603 = load i32, i32* @luma_log_weight_denom, align 4
  %add2254 = add nsw i32 %1603, 1
  %shr2255 = ashr i32 %add2253, %add2254
  %1604 = load i16, i16* %offsetBi, align 2
  %conv2256 = sext i16 %1604 to i32
  %add2257 = add nsw i32 %shr2255, %conv2256
  %cmp2258 = icmp slt i32 %add2257, 0
  br i1 %cmp2258, label %cond.true2260, label %cond.false2261

cond.true2260:                                    ; preds = %for.body2223
  br label %cond.end2308

cond.false2261:                                   ; preds = %for.body2223
  %1605 = load i16, i16* %weightSpic, align 2
  %conv2262 = sext i16 %1605 to i32
  %1606 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1607 = load i16**, i16*** %ref1_pic, align 8
  %1608 = load i16, i16* %sy, align 2
  %conv2263 = sext i16 %1608 to i32
  %1609 = load i16, i16* %sx0, align 2
  %conv2264 = sext i16 %1609 to i32
  %1610 = load i32, i32* %img_height, align 4
  %1611 = load i32, i32* %img_width, align 4
  %call2265 = call zeroext i16 %1606(i16** %1607, i32 %conv2263, i32 %conv2264, i32 %1610, i32 %1611)
  %conv2266 = zext i16 %call2265 to i32
  %mul2267 = mul nsw i32 %conv2262, %conv2266
  %1612 = load i16, i16* %weightRpic, align 2
  %conv2268 = sext i16 %1612 to i32
  %1613 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1614 = load i16**, i16*** %ref2_pic, align 8
  %1615 = load i16, i16* %ry, align 2
  %conv2269 = sext i16 %1615 to i32
  %1616 = load i16, i16* %rx0, align 2
  %conv2270 = sext i16 %1616 to i32
  %1617 = load i32, i32* %img_height, align 4
  %1618 = load i32, i32* %img_width, align 4
  %call2271 = call zeroext i16 %1613(i16** %1614, i32 %conv2269, i32 %conv2270, i32 %1617, i32 %1618)
  %conv2272 = zext i16 %call2271 to i32
  %mul2273 = mul nsw i32 %conv2268, %conv2272
  %add2274 = add nsw i32 %mul2267, %mul2273
  %1619 = load i32, i32* @wp_luma_round, align 4
  %mul2275 = mul nsw i32 2, %1619
  %add2276 = add nsw i32 %add2274, %mul2275
  %1620 = load i32, i32* @luma_log_weight_denom, align 4
  %add2277 = add nsw i32 %1620, 1
  %shr2278 = ashr i32 %add2276, %add2277
  %1621 = load i16, i16* %offsetBi, align 2
  %conv2279 = sext i16 %1621 to i32
  %add2280 = add nsw i32 %shr2278, %conv2279
  %1622 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2281 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1622, i32 0, i32 155
  %1623 = load i32, i32* %max_imgpel_value2281, align 4
  %cmp2282 = icmp sgt i32 %add2280, %1623
  br i1 %cmp2282, label %cond.true2284, label %cond.false2286

cond.true2284:                                    ; preds = %cond.false2261
  %1624 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2285 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1624, i32 0, i32 155
  %1625 = load i32, i32* %max_imgpel_value2285, align 4
  br label %cond.end2306

cond.false2286:                                   ; preds = %cond.false2261
  %1626 = load i16, i16* %weightSpic, align 2
  %conv2287 = sext i16 %1626 to i32
  %1627 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1628 = load i16**, i16*** %ref1_pic, align 8
  %1629 = load i16, i16* %sy, align 2
  %conv2288 = sext i16 %1629 to i32
  %1630 = load i16, i16* %sx0, align 2
  %conv2289 = sext i16 %1630 to i32
  %1631 = load i32, i32* %img_height, align 4
  %1632 = load i32, i32* %img_width, align 4
  %call2290 = call zeroext i16 %1627(i16** %1628, i32 %conv2288, i32 %conv2289, i32 %1631, i32 %1632)
  %conv2291 = zext i16 %call2290 to i32
  %mul2292 = mul nsw i32 %conv2287, %conv2291
  %1633 = load i16, i16* %weightRpic, align 2
  %conv2293 = sext i16 %1633 to i32
  %1634 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1635 = load i16**, i16*** %ref2_pic, align 8
  %1636 = load i16, i16* %ry, align 2
  %conv2294 = sext i16 %1636 to i32
  %1637 = load i16, i16* %rx0, align 2
  %conv2295 = sext i16 %1637 to i32
  %1638 = load i32, i32* %img_height, align 4
  %1639 = load i32, i32* %img_width, align 4
  %call2296 = call zeroext i16 %1634(i16** %1635, i32 %conv2294, i32 %conv2295, i32 %1638, i32 %1639)
  %conv2297 = zext i16 %call2296 to i32
  %mul2298 = mul nsw i32 %conv2293, %conv2297
  %add2299 = add nsw i32 %mul2292, %mul2298
  %1640 = load i32, i32* @wp_luma_round, align 4
  %mul2300 = mul nsw i32 2, %1640
  %add2301 = add nsw i32 %add2299, %mul2300
  %1641 = load i32, i32* @luma_log_weight_denom, align 4
  %add2302 = add nsw i32 %1641, 1
  %shr2303 = ashr i32 %add2301, %add2302
  %1642 = load i16, i16* %offsetBi, align 2
  %conv2304 = sext i16 %1642 to i32
  %add2305 = add nsw i32 %shr2303, %conv2304
  br label %cond.end2306

cond.end2306:                                     ; preds = %cond.false2286, %cond.true2284
  %cond2307 = phi i32 [ %1625, %cond.true2284 ], [ %add2305, %cond.false2286 ]
  br label %cond.end2308

cond.end2308:                                     ; preds = %cond.end2306, %cond.true2260
  %cond2309 = phi i32 [ 0, %cond.true2260 ], [ %cond2307, %cond.end2306 ]
  store i32 %cond2309, i32* %weightedpel, align 4
  %1643 = load i16*, i16** %orig_line, align 8
  %1644 = load i16, i16* %x0, align 2
  %idxprom2310 = sext i16 %1644 to i64
  %arrayidx2311 = getelementptr inbounds i16, i16* %1643, i64 %idxprom2310
  %1645 = load i16, i16* %arrayidx2311, align 2
  %conv2312 = zext i16 %1645 to i32
  %1646 = load i32, i32* %weightedpel, align 4
  %sub2313 = sub nsw i32 %conv2312, %1646
  %1647 = load i32*, i32** %d, align 8
  %incdec.ptr2314 = getelementptr inbounds i32, i32* %1647, i32 1
  store i32* %incdec.ptr2314, i32** %d, align 8
  store i32 %sub2313, i32* %1647, align 4
  %1648 = load i16, i16* %weightSpic, align 2
  %conv2315 = sext i16 %1648 to i32
  %1649 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1650 = load i16**, i16*** %ref1_pic, align 8
  %1651 = load i16, i16* %sy, align 2
  %conv2316 = sext i16 %1651 to i32
  %1652 = load i16, i16* %sx0, align 2
  %conv2317 = sext i16 %1652 to i32
  %add2318 = add nsw i32 %conv2317, 4
  %1653 = load i32, i32* %img_height, align 4
  %1654 = load i32, i32* %img_width, align 4
  %call2319 = call zeroext i16 %1649(i16** %1650, i32 %conv2316, i32 %add2318, i32 %1653, i32 %1654)
  %conv2320 = zext i16 %call2319 to i32
  %mul2321 = mul nsw i32 %conv2315, %conv2320
  %1655 = load i16, i16* %weightRpic, align 2
  %conv2322 = sext i16 %1655 to i32
  %1656 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1657 = load i16**, i16*** %ref2_pic, align 8
  %1658 = load i16, i16* %ry, align 2
  %conv2323 = sext i16 %1658 to i32
  %1659 = load i16, i16* %rx0, align 2
  %conv2324 = sext i16 %1659 to i32
  %add2325 = add nsw i32 %conv2324, 4
  %1660 = load i32, i32* %img_height, align 4
  %1661 = load i32, i32* %img_width, align 4
  %call2326 = call zeroext i16 %1656(i16** %1657, i32 %conv2323, i32 %add2325, i32 %1660, i32 %1661)
  %conv2327 = zext i16 %call2326 to i32
  %mul2328 = mul nsw i32 %conv2322, %conv2327
  %add2329 = add nsw i32 %mul2321, %mul2328
  %1662 = load i32, i32* @wp_luma_round, align 4
  %mul2330 = mul nsw i32 2, %1662
  %add2331 = add nsw i32 %add2329, %mul2330
  %1663 = load i32, i32* @luma_log_weight_denom, align 4
  %add2332 = add nsw i32 %1663, 1
  %shr2333 = ashr i32 %add2331, %add2332
  %1664 = load i16, i16* %offsetBi, align 2
  %conv2334 = sext i16 %1664 to i32
  %add2335 = add nsw i32 %shr2333, %conv2334
  %cmp2336 = icmp slt i32 %add2335, 0
  br i1 %cmp2336, label %cond.true2338, label %cond.false2339

cond.true2338:                                    ; preds = %cond.end2308
  br label %cond.end2390

cond.false2339:                                   ; preds = %cond.end2308
  %1665 = load i16, i16* %weightSpic, align 2
  %conv2340 = sext i16 %1665 to i32
  %1666 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1667 = load i16**, i16*** %ref1_pic, align 8
  %1668 = load i16, i16* %sy, align 2
  %conv2341 = sext i16 %1668 to i32
  %1669 = load i16, i16* %sx0, align 2
  %conv2342 = sext i16 %1669 to i32
  %add2343 = add nsw i32 %conv2342, 4
  %1670 = load i32, i32* %img_height, align 4
  %1671 = load i32, i32* %img_width, align 4
  %call2344 = call zeroext i16 %1666(i16** %1667, i32 %conv2341, i32 %add2343, i32 %1670, i32 %1671)
  %conv2345 = zext i16 %call2344 to i32
  %mul2346 = mul nsw i32 %conv2340, %conv2345
  %1672 = load i16, i16* %weightRpic, align 2
  %conv2347 = sext i16 %1672 to i32
  %1673 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1674 = load i16**, i16*** %ref2_pic, align 8
  %1675 = load i16, i16* %ry, align 2
  %conv2348 = sext i16 %1675 to i32
  %1676 = load i16, i16* %rx0, align 2
  %conv2349 = sext i16 %1676 to i32
  %add2350 = add nsw i32 %conv2349, 4
  %1677 = load i32, i32* %img_height, align 4
  %1678 = load i32, i32* %img_width, align 4
  %call2351 = call zeroext i16 %1673(i16** %1674, i32 %conv2348, i32 %add2350, i32 %1677, i32 %1678)
  %conv2352 = zext i16 %call2351 to i32
  %mul2353 = mul nsw i32 %conv2347, %conv2352
  %add2354 = add nsw i32 %mul2346, %mul2353
  %1679 = load i32, i32* @wp_luma_round, align 4
  %mul2355 = mul nsw i32 2, %1679
  %add2356 = add nsw i32 %add2354, %mul2355
  %1680 = load i32, i32* @luma_log_weight_denom, align 4
  %add2357 = add nsw i32 %1680, 1
  %shr2358 = ashr i32 %add2356, %add2357
  %1681 = load i16, i16* %offsetBi, align 2
  %conv2359 = sext i16 %1681 to i32
  %add2360 = add nsw i32 %shr2358, %conv2359
  %1682 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2361 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1682, i32 0, i32 155
  %1683 = load i32, i32* %max_imgpel_value2361, align 4
  %cmp2362 = icmp sgt i32 %add2360, %1683
  br i1 %cmp2362, label %cond.true2364, label %cond.false2366

cond.true2364:                                    ; preds = %cond.false2339
  %1684 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2365 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1684, i32 0, i32 155
  %1685 = load i32, i32* %max_imgpel_value2365, align 4
  br label %cond.end2388

cond.false2366:                                   ; preds = %cond.false2339
  %1686 = load i16, i16* %weightSpic, align 2
  %conv2367 = sext i16 %1686 to i32
  %1687 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1688 = load i16**, i16*** %ref1_pic, align 8
  %1689 = load i16, i16* %sy, align 2
  %conv2368 = sext i16 %1689 to i32
  %1690 = load i16, i16* %sx0, align 2
  %conv2369 = sext i16 %1690 to i32
  %add2370 = add nsw i32 %conv2369, 4
  %1691 = load i32, i32* %img_height, align 4
  %1692 = load i32, i32* %img_width, align 4
  %call2371 = call zeroext i16 %1687(i16** %1688, i32 %conv2368, i32 %add2370, i32 %1691, i32 %1692)
  %conv2372 = zext i16 %call2371 to i32
  %mul2373 = mul nsw i32 %conv2367, %conv2372
  %1693 = load i16, i16* %weightRpic, align 2
  %conv2374 = sext i16 %1693 to i32
  %1694 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1695 = load i16**, i16*** %ref2_pic, align 8
  %1696 = load i16, i16* %ry, align 2
  %conv2375 = sext i16 %1696 to i32
  %1697 = load i16, i16* %rx0, align 2
  %conv2376 = sext i16 %1697 to i32
  %add2377 = add nsw i32 %conv2376, 4
  %1698 = load i32, i32* %img_height, align 4
  %1699 = load i32, i32* %img_width, align 4
  %call2378 = call zeroext i16 %1694(i16** %1695, i32 %conv2375, i32 %add2377, i32 %1698, i32 %1699)
  %conv2379 = zext i16 %call2378 to i32
  %mul2380 = mul nsw i32 %conv2374, %conv2379
  %add2381 = add nsw i32 %mul2373, %mul2380
  %1700 = load i32, i32* @wp_luma_round, align 4
  %mul2382 = mul nsw i32 2, %1700
  %add2383 = add nsw i32 %add2381, %mul2382
  %1701 = load i32, i32* @luma_log_weight_denom, align 4
  %add2384 = add nsw i32 %1701, 1
  %shr2385 = ashr i32 %add2383, %add2384
  %1702 = load i16, i16* %offsetBi, align 2
  %conv2386 = sext i16 %1702 to i32
  %add2387 = add nsw i32 %shr2385, %conv2386
  br label %cond.end2388

cond.end2388:                                     ; preds = %cond.false2366, %cond.true2364
  %cond2389 = phi i32 [ %1685, %cond.true2364 ], [ %add2387, %cond.false2366 ]
  br label %cond.end2390

cond.end2390:                                     ; preds = %cond.end2388, %cond.true2338
  %cond2391 = phi i32 [ 0, %cond.true2338 ], [ %cond2389, %cond.end2388 ]
  store i32 %cond2391, i32* %weightedpel, align 4
  %1703 = load i16*, i16** %orig_line, align 8
  %1704 = load i16, i16* %x0, align 2
  %conv2392 = sext i16 %1704 to i32
  %add2393 = add nsw i32 %conv2392, 1
  %idxprom2394 = sext i32 %add2393 to i64
  %arrayidx2395 = getelementptr inbounds i16, i16* %1703, i64 %idxprom2394
  %1705 = load i16, i16* %arrayidx2395, align 2
  %conv2396 = zext i16 %1705 to i32
  %1706 = load i32, i32* %weightedpel, align 4
  %sub2397 = sub nsw i32 %conv2396, %1706
  %1707 = load i32*, i32** %d, align 8
  %incdec.ptr2398 = getelementptr inbounds i32, i32* %1707, i32 1
  store i32* %incdec.ptr2398, i32** %d, align 8
  store i32 %sub2397, i32* %1707, align 4
  %1708 = load i16, i16* %weightSpic, align 2
  %conv2399 = sext i16 %1708 to i32
  %1709 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1710 = load i16**, i16*** %ref1_pic, align 8
  %1711 = load i16, i16* %sy, align 2
  %conv2400 = sext i16 %1711 to i32
  %1712 = load i16, i16* %sx0, align 2
  %conv2401 = sext i16 %1712 to i32
  %add2402 = add nsw i32 %conv2401, 8
  %1713 = load i32, i32* %img_height, align 4
  %1714 = load i32, i32* %img_width, align 4
  %call2403 = call zeroext i16 %1709(i16** %1710, i32 %conv2400, i32 %add2402, i32 %1713, i32 %1714)
  %conv2404 = zext i16 %call2403 to i32
  %mul2405 = mul nsw i32 %conv2399, %conv2404
  %1715 = load i16, i16* %weightRpic, align 2
  %conv2406 = sext i16 %1715 to i32
  %1716 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1717 = load i16**, i16*** %ref2_pic, align 8
  %1718 = load i16, i16* %ry, align 2
  %conv2407 = sext i16 %1718 to i32
  %1719 = load i16, i16* %rx0, align 2
  %conv2408 = sext i16 %1719 to i32
  %add2409 = add nsw i32 %conv2408, 8
  %1720 = load i32, i32* %img_height, align 4
  %1721 = load i32, i32* %img_width, align 4
  %call2410 = call zeroext i16 %1716(i16** %1717, i32 %conv2407, i32 %add2409, i32 %1720, i32 %1721)
  %conv2411 = zext i16 %call2410 to i32
  %mul2412 = mul nsw i32 %conv2406, %conv2411
  %add2413 = add nsw i32 %mul2405, %mul2412
  %1722 = load i32, i32* @wp_luma_round, align 4
  %mul2414 = mul nsw i32 2, %1722
  %add2415 = add nsw i32 %add2413, %mul2414
  %1723 = load i32, i32* @luma_log_weight_denom, align 4
  %add2416 = add nsw i32 %1723, 1
  %shr2417 = ashr i32 %add2415, %add2416
  %1724 = load i16, i16* %offsetBi, align 2
  %conv2418 = sext i16 %1724 to i32
  %add2419 = add nsw i32 %shr2417, %conv2418
  %cmp2420 = icmp slt i32 %add2419, 0
  br i1 %cmp2420, label %cond.true2422, label %cond.false2423

cond.true2422:                                    ; preds = %cond.end2390
  br label %cond.end2474

cond.false2423:                                   ; preds = %cond.end2390
  %1725 = load i16, i16* %weightSpic, align 2
  %conv2424 = sext i16 %1725 to i32
  %1726 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1727 = load i16**, i16*** %ref1_pic, align 8
  %1728 = load i16, i16* %sy, align 2
  %conv2425 = sext i16 %1728 to i32
  %1729 = load i16, i16* %sx0, align 2
  %conv2426 = sext i16 %1729 to i32
  %add2427 = add nsw i32 %conv2426, 8
  %1730 = load i32, i32* %img_height, align 4
  %1731 = load i32, i32* %img_width, align 4
  %call2428 = call zeroext i16 %1726(i16** %1727, i32 %conv2425, i32 %add2427, i32 %1730, i32 %1731)
  %conv2429 = zext i16 %call2428 to i32
  %mul2430 = mul nsw i32 %conv2424, %conv2429
  %1732 = load i16, i16* %weightRpic, align 2
  %conv2431 = sext i16 %1732 to i32
  %1733 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1734 = load i16**, i16*** %ref2_pic, align 8
  %1735 = load i16, i16* %ry, align 2
  %conv2432 = sext i16 %1735 to i32
  %1736 = load i16, i16* %rx0, align 2
  %conv2433 = sext i16 %1736 to i32
  %add2434 = add nsw i32 %conv2433, 8
  %1737 = load i32, i32* %img_height, align 4
  %1738 = load i32, i32* %img_width, align 4
  %call2435 = call zeroext i16 %1733(i16** %1734, i32 %conv2432, i32 %add2434, i32 %1737, i32 %1738)
  %conv2436 = zext i16 %call2435 to i32
  %mul2437 = mul nsw i32 %conv2431, %conv2436
  %add2438 = add nsw i32 %mul2430, %mul2437
  %1739 = load i32, i32* @wp_luma_round, align 4
  %mul2439 = mul nsw i32 2, %1739
  %add2440 = add nsw i32 %add2438, %mul2439
  %1740 = load i32, i32* @luma_log_weight_denom, align 4
  %add2441 = add nsw i32 %1740, 1
  %shr2442 = ashr i32 %add2440, %add2441
  %1741 = load i16, i16* %offsetBi, align 2
  %conv2443 = sext i16 %1741 to i32
  %add2444 = add nsw i32 %shr2442, %conv2443
  %1742 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2445 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1742, i32 0, i32 155
  %1743 = load i32, i32* %max_imgpel_value2445, align 4
  %cmp2446 = icmp sgt i32 %add2444, %1743
  br i1 %cmp2446, label %cond.true2448, label %cond.false2450

cond.true2448:                                    ; preds = %cond.false2423
  %1744 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2449 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1744, i32 0, i32 155
  %1745 = load i32, i32* %max_imgpel_value2449, align 4
  br label %cond.end2472

cond.false2450:                                   ; preds = %cond.false2423
  %1746 = load i16, i16* %weightSpic, align 2
  %conv2451 = sext i16 %1746 to i32
  %1747 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1748 = load i16**, i16*** %ref1_pic, align 8
  %1749 = load i16, i16* %sy, align 2
  %conv2452 = sext i16 %1749 to i32
  %1750 = load i16, i16* %sx0, align 2
  %conv2453 = sext i16 %1750 to i32
  %add2454 = add nsw i32 %conv2453, 8
  %1751 = load i32, i32* %img_height, align 4
  %1752 = load i32, i32* %img_width, align 4
  %call2455 = call zeroext i16 %1747(i16** %1748, i32 %conv2452, i32 %add2454, i32 %1751, i32 %1752)
  %conv2456 = zext i16 %call2455 to i32
  %mul2457 = mul nsw i32 %conv2451, %conv2456
  %1753 = load i16, i16* %weightRpic, align 2
  %conv2458 = sext i16 %1753 to i32
  %1754 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1755 = load i16**, i16*** %ref2_pic, align 8
  %1756 = load i16, i16* %ry, align 2
  %conv2459 = sext i16 %1756 to i32
  %1757 = load i16, i16* %rx0, align 2
  %conv2460 = sext i16 %1757 to i32
  %add2461 = add nsw i32 %conv2460, 8
  %1758 = load i32, i32* %img_height, align 4
  %1759 = load i32, i32* %img_width, align 4
  %call2462 = call zeroext i16 %1754(i16** %1755, i32 %conv2459, i32 %add2461, i32 %1758, i32 %1759)
  %conv2463 = zext i16 %call2462 to i32
  %mul2464 = mul nsw i32 %conv2458, %conv2463
  %add2465 = add nsw i32 %mul2457, %mul2464
  %1760 = load i32, i32* @wp_luma_round, align 4
  %mul2466 = mul nsw i32 2, %1760
  %add2467 = add nsw i32 %add2465, %mul2466
  %1761 = load i32, i32* @luma_log_weight_denom, align 4
  %add2468 = add nsw i32 %1761, 1
  %shr2469 = ashr i32 %add2467, %add2468
  %1762 = load i16, i16* %offsetBi, align 2
  %conv2470 = sext i16 %1762 to i32
  %add2471 = add nsw i32 %shr2469, %conv2470
  br label %cond.end2472

cond.end2472:                                     ; preds = %cond.false2450, %cond.true2448
  %cond2473 = phi i32 [ %1745, %cond.true2448 ], [ %add2471, %cond.false2450 ]
  br label %cond.end2474

cond.end2474:                                     ; preds = %cond.end2472, %cond.true2422
  %cond2475 = phi i32 [ 0, %cond.true2422 ], [ %cond2473, %cond.end2472 ]
  store i32 %cond2475, i32* %weightedpel, align 4
  %1763 = load i16*, i16** %orig_line, align 8
  %1764 = load i16, i16* %x0, align 2
  %conv2476 = sext i16 %1764 to i32
  %add2477 = add nsw i32 %conv2476, 2
  %idxprom2478 = sext i32 %add2477 to i64
  %arrayidx2479 = getelementptr inbounds i16, i16* %1763, i64 %idxprom2478
  %1765 = load i16, i16* %arrayidx2479, align 2
  %conv2480 = zext i16 %1765 to i32
  %1766 = load i32, i32* %weightedpel, align 4
  %sub2481 = sub nsw i32 %conv2480, %1766
  %1767 = load i32*, i32** %d, align 8
  %incdec.ptr2482 = getelementptr inbounds i32, i32* %1767, i32 1
  store i32* %incdec.ptr2482, i32** %d, align 8
  store i32 %sub2481, i32* %1767, align 4
  %1768 = load i16, i16* %weightSpic, align 2
  %conv2483 = sext i16 %1768 to i32
  %1769 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1770 = load i16**, i16*** %ref1_pic, align 8
  %1771 = load i16, i16* %sy, align 2
  %conv2484 = sext i16 %1771 to i32
  %1772 = load i16, i16* %sx0, align 2
  %conv2485 = sext i16 %1772 to i32
  %add2486 = add nsw i32 %conv2485, 12
  %1773 = load i32, i32* %img_height, align 4
  %1774 = load i32, i32* %img_width, align 4
  %call2487 = call zeroext i16 %1769(i16** %1770, i32 %conv2484, i32 %add2486, i32 %1773, i32 %1774)
  %conv2488 = zext i16 %call2487 to i32
  %mul2489 = mul nsw i32 %conv2483, %conv2488
  %1775 = load i16, i16* %weightRpic, align 2
  %conv2490 = sext i16 %1775 to i32
  %1776 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1777 = load i16**, i16*** %ref2_pic, align 8
  %1778 = load i16, i16* %ry, align 2
  %conv2491 = sext i16 %1778 to i32
  %1779 = load i16, i16* %rx0, align 2
  %conv2492 = sext i16 %1779 to i32
  %add2493 = add nsw i32 %conv2492, 12
  %1780 = load i32, i32* %img_height, align 4
  %1781 = load i32, i32* %img_width, align 4
  %call2494 = call zeroext i16 %1776(i16** %1777, i32 %conv2491, i32 %add2493, i32 %1780, i32 %1781)
  %conv2495 = zext i16 %call2494 to i32
  %mul2496 = mul nsw i32 %conv2490, %conv2495
  %add2497 = add nsw i32 %mul2489, %mul2496
  %1782 = load i32, i32* @wp_luma_round, align 4
  %mul2498 = mul nsw i32 2, %1782
  %add2499 = add nsw i32 %add2497, %mul2498
  %1783 = load i32, i32* @luma_log_weight_denom, align 4
  %add2500 = add nsw i32 %1783, 1
  %shr2501 = ashr i32 %add2499, %add2500
  %1784 = load i16, i16* %offsetBi, align 2
  %conv2502 = sext i16 %1784 to i32
  %add2503 = add nsw i32 %shr2501, %conv2502
  %cmp2504 = icmp slt i32 %add2503, 0
  br i1 %cmp2504, label %cond.true2506, label %cond.false2507

cond.true2506:                                    ; preds = %cond.end2474
  br label %cond.end2558

cond.false2507:                                   ; preds = %cond.end2474
  %1785 = load i16, i16* %weightSpic, align 2
  %conv2508 = sext i16 %1785 to i32
  %1786 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1787 = load i16**, i16*** %ref1_pic, align 8
  %1788 = load i16, i16* %sy, align 2
  %conv2509 = sext i16 %1788 to i32
  %1789 = load i16, i16* %sx0, align 2
  %conv2510 = sext i16 %1789 to i32
  %add2511 = add nsw i32 %conv2510, 12
  %1790 = load i32, i32* %img_height, align 4
  %1791 = load i32, i32* %img_width, align 4
  %call2512 = call zeroext i16 %1786(i16** %1787, i32 %conv2509, i32 %add2511, i32 %1790, i32 %1791)
  %conv2513 = zext i16 %call2512 to i32
  %mul2514 = mul nsw i32 %conv2508, %conv2513
  %1792 = load i16, i16* %weightRpic, align 2
  %conv2515 = sext i16 %1792 to i32
  %1793 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1794 = load i16**, i16*** %ref2_pic, align 8
  %1795 = load i16, i16* %ry, align 2
  %conv2516 = sext i16 %1795 to i32
  %1796 = load i16, i16* %rx0, align 2
  %conv2517 = sext i16 %1796 to i32
  %add2518 = add nsw i32 %conv2517, 12
  %1797 = load i32, i32* %img_height, align 4
  %1798 = load i32, i32* %img_width, align 4
  %call2519 = call zeroext i16 %1793(i16** %1794, i32 %conv2516, i32 %add2518, i32 %1797, i32 %1798)
  %conv2520 = zext i16 %call2519 to i32
  %mul2521 = mul nsw i32 %conv2515, %conv2520
  %add2522 = add nsw i32 %mul2514, %mul2521
  %1799 = load i32, i32* @wp_luma_round, align 4
  %mul2523 = mul nsw i32 2, %1799
  %add2524 = add nsw i32 %add2522, %mul2523
  %1800 = load i32, i32* @luma_log_weight_denom, align 4
  %add2525 = add nsw i32 %1800, 1
  %shr2526 = ashr i32 %add2524, %add2525
  %1801 = load i16, i16* %offsetBi, align 2
  %conv2527 = sext i16 %1801 to i32
  %add2528 = add nsw i32 %shr2526, %conv2527
  %1802 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2529 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1802, i32 0, i32 155
  %1803 = load i32, i32* %max_imgpel_value2529, align 4
  %cmp2530 = icmp sgt i32 %add2528, %1803
  br i1 %cmp2530, label %cond.true2532, label %cond.false2534

cond.true2532:                                    ; preds = %cond.false2507
  %1804 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2533 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1804, i32 0, i32 155
  %1805 = load i32, i32* %max_imgpel_value2533, align 4
  br label %cond.end2556

cond.false2534:                                   ; preds = %cond.false2507
  %1806 = load i16, i16* %weightSpic, align 2
  %conv2535 = sext i16 %1806 to i32
  %1807 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1808 = load i16**, i16*** %ref1_pic, align 8
  %1809 = load i16, i16* %sy, align 2
  %conv2536 = sext i16 %1809 to i32
  %1810 = load i16, i16* %sx0, align 2
  %conv2537 = sext i16 %1810 to i32
  %add2538 = add nsw i32 %conv2537, 12
  %1811 = load i32, i32* %img_height, align 4
  %1812 = load i32, i32* %img_width, align 4
  %call2539 = call zeroext i16 %1807(i16** %1808, i32 %conv2536, i32 %add2538, i32 %1811, i32 %1812)
  %conv2540 = zext i16 %call2539 to i32
  %mul2541 = mul nsw i32 %conv2535, %conv2540
  %1813 = load i16, i16* %weightRpic, align 2
  %conv2542 = sext i16 %1813 to i32
  %1814 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1815 = load i16**, i16*** %ref2_pic, align 8
  %1816 = load i16, i16* %ry, align 2
  %conv2543 = sext i16 %1816 to i32
  %1817 = load i16, i16* %rx0, align 2
  %conv2544 = sext i16 %1817 to i32
  %add2545 = add nsw i32 %conv2544, 12
  %1818 = load i32, i32* %img_height, align 4
  %1819 = load i32, i32* %img_width, align 4
  %call2546 = call zeroext i16 %1814(i16** %1815, i32 %conv2543, i32 %add2545, i32 %1818, i32 %1819)
  %conv2547 = zext i16 %call2546 to i32
  %mul2548 = mul nsw i32 %conv2542, %conv2547
  %add2549 = add nsw i32 %mul2541, %mul2548
  %1820 = load i32, i32* @wp_luma_round, align 4
  %mul2550 = mul nsw i32 2, %1820
  %add2551 = add nsw i32 %add2549, %mul2550
  %1821 = load i32, i32* @luma_log_weight_denom, align 4
  %add2552 = add nsw i32 %1821, 1
  %shr2553 = ashr i32 %add2551, %add2552
  %1822 = load i16, i16* %offsetBi, align 2
  %conv2554 = sext i16 %1822 to i32
  %add2555 = add nsw i32 %shr2553, %conv2554
  br label %cond.end2556

cond.end2556:                                     ; preds = %cond.false2534, %cond.true2532
  %cond2557 = phi i32 [ %1805, %cond.true2532 ], [ %add2555, %cond.false2534 ]
  br label %cond.end2558

cond.end2558:                                     ; preds = %cond.end2556, %cond.true2506
  %cond2559 = phi i32 [ 0, %cond.true2506 ], [ %cond2557, %cond.end2556 ]
  store i32 %cond2559, i32* %weightedpel, align 4
  %1823 = load i16*, i16** %orig_line, align 8
  %1824 = load i16, i16* %x0, align 2
  %conv2560 = sext i16 %1824 to i32
  %add2561 = add nsw i32 %conv2560, 3
  %idxprom2562 = sext i32 %add2561 to i64
  %arrayidx2563 = getelementptr inbounds i16, i16* %1823, i64 %idxprom2562
  %1825 = load i16, i16* %arrayidx2563, align 2
  %conv2564 = zext i16 %1825 to i32
  %1826 = load i32, i32* %weightedpel, align 4
  %sub2565 = sub nsw i32 %conv2564, %1826
  %1827 = load i32*, i32** %d, align 8
  %incdec.ptr2566 = getelementptr inbounds i32, i32* %1827, i32 1
  store i32* %incdec.ptr2566, i32** %d, align 8
  store i32 %sub2565, i32* %1827, align 4
  %1828 = load i16, i16* %sy0, align 2
  %conv2567 = sext i16 %1828 to i32
  %add2568 = add nsw i32 %conv2567, 4
  %conv2569 = trunc i32 %add2568 to i16
  store i16 %conv2569, i16* %sy, align 2
  %1829 = load i16**, i16*** %orig_pic.addr, align 8
  %1830 = load i16, i16* %y0, align 2
  %conv2570 = sext i16 %1830 to i32
  %add2571 = add nsw i32 %conv2570, 1
  %idxprom2572 = sext i32 %add2571 to i64
  %arrayidx2573 = getelementptr inbounds i16*, i16** %1829, i64 %idxprom2572
  %1831 = load i16*, i16** %arrayidx2573, align 8
  store i16* %1831, i16** %orig_line, align 8
  %1832 = load i16, i16* %ry0, align 2
  %conv2574 = sext i16 %1832 to i32
  %add2575 = add nsw i32 %conv2574, 4
  %conv2576 = trunc i32 %add2575 to i16
  store i16 %conv2576, i16* %ry, align 2
  %1833 = load i16, i16* %weightSpic, align 2
  %conv2577 = sext i16 %1833 to i32
  %1834 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1835 = load i16**, i16*** %ref1_pic, align 8
  %1836 = load i16, i16* %sy, align 2
  %conv2578 = sext i16 %1836 to i32
  %1837 = load i16, i16* %sx0, align 2
  %conv2579 = sext i16 %1837 to i32
  %1838 = load i32, i32* %img_height, align 4
  %1839 = load i32, i32* %img_width, align 4
  %call2580 = call zeroext i16 %1834(i16** %1835, i32 %conv2578, i32 %conv2579, i32 %1838, i32 %1839)
  %conv2581 = zext i16 %call2580 to i32
  %mul2582 = mul nsw i32 %conv2577, %conv2581
  %1840 = load i16, i16* %weightRpic, align 2
  %conv2583 = sext i16 %1840 to i32
  %1841 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1842 = load i16**, i16*** %ref2_pic, align 8
  %1843 = load i16, i16* %ry, align 2
  %conv2584 = sext i16 %1843 to i32
  %1844 = load i16, i16* %rx0, align 2
  %conv2585 = sext i16 %1844 to i32
  %1845 = load i32, i32* %img_height, align 4
  %1846 = load i32, i32* %img_width, align 4
  %call2586 = call zeroext i16 %1841(i16** %1842, i32 %conv2584, i32 %conv2585, i32 %1845, i32 %1846)
  %conv2587 = zext i16 %call2586 to i32
  %mul2588 = mul nsw i32 %conv2583, %conv2587
  %add2589 = add nsw i32 %mul2582, %mul2588
  %1847 = load i32, i32* @wp_luma_round, align 4
  %mul2590 = mul nsw i32 2, %1847
  %add2591 = add nsw i32 %add2589, %mul2590
  %1848 = load i32, i32* @luma_log_weight_denom, align 4
  %add2592 = add nsw i32 %1848, 1
  %shr2593 = ashr i32 %add2591, %add2592
  %1849 = load i16, i16* %offsetBi, align 2
  %conv2594 = sext i16 %1849 to i32
  %add2595 = add nsw i32 %shr2593, %conv2594
  %cmp2596 = icmp slt i32 %add2595, 0
  br i1 %cmp2596, label %cond.true2598, label %cond.false2599

cond.true2598:                                    ; preds = %cond.end2558
  br label %cond.end2646

cond.false2599:                                   ; preds = %cond.end2558
  %1850 = load i16, i16* %weightSpic, align 2
  %conv2600 = sext i16 %1850 to i32
  %1851 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1852 = load i16**, i16*** %ref1_pic, align 8
  %1853 = load i16, i16* %sy, align 2
  %conv2601 = sext i16 %1853 to i32
  %1854 = load i16, i16* %sx0, align 2
  %conv2602 = sext i16 %1854 to i32
  %1855 = load i32, i32* %img_height, align 4
  %1856 = load i32, i32* %img_width, align 4
  %call2603 = call zeroext i16 %1851(i16** %1852, i32 %conv2601, i32 %conv2602, i32 %1855, i32 %1856)
  %conv2604 = zext i16 %call2603 to i32
  %mul2605 = mul nsw i32 %conv2600, %conv2604
  %1857 = load i16, i16* %weightRpic, align 2
  %conv2606 = sext i16 %1857 to i32
  %1858 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1859 = load i16**, i16*** %ref2_pic, align 8
  %1860 = load i16, i16* %ry, align 2
  %conv2607 = sext i16 %1860 to i32
  %1861 = load i16, i16* %rx0, align 2
  %conv2608 = sext i16 %1861 to i32
  %1862 = load i32, i32* %img_height, align 4
  %1863 = load i32, i32* %img_width, align 4
  %call2609 = call zeroext i16 %1858(i16** %1859, i32 %conv2607, i32 %conv2608, i32 %1862, i32 %1863)
  %conv2610 = zext i16 %call2609 to i32
  %mul2611 = mul nsw i32 %conv2606, %conv2610
  %add2612 = add nsw i32 %mul2605, %mul2611
  %1864 = load i32, i32* @wp_luma_round, align 4
  %mul2613 = mul nsw i32 2, %1864
  %add2614 = add nsw i32 %add2612, %mul2613
  %1865 = load i32, i32* @luma_log_weight_denom, align 4
  %add2615 = add nsw i32 %1865, 1
  %shr2616 = ashr i32 %add2614, %add2615
  %1866 = load i16, i16* %offsetBi, align 2
  %conv2617 = sext i16 %1866 to i32
  %add2618 = add nsw i32 %shr2616, %conv2617
  %1867 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2619 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1867, i32 0, i32 155
  %1868 = load i32, i32* %max_imgpel_value2619, align 4
  %cmp2620 = icmp sgt i32 %add2618, %1868
  br i1 %cmp2620, label %cond.true2622, label %cond.false2624

cond.true2622:                                    ; preds = %cond.false2599
  %1869 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2623 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1869, i32 0, i32 155
  %1870 = load i32, i32* %max_imgpel_value2623, align 4
  br label %cond.end2644

cond.false2624:                                   ; preds = %cond.false2599
  %1871 = load i16, i16* %weightSpic, align 2
  %conv2625 = sext i16 %1871 to i32
  %1872 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1873 = load i16**, i16*** %ref1_pic, align 8
  %1874 = load i16, i16* %sy, align 2
  %conv2626 = sext i16 %1874 to i32
  %1875 = load i16, i16* %sx0, align 2
  %conv2627 = sext i16 %1875 to i32
  %1876 = load i32, i32* %img_height, align 4
  %1877 = load i32, i32* %img_width, align 4
  %call2628 = call zeroext i16 %1872(i16** %1873, i32 %conv2626, i32 %conv2627, i32 %1876, i32 %1877)
  %conv2629 = zext i16 %call2628 to i32
  %mul2630 = mul nsw i32 %conv2625, %conv2629
  %1878 = load i16, i16* %weightRpic, align 2
  %conv2631 = sext i16 %1878 to i32
  %1879 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1880 = load i16**, i16*** %ref2_pic, align 8
  %1881 = load i16, i16* %ry, align 2
  %conv2632 = sext i16 %1881 to i32
  %1882 = load i16, i16* %rx0, align 2
  %conv2633 = sext i16 %1882 to i32
  %1883 = load i32, i32* %img_height, align 4
  %1884 = load i32, i32* %img_width, align 4
  %call2634 = call zeroext i16 %1879(i16** %1880, i32 %conv2632, i32 %conv2633, i32 %1883, i32 %1884)
  %conv2635 = zext i16 %call2634 to i32
  %mul2636 = mul nsw i32 %conv2631, %conv2635
  %add2637 = add nsw i32 %mul2630, %mul2636
  %1885 = load i32, i32* @wp_luma_round, align 4
  %mul2638 = mul nsw i32 2, %1885
  %add2639 = add nsw i32 %add2637, %mul2638
  %1886 = load i32, i32* @luma_log_weight_denom, align 4
  %add2640 = add nsw i32 %1886, 1
  %shr2641 = ashr i32 %add2639, %add2640
  %1887 = load i16, i16* %offsetBi, align 2
  %conv2642 = sext i16 %1887 to i32
  %add2643 = add nsw i32 %shr2641, %conv2642
  br label %cond.end2644

cond.end2644:                                     ; preds = %cond.false2624, %cond.true2622
  %cond2645 = phi i32 [ %1870, %cond.true2622 ], [ %add2643, %cond.false2624 ]
  br label %cond.end2646

cond.end2646:                                     ; preds = %cond.end2644, %cond.true2598
  %cond2647 = phi i32 [ 0, %cond.true2598 ], [ %cond2645, %cond.end2644 ]
  store i32 %cond2647, i32* %weightedpel, align 4
  %1888 = load i16*, i16** %orig_line, align 8
  %1889 = load i16, i16* %x0, align 2
  %idxprom2648 = sext i16 %1889 to i64
  %arrayidx2649 = getelementptr inbounds i16, i16* %1888, i64 %idxprom2648
  %1890 = load i16, i16* %arrayidx2649, align 2
  %conv2650 = zext i16 %1890 to i32
  %1891 = load i32, i32* %weightedpel, align 4
  %sub2651 = sub nsw i32 %conv2650, %1891
  %1892 = load i32*, i32** %d, align 8
  %incdec.ptr2652 = getelementptr inbounds i32, i32* %1892, i32 1
  store i32* %incdec.ptr2652, i32** %d, align 8
  store i32 %sub2651, i32* %1892, align 4
  %1893 = load i16, i16* %weightSpic, align 2
  %conv2653 = sext i16 %1893 to i32
  %1894 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1895 = load i16**, i16*** %ref1_pic, align 8
  %1896 = load i16, i16* %sy, align 2
  %conv2654 = sext i16 %1896 to i32
  %1897 = load i16, i16* %sx0, align 2
  %conv2655 = sext i16 %1897 to i32
  %add2656 = add nsw i32 %conv2655, 4
  %1898 = load i32, i32* %img_height, align 4
  %1899 = load i32, i32* %img_width, align 4
  %call2657 = call zeroext i16 %1894(i16** %1895, i32 %conv2654, i32 %add2656, i32 %1898, i32 %1899)
  %conv2658 = zext i16 %call2657 to i32
  %mul2659 = mul nsw i32 %conv2653, %conv2658
  %1900 = load i16, i16* %weightRpic, align 2
  %conv2660 = sext i16 %1900 to i32
  %1901 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1902 = load i16**, i16*** %ref2_pic, align 8
  %1903 = load i16, i16* %ry, align 2
  %conv2661 = sext i16 %1903 to i32
  %1904 = load i16, i16* %rx0, align 2
  %conv2662 = sext i16 %1904 to i32
  %add2663 = add nsw i32 %conv2662, 4
  %1905 = load i32, i32* %img_height, align 4
  %1906 = load i32, i32* %img_width, align 4
  %call2664 = call zeroext i16 %1901(i16** %1902, i32 %conv2661, i32 %add2663, i32 %1905, i32 %1906)
  %conv2665 = zext i16 %call2664 to i32
  %mul2666 = mul nsw i32 %conv2660, %conv2665
  %add2667 = add nsw i32 %mul2659, %mul2666
  %1907 = load i32, i32* @wp_luma_round, align 4
  %mul2668 = mul nsw i32 2, %1907
  %add2669 = add nsw i32 %add2667, %mul2668
  %1908 = load i32, i32* @luma_log_weight_denom, align 4
  %add2670 = add nsw i32 %1908, 1
  %shr2671 = ashr i32 %add2669, %add2670
  %1909 = load i16, i16* %offsetBi, align 2
  %conv2672 = sext i16 %1909 to i32
  %add2673 = add nsw i32 %shr2671, %conv2672
  %cmp2674 = icmp slt i32 %add2673, 0
  br i1 %cmp2674, label %cond.true2676, label %cond.false2677

cond.true2676:                                    ; preds = %cond.end2646
  br label %cond.end2728

cond.false2677:                                   ; preds = %cond.end2646
  %1910 = load i16, i16* %weightSpic, align 2
  %conv2678 = sext i16 %1910 to i32
  %1911 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1912 = load i16**, i16*** %ref1_pic, align 8
  %1913 = load i16, i16* %sy, align 2
  %conv2679 = sext i16 %1913 to i32
  %1914 = load i16, i16* %sx0, align 2
  %conv2680 = sext i16 %1914 to i32
  %add2681 = add nsw i32 %conv2680, 4
  %1915 = load i32, i32* %img_height, align 4
  %1916 = load i32, i32* %img_width, align 4
  %call2682 = call zeroext i16 %1911(i16** %1912, i32 %conv2679, i32 %add2681, i32 %1915, i32 %1916)
  %conv2683 = zext i16 %call2682 to i32
  %mul2684 = mul nsw i32 %conv2678, %conv2683
  %1917 = load i16, i16* %weightRpic, align 2
  %conv2685 = sext i16 %1917 to i32
  %1918 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1919 = load i16**, i16*** %ref2_pic, align 8
  %1920 = load i16, i16* %ry, align 2
  %conv2686 = sext i16 %1920 to i32
  %1921 = load i16, i16* %rx0, align 2
  %conv2687 = sext i16 %1921 to i32
  %add2688 = add nsw i32 %conv2687, 4
  %1922 = load i32, i32* %img_height, align 4
  %1923 = load i32, i32* %img_width, align 4
  %call2689 = call zeroext i16 %1918(i16** %1919, i32 %conv2686, i32 %add2688, i32 %1922, i32 %1923)
  %conv2690 = zext i16 %call2689 to i32
  %mul2691 = mul nsw i32 %conv2685, %conv2690
  %add2692 = add nsw i32 %mul2684, %mul2691
  %1924 = load i32, i32* @wp_luma_round, align 4
  %mul2693 = mul nsw i32 2, %1924
  %add2694 = add nsw i32 %add2692, %mul2693
  %1925 = load i32, i32* @luma_log_weight_denom, align 4
  %add2695 = add nsw i32 %1925, 1
  %shr2696 = ashr i32 %add2694, %add2695
  %1926 = load i16, i16* %offsetBi, align 2
  %conv2697 = sext i16 %1926 to i32
  %add2698 = add nsw i32 %shr2696, %conv2697
  %1927 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2699 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1927, i32 0, i32 155
  %1928 = load i32, i32* %max_imgpel_value2699, align 4
  %cmp2700 = icmp sgt i32 %add2698, %1928
  br i1 %cmp2700, label %cond.true2702, label %cond.false2704

cond.true2702:                                    ; preds = %cond.false2677
  %1929 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2703 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1929, i32 0, i32 155
  %1930 = load i32, i32* %max_imgpel_value2703, align 4
  br label %cond.end2726

cond.false2704:                                   ; preds = %cond.false2677
  %1931 = load i16, i16* %weightSpic, align 2
  %conv2705 = sext i16 %1931 to i32
  %1932 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1933 = load i16**, i16*** %ref1_pic, align 8
  %1934 = load i16, i16* %sy, align 2
  %conv2706 = sext i16 %1934 to i32
  %1935 = load i16, i16* %sx0, align 2
  %conv2707 = sext i16 %1935 to i32
  %add2708 = add nsw i32 %conv2707, 4
  %1936 = load i32, i32* %img_height, align 4
  %1937 = load i32, i32* %img_width, align 4
  %call2709 = call zeroext i16 %1932(i16** %1933, i32 %conv2706, i32 %add2708, i32 %1936, i32 %1937)
  %conv2710 = zext i16 %call2709 to i32
  %mul2711 = mul nsw i32 %conv2705, %conv2710
  %1938 = load i16, i16* %weightRpic, align 2
  %conv2712 = sext i16 %1938 to i32
  %1939 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1940 = load i16**, i16*** %ref2_pic, align 8
  %1941 = load i16, i16* %ry, align 2
  %conv2713 = sext i16 %1941 to i32
  %1942 = load i16, i16* %rx0, align 2
  %conv2714 = sext i16 %1942 to i32
  %add2715 = add nsw i32 %conv2714, 4
  %1943 = load i32, i32* %img_height, align 4
  %1944 = load i32, i32* %img_width, align 4
  %call2716 = call zeroext i16 %1939(i16** %1940, i32 %conv2713, i32 %add2715, i32 %1943, i32 %1944)
  %conv2717 = zext i16 %call2716 to i32
  %mul2718 = mul nsw i32 %conv2712, %conv2717
  %add2719 = add nsw i32 %mul2711, %mul2718
  %1945 = load i32, i32* @wp_luma_round, align 4
  %mul2720 = mul nsw i32 2, %1945
  %add2721 = add nsw i32 %add2719, %mul2720
  %1946 = load i32, i32* @luma_log_weight_denom, align 4
  %add2722 = add nsw i32 %1946, 1
  %shr2723 = ashr i32 %add2721, %add2722
  %1947 = load i16, i16* %offsetBi, align 2
  %conv2724 = sext i16 %1947 to i32
  %add2725 = add nsw i32 %shr2723, %conv2724
  br label %cond.end2726

cond.end2726:                                     ; preds = %cond.false2704, %cond.true2702
  %cond2727 = phi i32 [ %1930, %cond.true2702 ], [ %add2725, %cond.false2704 ]
  br label %cond.end2728

cond.end2728:                                     ; preds = %cond.end2726, %cond.true2676
  %cond2729 = phi i32 [ 0, %cond.true2676 ], [ %cond2727, %cond.end2726 ]
  store i32 %cond2729, i32* %weightedpel, align 4
  %1948 = load i16*, i16** %orig_line, align 8
  %1949 = load i16, i16* %x0, align 2
  %conv2730 = sext i16 %1949 to i32
  %add2731 = add nsw i32 %conv2730, 1
  %idxprom2732 = sext i32 %add2731 to i64
  %arrayidx2733 = getelementptr inbounds i16, i16* %1948, i64 %idxprom2732
  %1950 = load i16, i16* %arrayidx2733, align 2
  %conv2734 = zext i16 %1950 to i32
  %1951 = load i32, i32* %weightedpel, align 4
  %sub2735 = sub nsw i32 %conv2734, %1951
  %1952 = load i32*, i32** %d, align 8
  %incdec.ptr2736 = getelementptr inbounds i32, i32* %1952, i32 1
  store i32* %incdec.ptr2736, i32** %d, align 8
  store i32 %sub2735, i32* %1952, align 4
  %1953 = load i16, i16* %weightSpic, align 2
  %conv2737 = sext i16 %1953 to i32
  %1954 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1955 = load i16**, i16*** %ref1_pic, align 8
  %1956 = load i16, i16* %sy, align 2
  %conv2738 = sext i16 %1956 to i32
  %1957 = load i16, i16* %sx0, align 2
  %conv2739 = sext i16 %1957 to i32
  %add2740 = add nsw i32 %conv2739, 8
  %1958 = load i32, i32* %img_height, align 4
  %1959 = load i32, i32* %img_width, align 4
  %call2741 = call zeroext i16 %1954(i16** %1955, i32 %conv2738, i32 %add2740, i32 %1958, i32 %1959)
  %conv2742 = zext i16 %call2741 to i32
  %mul2743 = mul nsw i32 %conv2737, %conv2742
  %1960 = load i16, i16* %weightRpic, align 2
  %conv2744 = sext i16 %1960 to i32
  %1961 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1962 = load i16**, i16*** %ref2_pic, align 8
  %1963 = load i16, i16* %ry, align 2
  %conv2745 = sext i16 %1963 to i32
  %1964 = load i16, i16* %rx0, align 2
  %conv2746 = sext i16 %1964 to i32
  %add2747 = add nsw i32 %conv2746, 8
  %1965 = load i32, i32* %img_height, align 4
  %1966 = load i32, i32* %img_width, align 4
  %call2748 = call zeroext i16 %1961(i16** %1962, i32 %conv2745, i32 %add2747, i32 %1965, i32 %1966)
  %conv2749 = zext i16 %call2748 to i32
  %mul2750 = mul nsw i32 %conv2744, %conv2749
  %add2751 = add nsw i32 %mul2743, %mul2750
  %1967 = load i32, i32* @wp_luma_round, align 4
  %mul2752 = mul nsw i32 2, %1967
  %add2753 = add nsw i32 %add2751, %mul2752
  %1968 = load i32, i32* @luma_log_weight_denom, align 4
  %add2754 = add nsw i32 %1968, 1
  %shr2755 = ashr i32 %add2753, %add2754
  %1969 = load i16, i16* %offsetBi, align 2
  %conv2756 = sext i16 %1969 to i32
  %add2757 = add nsw i32 %shr2755, %conv2756
  %cmp2758 = icmp slt i32 %add2757, 0
  br i1 %cmp2758, label %cond.true2760, label %cond.false2761

cond.true2760:                                    ; preds = %cond.end2728
  br label %cond.end2812

cond.false2761:                                   ; preds = %cond.end2728
  %1970 = load i16, i16* %weightSpic, align 2
  %conv2762 = sext i16 %1970 to i32
  %1971 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1972 = load i16**, i16*** %ref1_pic, align 8
  %1973 = load i16, i16* %sy, align 2
  %conv2763 = sext i16 %1973 to i32
  %1974 = load i16, i16* %sx0, align 2
  %conv2764 = sext i16 %1974 to i32
  %add2765 = add nsw i32 %conv2764, 8
  %1975 = load i32, i32* %img_height, align 4
  %1976 = load i32, i32* %img_width, align 4
  %call2766 = call zeroext i16 %1971(i16** %1972, i32 %conv2763, i32 %add2765, i32 %1975, i32 %1976)
  %conv2767 = zext i16 %call2766 to i32
  %mul2768 = mul nsw i32 %conv2762, %conv2767
  %1977 = load i16, i16* %weightRpic, align 2
  %conv2769 = sext i16 %1977 to i32
  %1978 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %1979 = load i16**, i16*** %ref2_pic, align 8
  %1980 = load i16, i16* %ry, align 2
  %conv2770 = sext i16 %1980 to i32
  %1981 = load i16, i16* %rx0, align 2
  %conv2771 = sext i16 %1981 to i32
  %add2772 = add nsw i32 %conv2771, 8
  %1982 = load i32, i32* %img_height, align 4
  %1983 = load i32, i32* %img_width, align 4
  %call2773 = call zeroext i16 %1978(i16** %1979, i32 %conv2770, i32 %add2772, i32 %1982, i32 %1983)
  %conv2774 = zext i16 %call2773 to i32
  %mul2775 = mul nsw i32 %conv2769, %conv2774
  %add2776 = add nsw i32 %mul2768, %mul2775
  %1984 = load i32, i32* @wp_luma_round, align 4
  %mul2777 = mul nsw i32 2, %1984
  %add2778 = add nsw i32 %add2776, %mul2777
  %1985 = load i32, i32* @luma_log_weight_denom, align 4
  %add2779 = add nsw i32 %1985, 1
  %shr2780 = ashr i32 %add2778, %add2779
  %1986 = load i16, i16* %offsetBi, align 2
  %conv2781 = sext i16 %1986 to i32
  %add2782 = add nsw i32 %shr2780, %conv2781
  %1987 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2783 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1987, i32 0, i32 155
  %1988 = load i32, i32* %max_imgpel_value2783, align 4
  %cmp2784 = icmp sgt i32 %add2782, %1988
  br i1 %cmp2784, label %cond.true2786, label %cond.false2788

cond.true2786:                                    ; preds = %cond.false2761
  %1989 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2787 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1989, i32 0, i32 155
  %1990 = load i32, i32* %max_imgpel_value2787, align 4
  br label %cond.end2810

cond.false2788:                                   ; preds = %cond.false2761
  %1991 = load i16, i16* %weightSpic, align 2
  %conv2789 = sext i16 %1991 to i32
  %1992 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %1993 = load i16**, i16*** %ref1_pic, align 8
  %1994 = load i16, i16* %sy, align 2
  %conv2790 = sext i16 %1994 to i32
  %1995 = load i16, i16* %sx0, align 2
  %conv2791 = sext i16 %1995 to i32
  %add2792 = add nsw i32 %conv2791, 8
  %1996 = load i32, i32* %img_height, align 4
  %1997 = load i32, i32* %img_width, align 4
  %call2793 = call zeroext i16 %1992(i16** %1993, i32 %conv2790, i32 %add2792, i32 %1996, i32 %1997)
  %conv2794 = zext i16 %call2793 to i32
  %mul2795 = mul nsw i32 %conv2789, %conv2794
  %1998 = load i16, i16* %weightRpic, align 2
  %conv2796 = sext i16 %1998 to i32
  %1999 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2000 = load i16**, i16*** %ref2_pic, align 8
  %2001 = load i16, i16* %ry, align 2
  %conv2797 = sext i16 %2001 to i32
  %2002 = load i16, i16* %rx0, align 2
  %conv2798 = sext i16 %2002 to i32
  %add2799 = add nsw i32 %conv2798, 8
  %2003 = load i32, i32* %img_height, align 4
  %2004 = load i32, i32* %img_width, align 4
  %call2800 = call zeroext i16 %1999(i16** %2000, i32 %conv2797, i32 %add2799, i32 %2003, i32 %2004)
  %conv2801 = zext i16 %call2800 to i32
  %mul2802 = mul nsw i32 %conv2796, %conv2801
  %add2803 = add nsw i32 %mul2795, %mul2802
  %2005 = load i32, i32* @wp_luma_round, align 4
  %mul2804 = mul nsw i32 2, %2005
  %add2805 = add nsw i32 %add2803, %mul2804
  %2006 = load i32, i32* @luma_log_weight_denom, align 4
  %add2806 = add nsw i32 %2006, 1
  %shr2807 = ashr i32 %add2805, %add2806
  %2007 = load i16, i16* %offsetBi, align 2
  %conv2808 = sext i16 %2007 to i32
  %add2809 = add nsw i32 %shr2807, %conv2808
  br label %cond.end2810

cond.end2810:                                     ; preds = %cond.false2788, %cond.true2786
  %cond2811 = phi i32 [ %1990, %cond.true2786 ], [ %add2809, %cond.false2788 ]
  br label %cond.end2812

cond.end2812:                                     ; preds = %cond.end2810, %cond.true2760
  %cond2813 = phi i32 [ 0, %cond.true2760 ], [ %cond2811, %cond.end2810 ]
  store i32 %cond2813, i32* %weightedpel, align 4
  %2008 = load i16*, i16** %orig_line, align 8
  %2009 = load i16, i16* %x0, align 2
  %conv2814 = sext i16 %2009 to i32
  %add2815 = add nsw i32 %conv2814, 2
  %idxprom2816 = sext i32 %add2815 to i64
  %arrayidx2817 = getelementptr inbounds i16, i16* %2008, i64 %idxprom2816
  %2010 = load i16, i16* %arrayidx2817, align 2
  %conv2818 = zext i16 %2010 to i32
  %2011 = load i32, i32* %weightedpel, align 4
  %sub2819 = sub nsw i32 %conv2818, %2011
  %2012 = load i32*, i32** %d, align 8
  %incdec.ptr2820 = getelementptr inbounds i32, i32* %2012, i32 1
  store i32* %incdec.ptr2820, i32** %d, align 8
  store i32 %sub2819, i32* %2012, align 4
  %2013 = load i16, i16* %weightSpic, align 2
  %conv2821 = sext i16 %2013 to i32
  %2014 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2015 = load i16**, i16*** %ref1_pic, align 8
  %2016 = load i16, i16* %sy, align 2
  %conv2822 = sext i16 %2016 to i32
  %2017 = load i16, i16* %sx0, align 2
  %conv2823 = sext i16 %2017 to i32
  %add2824 = add nsw i32 %conv2823, 12
  %2018 = load i32, i32* %img_height, align 4
  %2019 = load i32, i32* %img_width, align 4
  %call2825 = call zeroext i16 %2014(i16** %2015, i32 %conv2822, i32 %add2824, i32 %2018, i32 %2019)
  %conv2826 = zext i16 %call2825 to i32
  %mul2827 = mul nsw i32 %conv2821, %conv2826
  %2020 = load i16, i16* %weightRpic, align 2
  %conv2828 = sext i16 %2020 to i32
  %2021 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2022 = load i16**, i16*** %ref2_pic, align 8
  %2023 = load i16, i16* %ry, align 2
  %conv2829 = sext i16 %2023 to i32
  %2024 = load i16, i16* %rx0, align 2
  %conv2830 = sext i16 %2024 to i32
  %add2831 = add nsw i32 %conv2830, 12
  %2025 = load i32, i32* %img_height, align 4
  %2026 = load i32, i32* %img_width, align 4
  %call2832 = call zeroext i16 %2021(i16** %2022, i32 %conv2829, i32 %add2831, i32 %2025, i32 %2026)
  %conv2833 = zext i16 %call2832 to i32
  %mul2834 = mul nsw i32 %conv2828, %conv2833
  %add2835 = add nsw i32 %mul2827, %mul2834
  %2027 = load i32, i32* @wp_luma_round, align 4
  %mul2836 = mul nsw i32 2, %2027
  %add2837 = add nsw i32 %add2835, %mul2836
  %2028 = load i32, i32* @luma_log_weight_denom, align 4
  %add2838 = add nsw i32 %2028, 1
  %shr2839 = ashr i32 %add2837, %add2838
  %2029 = load i16, i16* %offsetBi, align 2
  %conv2840 = sext i16 %2029 to i32
  %add2841 = add nsw i32 %shr2839, %conv2840
  %cmp2842 = icmp slt i32 %add2841, 0
  br i1 %cmp2842, label %cond.true2844, label %cond.false2845

cond.true2844:                                    ; preds = %cond.end2812
  br label %cond.end2896

cond.false2845:                                   ; preds = %cond.end2812
  %2030 = load i16, i16* %weightSpic, align 2
  %conv2846 = sext i16 %2030 to i32
  %2031 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2032 = load i16**, i16*** %ref1_pic, align 8
  %2033 = load i16, i16* %sy, align 2
  %conv2847 = sext i16 %2033 to i32
  %2034 = load i16, i16* %sx0, align 2
  %conv2848 = sext i16 %2034 to i32
  %add2849 = add nsw i32 %conv2848, 12
  %2035 = load i32, i32* %img_height, align 4
  %2036 = load i32, i32* %img_width, align 4
  %call2850 = call zeroext i16 %2031(i16** %2032, i32 %conv2847, i32 %add2849, i32 %2035, i32 %2036)
  %conv2851 = zext i16 %call2850 to i32
  %mul2852 = mul nsw i32 %conv2846, %conv2851
  %2037 = load i16, i16* %weightRpic, align 2
  %conv2853 = sext i16 %2037 to i32
  %2038 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2039 = load i16**, i16*** %ref2_pic, align 8
  %2040 = load i16, i16* %ry, align 2
  %conv2854 = sext i16 %2040 to i32
  %2041 = load i16, i16* %rx0, align 2
  %conv2855 = sext i16 %2041 to i32
  %add2856 = add nsw i32 %conv2855, 12
  %2042 = load i32, i32* %img_height, align 4
  %2043 = load i32, i32* %img_width, align 4
  %call2857 = call zeroext i16 %2038(i16** %2039, i32 %conv2854, i32 %add2856, i32 %2042, i32 %2043)
  %conv2858 = zext i16 %call2857 to i32
  %mul2859 = mul nsw i32 %conv2853, %conv2858
  %add2860 = add nsw i32 %mul2852, %mul2859
  %2044 = load i32, i32* @wp_luma_round, align 4
  %mul2861 = mul nsw i32 2, %2044
  %add2862 = add nsw i32 %add2860, %mul2861
  %2045 = load i32, i32* @luma_log_weight_denom, align 4
  %add2863 = add nsw i32 %2045, 1
  %shr2864 = ashr i32 %add2862, %add2863
  %2046 = load i16, i16* %offsetBi, align 2
  %conv2865 = sext i16 %2046 to i32
  %add2866 = add nsw i32 %shr2864, %conv2865
  %2047 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2867 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2047, i32 0, i32 155
  %2048 = load i32, i32* %max_imgpel_value2867, align 4
  %cmp2868 = icmp sgt i32 %add2866, %2048
  br i1 %cmp2868, label %cond.true2870, label %cond.false2872

cond.true2870:                                    ; preds = %cond.false2845
  %2049 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2871 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2049, i32 0, i32 155
  %2050 = load i32, i32* %max_imgpel_value2871, align 4
  br label %cond.end2894

cond.false2872:                                   ; preds = %cond.false2845
  %2051 = load i16, i16* %weightSpic, align 2
  %conv2873 = sext i16 %2051 to i32
  %2052 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2053 = load i16**, i16*** %ref1_pic, align 8
  %2054 = load i16, i16* %sy, align 2
  %conv2874 = sext i16 %2054 to i32
  %2055 = load i16, i16* %sx0, align 2
  %conv2875 = sext i16 %2055 to i32
  %add2876 = add nsw i32 %conv2875, 12
  %2056 = load i32, i32* %img_height, align 4
  %2057 = load i32, i32* %img_width, align 4
  %call2877 = call zeroext i16 %2052(i16** %2053, i32 %conv2874, i32 %add2876, i32 %2056, i32 %2057)
  %conv2878 = zext i16 %call2877 to i32
  %mul2879 = mul nsw i32 %conv2873, %conv2878
  %2058 = load i16, i16* %weightRpic, align 2
  %conv2880 = sext i16 %2058 to i32
  %2059 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2060 = load i16**, i16*** %ref2_pic, align 8
  %2061 = load i16, i16* %ry, align 2
  %conv2881 = sext i16 %2061 to i32
  %2062 = load i16, i16* %rx0, align 2
  %conv2882 = sext i16 %2062 to i32
  %add2883 = add nsw i32 %conv2882, 12
  %2063 = load i32, i32* %img_height, align 4
  %2064 = load i32, i32* %img_width, align 4
  %call2884 = call zeroext i16 %2059(i16** %2060, i32 %conv2881, i32 %add2883, i32 %2063, i32 %2064)
  %conv2885 = zext i16 %call2884 to i32
  %mul2886 = mul nsw i32 %conv2880, %conv2885
  %add2887 = add nsw i32 %mul2879, %mul2886
  %2065 = load i32, i32* @wp_luma_round, align 4
  %mul2888 = mul nsw i32 2, %2065
  %add2889 = add nsw i32 %add2887, %mul2888
  %2066 = load i32, i32* @luma_log_weight_denom, align 4
  %add2890 = add nsw i32 %2066, 1
  %shr2891 = ashr i32 %add2889, %add2890
  %2067 = load i16, i16* %offsetBi, align 2
  %conv2892 = sext i16 %2067 to i32
  %add2893 = add nsw i32 %shr2891, %conv2892
  br label %cond.end2894

cond.end2894:                                     ; preds = %cond.false2872, %cond.true2870
  %cond2895 = phi i32 [ %2050, %cond.true2870 ], [ %add2893, %cond.false2872 ]
  br label %cond.end2896

cond.end2896:                                     ; preds = %cond.end2894, %cond.true2844
  %cond2897 = phi i32 [ 0, %cond.true2844 ], [ %cond2895, %cond.end2894 ]
  store i32 %cond2897, i32* %weightedpel, align 4
  %2068 = load i16*, i16** %orig_line, align 8
  %2069 = load i16, i16* %x0, align 2
  %conv2898 = sext i16 %2069 to i32
  %add2899 = add nsw i32 %conv2898, 3
  %idxprom2900 = sext i32 %add2899 to i64
  %arrayidx2901 = getelementptr inbounds i16, i16* %2068, i64 %idxprom2900
  %2070 = load i16, i16* %arrayidx2901, align 2
  %conv2902 = zext i16 %2070 to i32
  %2071 = load i32, i32* %weightedpel, align 4
  %sub2903 = sub nsw i32 %conv2902, %2071
  %2072 = load i32*, i32** %d, align 8
  %incdec.ptr2904 = getelementptr inbounds i32, i32* %2072, i32 1
  store i32* %incdec.ptr2904, i32** %d, align 8
  store i32 %sub2903, i32* %2072, align 4
  %2073 = load i16, i16* %sy0, align 2
  %conv2905 = sext i16 %2073 to i32
  %add2906 = add nsw i32 %conv2905, 8
  %conv2907 = trunc i32 %add2906 to i16
  store i16 %conv2907, i16* %sy, align 2
  %2074 = load i16**, i16*** %orig_pic.addr, align 8
  %2075 = load i16, i16* %y0, align 2
  %conv2908 = sext i16 %2075 to i32
  %add2909 = add nsw i32 %conv2908, 2
  %idxprom2910 = sext i32 %add2909 to i64
  %arrayidx2911 = getelementptr inbounds i16*, i16** %2074, i64 %idxprom2910
  %2076 = load i16*, i16** %arrayidx2911, align 8
  store i16* %2076, i16** %orig_line, align 8
  %2077 = load i16, i16* %ry0, align 2
  %conv2912 = sext i16 %2077 to i32
  %add2913 = add nsw i32 %conv2912, 8
  %conv2914 = trunc i32 %add2913 to i16
  store i16 %conv2914, i16* %ry, align 2
  %2078 = load i16, i16* %weightSpic, align 2
  %conv2915 = sext i16 %2078 to i32
  %2079 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2080 = load i16**, i16*** %ref1_pic, align 8
  %2081 = load i16, i16* %sy, align 2
  %conv2916 = sext i16 %2081 to i32
  %2082 = load i16, i16* %sx0, align 2
  %conv2917 = sext i16 %2082 to i32
  %2083 = load i32, i32* %img_height, align 4
  %2084 = load i32, i32* %img_width, align 4
  %call2918 = call zeroext i16 %2079(i16** %2080, i32 %conv2916, i32 %conv2917, i32 %2083, i32 %2084)
  %conv2919 = zext i16 %call2918 to i32
  %mul2920 = mul nsw i32 %conv2915, %conv2919
  %2085 = load i16, i16* %weightRpic, align 2
  %conv2921 = sext i16 %2085 to i32
  %2086 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2087 = load i16**, i16*** %ref2_pic, align 8
  %2088 = load i16, i16* %ry, align 2
  %conv2922 = sext i16 %2088 to i32
  %2089 = load i16, i16* %rx0, align 2
  %conv2923 = sext i16 %2089 to i32
  %2090 = load i32, i32* %img_height, align 4
  %2091 = load i32, i32* %img_width, align 4
  %call2924 = call zeroext i16 %2086(i16** %2087, i32 %conv2922, i32 %conv2923, i32 %2090, i32 %2091)
  %conv2925 = zext i16 %call2924 to i32
  %mul2926 = mul nsw i32 %conv2921, %conv2925
  %add2927 = add nsw i32 %mul2920, %mul2926
  %2092 = load i32, i32* @wp_luma_round, align 4
  %mul2928 = mul nsw i32 2, %2092
  %add2929 = add nsw i32 %add2927, %mul2928
  %2093 = load i32, i32* @luma_log_weight_denom, align 4
  %add2930 = add nsw i32 %2093, 1
  %shr2931 = ashr i32 %add2929, %add2930
  %2094 = load i16, i16* %offsetBi, align 2
  %conv2932 = sext i16 %2094 to i32
  %add2933 = add nsw i32 %shr2931, %conv2932
  %cmp2934 = icmp slt i32 %add2933, 0
  br i1 %cmp2934, label %cond.true2936, label %cond.false2937

cond.true2936:                                    ; preds = %cond.end2896
  br label %cond.end2984

cond.false2937:                                   ; preds = %cond.end2896
  %2095 = load i16, i16* %weightSpic, align 2
  %conv2938 = sext i16 %2095 to i32
  %2096 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2097 = load i16**, i16*** %ref1_pic, align 8
  %2098 = load i16, i16* %sy, align 2
  %conv2939 = sext i16 %2098 to i32
  %2099 = load i16, i16* %sx0, align 2
  %conv2940 = sext i16 %2099 to i32
  %2100 = load i32, i32* %img_height, align 4
  %2101 = load i32, i32* %img_width, align 4
  %call2941 = call zeroext i16 %2096(i16** %2097, i32 %conv2939, i32 %conv2940, i32 %2100, i32 %2101)
  %conv2942 = zext i16 %call2941 to i32
  %mul2943 = mul nsw i32 %conv2938, %conv2942
  %2102 = load i16, i16* %weightRpic, align 2
  %conv2944 = sext i16 %2102 to i32
  %2103 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2104 = load i16**, i16*** %ref2_pic, align 8
  %2105 = load i16, i16* %ry, align 2
  %conv2945 = sext i16 %2105 to i32
  %2106 = load i16, i16* %rx0, align 2
  %conv2946 = sext i16 %2106 to i32
  %2107 = load i32, i32* %img_height, align 4
  %2108 = load i32, i32* %img_width, align 4
  %call2947 = call zeroext i16 %2103(i16** %2104, i32 %conv2945, i32 %conv2946, i32 %2107, i32 %2108)
  %conv2948 = zext i16 %call2947 to i32
  %mul2949 = mul nsw i32 %conv2944, %conv2948
  %add2950 = add nsw i32 %mul2943, %mul2949
  %2109 = load i32, i32* @wp_luma_round, align 4
  %mul2951 = mul nsw i32 2, %2109
  %add2952 = add nsw i32 %add2950, %mul2951
  %2110 = load i32, i32* @luma_log_weight_denom, align 4
  %add2953 = add nsw i32 %2110, 1
  %shr2954 = ashr i32 %add2952, %add2953
  %2111 = load i16, i16* %offsetBi, align 2
  %conv2955 = sext i16 %2111 to i32
  %add2956 = add nsw i32 %shr2954, %conv2955
  %2112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2957 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2112, i32 0, i32 155
  %2113 = load i32, i32* %max_imgpel_value2957, align 4
  %cmp2958 = icmp sgt i32 %add2956, %2113
  br i1 %cmp2958, label %cond.true2960, label %cond.false2962

cond.true2960:                                    ; preds = %cond.false2937
  %2114 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value2961 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2114, i32 0, i32 155
  %2115 = load i32, i32* %max_imgpel_value2961, align 4
  br label %cond.end2982

cond.false2962:                                   ; preds = %cond.false2937
  %2116 = load i16, i16* %weightSpic, align 2
  %conv2963 = sext i16 %2116 to i32
  %2117 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2118 = load i16**, i16*** %ref1_pic, align 8
  %2119 = load i16, i16* %sy, align 2
  %conv2964 = sext i16 %2119 to i32
  %2120 = load i16, i16* %sx0, align 2
  %conv2965 = sext i16 %2120 to i32
  %2121 = load i32, i32* %img_height, align 4
  %2122 = load i32, i32* %img_width, align 4
  %call2966 = call zeroext i16 %2117(i16** %2118, i32 %conv2964, i32 %conv2965, i32 %2121, i32 %2122)
  %conv2967 = zext i16 %call2966 to i32
  %mul2968 = mul nsw i32 %conv2963, %conv2967
  %2123 = load i16, i16* %weightRpic, align 2
  %conv2969 = sext i16 %2123 to i32
  %2124 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2125 = load i16**, i16*** %ref2_pic, align 8
  %2126 = load i16, i16* %ry, align 2
  %conv2970 = sext i16 %2126 to i32
  %2127 = load i16, i16* %rx0, align 2
  %conv2971 = sext i16 %2127 to i32
  %2128 = load i32, i32* %img_height, align 4
  %2129 = load i32, i32* %img_width, align 4
  %call2972 = call zeroext i16 %2124(i16** %2125, i32 %conv2970, i32 %conv2971, i32 %2128, i32 %2129)
  %conv2973 = zext i16 %call2972 to i32
  %mul2974 = mul nsw i32 %conv2969, %conv2973
  %add2975 = add nsw i32 %mul2968, %mul2974
  %2130 = load i32, i32* @wp_luma_round, align 4
  %mul2976 = mul nsw i32 2, %2130
  %add2977 = add nsw i32 %add2975, %mul2976
  %2131 = load i32, i32* @luma_log_weight_denom, align 4
  %add2978 = add nsw i32 %2131, 1
  %shr2979 = ashr i32 %add2977, %add2978
  %2132 = load i16, i16* %offsetBi, align 2
  %conv2980 = sext i16 %2132 to i32
  %add2981 = add nsw i32 %shr2979, %conv2980
  br label %cond.end2982

cond.end2982:                                     ; preds = %cond.false2962, %cond.true2960
  %cond2983 = phi i32 [ %2115, %cond.true2960 ], [ %add2981, %cond.false2962 ]
  br label %cond.end2984

cond.end2984:                                     ; preds = %cond.end2982, %cond.true2936
  %cond2985 = phi i32 [ 0, %cond.true2936 ], [ %cond2983, %cond.end2982 ]
  store i32 %cond2985, i32* %weightedpel, align 4
  %2133 = load i16*, i16** %orig_line, align 8
  %2134 = load i16, i16* %x0, align 2
  %idxprom2986 = sext i16 %2134 to i64
  %arrayidx2987 = getelementptr inbounds i16, i16* %2133, i64 %idxprom2986
  %2135 = load i16, i16* %arrayidx2987, align 2
  %conv2988 = zext i16 %2135 to i32
  %2136 = load i32, i32* %weightedpel, align 4
  %sub2989 = sub nsw i32 %conv2988, %2136
  %2137 = load i32*, i32** %d, align 8
  %incdec.ptr2990 = getelementptr inbounds i32, i32* %2137, i32 1
  store i32* %incdec.ptr2990, i32** %d, align 8
  store i32 %sub2989, i32* %2137, align 4
  %2138 = load i16, i16* %weightSpic, align 2
  %conv2991 = sext i16 %2138 to i32
  %2139 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2140 = load i16**, i16*** %ref1_pic, align 8
  %2141 = load i16, i16* %sy, align 2
  %conv2992 = sext i16 %2141 to i32
  %2142 = load i16, i16* %sx0, align 2
  %conv2993 = sext i16 %2142 to i32
  %add2994 = add nsw i32 %conv2993, 4
  %2143 = load i32, i32* %img_height, align 4
  %2144 = load i32, i32* %img_width, align 4
  %call2995 = call zeroext i16 %2139(i16** %2140, i32 %conv2992, i32 %add2994, i32 %2143, i32 %2144)
  %conv2996 = zext i16 %call2995 to i32
  %mul2997 = mul nsw i32 %conv2991, %conv2996
  %2145 = load i16, i16* %weightRpic, align 2
  %conv2998 = sext i16 %2145 to i32
  %2146 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2147 = load i16**, i16*** %ref2_pic, align 8
  %2148 = load i16, i16* %ry, align 2
  %conv2999 = sext i16 %2148 to i32
  %2149 = load i16, i16* %rx0, align 2
  %conv3000 = sext i16 %2149 to i32
  %add3001 = add nsw i32 %conv3000, 4
  %2150 = load i32, i32* %img_height, align 4
  %2151 = load i32, i32* %img_width, align 4
  %call3002 = call zeroext i16 %2146(i16** %2147, i32 %conv2999, i32 %add3001, i32 %2150, i32 %2151)
  %conv3003 = zext i16 %call3002 to i32
  %mul3004 = mul nsw i32 %conv2998, %conv3003
  %add3005 = add nsw i32 %mul2997, %mul3004
  %2152 = load i32, i32* @wp_luma_round, align 4
  %mul3006 = mul nsw i32 2, %2152
  %add3007 = add nsw i32 %add3005, %mul3006
  %2153 = load i32, i32* @luma_log_weight_denom, align 4
  %add3008 = add nsw i32 %2153, 1
  %shr3009 = ashr i32 %add3007, %add3008
  %2154 = load i16, i16* %offsetBi, align 2
  %conv3010 = sext i16 %2154 to i32
  %add3011 = add nsw i32 %shr3009, %conv3010
  %cmp3012 = icmp slt i32 %add3011, 0
  br i1 %cmp3012, label %cond.true3014, label %cond.false3015

cond.true3014:                                    ; preds = %cond.end2984
  br label %cond.end3066

cond.false3015:                                   ; preds = %cond.end2984
  %2155 = load i16, i16* %weightSpic, align 2
  %conv3016 = sext i16 %2155 to i32
  %2156 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2157 = load i16**, i16*** %ref1_pic, align 8
  %2158 = load i16, i16* %sy, align 2
  %conv3017 = sext i16 %2158 to i32
  %2159 = load i16, i16* %sx0, align 2
  %conv3018 = sext i16 %2159 to i32
  %add3019 = add nsw i32 %conv3018, 4
  %2160 = load i32, i32* %img_height, align 4
  %2161 = load i32, i32* %img_width, align 4
  %call3020 = call zeroext i16 %2156(i16** %2157, i32 %conv3017, i32 %add3019, i32 %2160, i32 %2161)
  %conv3021 = zext i16 %call3020 to i32
  %mul3022 = mul nsw i32 %conv3016, %conv3021
  %2162 = load i16, i16* %weightRpic, align 2
  %conv3023 = sext i16 %2162 to i32
  %2163 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2164 = load i16**, i16*** %ref2_pic, align 8
  %2165 = load i16, i16* %ry, align 2
  %conv3024 = sext i16 %2165 to i32
  %2166 = load i16, i16* %rx0, align 2
  %conv3025 = sext i16 %2166 to i32
  %add3026 = add nsw i32 %conv3025, 4
  %2167 = load i32, i32* %img_height, align 4
  %2168 = load i32, i32* %img_width, align 4
  %call3027 = call zeroext i16 %2163(i16** %2164, i32 %conv3024, i32 %add3026, i32 %2167, i32 %2168)
  %conv3028 = zext i16 %call3027 to i32
  %mul3029 = mul nsw i32 %conv3023, %conv3028
  %add3030 = add nsw i32 %mul3022, %mul3029
  %2169 = load i32, i32* @wp_luma_round, align 4
  %mul3031 = mul nsw i32 2, %2169
  %add3032 = add nsw i32 %add3030, %mul3031
  %2170 = load i32, i32* @luma_log_weight_denom, align 4
  %add3033 = add nsw i32 %2170, 1
  %shr3034 = ashr i32 %add3032, %add3033
  %2171 = load i16, i16* %offsetBi, align 2
  %conv3035 = sext i16 %2171 to i32
  %add3036 = add nsw i32 %shr3034, %conv3035
  %2172 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3037 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2172, i32 0, i32 155
  %2173 = load i32, i32* %max_imgpel_value3037, align 4
  %cmp3038 = icmp sgt i32 %add3036, %2173
  br i1 %cmp3038, label %cond.true3040, label %cond.false3042

cond.true3040:                                    ; preds = %cond.false3015
  %2174 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3041 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2174, i32 0, i32 155
  %2175 = load i32, i32* %max_imgpel_value3041, align 4
  br label %cond.end3064

cond.false3042:                                   ; preds = %cond.false3015
  %2176 = load i16, i16* %weightSpic, align 2
  %conv3043 = sext i16 %2176 to i32
  %2177 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2178 = load i16**, i16*** %ref1_pic, align 8
  %2179 = load i16, i16* %sy, align 2
  %conv3044 = sext i16 %2179 to i32
  %2180 = load i16, i16* %sx0, align 2
  %conv3045 = sext i16 %2180 to i32
  %add3046 = add nsw i32 %conv3045, 4
  %2181 = load i32, i32* %img_height, align 4
  %2182 = load i32, i32* %img_width, align 4
  %call3047 = call zeroext i16 %2177(i16** %2178, i32 %conv3044, i32 %add3046, i32 %2181, i32 %2182)
  %conv3048 = zext i16 %call3047 to i32
  %mul3049 = mul nsw i32 %conv3043, %conv3048
  %2183 = load i16, i16* %weightRpic, align 2
  %conv3050 = sext i16 %2183 to i32
  %2184 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2185 = load i16**, i16*** %ref2_pic, align 8
  %2186 = load i16, i16* %ry, align 2
  %conv3051 = sext i16 %2186 to i32
  %2187 = load i16, i16* %rx0, align 2
  %conv3052 = sext i16 %2187 to i32
  %add3053 = add nsw i32 %conv3052, 4
  %2188 = load i32, i32* %img_height, align 4
  %2189 = load i32, i32* %img_width, align 4
  %call3054 = call zeroext i16 %2184(i16** %2185, i32 %conv3051, i32 %add3053, i32 %2188, i32 %2189)
  %conv3055 = zext i16 %call3054 to i32
  %mul3056 = mul nsw i32 %conv3050, %conv3055
  %add3057 = add nsw i32 %mul3049, %mul3056
  %2190 = load i32, i32* @wp_luma_round, align 4
  %mul3058 = mul nsw i32 2, %2190
  %add3059 = add nsw i32 %add3057, %mul3058
  %2191 = load i32, i32* @luma_log_weight_denom, align 4
  %add3060 = add nsw i32 %2191, 1
  %shr3061 = ashr i32 %add3059, %add3060
  %2192 = load i16, i16* %offsetBi, align 2
  %conv3062 = sext i16 %2192 to i32
  %add3063 = add nsw i32 %shr3061, %conv3062
  br label %cond.end3064

cond.end3064:                                     ; preds = %cond.false3042, %cond.true3040
  %cond3065 = phi i32 [ %2175, %cond.true3040 ], [ %add3063, %cond.false3042 ]
  br label %cond.end3066

cond.end3066:                                     ; preds = %cond.end3064, %cond.true3014
  %cond3067 = phi i32 [ 0, %cond.true3014 ], [ %cond3065, %cond.end3064 ]
  store i32 %cond3067, i32* %weightedpel, align 4
  %2193 = load i16*, i16** %orig_line, align 8
  %2194 = load i16, i16* %x0, align 2
  %conv3068 = sext i16 %2194 to i32
  %add3069 = add nsw i32 %conv3068, 1
  %idxprom3070 = sext i32 %add3069 to i64
  %arrayidx3071 = getelementptr inbounds i16, i16* %2193, i64 %idxprom3070
  %2195 = load i16, i16* %arrayidx3071, align 2
  %conv3072 = zext i16 %2195 to i32
  %2196 = load i32, i32* %weightedpel, align 4
  %sub3073 = sub nsw i32 %conv3072, %2196
  %2197 = load i32*, i32** %d, align 8
  %incdec.ptr3074 = getelementptr inbounds i32, i32* %2197, i32 1
  store i32* %incdec.ptr3074, i32** %d, align 8
  store i32 %sub3073, i32* %2197, align 4
  %2198 = load i16, i16* %weightSpic, align 2
  %conv3075 = sext i16 %2198 to i32
  %2199 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2200 = load i16**, i16*** %ref1_pic, align 8
  %2201 = load i16, i16* %sy, align 2
  %conv3076 = sext i16 %2201 to i32
  %2202 = load i16, i16* %sx0, align 2
  %conv3077 = sext i16 %2202 to i32
  %add3078 = add nsw i32 %conv3077, 8
  %2203 = load i32, i32* %img_height, align 4
  %2204 = load i32, i32* %img_width, align 4
  %call3079 = call zeroext i16 %2199(i16** %2200, i32 %conv3076, i32 %add3078, i32 %2203, i32 %2204)
  %conv3080 = zext i16 %call3079 to i32
  %mul3081 = mul nsw i32 %conv3075, %conv3080
  %2205 = load i16, i16* %weightRpic, align 2
  %conv3082 = sext i16 %2205 to i32
  %2206 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2207 = load i16**, i16*** %ref2_pic, align 8
  %2208 = load i16, i16* %ry, align 2
  %conv3083 = sext i16 %2208 to i32
  %2209 = load i16, i16* %rx0, align 2
  %conv3084 = sext i16 %2209 to i32
  %add3085 = add nsw i32 %conv3084, 8
  %2210 = load i32, i32* %img_height, align 4
  %2211 = load i32, i32* %img_width, align 4
  %call3086 = call zeroext i16 %2206(i16** %2207, i32 %conv3083, i32 %add3085, i32 %2210, i32 %2211)
  %conv3087 = zext i16 %call3086 to i32
  %mul3088 = mul nsw i32 %conv3082, %conv3087
  %add3089 = add nsw i32 %mul3081, %mul3088
  %2212 = load i32, i32* @wp_luma_round, align 4
  %mul3090 = mul nsw i32 2, %2212
  %add3091 = add nsw i32 %add3089, %mul3090
  %2213 = load i32, i32* @luma_log_weight_denom, align 4
  %add3092 = add nsw i32 %2213, 1
  %shr3093 = ashr i32 %add3091, %add3092
  %2214 = load i16, i16* %offsetBi, align 2
  %conv3094 = sext i16 %2214 to i32
  %add3095 = add nsw i32 %shr3093, %conv3094
  %cmp3096 = icmp slt i32 %add3095, 0
  br i1 %cmp3096, label %cond.true3098, label %cond.false3099

cond.true3098:                                    ; preds = %cond.end3066
  br label %cond.end3150

cond.false3099:                                   ; preds = %cond.end3066
  %2215 = load i16, i16* %weightSpic, align 2
  %conv3100 = sext i16 %2215 to i32
  %2216 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2217 = load i16**, i16*** %ref1_pic, align 8
  %2218 = load i16, i16* %sy, align 2
  %conv3101 = sext i16 %2218 to i32
  %2219 = load i16, i16* %sx0, align 2
  %conv3102 = sext i16 %2219 to i32
  %add3103 = add nsw i32 %conv3102, 8
  %2220 = load i32, i32* %img_height, align 4
  %2221 = load i32, i32* %img_width, align 4
  %call3104 = call zeroext i16 %2216(i16** %2217, i32 %conv3101, i32 %add3103, i32 %2220, i32 %2221)
  %conv3105 = zext i16 %call3104 to i32
  %mul3106 = mul nsw i32 %conv3100, %conv3105
  %2222 = load i16, i16* %weightRpic, align 2
  %conv3107 = sext i16 %2222 to i32
  %2223 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2224 = load i16**, i16*** %ref2_pic, align 8
  %2225 = load i16, i16* %ry, align 2
  %conv3108 = sext i16 %2225 to i32
  %2226 = load i16, i16* %rx0, align 2
  %conv3109 = sext i16 %2226 to i32
  %add3110 = add nsw i32 %conv3109, 8
  %2227 = load i32, i32* %img_height, align 4
  %2228 = load i32, i32* %img_width, align 4
  %call3111 = call zeroext i16 %2223(i16** %2224, i32 %conv3108, i32 %add3110, i32 %2227, i32 %2228)
  %conv3112 = zext i16 %call3111 to i32
  %mul3113 = mul nsw i32 %conv3107, %conv3112
  %add3114 = add nsw i32 %mul3106, %mul3113
  %2229 = load i32, i32* @wp_luma_round, align 4
  %mul3115 = mul nsw i32 2, %2229
  %add3116 = add nsw i32 %add3114, %mul3115
  %2230 = load i32, i32* @luma_log_weight_denom, align 4
  %add3117 = add nsw i32 %2230, 1
  %shr3118 = ashr i32 %add3116, %add3117
  %2231 = load i16, i16* %offsetBi, align 2
  %conv3119 = sext i16 %2231 to i32
  %add3120 = add nsw i32 %shr3118, %conv3119
  %2232 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3121 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2232, i32 0, i32 155
  %2233 = load i32, i32* %max_imgpel_value3121, align 4
  %cmp3122 = icmp sgt i32 %add3120, %2233
  br i1 %cmp3122, label %cond.true3124, label %cond.false3126

cond.true3124:                                    ; preds = %cond.false3099
  %2234 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3125 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2234, i32 0, i32 155
  %2235 = load i32, i32* %max_imgpel_value3125, align 4
  br label %cond.end3148

cond.false3126:                                   ; preds = %cond.false3099
  %2236 = load i16, i16* %weightSpic, align 2
  %conv3127 = sext i16 %2236 to i32
  %2237 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2238 = load i16**, i16*** %ref1_pic, align 8
  %2239 = load i16, i16* %sy, align 2
  %conv3128 = sext i16 %2239 to i32
  %2240 = load i16, i16* %sx0, align 2
  %conv3129 = sext i16 %2240 to i32
  %add3130 = add nsw i32 %conv3129, 8
  %2241 = load i32, i32* %img_height, align 4
  %2242 = load i32, i32* %img_width, align 4
  %call3131 = call zeroext i16 %2237(i16** %2238, i32 %conv3128, i32 %add3130, i32 %2241, i32 %2242)
  %conv3132 = zext i16 %call3131 to i32
  %mul3133 = mul nsw i32 %conv3127, %conv3132
  %2243 = load i16, i16* %weightRpic, align 2
  %conv3134 = sext i16 %2243 to i32
  %2244 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2245 = load i16**, i16*** %ref2_pic, align 8
  %2246 = load i16, i16* %ry, align 2
  %conv3135 = sext i16 %2246 to i32
  %2247 = load i16, i16* %rx0, align 2
  %conv3136 = sext i16 %2247 to i32
  %add3137 = add nsw i32 %conv3136, 8
  %2248 = load i32, i32* %img_height, align 4
  %2249 = load i32, i32* %img_width, align 4
  %call3138 = call zeroext i16 %2244(i16** %2245, i32 %conv3135, i32 %add3137, i32 %2248, i32 %2249)
  %conv3139 = zext i16 %call3138 to i32
  %mul3140 = mul nsw i32 %conv3134, %conv3139
  %add3141 = add nsw i32 %mul3133, %mul3140
  %2250 = load i32, i32* @wp_luma_round, align 4
  %mul3142 = mul nsw i32 2, %2250
  %add3143 = add nsw i32 %add3141, %mul3142
  %2251 = load i32, i32* @luma_log_weight_denom, align 4
  %add3144 = add nsw i32 %2251, 1
  %shr3145 = ashr i32 %add3143, %add3144
  %2252 = load i16, i16* %offsetBi, align 2
  %conv3146 = sext i16 %2252 to i32
  %add3147 = add nsw i32 %shr3145, %conv3146
  br label %cond.end3148

cond.end3148:                                     ; preds = %cond.false3126, %cond.true3124
  %cond3149 = phi i32 [ %2235, %cond.true3124 ], [ %add3147, %cond.false3126 ]
  br label %cond.end3150

cond.end3150:                                     ; preds = %cond.end3148, %cond.true3098
  %cond3151 = phi i32 [ 0, %cond.true3098 ], [ %cond3149, %cond.end3148 ]
  store i32 %cond3151, i32* %weightedpel, align 4
  %2253 = load i16*, i16** %orig_line, align 8
  %2254 = load i16, i16* %x0, align 2
  %conv3152 = sext i16 %2254 to i32
  %add3153 = add nsw i32 %conv3152, 2
  %idxprom3154 = sext i32 %add3153 to i64
  %arrayidx3155 = getelementptr inbounds i16, i16* %2253, i64 %idxprom3154
  %2255 = load i16, i16* %arrayidx3155, align 2
  %conv3156 = zext i16 %2255 to i32
  %2256 = load i32, i32* %weightedpel, align 4
  %sub3157 = sub nsw i32 %conv3156, %2256
  %2257 = load i32*, i32** %d, align 8
  %incdec.ptr3158 = getelementptr inbounds i32, i32* %2257, i32 1
  store i32* %incdec.ptr3158, i32** %d, align 8
  store i32 %sub3157, i32* %2257, align 4
  %2258 = load i16, i16* %weightSpic, align 2
  %conv3159 = sext i16 %2258 to i32
  %2259 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2260 = load i16**, i16*** %ref1_pic, align 8
  %2261 = load i16, i16* %sy, align 2
  %conv3160 = sext i16 %2261 to i32
  %2262 = load i16, i16* %sx0, align 2
  %conv3161 = sext i16 %2262 to i32
  %add3162 = add nsw i32 %conv3161, 12
  %2263 = load i32, i32* %img_height, align 4
  %2264 = load i32, i32* %img_width, align 4
  %call3163 = call zeroext i16 %2259(i16** %2260, i32 %conv3160, i32 %add3162, i32 %2263, i32 %2264)
  %conv3164 = zext i16 %call3163 to i32
  %mul3165 = mul nsw i32 %conv3159, %conv3164
  %2265 = load i16, i16* %weightRpic, align 2
  %conv3166 = sext i16 %2265 to i32
  %2266 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2267 = load i16**, i16*** %ref2_pic, align 8
  %2268 = load i16, i16* %ry, align 2
  %conv3167 = sext i16 %2268 to i32
  %2269 = load i16, i16* %rx0, align 2
  %conv3168 = sext i16 %2269 to i32
  %add3169 = add nsw i32 %conv3168, 12
  %2270 = load i32, i32* %img_height, align 4
  %2271 = load i32, i32* %img_width, align 4
  %call3170 = call zeroext i16 %2266(i16** %2267, i32 %conv3167, i32 %add3169, i32 %2270, i32 %2271)
  %conv3171 = zext i16 %call3170 to i32
  %mul3172 = mul nsw i32 %conv3166, %conv3171
  %add3173 = add nsw i32 %mul3165, %mul3172
  %2272 = load i32, i32* @wp_luma_round, align 4
  %mul3174 = mul nsw i32 2, %2272
  %add3175 = add nsw i32 %add3173, %mul3174
  %2273 = load i32, i32* @luma_log_weight_denom, align 4
  %add3176 = add nsw i32 %2273, 1
  %shr3177 = ashr i32 %add3175, %add3176
  %2274 = load i16, i16* %offsetBi, align 2
  %conv3178 = sext i16 %2274 to i32
  %add3179 = add nsw i32 %shr3177, %conv3178
  %cmp3180 = icmp slt i32 %add3179, 0
  br i1 %cmp3180, label %cond.true3182, label %cond.false3183

cond.true3182:                                    ; preds = %cond.end3150
  br label %cond.end3234

cond.false3183:                                   ; preds = %cond.end3150
  %2275 = load i16, i16* %weightSpic, align 2
  %conv3184 = sext i16 %2275 to i32
  %2276 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2277 = load i16**, i16*** %ref1_pic, align 8
  %2278 = load i16, i16* %sy, align 2
  %conv3185 = sext i16 %2278 to i32
  %2279 = load i16, i16* %sx0, align 2
  %conv3186 = sext i16 %2279 to i32
  %add3187 = add nsw i32 %conv3186, 12
  %2280 = load i32, i32* %img_height, align 4
  %2281 = load i32, i32* %img_width, align 4
  %call3188 = call zeroext i16 %2276(i16** %2277, i32 %conv3185, i32 %add3187, i32 %2280, i32 %2281)
  %conv3189 = zext i16 %call3188 to i32
  %mul3190 = mul nsw i32 %conv3184, %conv3189
  %2282 = load i16, i16* %weightRpic, align 2
  %conv3191 = sext i16 %2282 to i32
  %2283 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2284 = load i16**, i16*** %ref2_pic, align 8
  %2285 = load i16, i16* %ry, align 2
  %conv3192 = sext i16 %2285 to i32
  %2286 = load i16, i16* %rx0, align 2
  %conv3193 = sext i16 %2286 to i32
  %add3194 = add nsw i32 %conv3193, 12
  %2287 = load i32, i32* %img_height, align 4
  %2288 = load i32, i32* %img_width, align 4
  %call3195 = call zeroext i16 %2283(i16** %2284, i32 %conv3192, i32 %add3194, i32 %2287, i32 %2288)
  %conv3196 = zext i16 %call3195 to i32
  %mul3197 = mul nsw i32 %conv3191, %conv3196
  %add3198 = add nsw i32 %mul3190, %mul3197
  %2289 = load i32, i32* @wp_luma_round, align 4
  %mul3199 = mul nsw i32 2, %2289
  %add3200 = add nsw i32 %add3198, %mul3199
  %2290 = load i32, i32* @luma_log_weight_denom, align 4
  %add3201 = add nsw i32 %2290, 1
  %shr3202 = ashr i32 %add3200, %add3201
  %2291 = load i16, i16* %offsetBi, align 2
  %conv3203 = sext i16 %2291 to i32
  %add3204 = add nsw i32 %shr3202, %conv3203
  %2292 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2292, i32 0, i32 155
  %2293 = load i32, i32* %max_imgpel_value3205, align 4
  %cmp3206 = icmp sgt i32 %add3204, %2293
  br i1 %cmp3206, label %cond.true3208, label %cond.false3210

cond.true3208:                                    ; preds = %cond.false3183
  %2294 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3209 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2294, i32 0, i32 155
  %2295 = load i32, i32* %max_imgpel_value3209, align 4
  br label %cond.end3232

cond.false3210:                                   ; preds = %cond.false3183
  %2296 = load i16, i16* %weightSpic, align 2
  %conv3211 = sext i16 %2296 to i32
  %2297 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2298 = load i16**, i16*** %ref1_pic, align 8
  %2299 = load i16, i16* %sy, align 2
  %conv3212 = sext i16 %2299 to i32
  %2300 = load i16, i16* %sx0, align 2
  %conv3213 = sext i16 %2300 to i32
  %add3214 = add nsw i32 %conv3213, 12
  %2301 = load i32, i32* %img_height, align 4
  %2302 = load i32, i32* %img_width, align 4
  %call3215 = call zeroext i16 %2297(i16** %2298, i32 %conv3212, i32 %add3214, i32 %2301, i32 %2302)
  %conv3216 = zext i16 %call3215 to i32
  %mul3217 = mul nsw i32 %conv3211, %conv3216
  %2303 = load i16, i16* %weightRpic, align 2
  %conv3218 = sext i16 %2303 to i32
  %2304 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2305 = load i16**, i16*** %ref2_pic, align 8
  %2306 = load i16, i16* %ry, align 2
  %conv3219 = sext i16 %2306 to i32
  %2307 = load i16, i16* %rx0, align 2
  %conv3220 = sext i16 %2307 to i32
  %add3221 = add nsw i32 %conv3220, 12
  %2308 = load i32, i32* %img_height, align 4
  %2309 = load i32, i32* %img_width, align 4
  %call3222 = call zeroext i16 %2304(i16** %2305, i32 %conv3219, i32 %add3221, i32 %2308, i32 %2309)
  %conv3223 = zext i16 %call3222 to i32
  %mul3224 = mul nsw i32 %conv3218, %conv3223
  %add3225 = add nsw i32 %mul3217, %mul3224
  %2310 = load i32, i32* @wp_luma_round, align 4
  %mul3226 = mul nsw i32 2, %2310
  %add3227 = add nsw i32 %add3225, %mul3226
  %2311 = load i32, i32* @luma_log_weight_denom, align 4
  %add3228 = add nsw i32 %2311, 1
  %shr3229 = ashr i32 %add3227, %add3228
  %2312 = load i16, i16* %offsetBi, align 2
  %conv3230 = sext i16 %2312 to i32
  %add3231 = add nsw i32 %shr3229, %conv3230
  br label %cond.end3232

cond.end3232:                                     ; preds = %cond.false3210, %cond.true3208
  %cond3233 = phi i32 [ %2295, %cond.true3208 ], [ %add3231, %cond.false3210 ]
  br label %cond.end3234

cond.end3234:                                     ; preds = %cond.end3232, %cond.true3182
  %cond3235 = phi i32 [ 0, %cond.true3182 ], [ %cond3233, %cond.end3232 ]
  store i32 %cond3235, i32* %weightedpel, align 4
  %2313 = load i16*, i16** %orig_line, align 8
  %2314 = load i16, i16* %x0, align 2
  %conv3236 = sext i16 %2314 to i32
  %add3237 = add nsw i32 %conv3236, 3
  %idxprom3238 = sext i32 %add3237 to i64
  %arrayidx3239 = getelementptr inbounds i16, i16* %2313, i64 %idxprom3238
  %2315 = load i16, i16* %arrayidx3239, align 2
  %conv3240 = zext i16 %2315 to i32
  %2316 = load i32, i32* %weightedpel, align 4
  %sub3241 = sub nsw i32 %conv3240, %2316
  %2317 = load i32*, i32** %d, align 8
  %incdec.ptr3242 = getelementptr inbounds i32, i32* %2317, i32 1
  store i32* %incdec.ptr3242, i32** %d, align 8
  store i32 %sub3241, i32* %2317, align 4
  %2318 = load i16, i16* %sy0, align 2
  %conv3243 = sext i16 %2318 to i32
  %add3244 = add nsw i32 %conv3243, 12
  %conv3245 = trunc i32 %add3244 to i16
  store i16 %conv3245, i16* %sy, align 2
  %2319 = load i16**, i16*** %orig_pic.addr, align 8
  %2320 = load i16, i16* %y0, align 2
  %conv3246 = sext i16 %2320 to i32
  %add3247 = add nsw i32 %conv3246, 3
  %idxprom3248 = sext i32 %add3247 to i64
  %arrayidx3249 = getelementptr inbounds i16*, i16** %2319, i64 %idxprom3248
  %2321 = load i16*, i16** %arrayidx3249, align 8
  store i16* %2321, i16** %orig_line, align 8
  %2322 = load i16, i16* %ry0, align 2
  %conv3250 = sext i16 %2322 to i32
  %add3251 = add nsw i32 %conv3250, 12
  %conv3252 = trunc i32 %add3251 to i16
  store i16 %conv3252, i16* %ry, align 2
  %2323 = load i16, i16* %weightSpic, align 2
  %conv3253 = sext i16 %2323 to i32
  %2324 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2325 = load i16**, i16*** %ref1_pic, align 8
  %2326 = load i16, i16* %sy, align 2
  %conv3254 = sext i16 %2326 to i32
  %2327 = load i16, i16* %sx0, align 2
  %conv3255 = sext i16 %2327 to i32
  %2328 = load i32, i32* %img_height, align 4
  %2329 = load i32, i32* %img_width, align 4
  %call3256 = call zeroext i16 %2324(i16** %2325, i32 %conv3254, i32 %conv3255, i32 %2328, i32 %2329)
  %conv3257 = zext i16 %call3256 to i32
  %mul3258 = mul nsw i32 %conv3253, %conv3257
  %2330 = load i16, i16* %weightRpic, align 2
  %conv3259 = sext i16 %2330 to i32
  %2331 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2332 = load i16**, i16*** %ref2_pic, align 8
  %2333 = load i16, i16* %ry, align 2
  %conv3260 = sext i16 %2333 to i32
  %2334 = load i16, i16* %rx0, align 2
  %conv3261 = sext i16 %2334 to i32
  %2335 = load i32, i32* %img_height, align 4
  %2336 = load i32, i32* %img_width, align 4
  %call3262 = call zeroext i16 %2331(i16** %2332, i32 %conv3260, i32 %conv3261, i32 %2335, i32 %2336)
  %conv3263 = zext i16 %call3262 to i32
  %mul3264 = mul nsw i32 %conv3259, %conv3263
  %add3265 = add nsw i32 %mul3258, %mul3264
  %2337 = load i32, i32* @wp_luma_round, align 4
  %mul3266 = mul nsw i32 2, %2337
  %add3267 = add nsw i32 %add3265, %mul3266
  %2338 = load i32, i32* @luma_log_weight_denom, align 4
  %add3268 = add nsw i32 %2338, 1
  %shr3269 = ashr i32 %add3267, %add3268
  %2339 = load i16, i16* %offsetBi, align 2
  %conv3270 = sext i16 %2339 to i32
  %add3271 = add nsw i32 %shr3269, %conv3270
  %cmp3272 = icmp slt i32 %add3271, 0
  br i1 %cmp3272, label %cond.true3274, label %cond.false3275

cond.true3274:                                    ; preds = %cond.end3234
  br label %cond.end3322

cond.false3275:                                   ; preds = %cond.end3234
  %2340 = load i16, i16* %weightSpic, align 2
  %conv3276 = sext i16 %2340 to i32
  %2341 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2342 = load i16**, i16*** %ref1_pic, align 8
  %2343 = load i16, i16* %sy, align 2
  %conv3277 = sext i16 %2343 to i32
  %2344 = load i16, i16* %sx0, align 2
  %conv3278 = sext i16 %2344 to i32
  %2345 = load i32, i32* %img_height, align 4
  %2346 = load i32, i32* %img_width, align 4
  %call3279 = call zeroext i16 %2341(i16** %2342, i32 %conv3277, i32 %conv3278, i32 %2345, i32 %2346)
  %conv3280 = zext i16 %call3279 to i32
  %mul3281 = mul nsw i32 %conv3276, %conv3280
  %2347 = load i16, i16* %weightRpic, align 2
  %conv3282 = sext i16 %2347 to i32
  %2348 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2349 = load i16**, i16*** %ref2_pic, align 8
  %2350 = load i16, i16* %ry, align 2
  %conv3283 = sext i16 %2350 to i32
  %2351 = load i16, i16* %rx0, align 2
  %conv3284 = sext i16 %2351 to i32
  %2352 = load i32, i32* %img_height, align 4
  %2353 = load i32, i32* %img_width, align 4
  %call3285 = call zeroext i16 %2348(i16** %2349, i32 %conv3283, i32 %conv3284, i32 %2352, i32 %2353)
  %conv3286 = zext i16 %call3285 to i32
  %mul3287 = mul nsw i32 %conv3282, %conv3286
  %add3288 = add nsw i32 %mul3281, %mul3287
  %2354 = load i32, i32* @wp_luma_round, align 4
  %mul3289 = mul nsw i32 2, %2354
  %add3290 = add nsw i32 %add3288, %mul3289
  %2355 = load i32, i32* @luma_log_weight_denom, align 4
  %add3291 = add nsw i32 %2355, 1
  %shr3292 = ashr i32 %add3290, %add3291
  %2356 = load i16, i16* %offsetBi, align 2
  %conv3293 = sext i16 %2356 to i32
  %add3294 = add nsw i32 %shr3292, %conv3293
  %2357 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3295 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2357, i32 0, i32 155
  %2358 = load i32, i32* %max_imgpel_value3295, align 4
  %cmp3296 = icmp sgt i32 %add3294, %2358
  br i1 %cmp3296, label %cond.true3298, label %cond.false3300

cond.true3298:                                    ; preds = %cond.false3275
  %2359 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3299 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2359, i32 0, i32 155
  %2360 = load i32, i32* %max_imgpel_value3299, align 4
  br label %cond.end3320

cond.false3300:                                   ; preds = %cond.false3275
  %2361 = load i16, i16* %weightSpic, align 2
  %conv3301 = sext i16 %2361 to i32
  %2362 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2363 = load i16**, i16*** %ref1_pic, align 8
  %2364 = load i16, i16* %sy, align 2
  %conv3302 = sext i16 %2364 to i32
  %2365 = load i16, i16* %sx0, align 2
  %conv3303 = sext i16 %2365 to i32
  %2366 = load i32, i32* %img_height, align 4
  %2367 = load i32, i32* %img_width, align 4
  %call3304 = call zeroext i16 %2362(i16** %2363, i32 %conv3302, i32 %conv3303, i32 %2366, i32 %2367)
  %conv3305 = zext i16 %call3304 to i32
  %mul3306 = mul nsw i32 %conv3301, %conv3305
  %2368 = load i16, i16* %weightRpic, align 2
  %conv3307 = sext i16 %2368 to i32
  %2369 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2370 = load i16**, i16*** %ref2_pic, align 8
  %2371 = load i16, i16* %ry, align 2
  %conv3308 = sext i16 %2371 to i32
  %2372 = load i16, i16* %rx0, align 2
  %conv3309 = sext i16 %2372 to i32
  %2373 = load i32, i32* %img_height, align 4
  %2374 = load i32, i32* %img_width, align 4
  %call3310 = call zeroext i16 %2369(i16** %2370, i32 %conv3308, i32 %conv3309, i32 %2373, i32 %2374)
  %conv3311 = zext i16 %call3310 to i32
  %mul3312 = mul nsw i32 %conv3307, %conv3311
  %add3313 = add nsw i32 %mul3306, %mul3312
  %2375 = load i32, i32* @wp_luma_round, align 4
  %mul3314 = mul nsw i32 2, %2375
  %add3315 = add nsw i32 %add3313, %mul3314
  %2376 = load i32, i32* @luma_log_weight_denom, align 4
  %add3316 = add nsw i32 %2376, 1
  %shr3317 = ashr i32 %add3315, %add3316
  %2377 = load i16, i16* %offsetBi, align 2
  %conv3318 = sext i16 %2377 to i32
  %add3319 = add nsw i32 %shr3317, %conv3318
  br label %cond.end3320

cond.end3320:                                     ; preds = %cond.false3300, %cond.true3298
  %cond3321 = phi i32 [ %2360, %cond.true3298 ], [ %add3319, %cond.false3300 ]
  br label %cond.end3322

cond.end3322:                                     ; preds = %cond.end3320, %cond.true3274
  %cond3323 = phi i32 [ 0, %cond.true3274 ], [ %cond3321, %cond.end3320 ]
  store i32 %cond3323, i32* %weightedpel, align 4
  %2378 = load i16*, i16** %orig_line, align 8
  %2379 = load i16, i16* %x0, align 2
  %idxprom3324 = sext i16 %2379 to i64
  %arrayidx3325 = getelementptr inbounds i16, i16* %2378, i64 %idxprom3324
  %2380 = load i16, i16* %arrayidx3325, align 2
  %conv3326 = zext i16 %2380 to i32
  %2381 = load i32, i32* %weightedpel, align 4
  %sub3327 = sub nsw i32 %conv3326, %2381
  %2382 = load i32*, i32** %d, align 8
  %incdec.ptr3328 = getelementptr inbounds i32, i32* %2382, i32 1
  store i32* %incdec.ptr3328, i32** %d, align 8
  store i32 %sub3327, i32* %2382, align 4
  %2383 = load i16, i16* %weightSpic, align 2
  %conv3329 = sext i16 %2383 to i32
  %2384 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2385 = load i16**, i16*** %ref1_pic, align 8
  %2386 = load i16, i16* %sy, align 2
  %conv3330 = sext i16 %2386 to i32
  %2387 = load i16, i16* %sx0, align 2
  %conv3331 = sext i16 %2387 to i32
  %add3332 = add nsw i32 %conv3331, 4
  %2388 = load i32, i32* %img_height, align 4
  %2389 = load i32, i32* %img_width, align 4
  %call3333 = call zeroext i16 %2384(i16** %2385, i32 %conv3330, i32 %add3332, i32 %2388, i32 %2389)
  %conv3334 = zext i16 %call3333 to i32
  %mul3335 = mul nsw i32 %conv3329, %conv3334
  %2390 = load i16, i16* %weightRpic, align 2
  %conv3336 = sext i16 %2390 to i32
  %2391 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2392 = load i16**, i16*** %ref2_pic, align 8
  %2393 = load i16, i16* %ry, align 2
  %conv3337 = sext i16 %2393 to i32
  %2394 = load i16, i16* %rx0, align 2
  %conv3338 = sext i16 %2394 to i32
  %add3339 = add nsw i32 %conv3338, 4
  %2395 = load i32, i32* %img_height, align 4
  %2396 = load i32, i32* %img_width, align 4
  %call3340 = call zeroext i16 %2391(i16** %2392, i32 %conv3337, i32 %add3339, i32 %2395, i32 %2396)
  %conv3341 = zext i16 %call3340 to i32
  %mul3342 = mul nsw i32 %conv3336, %conv3341
  %add3343 = add nsw i32 %mul3335, %mul3342
  %2397 = load i32, i32* @wp_luma_round, align 4
  %mul3344 = mul nsw i32 2, %2397
  %add3345 = add nsw i32 %add3343, %mul3344
  %2398 = load i32, i32* @luma_log_weight_denom, align 4
  %add3346 = add nsw i32 %2398, 1
  %shr3347 = ashr i32 %add3345, %add3346
  %2399 = load i16, i16* %offsetBi, align 2
  %conv3348 = sext i16 %2399 to i32
  %add3349 = add nsw i32 %shr3347, %conv3348
  %cmp3350 = icmp slt i32 %add3349, 0
  br i1 %cmp3350, label %cond.true3352, label %cond.false3353

cond.true3352:                                    ; preds = %cond.end3322
  br label %cond.end3404

cond.false3353:                                   ; preds = %cond.end3322
  %2400 = load i16, i16* %weightSpic, align 2
  %conv3354 = sext i16 %2400 to i32
  %2401 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2402 = load i16**, i16*** %ref1_pic, align 8
  %2403 = load i16, i16* %sy, align 2
  %conv3355 = sext i16 %2403 to i32
  %2404 = load i16, i16* %sx0, align 2
  %conv3356 = sext i16 %2404 to i32
  %add3357 = add nsw i32 %conv3356, 4
  %2405 = load i32, i32* %img_height, align 4
  %2406 = load i32, i32* %img_width, align 4
  %call3358 = call zeroext i16 %2401(i16** %2402, i32 %conv3355, i32 %add3357, i32 %2405, i32 %2406)
  %conv3359 = zext i16 %call3358 to i32
  %mul3360 = mul nsw i32 %conv3354, %conv3359
  %2407 = load i16, i16* %weightRpic, align 2
  %conv3361 = sext i16 %2407 to i32
  %2408 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2409 = load i16**, i16*** %ref2_pic, align 8
  %2410 = load i16, i16* %ry, align 2
  %conv3362 = sext i16 %2410 to i32
  %2411 = load i16, i16* %rx0, align 2
  %conv3363 = sext i16 %2411 to i32
  %add3364 = add nsw i32 %conv3363, 4
  %2412 = load i32, i32* %img_height, align 4
  %2413 = load i32, i32* %img_width, align 4
  %call3365 = call zeroext i16 %2408(i16** %2409, i32 %conv3362, i32 %add3364, i32 %2412, i32 %2413)
  %conv3366 = zext i16 %call3365 to i32
  %mul3367 = mul nsw i32 %conv3361, %conv3366
  %add3368 = add nsw i32 %mul3360, %mul3367
  %2414 = load i32, i32* @wp_luma_round, align 4
  %mul3369 = mul nsw i32 2, %2414
  %add3370 = add nsw i32 %add3368, %mul3369
  %2415 = load i32, i32* @luma_log_weight_denom, align 4
  %add3371 = add nsw i32 %2415, 1
  %shr3372 = ashr i32 %add3370, %add3371
  %2416 = load i16, i16* %offsetBi, align 2
  %conv3373 = sext i16 %2416 to i32
  %add3374 = add nsw i32 %shr3372, %conv3373
  %2417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3375 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2417, i32 0, i32 155
  %2418 = load i32, i32* %max_imgpel_value3375, align 4
  %cmp3376 = icmp sgt i32 %add3374, %2418
  br i1 %cmp3376, label %cond.true3378, label %cond.false3380

cond.true3378:                                    ; preds = %cond.false3353
  %2419 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2419, i32 0, i32 155
  %2420 = load i32, i32* %max_imgpel_value3379, align 4
  br label %cond.end3402

cond.false3380:                                   ; preds = %cond.false3353
  %2421 = load i16, i16* %weightSpic, align 2
  %conv3381 = sext i16 %2421 to i32
  %2422 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2423 = load i16**, i16*** %ref1_pic, align 8
  %2424 = load i16, i16* %sy, align 2
  %conv3382 = sext i16 %2424 to i32
  %2425 = load i16, i16* %sx0, align 2
  %conv3383 = sext i16 %2425 to i32
  %add3384 = add nsw i32 %conv3383, 4
  %2426 = load i32, i32* %img_height, align 4
  %2427 = load i32, i32* %img_width, align 4
  %call3385 = call zeroext i16 %2422(i16** %2423, i32 %conv3382, i32 %add3384, i32 %2426, i32 %2427)
  %conv3386 = zext i16 %call3385 to i32
  %mul3387 = mul nsw i32 %conv3381, %conv3386
  %2428 = load i16, i16* %weightRpic, align 2
  %conv3388 = sext i16 %2428 to i32
  %2429 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2430 = load i16**, i16*** %ref2_pic, align 8
  %2431 = load i16, i16* %ry, align 2
  %conv3389 = sext i16 %2431 to i32
  %2432 = load i16, i16* %rx0, align 2
  %conv3390 = sext i16 %2432 to i32
  %add3391 = add nsw i32 %conv3390, 4
  %2433 = load i32, i32* %img_height, align 4
  %2434 = load i32, i32* %img_width, align 4
  %call3392 = call zeroext i16 %2429(i16** %2430, i32 %conv3389, i32 %add3391, i32 %2433, i32 %2434)
  %conv3393 = zext i16 %call3392 to i32
  %mul3394 = mul nsw i32 %conv3388, %conv3393
  %add3395 = add nsw i32 %mul3387, %mul3394
  %2435 = load i32, i32* @wp_luma_round, align 4
  %mul3396 = mul nsw i32 2, %2435
  %add3397 = add nsw i32 %add3395, %mul3396
  %2436 = load i32, i32* @luma_log_weight_denom, align 4
  %add3398 = add nsw i32 %2436, 1
  %shr3399 = ashr i32 %add3397, %add3398
  %2437 = load i16, i16* %offsetBi, align 2
  %conv3400 = sext i16 %2437 to i32
  %add3401 = add nsw i32 %shr3399, %conv3400
  br label %cond.end3402

cond.end3402:                                     ; preds = %cond.false3380, %cond.true3378
  %cond3403 = phi i32 [ %2420, %cond.true3378 ], [ %add3401, %cond.false3380 ]
  br label %cond.end3404

cond.end3404:                                     ; preds = %cond.end3402, %cond.true3352
  %cond3405 = phi i32 [ 0, %cond.true3352 ], [ %cond3403, %cond.end3402 ]
  store i32 %cond3405, i32* %weightedpel, align 4
  %2438 = load i16*, i16** %orig_line, align 8
  %2439 = load i16, i16* %x0, align 2
  %conv3406 = sext i16 %2439 to i32
  %add3407 = add nsw i32 %conv3406, 1
  %idxprom3408 = sext i32 %add3407 to i64
  %arrayidx3409 = getelementptr inbounds i16, i16* %2438, i64 %idxprom3408
  %2440 = load i16, i16* %arrayidx3409, align 2
  %conv3410 = zext i16 %2440 to i32
  %2441 = load i32, i32* %weightedpel, align 4
  %sub3411 = sub nsw i32 %conv3410, %2441
  %2442 = load i32*, i32** %d, align 8
  %incdec.ptr3412 = getelementptr inbounds i32, i32* %2442, i32 1
  store i32* %incdec.ptr3412, i32** %d, align 8
  store i32 %sub3411, i32* %2442, align 4
  %2443 = load i16, i16* %weightSpic, align 2
  %conv3413 = sext i16 %2443 to i32
  %2444 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2445 = load i16**, i16*** %ref1_pic, align 8
  %2446 = load i16, i16* %sy, align 2
  %conv3414 = sext i16 %2446 to i32
  %2447 = load i16, i16* %sx0, align 2
  %conv3415 = sext i16 %2447 to i32
  %add3416 = add nsw i32 %conv3415, 8
  %2448 = load i32, i32* %img_height, align 4
  %2449 = load i32, i32* %img_width, align 4
  %call3417 = call zeroext i16 %2444(i16** %2445, i32 %conv3414, i32 %add3416, i32 %2448, i32 %2449)
  %conv3418 = zext i16 %call3417 to i32
  %mul3419 = mul nsw i32 %conv3413, %conv3418
  %2450 = load i16, i16* %weightRpic, align 2
  %conv3420 = sext i16 %2450 to i32
  %2451 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2452 = load i16**, i16*** %ref2_pic, align 8
  %2453 = load i16, i16* %ry, align 2
  %conv3421 = sext i16 %2453 to i32
  %2454 = load i16, i16* %rx0, align 2
  %conv3422 = sext i16 %2454 to i32
  %add3423 = add nsw i32 %conv3422, 8
  %2455 = load i32, i32* %img_height, align 4
  %2456 = load i32, i32* %img_width, align 4
  %call3424 = call zeroext i16 %2451(i16** %2452, i32 %conv3421, i32 %add3423, i32 %2455, i32 %2456)
  %conv3425 = zext i16 %call3424 to i32
  %mul3426 = mul nsw i32 %conv3420, %conv3425
  %add3427 = add nsw i32 %mul3419, %mul3426
  %2457 = load i32, i32* @wp_luma_round, align 4
  %mul3428 = mul nsw i32 2, %2457
  %add3429 = add nsw i32 %add3427, %mul3428
  %2458 = load i32, i32* @luma_log_weight_denom, align 4
  %add3430 = add nsw i32 %2458, 1
  %shr3431 = ashr i32 %add3429, %add3430
  %2459 = load i16, i16* %offsetBi, align 2
  %conv3432 = sext i16 %2459 to i32
  %add3433 = add nsw i32 %shr3431, %conv3432
  %cmp3434 = icmp slt i32 %add3433, 0
  br i1 %cmp3434, label %cond.true3436, label %cond.false3437

cond.true3436:                                    ; preds = %cond.end3404
  br label %cond.end3488

cond.false3437:                                   ; preds = %cond.end3404
  %2460 = load i16, i16* %weightSpic, align 2
  %conv3438 = sext i16 %2460 to i32
  %2461 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2462 = load i16**, i16*** %ref1_pic, align 8
  %2463 = load i16, i16* %sy, align 2
  %conv3439 = sext i16 %2463 to i32
  %2464 = load i16, i16* %sx0, align 2
  %conv3440 = sext i16 %2464 to i32
  %add3441 = add nsw i32 %conv3440, 8
  %2465 = load i32, i32* %img_height, align 4
  %2466 = load i32, i32* %img_width, align 4
  %call3442 = call zeroext i16 %2461(i16** %2462, i32 %conv3439, i32 %add3441, i32 %2465, i32 %2466)
  %conv3443 = zext i16 %call3442 to i32
  %mul3444 = mul nsw i32 %conv3438, %conv3443
  %2467 = load i16, i16* %weightRpic, align 2
  %conv3445 = sext i16 %2467 to i32
  %2468 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2469 = load i16**, i16*** %ref2_pic, align 8
  %2470 = load i16, i16* %ry, align 2
  %conv3446 = sext i16 %2470 to i32
  %2471 = load i16, i16* %rx0, align 2
  %conv3447 = sext i16 %2471 to i32
  %add3448 = add nsw i32 %conv3447, 8
  %2472 = load i32, i32* %img_height, align 4
  %2473 = load i32, i32* %img_width, align 4
  %call3449 = call zeroext i16 %2468(i16** %2469, i32 %conv3446, i32 %add3448, i32 %2472, i32 %2473)
  %conv3450 = zext i16 %call3449 to i32
  %mul3451 = mul nsw i32 %conv3445, %conv3450
  %add3452 = add nsw i32 %mul3444, %mul3451
  %2474 = load i32, i32* @wp_luma_round, align 4
  %mul3453 = mul nsw i32 2, %2474
  %add3454 = add nsw i32 %add3452, %mul3453
  %2475 = load i32, i32* @luma_log_weight_denom, align 4
  %add3455 = add nsw i32 %2475, 1
  %shr3456 = ashr i32 %add3454, %add3455
  %2476 = load i16, i16* %offsetBi, align 2
  %conv3457 = sext i16 %2476 to i32
  %add3458 = add nsw i32 %shr3456, %conv3457
  %2477 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3459 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2477, i32 0, i32 155
  %2478 = load i32, i32* %max_imgpel_value3459, align 4
  %cmp3460 = icmp sgt i32 %add3458, %2478
  br i1 %cmp3460, label %cond.true3462, label %cond.false3464

cond.true3462:                                    ; preds = %cond.false3437
  %2479 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3463 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2479, i32 0, i32 155
  %2480 = load i32, i32* %max_imgpel_value3463, align 4
  br label %cond.end3486

cond.false3464:                                   ; preds = %cond.false3437
  %2481 = load i16, i16* %weightSpic, align 2
  %conv3465 = sext i16 %2481 to i32
  %2482 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2483 = load i16**, i16*** %ref1_pic, align 8
  %2484 = load i16, i16* %sy, align 2
  %conv3466 = sext i16 %2484 to i32
  %2485 = load i16, i16* %sx0, align 2
  %conv3467 = sext i16 %2485 to i32
  %add3468 = add nsw i32 %conv3467, 8
  %2486 = load i32, i32* %img_height, align 4
  %2487 = load i32, i32* %img_width, align 4
  %call3469 = call zeroext i16 %2482(i16** %2483, i32 %conv3466, i32 %add3468, i32 %2486, i32 %2487)
  %conv3470 = zext i16 %call3469 to i32
  %mul3471 = mul nsw i32 %conv3465, %conv3470
  %2488 = load i16, i16* %weightRpic, align 2
  %conv3472 = sext i16 %2488 to i32
  %2489 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2490 = load i16**, i16*** %ref2_pic, align 8
  %2491 = load i16, i16* %ry, align 2
  %conv3473 = sext i16 %2491 to i32
  %2492 = load i16, i16* %rx0, align 2
  %conv3474 = sext i16 %2492 to i32
  %add3475 = add nsw i32 %conv3474, 8
  %2493 = load i32, i32* %img_height, align 4
  %2494 = load i32, i32* %img_width, align 4
  %call3476 = call zeroext i16 %2489(i16** %2490, i32 %conv3473, i32 %add3475, i32 %2493, i32 %2494)
  %conv3477 = zext i16 %call3476 to i32
  %mul3478 = mul nsw i32 %conv3472, %conv3477
  %add3479 = add nsw i32 %mul3471, %mul3478
  %2495 = load i32, i32* @wp_luma_round, align 4
  %mul3480 = mul nsw i32 2, %2495
  %add3481 = add nsw i32 %add3479, %mul3480
  %2496 = load i32, i32* @luma_log_weight_denom, align 4
  %add3482 = add nsw i32 %2496, 1
  %shr3483 = ashr i32 %add3481, %add3482
  %2497 = load i16, i16* %offsetBi, align 2
  %conv3484 = sext i16 %2497 to i32
  %add3485 = add nsw i32 %shr3483, %conv3484
  br label %cond.end3486

cond.end3486:                                     ; preds = %cond.false3464, %cond.true3462
  %cond3487 = phi i32 [ %2480, %cond.true3462 ], [ %add3485, %cond.false3464 ]
  br label %cond.end3488

cond.end3488:                                     ; preds = %cond.end3486, %cond.true3436
  %cond3489 = phi i32 [ 0, %cond.true3436 ], [ %cond3487, %cond.end3486 ]
  store i32 %cond3489, i32* %weightedpel, align 4
  %2498 = load i16*, i16** %orig_line, align 8
  %2499 = load i16, i16* %x0, align 2
  %conv3490 = sext i16 %2499 to i32
  %add3491 = add nsw i32 %conv3490, 2
  %idxprom3492 = sext i32 %add3491 to i64
  %arrayidx3493 = getelementptr inbounds i16, i16* %2498, i64 %idxprom3492
  %2500 = load i16, i16* %arrayidx3493, align 2
  %conv3494 = zext i16 %2500 to i32
  %2501 = load i32, i32* %weightedpel, align 4
  %sub3495 = sub nsw i32 %conv3494, %2501
  %2502 = load i32*, i32** %d, align 8
  %incdec.ptr3496 = getelementptr inbounds i32, i32* %2502, i32 1
  store i32* %incdec.ptr3496, i32** %d, align 8
  store i32 %sub3495, i32* %2502, align 4
  %2503 = load i16, i16* %weightSpic, align 2
  %conv3497 = sext i16 %2503 to i32
  %2504 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2505 = load i16**, i16*** %ref1_pic, align 8
  %2506 = load i16, i16* %sy, align 2
  %conv3498 = sext i16 %2506 to i32
  %2507 = load i16, i16* %sx0, align 2
  %conv3499 = sext i16 %2507 to i32
  %add3500 = add nsw i32 %conv3499, 12
  %2508 = load i32, i32* %img_height, align 4
  %2509 = load i32, i32* %img_width, align 4
  %call3501 = call zeroext i16 %2504(i16** %2505, i32 %conv3498, i32 %add3500, i32 %2508, i32 %2509)
  %conv3502 = zext i16 %call3501 to i32
  %mul3503 = mul nsw i32 %conv3497, %conv3502
  %2510 = load i16, i16* %weightRpic, align 2
  %conv3504 = sext i16 %2510 to i32
  %2511 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2512 = load i16**, i16*** %ref2_pic, align 8
  %2513 = load i16, i16* %ry, align 2
  %conv3505 = sext i16 %2513 to i32
  %2514 = load i16, i16* %rx0, align 2
  %conv3506 = sext i16 %2514 to i32
  %add3507 = add nsw i32 %conv3506, 12
  %2515 = load i32, i32* %img_height, align 4
  %2516 = load i32, i32* %img_width, align 4
  %call3508 = call zeroext i16 %2511(i16** %2512, i32 %conv3505, i32 %add3507, i32 %2515, i32 %2516)
  %conv3509 = zext i16 %call3508 to i32
  %mul3510 = mul nsw i32 %conv3504, %conv3509
  %add3511 = add nsw i32 %mul3503, %mul3510
  %2517 = load i32, i32* @wp_luma_round, align 4
  %mul3512 = mul nsw i32 2, %2517
  %add3513 = add nsw i32 %add3511, %mul3512
  %2518 = load i32, i32* @luma_log_weight_denom, align 4
  %add3514 = add nsw i32 %2518, 1
  %shr3515 = ashr i32 %add3513, %add3514
  %2519 = load i16, i16* %offsetBi, align 2
  %conv3516 = sext i16 %2519 to i32
  %add3517 = add nsw i32 %shr3515, %conv3516
  %cmp3518 = icmp slt i32 %add3517, 0
  br i1 %cmp3518, label %cond.true3520, label %cond.false3521

cond.true3520:                                    ; preds = %cond.end3488
  br label %cond.end3572

cond.false3521:                                   ; preds = %cond.end3488
  %2520 = load i16, i16* %weightSpic, align 2
  %conv3522 = sext i16 %2520 to i32
  %2521 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2522 = load i16**, i16*** %ref1_pic, align 8
  %2523 = load i16, i16* %sy, align 2
  %conv3523 = sext i16 %2523 to i32
  %2524 = load i16, i16* %sx0, align 2
  %conv3524 = sext i16 %2524 to i32
  %add3525 = add nsw i32 %conv3524, 12
  %2525 = load i32, i32* %img_height, align 4
  %2526 = load i32, i32* %img_width, align 4
  %call3526 = call zeroext i16 %2521(i16** %2522, i32 %conv3523, i32 %add3525, i32 %2525, i32 %2526)
  %conv3527 = zext i16 %call3526 to i32
  %mul3528 = mul nsw i32 %conv3522, %conv3527
  %2527 = load i16, i16* %weightRpic, align 2
  %conv3529 = sext i16 %2527 to i32
  %2528 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2529 = load i16**, i16*** %ref2_pic, align 8
  %2530 = load i16, i16* %ry, align 2
  %conv3530 = sext i16 %2530 to i32
  %2531 = load i16, i16* %rx0, align 2
  %conv3531 = sext i16 %2531 to i32
  %add3532 = add nsw i32 %conv3531, 12
  %2532 = load i32, i32* %img_height, align 4
  %2533 = load i32, i32* %img_width, align 4
  %call3533 = call zeroext i16 %2528(i16** %2529, i32 %conv3530, i32 %add3532, i32 %2532, i32 %2533)
  %conv3534 = zext i16 %call3533 to i32
  %mul3535 = mul nsw i32 %conv3529, %conv3534
  %add3536 = add nsw i32 %mul3528, %mul3535
  %2534 = load i32, i32* @wp_luma_round, align 4
  %mul3537 = mul nsw i32 2, %2534
  %add3538 = add nsw i32 %add3536, %mul3537
  %2535 = load i32, i32* @luma_log_weight_denom, align 4
  %add3539 = add nsw i32 %2535, 1
  %shr3540 = ashr i32 %add3538, %add3539
  %2536 = load i16, i16* %offsetBi, align 2
  %conv3541 = sext i16 %2536 to i32
  %add3542 = add nsw i32 %shr3540, %conv3541
  %2537 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3543 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2537, i32 0, i32 155
  %2538 = load i32, i32* %max_imgpel_value3543, align 4
  %cmp3544 = icmp sgt i32 %add3542, %2538
  br i1 %cmp3544, label %cond.true3546, label %cond.false3548

cond.true3546:                                    ; preds = %cond.false3521
  %2539 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %max_imgpel_value3547 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2539, i32 0, i32 155
  %2540 = load i32, i32* %max_imgpel_value3547, align 4
  br label %cond.end3570

cond.false3548:                                   ; preds = %cond.false3521
  %2541 = load i16, i16* %weightSpic, align 2
  %conv3549 = sext i16 %2541 to i32
  %2542 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2543 = load i16**, i16*** %ref1_pic, align 8
  %2544 = load i16, i16* %sy, align 2
  %conv3550 = sext i16 %2544 to i32
  %2545 = load i16, i16* %sx0, align 2
  %conv3551 = sext i16 %2545 to i32
  %add3552 = add nsw i32 %conv3551, 12
  %2546 = load i32, i32* %img_height, align 4
  %2547 = load i32, i32* %img_width, align 4
  %call3553 = call zeroext i16 %2542(i16** %2543, i32 %conv3550, i32 %add3552, i32 %2546, i32 %2547)
  %conv3554 = zext i16 %call3553 to i32
  %mul3555 = mul nsw i32 %conv3549, %conv3554
  %2548 = load i16, i16* %weightRpic, align 2
  %conv3556 = sext i16 %2548 to i32
  %2549 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2550 = load i16**, i16*** %ref2_pic, align 8
  %2551 = load i16, i16* %ry, align 2
  %conv3557 = sext i16 %2551 to i32
  %2552 = load i16, i16* %rx0, align 2
  %conv3558 = sext i16 %2552 to i32
  %add3559 = add nsw i32 %conv3558, 12
  %2553 = load i32, i32* %img_height, align 4
  %2554 = load i32, i32* %img_width, align 4
  %call3560 = call zeroext i16 %2549(i16** %2550, i32 %conv3557, i32 %add3559, i32 %2553, i32 %2554)
  %conv3561 = zext i16 %call3560 to i32
  %mul3562 = mul nsw i32 %conv3556, %conv3561
  %add3563 = add nsw i32 %mul3555, %mul3562
  %2555 = load i32, i32* @wp_luma_round, align 4
  %mul3564 = mul nsw i32 2, %2555
  %add3565 = add nsw i32 %add3563, %mul3564
  %2556 = load i32, i32* @luma_log_weight_denom, align 4
  %add3566 = add nsw i32 %2556, 1
  %shr3567 = ashr i32 %add3565, %add3566
  %2557 = load i16, i16* %offsetBi, align 2
  %conv3568 = sext i16 %2557 to i32
  %add3569 = add nsw i32 %shr3567, %conv3568
  br label %cond.end3570

cond.end3570:                                     ; preds = %cond.false3548, %cond.true3546
  %cond3571 = phi i32 [ %2540, %cond.true3546 ], [ %add3569, %cond.false3548 ]
  br label %cond.end3572

cond.end3572:                                     ; preds = %cond.end3570, %cond.true3520
  %cond3573 = phi i32 [ 0, %cond.true3520 ], [ %cond3571, %cond.end3570 ]
  store i32 %cond3573, i32* %weightedpel, align 4
  %2558 = load i16*, i16** %orig_line, align 8
  %2559 = load i16, i16* %x0, align 2
  %conv3574 = sext i16 %2559 to i32
  %add3575 = add nsw i32 %conv3574, 3
  %idxprom3576 = sext i32 %add3575 to i64
  %arrayidx3577 = getelementptr inbounds i16, i16* %2558, i64 %idxprom3576
  %2560 = load i16, i16* %arrayidx3577, align 2
  %conv3578 = zext i16 %2560 to i32
  %2561 = load i32, i32* %weightedpel, align 4
  %sub3579 = sub nsw i32 %conv3578, %2561
  %2562 = load i32*, i32** %d, align 8
  store i32 %sub3579, i32* %2562, align 4
  %2563 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x83580 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2563, i32 0, i32 123
  %2564 = load i32, i32* %AllowTransform8x83580, align 4
  %tobool3581 = icmp ne i32 %2564, 0
  br i1 %tobool3581, label %if.else3594, label %if.then3582

if.then3582:                                      ; preds = %cond.end3572
  %arraydecay3583 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %2565 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard3584 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2565, i32 0, i32 6
  %2566 = load i32, i32* %hadamard3584, align 8
  %call3585 = call i32 @SATD(i32* %arraydecay3583, i32 %2566)
  %2567 = load i16, i16* %mcost, align 2
  %conv3586 = sext i16 %2567 to i32
  %add3587 = add nsw i32 %conv3586, %call3585
  %conv3588 = trunc i32 %add3587 to i16
  store i16 %conv3588, i16* %mcost, align 2
  %conv3589 = sext i16 %conv3588 to i32
  %2568 = load i32, i32* %min_mcost.addr, align 4
  %cmp3590 = icmp sgt i32 %conv3589, %2568
  br i1 %cmp3590, label %if.then3592, label %if.end3593

if.then3592:                                      ; preds = %if.then3582
  store i16 1, i16* %abort_search, align 2
  br label %for.end3625

if.end3593:                                       ; preds = %if.then3582
  br label %if.end3620

if.else3594:                                      ; preds = %cond.end3572
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond3595

for.cond3595:                                     ; preds = %for.inc3617, %if.else3594
  %2569 = load i32, i32* %j, align 4
  %cmp3596 = icmp slt i32 %2569, 4
  br i1 %cmp3596, label %for.body3598, label %for.end3619

for.body3598:                                     ; preds = %for.cond3595
  store i32 0, i32* %i, align 4
  br label %for.cond3599

for.cond3599:                                     ; preds = %for.inc3613, %for.body3598
  %2570 = load i32, i32* %i, align 4
  %cmp3600 = icmp slt i32 %2570, 4
  br i1 %cmp3600, label %for.body3602, label %for.end3616

for.body3602:                                     ; preds = %for.cond3599
  %2571 = load i32, i32* %k, align 4
  %idxprom3603 = sext i32 %2571 to i64
  %arrayidx3604 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom3603
  %2572 = load i32, i32* %arrayidx3604, align 4
  %2573 = load i16, i16* %y0, align 2
  %conv3605 = sext i16 %2573 to i32
  %2574 = load i32, i32* %j, align 4
  %add3606 = add nsw i32 %conv3605, %2574
  %idxprom3607 = sext i32 %add3606 to i64
  %arrayidx3608 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 %idxprom3607
  %2575 = load i16, i16* %x0, align 2
  %conv3609 = sext i16 %2575 to i32
  %2576 = load i32, i32* %i, align 4
  %add3610 = add nsw i32 %conv3609, %2576
  %idxprom3611 = sext i32 %add3610 to i64
  %arrayidx3612 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx3608, i64 0, i64 %idxprom3611
  store i32 %2572, i32* %arrayidx3612, align 4
  br label %for.inc3613

for.inc3613:                                      ; preds = %for.body3602
  %2577 = load i32, i32* %i, align 4
  %inc3614 = add nsw i32 %2577, 1
  store i32 %inc3614, i32* %i, align 4
  %2578 = load i32, i32* %k, align 4
  %inc3615 = add nsw i32 %2578, 1
  store i32 %inc3615, i32* %k, align 4
  br label %for.cond3599

for.end3616:                                      ; preds = %for.cond3599
  br label %for.inc3617

for.inc3617:                                      ; preds = %for.end3616
  %2579 = load i32, i32* %j, align 4
  %inc3618 = add nsw i32 %2579, 1
  store i32 %inc3618, i32* %j, align 4
  br label %for.cond3595

for.end3619:                                      ; preds = %for.cond3595
  br label %if.end3620

if.end3620:                                       ; preds = %for.end3619, %if.end3593
  br label %for.inc3621

for.inc3621:                                      ; preds = %if.end3620
  %2580 = load i16, i16* %x0, align 2
  %conv3622 = sext i16 %2580 to i32
  %add3623 = add nsw i32 %conv3622, 4
  %conv3624 = trunc i32 %add3623 to i16
  store i16 %conv3624, i16* %x0, align 2
  br label %for.cond2218

for.end3625:                                      ; preds = %if.then3592, %for.cond2218
  br label %if.end4011

if.else3626:                                      ; preds = %for.body2203
  store i16 0, i16* %x0, align 2
  br label %for.cond3627

for.cond3627:                                     ; preds = %for.inc4006, %if.else3626
  %2581 = load i16, i16* %x0, align 2
  %conv3628 = sext i16 %2581 to i32
  %2582 = load i16, i16* %blocksize_x, align 2
  %conv3629 = sext i16 %2582 to i32
  %cmp3630 = icmp slt i32 %conv3628, %conv3629
  br i1 %cmp3630, label %for.body3632, label %for.end4010

for.body3632:                                     ; preds = %for.cond3627
  %2583 = load i32, i32* %pic_pix_x.addr, align 4
  %2584 = load i16, i16* %x0, align 2
  %conv3633 = sext i16 %2584 to i32
  %add3634 = add nsw i32 %2583, %conv3633
  %shl3635 = shl i32 %add3634, 2
  %2585 = load i16*, i16** %s_mv_x.addr, align 8
  %2586 = load i16, i16* %2585, align 2
  %conv3636 = sext i16 %2586 to i32
  %add3637 = add nsw i32 %shl3635, %conv3636
  %conv3638 = trunc i32 %add3637 to i16
  store i16 %conv3638, i16* %sx0, align 2
  %2587 = load i32, i32* %pic_pix_x.addr, align 4
  %2588 = load i16, i16* %x0, align 2
  %conv3639 = sext i16 %2588 to i32
  %add3640 = add nsw i32 %2587, %conv3639
  %shl3641 = shl i32 %add3640, 2
  %2589 = load i16, i16* %cand_mv_x, align 2
  %conv3642 = sext i16 %2589 to i32
  %add3643 = add nsw i32 %shl3641, %conv3642
  %conv3644 = trunc i32 %add3643 to i16
  store i16 %conv3644, i16* %rx0, align 2
  %arraydecay3645 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  store i32* %arraydecay3645, i32** %d, align 8
  %2590 = load i16, i16* %sy0, align 2
  store i16 %2590, i16* %sy, align 2
  %2591 = load i16, i16* %ry0, align 2
  store i16 %2591, i16* %ry, align 2
  %2592 = load i16**, i16*** %orig_pic.addr, align 8
  %2593 = load i16, i16* %y0, align 2
  %idxprom3646 = sext i16 %2593 to i64
  %arrayidx3647 = getelementptr inbounds i16*, i16** %2592, i64 %idxprom3646
  %2594 = load i16*, i16** %arrayidx3647, align 8
  store i16* %2594, i16** %orig_line, align 8
  %2595 = load i16*, i16** %orig_line, align 8
  %2596 = load i16, i16* %x0, align 2
  %idxprom3648 = sext i16 %2596 to i64
  %arrayidx3649 = getelementptr inbounds i16, i16* %2595, i64 %idxprom3648
  %2597 = load i16, i16* %arrayidx3649, align 2
  %conv3650 = zext i16 %2597 to i32
  %2598 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2599 = load i16**, i16*** %ref1_pic, align 8
  %2600 = load i16, i16* %sy, align 2
  %conv3651 = sext i16 %2600 to i32
  %2601 = load i16, i16* %sx0, align 2
  %conv3652 = sext i16 %2601 to i32
  %2602 = load i32, i32* %img_height, align 4
  %2603 = load i32, i32* %img_width, align 4
  %call3653 = call zeroext i16 %2598(i16** %2599, i32 %conv3651, i32 %conv3652, i32 %2602, i32 %2603)
  %conv3654 = zext i16 %call3653 to i32
  %2604 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2605 = load i16**, i16*** %ref2_pic, align 8
  %2606 = load i16, i16* %ry, align 2
  %conv3655 = sext i16 %2606 to i32
  %2607 = load i16, i16* %rx0, align 2
  %conv3656 = sext i16 %2607 to i32
  %2608 = load i32, i32* %img_height, align 4
  %2609 = load i32, i32* %img_width, align 4
  %call3657 = call zeroext i16 %2604(i16** %2605, i32 %conv3655, i32 %conv3656, i32 %2608, i32 %2609)
  %conv3658 = zext i16 %call3657 to i32
  %add3659 = add nsw i32 %conv3654, %conv3658
  %shr3660 = ashr i32 %add3659, 1
  %sub3661 = sub nsw i32 %conv3650, %shr3660
  %2610 = load i32*, i32** %d, align 8
  %incdec.ptr3662 = getelementptr inbounds i32, i32* %2610, i32 1
  store i32* %incdec.ptr3662, i32** %d, align 8
  store i32 %sub3661, i32* %2610, align 4
  %2611 = load i16*, i16** %orig_line, align 8
  %2612 = load i16, i16* %x0, align 2
  %conv3663 = sext i16 %2612 to i32
  %add3664 = add nsw i32 %conv3663, 1
  %idxprom3665 = sext i32 %add3664 to i64
  %arrayidx3666 = getelementptr inbounds i16, i16* %2611, i64 %idxprom3665
  %2613 = load i16, i16* %arrayidx3666, align 2
  %conv3667 = zext i16 %2613 to i32
  %2614 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2615 = load i16**, i16*** %ref1_pic, align 8
  %2616 = load i16, i16* %sy, align 2
  %conv3668 = sext i16 %2616 to i32
  %2617 = load i16, i16* %sx0, align 2
  %conv3669 = sext i16 %2617 to i32
  %add3670 = add nsw i32 %conv3669, 4
  %2618 = load i32, i32* %img_height, align 4
  %2619 = load i32, i32* %img_width, align 4
  %call3671 = call zeroext i16 %2614(i16** %2615, i32 %conv3668, i32 %add3670, i32 %2618, i32 %2619)
  %conv3672 = zext i16 %call3671 to i32
  %2620 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2621 = load i16**, i16*** %ref2_pic, align 8
  %2622 = load i16, i16* %ry, align 2
  %conv3673 = sext i16 %2622 to i32
  %2623 = load i16, i16* %rx0, align 2
  %conv3674 = sext i16 %2623 to i32
  %add3675 = add nsw i32 %conv3674, 4
  %2624 = load i32, i32* %img_height, align 4
  %2625 = load i32, i32* %img_width, align 4
  %call3676 = call zeroext i16 %2620(i16** %2621, i32 %conv3673, i32 %add3675, i32 %2624, i32 %2625)
  %conv3677 = zext i16 %call3676 to i32
  %add3678 = add nsw i32 %conv3672, %conv3677
  %shr3679 = ashr i32 %add3678, 1
  %sub3680 = sub nsw i32 %conv3667, %shr3679
  %2626 = load i32*, i32** %d, align 8
  %incdec.ptr3681 = getelementptr inbounds i32, i32* %2626, i32 1
  store i32* %incdec.ptr3681, i32** %d, align 8
  store i32 %sub3680, i32* %2626, align 4
  %2627 = load i16*, i16** %orig_line, align 8
  %2628 = load i16, i16* %x0, align 2
  %conv3682 = sext i16 %2628 to i32
  %add3683 = add nsw i32 %conv3682, 2
  %idxprom3684 = sext i32 %add3683 to i64
  %arrayidx3685 = getelementptr inbounds i16, i16* %2627, i64 %idxprom3684
  %2629 = load i16, i16* %arrayidx3685, align 2
  %conv3686 = zext i16 %2629 to i32
  %2630 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2631 = load i16**, i16*** %ref1_pic, align 8
  %2632 = load i16, i16* %sy, align 2
  %conv3687 = sext i16 %2632 to i32
  %2633 = load i16, i16* %sx0, align 2
  %conv3688 = sext i16 %2633 to i32
  %add3689 = add nsw i32 %conv3688, 8
  %2634 = load i32, i32* %img_height, align 4
  %2635 = load i32, i32* %img_width, align 4
  %call3690 = call zeroext i16 %2630(i16** %2631, i32 %conv3687, i32 %add3689, i32 %2634, i32 %2635)
  %conv3691 = zext i16 %call3690 to i32
  %2636 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2637 = load i16**, i16*** %ref2_pic, align 8
  %2638 = load i16, i16* %ry, align 2
  %conv3692 = sext i16 %2638 to i32
  %2639 = load i16, i16* %rx0, align 2
  %conv3693 = sext i16 %2639 to i32
  %add3694 = add nsw i32 %conv3693, 8
  %2640 = load i32, i32* %img_height, align 4
  %2641 = load i32, i32* %img_width, align 4
  %call3695 = call zeroext i16 %2636(i16** %2637, i32 %conv3692, i32 %add3694, i32 %2640, i32 %2641)
  %conv3696 = zext i16 %call3695 to i32
  %add3697 = add nsw i32 %conv3691, %conv3696
  %shr3698 = ashr i32 %add3697, 1
  %sub3699 = sub nsw i32 %conv3686, %shr3698
  %2642 = load i32*, i32** %d, align 8
  %incdec.ptr3700 = getelementptr inbounds i32, i32* %2642, i32 1
  store i32* %incdec.ptr3700, i32** %d, align 8
  store i32 %sub3699, i32* %2642, align 4
  %2643 = load i16*, i16** %orig_line, align 8
  %2644 = load i16, i16* %x0, align 2
  %conv3701 = sext i16 %2644 to i32
  %add3702 = add nsw i32 %conv3701, 3
  %idxprom3703 = sext i32 %add3702 to i64
  %arrayidx3704 = getelementptr inbounds i16, i16* %2643, i64 %idxprom3703
  %2645 = load i16, i16* %arrayidx3704, align 2
  %conv3705 = zext i16 %2645 to i32
  %2646 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2647 = load i16**, i16*** %ref1_pic, align 8
  %2648 = load i16, i16* %sy, align 2
  %conv3706 = sext i16 %2648 to i32
  %2649 = load i16, i16* %sx0, align 2
  %conv3707 = sext i16 %2649 to i32
  %add3708 = add nsw i32 %conv3707, 12
  %2650 = load i32, i32* %img_height, align 4
  %2651 = load i32, i32* %img_width, align 4
  %call3709 = call zeroext i16 %2646(i16** %2647, i32 %conv3706, i32 %add3708, i32 %2650, i32 %2651)
  %conv3710 = zext i16 %call3709 to i32
  %2652 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2653 = load i16**, i16*** %ref2_pic, align 8
  %2654 = load i16, i16* %ry, align 2
  %conv3711 = sext i16 %2654 to i32
  %2655 = load i16, i16* %rx0, align 2
  %conv3712 = sext i16 %2655 to i32
  %add3713 = add nsw i32 %conv3712, 12
  %2656 = load i32, i32* %img_height, align 4
  %2657 = load i32, i32* %img_width, align 4
  %call3714 = call zeroext i16 %2652(i16** %2653, i32 %conv3711, i32 %add3713, i32 %2656, i32 %2657)
  %conv3715 = zext i16 %call3714 to i32
  %add3716 = add nsw i32 %conv3710, %conv3715
  %shr3717 = ashr i32 %add3716, 1
  %sub3718 = sub nsw i32 %conv3705, %shr3717
  %2658 = load i32*, i32** %d, align 8
  %incdec.ptr3719 = getelementptr inbounds i32, i32* %2658, i32 1
  store i32* %incdec.ptr3719, i32** %d, align 8
  store i32 %sub3718, i32* %2658, align 4
  %2659 = load i16, i16* %sy0, align 2
  %conv3720 = sext i16 %2659 to i32
  %add3721 = add nsw i32 %conv3720, 4
  %conv3722 = trunc i32 %add3721 to i16
  store i16 %conv3722, i16* %sy, align 2
  %2660 = load i16, i16* %ry0, align 2
  %conv3723 = sext i16 %2660 to i32
  %add3724 = add nsw i32 %conv3723, 4
  %conv3725 = trunc i32 %add3724 to i16
  store i16 %conv3725, i16* %ry, align 2
  %2661 = load i16**, i16*** %orig_pic.addr, align 8
  %2662 = load i16, i16* %y0, align 2
  %conv3726 = sext i16 %2662 to i32
  %add3727 = add nsw i32 %conv3726, 1
  %idxprom3728 = sext i32 %add3727 to i64
  %arrayidx3729 = getelementptr inbounds i16*, i16** %2661, i64 %idxprom3728
  %2663 = load i16*, i16** %arrayidx3729, align 8
  store i16* %2663, i16** %orig_line, align 8
  %2664 = load i16*, i16** %orig_line, align 8
  %2665 = load i16, i16* %x0, align 2
  %idxprom3730 = sext i16 %2665 to i64
  %arrayidx3731 = getelementptr inbounds i16, i16* %2664, i64 %idxprom3730
  %2666 = load i16, i16* %arrayidx3731, align 2
  %conv3732 = zext i16 %2666 to i32
  %2667 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2668 = load i16**, i16*** %ref1_pic, align 8
  %2669 = load i16, i16* %sy, align 2
  %conv3733 = sext i16 %2669 to i32
  %2670 = load i16, i16* %sx0, align 2
  %conv3734 = sext i16 %2670 to i32
  %2671 = load i32, i32* %img_height, align 4
  %2672 = load i32, i32* %img_width, align 4
  %call3735 = call zeroext i16 %2667(i16** %2668, i32 %conv3733, i32 %conv3734, i32 %2671, i32 %2672)
  %conv3736 = zext i16 %call3735 to i32
  %2673 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2674 = load i16**, i16*** %ref2_pic, align 8
  %2675 = load i16, i16* %ry, align 2
  %conv3737 = sext i16 %2675 to i32
  %2676 = load i16, i16* %rx0, align 2
  %conv3738 = sext i16 %2676 to i32
  %2677 = load i32, i32* %img_height, align 4
  %2678 = load i32, i32* %img_width, align 4
  %call3739 = call zeroext i16 %2673(i16** %2674, i32 %conv3737, i32 %conv3738, i32 %2677, i32 %2678)
  %conv3740 = zext i16 %call3739 to i32
  %add3741 = add nsw i32 %conv3736, %conv3740
  %shr3742 = ashr i32 %add3741, 1
  %sub3743 = sub nsw i32 %conv3732, %shr3742
  %2679 = load i32*, i32** %d, align 8
  %incdec.ptr3744 = getelementptr inbounds i32, i32* %2679, i32 1
  store i32* %incdec.ptr3744, i32** %d, align 8
  store i32 %sub3743, i32* %2679, align 4
  %2680 = load i16*, i16** %orig_line, align 8
  %2681 = load i16, i16* %x0, align 2
  %conv3745 = sext i16 %2681 to i32
  %add3746 = add nsw i32 %conv3745, 1
  %idxprom3747 = sext i32 %add3746 to i64
  %arrayidx3748 = getelementptr inbounds i16, i16* %2680, i64 %idxprom3747
  %2682 = load i16, i16* %arrayidx3748, align 2
  %conv3749 = zext i16 %2682 to i32
  %2683 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2684 = load i16**, i16*** %ref1_pic, align 8
  %2685 = load i16, i16* %sy, align 2
  %conv3750 = sext i16 %2685 to i32
  %2686 = load i16, i16* %sx0, align 2
  %conv3751 = sext i16 %2686 to i32
  %add3752 = add nsw i32 %conv3751, 4
  %2687 = load i32, i32* %img_height, align 4
  %2688 = load i32, i32* %img_width, align 4
  %call3753 = call zeroext i16 %2683(i16** %2684, i32 %conv3750, i32 %add3752, i32 %2687, i32 %2688)
  %conv3754 = zext i16 %call3753 to i32
  %2689 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2690 = load i16**, i16*** %ref2_pic, align 8
  %2691 = load i16, i16* %ry, align 2
  %conv3755 = sext i16 %2691 to i32
  %2692 = load i16, i16* %rx0, align 2
  %conv3756 = sext i16 %2692 to i32
  %add3757 = add nsw i32 %conv3756, 4
  %2693 = load i32, i32* %img_height, align 4
  %2694 = load i32, i32* %img_width, align 4
  %call3758 = call zeroext i16 %2689(i16** %2690, i32 %conv3755, i32 %add3757, i32 %2693, i32 %2694)
  %conv3759 = zext i16 %call3758 to i32
  %add3760 = add nsw i32 %conv3754, %conv3759
  %shr3761 = ashr i32 %add3760, 1
  %sub3762 = sub nsw i32 %conv3749, %shr3761
  %2695 = load i32*, i32** %d, align 8
  %incdec.ptr3763 = getelementptr inbounds i32, i32* %2695, i32 1
  store i32* %incdec.ptr3763, i32** %d, align 8
  store i32 %sub3762, i32* %2695, align 4
  %2696 = load i16*, i16** %orig_line, align 8
  %2697 = load i16, i16* %x0, align 2
  %conv3764 = sext i16 %2697 to i32
  %add3765 = add nsw i32 %conv3764, 2
  %idxprom3766 = sext i32 %add3765 to i64
  %arrayidx3767 = getelementptr inbounds i16, i16* %2696, i64 %idxprom3766
  %2698 = load i16, i16* %arrayidx3767, align 2
  %conv3768 = zext i16 %2698 to i32
  %2699 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2700 = load i16**, i16*** %ref1_pic, align 8
  %2701 = load i16, i16* %sy, align 2
  %conv3769 = sext i16 %2701 to i32
  %2702 = load i16, i16* %sx0, align 2
  %conv3770 = sext i16 %2702 to i32
  %add3771 = add nsw i32 %conv3770, 8
  %2703 = load i32, i32* %img_height, align 4
  %2704 = load i32, i32* %img_width, align 4
  %call3772 = call zeroext i16 %2699(i16** %2700, i32 %conv3769, i32 %add3771, i32 %2703, i32 %2704)
  %conv3773 = zext i16 %call3772 to i32
  %2705 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2706 = load i16**, i16*** %ref2_pic, align 8
  %2707 = load i16, i16* %ry, align 2
  %conv3774 = sext i16 %2707 to i32
  %2708 = load i16, i16* %rx0, align 2
  %conv3775 = sext i16 %2708 to i32
  %add3776 = add nsw i32 %conv3775, 8
  %2709 = load i32, i32* %img_height, align 4
  %2710 = load i32, i32* %img_width, align 4
  %call3777 = call zeroext i16 %2705(i16** %2706, i32 %conv3774, i32 %add3776, i32 %2709, i32 %2710)
  %conv3778 = zext i16 %call3777 to i32
  %add3779 = add nsw i32 %conv3773, %conv3778
  %shr3780 = ashr i32 %add3779, 1
  %sub3781 = sub nsw i32 %conv3768, %shr3780
  %2711 = load i32*, i32** %d, align 8
  %incdec.ptr3782 = getelementptr inbounds i32, i32* %2711, i32 1
  store i32* %incdec.ptr3782, i32** %d, align 8
  store i32 %sub3781, i32* %2711, align 4
  %2712 = load i16*, i16** %orig_line, align 8
  %2713 = load i16, i16* %x0, align 2
  %conv3783 = sext i16 %2713 to i32
  %add3784 = add nsw i32 %conv3783, 3
  %idxprom3785 = sext i32 %add3784 to i64
  %arrayidx3786 = getelementptr inbounds i16, i16* %2712, i64 %idxprom3785
  %2714 = load i16, i16* %arrayidx3786, align 2
  %conv3787 = zext i16 %2714 to i32
  %2715 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2716 = load i16**, i16*** %ref1_pic, align 8
  %2717 = load i16, i16* %sy, align 2
  %conv3788 = sext i16 %2717 to i32
  %2718 = load i16, i16* %sx0, align 2
  %conv3789 = sext i16 %2718 to i32
  %add3790 = add nsw i32 %conv3789, 12
  %2719 = load i32, i32* %img_height, align 4
  %2720 = load i32, i32* %img_width, align 4
  %call3791 = call zeroext i16 %2715(i16** %2716, i32 %conv3788, i32 %add3790, i32 %2719, i32 %2720)
  %conv3792 = zext i16 %call3791 to i32
  %2721 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2722 = load i16**, i16*** %ref2_pic, align 8
  %2723 = load i16, i16* %ry, align 2
  %conv3793 = sext i16 %2723 to i32
  %2724 = load i16, i16* %rx0, align 2
  %conv3794 = sext i16 %2724 to i32
  %add3795 = add nsw i32 %conv3794, 12
  %2725 = load i32, i32* %img_height, align 4
  %2726 = load i32, i32* %img_width, align 4
  %call3796 = call zeroext i16 %2721(i16** %2722, i32 %conv3793, i32 %add3795, i32 %2725, i32 %2726)
  %conv3797 = zext i16 %call3796 to i32
  %add3798 = add nsw i32 %conv3792, %conv3797
  %shr3799 = ashr i32 %add3798, 1
  %sub3800 = sub nsw i32 %conv3787, %shr3799
  %2727 = load i32*, i32** %d, align 8
  %incdec.ptr3801 = getelementptr inbounds i32, i32* %2727, i32 1
  store i32* %incdec.ptr3801, i32** %d, align 8
  store i32 %sub3800, i32* %2727, align 4
  %2728 = load i16, i16* %sy0, align 2
  %conv3802 = sext i16 %2728 to i32
  %add3803 = add nsw i32 %conv3802, 8
  %conv3804 = trunc i32 %add3803 to i16
  store i16 %conv3804, i16* %sy, align 2
  %2729 = load i16, i16* %ry0, align 2
  %conv3805 = sext i16 %2729 to i32
  %add3806 = add nsw i32 %conv3805, 8
  %conv3807 = trunc i32 %add3806 to i16
  store i16 %conv3807, i16* %ry, align 2
  %2730 = load i16**, i16*** %orig_pic.addr, align 8
  %2731 = load i16, i16* %y0, align 2
  %conv3808 = sext i16 %2731 to i32
  %add3809 = add nsw i32 %conv3808, 2
  %idxprom3810 = sext i32 %add3809 to i64
  %arrayidx3811 = getelementptr inbounds i16*, i16** %2730, i64 %idxprom3810
  %2732 = load i16*, i16** %arrayidx3811, align 8
  store i16* %2732, i16** %orig_line, align 8
  %2733 = load i16*, i16** %orig_line, align 8
  %2734 = load i16, i16* %x0, align 2
  %idxprom3812 = sext i16 %2734 to i64
  %arrayidx3813 = getelementptr inbounds i16, i16* %2733, i64 %idxprom3812
  %2735 = load i16, i16* %arrayidx3813, align 2
  %conv3814 = zext i16 %2735 to i32
  %2736 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2737 = load i16**, i16*** %ref1_pic, align 8
  %2738 = load i16, i16* %sy, align 2
  %conv3815 = sext i16 %2738 to i32
  %2739 = load i16, i16* %sx0, align 2
  %conv3816 = sext i16 %2739 to i32
  %2740 = load i32, i32* %img_height, align 4
  %2741 = load i32, i32* %img_width, align 4
  %call3817 = call zeroext i16 %2736(i16** %2737, i32 %conv3815, i32 %conv3816, i32 %2740, i32 %2741)
  %conv3818 = zext i16 %call3817 to i32
  %2742 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2743 = load i16**, i16*** %ref2_pic, align 8
  %2744 = load i16, i16* %ry, align 2
  %conv3819 = sext i16 %2744 to i32
  %2745 = load i16, i16* %rx0, align 2
  %conv3820 = sext i16 %2745 to i32
  %2746 = load i32, i32* %img_height, align 4
  %2747 = load i32, i32* %img_width, align 4
  %call3821 = call zeroext i16 %2742(i16** %2743, i32 %conv3819, i32 %conv3820, i32 %2746, i32 %2747)
  %conv3822 = zext i16 %call3821 to i32
  %add3823 = add nsw i32 %conv3818, %conv3822
  %shr3824 = ashr i32 %add3823, 1
  %sub3825 = sub nsw i32 %conv3814, %shr3824
  %2748 = load i32*, i32** %d, align 8
  %incdec.ptr3826 = getelementptr inbounds i32, i32* %2748, i32 1
  store i32* %incdec.ptr3826, i32** %d, align 8
  store i32 %sub3825, i32* %2748, align 4
  %2749 = load i16*, i16** %orig_line, align 8
  %2750 = load i16, i16* %x0, align 2
  %conv3827 = sext i16 %2750 to i32
  %add3828 = add nsw i32 %conv3827, 1
  %idxprom3829 = sext i32 %add3828 to i64
  %arrayidx3830 = getelementptr inbounds i16, i16* %2749, i64 %idxprom3829
  %2751 = load i16, i16* %arrayidx3830, align 2
  %conv3831 = zext i16 %2751 to i32
  %2752 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2753 = load i16**, i16*** %ref1_pic, align 8
  %2754 = load i16, i16* %sy, align 2
  %conv3832 = sext i16 %2754 to i32
  %2755 = load i16, i16* %sx0, align 2
  %conv3833 = sext i16 %2755 to i32
  %add3834 = add nsw i32 %conv3833, 4
  %2756 = load i32, i32* %img_height, align 4
  %2757 = load i32, i32* %img_width, align 4
  %call3835 = call zeroext i16 %2752(i16** %2753, i32 %conv3832, i32 %add3834, i32 %2756, i32 %2757)
  %conv3836 = zext i16 %call3835 to i32
  %2758 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2759 = load i16**, i16*** %ref2_pic, align 8
  %2760 = load i16, i16* %ry, align 2
  %conv3837 = sext i16 %2760 to i32
  %2761 = load i16, i16* %rx0, align 2
  %conv3838 = sext i16 %2761 to i32
  %add3839 = add nsw i32 %conv3838, 4
  %2762 = load i32, i32* %img_height, align 4
  %2763 = load i32, i32* %img_width, align 4
  %call3840 = call zeroext i16 %2758(i16** %2759, i32 %conv3837, i32 %add3839, i32 %2762, i32 %2763)
  %conv3841 = zext i16 %call3840 to i32
  %add3842 = add nsw i32 %conv3836, %conv3841
  %shr3843 = ashr i32 %add3842, 1
  %sub3844 = sub nsw i32 %conv3831, %shr3843
  %2764 = load i32*, i32** %d, align 8
  %incdec.ptr3845 = getelementptr inbounds i32, i32* %2764, i32 1
  store i32* %incdec.ptr3845, i32** %d, align 8
  store i32 %sub3844, i32* %2764, align 4
  %2765 = load i16*, i16** %orig_line, align 8
  %2766 = load i16, i16* %x0, align 2
  %conv3846 = sext i16 %2766 to i32
  %add3847 = add nsw i32 %conv3846, 2
  %idxprom3848 = sext i32 %add3847 to i64
  %arrayidx3849 = getelementptr inbounds i16, i16* %2765, i64 %idxprom3848
  %2767 = load i16, i16* %arrayidx3849, align 2
  %conv3850 = zext i16 %2767 to i32
  %2768 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2769 = load i16**, i16*** %ref1_pic, align 8
  %2770 = load i16, i16* %sy, align 2
  %conv3851 = sext i16 %2770 to i32
  %2771 = load i16, i16* %sx0, align 2
  %conv3852 = sext i16 %2771 to i32
  %add3853 = add nsw i32 %conv3852, 8
  %2772 = load i32, i32* %img_height, align 4
  %2773 = load i32, i32* %img_width, align 4
  %call3854 = call zeroext i16 %2768(i16** %2769, i32 %conv3851, i32 %add3853, i32 %2772, i32 %2773)
  %conv3855 = zext i16 %call3854 to i32
  %2774 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2775 = load i16**, i16*** %ref2_pic, align 8
  %2776 = load i16, i16* %ry, align 2
  %conv3856 = sext i16 %2776 to i32
  %2777 = load i16, i16* %rx0, align 2
  %conv3857 = sext i16 %2777 to i32
  %add3858 = add nsw i32 %conv3857, 8
  %2778 = load i32, i32* %img_height, align 4
  %2779 = load i32, i32* %img_width, align 4
  %call3859 = call zeroext i16 %2774(i16** %2775, i32 %conv3856, i32 %add3858, i32 %2778, i32 %2779)
  %conv3860 = zext i16 %call3859 to i32
  %add3861 = add nsw i32 %conv3855, %conv3860
  %shr3862 = ashr i32 %add3861, 1
  %sub3863 = sub nsw i32 %conv3850, %shr3862
  %2780 = load i32*, i32** %d, align 8
  %incdec.ptr3864 = getelementptr inbounds i32, i32* %2780, i32 1
  store i32* %incdec.ptr3864, i32** %d, align 8
  store i32 %sub3863, i32* %2780, align 4
  %2781 = load i16*, i16** %orig_line, align 8
  %2782 = load i16, i16* %x0, align 2
  %conv3865 = sext i16 %2782 to i32
  %add3866 = add nsw i32 %conv3865, 3
  %idxprom3867 = sext i32 %add3866 to i64
  %arrayidx3868 = getelementptr inbounds i16, i16* %2781, i64 %idxprom3867
  %2783 = load i16, i16* %arrayidx3868, align 2
  %conv3869 = zext i16 %2783 to i32
  %2784 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2785 = load i16**, i16*** %ref1_pic, align 8
  %2786 = load i16, i16* %sy, align 2
  %conv3870 = sext i16 %2786 to i32
  %2787 = load i16, i16* %sx0, align 2
  %conv3871 = sext i16 %2787 to i32
  %add3872 = add nsw i32 %conv3871, 12
  %2788 = load i32, i32* %img_height, align 4
  %2789 = load i32, i32* %img_width, align 4
  %call3873 = call zeroext i16 %2784(i16** %2785, i32 %conv3870, i32 %add3872, i32 %2788, i32 %2789)
  %conv3874 = zext i16 %call3873 to i32
  %2790 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2791 = load i16**, i16*** %ref2_pic, align 8
  %2792 = load i16, i16* %ry, align 2
  %conv3875 = sext i16 %2792 to i32
  %2793 = load i16, i16* %rx0, align 2
  %conv3876 = sext i16 %2793 to i32
  %add3877 = add nsw i32 %conv3876, 12
  %2794 = load i32, i32* %img_height, align 4
  %2795 = load i32, i32* %img_width, align 4
  %call3878 = call zeroext i16 %2790(i16** %2791, i32 %conv3875, i32 %add3877, i32 %2794, i32 %2795)
  %conv3879 = zext i16 %call3878 to i32
  %add3880 = add nsw i32 %conv3874, %conv3879
  %shr3881 = ashr i32 %add3880, 1
  %sub3882 = sub nsw i32 %conv3869, %shr3881
  %2796 = load i32*, i32** %d, align 8
  %incdec.ptr3883 = getelementptr inbounds i32, i32* %2796, i32 1
  store i32* %incdec.ptr3883, i32** %d, align 8
  store i32 %sub3882, i32* %2796, align 4
  %2797 = load i16, i16* %sy0, align 2
  %conv3884 = sext i16 %2797 to i32
  %add3885 = add nsw i32 %conv3884, 12
  %conv3886 = trunc i32 %add3885 to i16
  store i16 %conv3886, i16* %sy, align 2
  %2798 = load i16, i16* %ry0, align 2
  %conv3887 = sext i16 %2798 to i32
  %add3888 = add nsw i32 %conv3887, 12
  %conv3889 = trunc i32 %add3888 to i16
  store i16 %conv3889, i16* %ry, align 2
  %2799 = load i16**, i16*** %orig_pic.addr, align 8
  %2800 = load i16, i16* %y0, align 2
  %conv3890 = sext i16 %2800 to i32
  %add3891 = add nsw i32 %conv3890, 3
  %idxprom3892 = sext i32 %add3891 to i64
  %arrayidx3893 = getelementptr inbounds i16*, i16** %2799, i64 %idxprom3892
  %2801 = load i16*, i16** %arrayidx3893, align 8
  store i16* %2801, i16** %orig_line, align 8
  %2802 = load i16*, i16** %orig_line, align 8
  %2803 = load i16, i16* %x0, align 2
  %idxprom3894 = sext i16 %2803 to i64
  %arrayidx3895 = getelementptr inbounds i16, i16* %2802, i64 %idxprom3894
  %2804 = load i16, i16* %arrayidx3895, align 2
  %conv3896 = zext i16 %2804 to i32
  %2805 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2806 = load i16**, i16*** %ref1_pic, align 8
  %2807 = load i16, i16* %sy, align 2
  %conv3897 = sext i16 %2807 to i32
  %2808 = load i16, i16* %sx0, align 2
  %conv3898 = sext i16 %2808 to i32
  %2809 = load i32, i32* %img_height, align 4
  %2810 = load i32, i32* %img_width, align 4
  %call3899 = call zeroext i16 %2805(i16** %2806, i32 %conv3897, i32 %conv3898, i32 %2809, i32 %2810)
  %conv3900 = zext i16 %call3899 to i32
  %2811 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2812 = load i16**, i16*** %ref2_pic, align 8
  %2813 = load i16, i16* %ry, align 2
  %conv3901 = sext i16 %2813 to i32
  %2814 = load i16, i16* %rx0, align 2
  %conv3902 = sext i16 %2814 to i32
  %2815 = load i32, i32* %img_height, align 4
  %2816 = load i32, i32* %img_width, align 4
  %call3903 = call zeroext i16 %2811(i16** %2812, i32 %conv3901, i32 %conv3902, i32 %2815, i32 %2816)
  %conv3904 = zext i16 %call3903 to i32
  %add3905 = add nsw i32 %conv3900, %conv3904
  %shr3906 = ashr i32 %add3905, 1
  %sub3907 = sub nsw i32 %conv3896, %shr3906
  %2817 = load i32*, i32** %d, align 8
  %incdec.ptr3908 = getelementptr inbounds i32, i32* %2817, i32 1
  store i32* %incdec.ptr3908, i32** %d, align 8
  store i32 %sub3907, i32* %2817, align 4
  %2818 = load i16*, i16** %orig_line, align 8
  %2819 = load i16, i16* %x0, align 2
  %conv3909 = sext i16 %2819 to i32
  %add3910 = add nsw i32 %conv3909, 1
  %idxprom3911 = sext i32 %add3910 to i64
  %arrayidx3912 = getelementptr inbounds i16, i16* %2818, i64 %idxprom3911
  %2820 = load i16, i16* %arrayidx3912, align 2
  %conv3913 = zext i16 %2820 to i32
  %2821 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2822 = load i16**, i16*** %ref1_pic, align 8
  %2823 = load i16, i16* %sy, align 2
  %conv3914 = sext i16 %2823 to i32
  %2824 = load i16, i16* %sx0, align 2
  %conv3915 = sext i16 %2824 to i32
  %add3916 = add nsw i32 %conv3915, 4
  %2825 = load i32, i32* %img_height, align 4
  %2826 = load i32, i32* %img_width, align 4
  %call3917 = call zeroext i16 %2821(i16** %2822, i32 %conv3914, i32 %add3916, i32 %2825, i32 %2826)
  %conv3918 = zext i16 %call3917 to i32
  %2827 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2828 = load i16**, i16*** %ref2_pic, align 8
  %2829 = load i16, i16* %ry, align 2
  %conv3919 = sext i16 %2829 to i32
  %2830 = load i16, i16* %rx0, align 2
  %conv3920 = sext i16 %2830 to i32
  %add3921 = add nsw i32 %conv3920, 4
  %2831 = load i32, i32* %img_height, align 4
  %2832 = load i32, i32* %img_width, align 4
  %call3922 = call zeroext i16 %2827(i16** %2828, i32 %conv3919, i32 %add3921, i32 %2831, i32 %2832)
  %conv3923 = zext i16 %call3922 to i32
  %add3924 = add nsw i32 %conv3918, %conv3923
  %shr3925 = ashr i32 %add3924, 1
  %sub3926 = sub nsw i32 %conv3913, %shr3925
  %2833 = load i32*, i32** %d, align 8
  %incdec.ptr3927 = getelementptr inbounds i32, i32* %2833, i32 1
  store i32* %incdec.ptr3927, i32** %d, align 8
  store i32 %sub3926, i32* %2833, align 4
  %2834 = load i16*, i16** %orig_line, align 8
  %2835 = load i16, i16* %x0, align 2
  %conv3928 = sext i16 %2835 to i32
  %add3929 = add nsw i32 %conv3928, 2
  %idxprom3930 = sext i32 %add3929 to i64
  %arrayidx3931 = getelementptr inbounds i16, i16* %2834, i64 %idxprom3930
  %2836 = load i16, i16* %arrayidx3931, align 2
  %conv3932 = zext i16 %2836 to i32
  %2837 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2838 = load i16**, i16*** %ref1_pic, align 8
  %2839 = load i16, i16* %sy, align 2
  %conv3933 = sext i16 %2839 to i32
  %2840 = load i16, i16* %sx0, align 2
  %conv3934 = sext i16 %2840 to i32
  %add3935 = add nsw i32 %conv3934, 8
  %2841 = load i32, i32* %img_height, align 4
  %2842 = load i32, i32* %img_width, align 4
  %call3936 = call zeroext i16 %2837(i16** %2838, i32 %conv3933, i32 %add3935, i32 %2841, i32 %2842)
  %conv3937 = zext i16 %call3936 to i32
  %2843 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2844 = load i16**, i16*** %ref2_pic, align 8
  %2845 = load i16, i16* %ry, align 2
  %conv3938 = sext i16 %2845 to i32
  %2846 = load i16, i16* %rx0, align 2
  %conv3939 = sext i16 %2846 to i32
  %add3940 = add nsw i32 %conv3939, 8
  %2847 = load i32, i32* %img_height, align 4
  %2848 = load i32, i32* %img_width, align 4
  %call3941 = call zeroext i16 %2843(i16** %2844, i32 %conv3938, i32 %add3940, i32 %2847, i32 %2848)
  %conv3942 = zext i16 %call3941 to i32
  %add3943 = add nsw i32 %conv3937, %conv3942
  %shr3944 = ashr i32 %add3943, 1
  %sub3945 = sub nsw i32 %conv3932, %shr3944
  %2849 = load i32*, i32** %d, align 8
  %incdec.ptr3946 = getelementptr inbounds i32, i32* %2849, i32 1
  store i32* %incdec.ptr3946, i32** %d, align 8
  store i32 %sub3945, i32* %2849, align 4
  %2850 = load i16*, i16** %orig_line, align 8
  %2851 = load i16, i16* %x0, align 2
  %conv3947 = sext i16 %2851 to i32
  %add3948 = add nsw i32 %conv3947, 3
  %idxprom3949 = sext i32 %add3948 to i64
  %arrayidx3950 = getelementptr inbounds i16, i16* %2850, i64 %idxprom3949
  %2852 = load i16, i16* %arrayidx3950, align 2
  %conv3951 = zext i16 %2852 to i32
  %2853 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14b, align 8
  %2854 = load i16**, i16*** %ref1_pic, align 8
  %2855 = load i16, i16* %sy, align 2
  %conv3952 = sext i16 %2855 to i32
  %2856 = load i16, i16* %sx0, align 2
  %conv3953 = sext i16 %2856 to i32
  %add3954 = add nsw i32 %conv3953, 12
  %2857 = load i32, i32* %img_height, align 4
  %2858 = load i32, i32* %img_width, align 4
  %call3955 = call zeroext i16 %2853(i16** %2854, i32 %conv3952, i32 %add3954, i32 %2857, i32 %2858)
  %conv3956 = zext i16 %call3955 to i32
  %2859 = load i16 (i16**, i32, i32, i32, i32)*, i16 (i16**, i32, i32, i32, i32)** @PelY_14, align 8
  %2860 = load i16**, i16*** %ref2_pic, align 8
  %2861 = load i16, i16* %ry, align 2
  %conv3957 = sext i16 %2861 to i32
  %2862 = load i16, i16* %rx0, align 2
  %conv3958 = sext i16 %2862 to i32
  %add3959 = add nsw i32 %conv3958, 12
  %2863 = load i32, i32* %img_height, align 4
  %2864 = load i32, i32* %img_width, align 4
  %call3960 = call zeroext i16 %2859(i16** %2860, i32 %conv3957, i32 %add3959, i32 %2863, i32 %2864)
  %conv3961 = zext i16 %call3960 to i32
  %add3962 = add nsw i32 %conv3956, %conv3961
  %shr3963 = ashr i32 %add3962, 1
  %sub3964 = sub nsw i32 %conv3951, %shr3963
  %2865 = load i32*, i32** %d, align 8
  store i32 %sub3964, i32* %2865, align 4
  %2866 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x83965 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2866, i32 0, i32 123
  %2867 = load i32, i32* %AllowTransform8x83965, align 4
  %tobool3966 = icmp ne i32 %2867, 0
  br i1 %tobool3966, label %if.else3979, label %if.then3967

if.then3967:                                      ; preds = %for.body3632
  %arraydecay3968 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %2868 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard3969 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2868, i32 0, i32 6
  %2869 = load i32, i32* %hadamard3969, align 8
  %call3970 = call i32 @SATD(i32* %arraydecay3968, i32 %2869)
  %2870 = load i16, i16* %mcost, align 2
  %conv3971 = sext i16 %2870 to i32
  %add3972 = add nsw i32 %conv3971, %call3970
  %conv3973 = trunc i32 %add3972 to i16
  store i16 %conv3973, i16* %mcost, align 2
  %conv3974 = sext i16 %conv3973 to i32
  %2871 = load i32, i32* %min_mcost.addr, align 4
  %cmp3975 = icmp sgt i32 %conv3974, %2871
  br i1 %cmp3975, label %if.then3977, label %if.end3978

if.then3977:                                      ; preds = %if.then3967
  store i16 1, i16* %abort_search, align 2
  br label %for.end4010

if.end3978:                                       ; preds = %if.then3967
  br label %if.end4005

if.else3979:                                      ; preds = %for.body3632
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond3980

for.cond3980:                                     ; preds = %for.inc4002, %if.else3979
  %2872 = load i32, i32* %j, align 4
  %cmp3981 = icmp slt i32 %2872, 4
  br i1 %cmp3981, label %for.body3983, label %for.end4004

for.body3983:                                     ; preds = %for.cond3980
  store i32 0, i32* %i, align 4
  br label %for.cond3984

for.cond3984:                                     ; preds = %for.inc3998, %for.body3983
  %2873 = load i32, i32* %i, align 4
  %cmp3985 = icmp slt i32 %2873, 4
  br i1 %cmp3985, label %for.body3987, label %for.end4001

for.body3987:                                     ; preds = %for.cond3984
  %2874 = load i32, i32* %k, align 4
  %idxprom3988 = sext i32 %2874 to i64
  %arrayidx3989 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom3988
  %2875 = load i32, i32* %arrayidx3989, align 4
  %2876 = load i16, i16* %y0, align 2
  %conv3990 = sext i16 %2876 to i32
  %2877 = load i32, i32* %j, align 4
  %add3991 = add nsw i32 %conv3990, %2877
  %idxprom3992 = sext i32 %add3991 to i64
  %arrayidx3993 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 %idxprom3992
  %2878 = load i16, i16* %x0, align 2
  %conv3994 = sext i16 %2878 to i32
  %2879 = load i32, i32* %i, align 4
  %add3995 = add nsw i32 %conv3994, %2879
  %idxprom3996 = sext i32 %add3995 to i64
  %arrayidx3997 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx3993, i64 0, i64 %idxprom3996
  store i32 %2875, i32* %arrayidx3997, align 4
  br label %for.inc3998

for.inc3998:                                      ; preds = %for.body3987
  %2880 = load i32, i32* %i, align 4
  %inc3999 = add nsw i32 %2880, 1
  store i32 %inc3999, i32* %i, align 4
  %2881 = load i32, i32* %k, align 4
  %inc4000 = add nsw i32 %2881, 1
  store i32 %inc4000, i32* %k, align 4
  br label %for.cond3984

for.end4001:                                      ; preds = %for.cond3984
  br label %for.inc4002

for.inc4002:                                      ; preds = %for.end4001
  %2882 = load i32, i32* %j, align 4
  %inc4003 = add nsw i32 %2882, 1
  store i32 %inc4003, i32* %j, align 4
  br label %for.cond3980

for.end4004:                                      ; preds = %for.cond3980
  br label %if.end4005

if.end4005:                                       ; preds = %for.end4004, %if.end3978
  br label %for.inc4006

for.inc4006:                                      ; preds = %if.end4005
  %2883 = load i16, i16* %x0, align 2
  %conv4007 = sext i16 %2883 to i32
  %add4008 = add nsw i32 %conv4007, 4
  %conv4009 = trunc i32 %add4008 to i16
  store i16 %conv4009, i16* %x0, align 2
  br label %for.cond3627

for.end4010:                                      ; preds = %if.then3977, %for.cond3627
  br label %if.end4011

if.end4011:                                       ; preds = %for.end4010, %for.end3625
  br label %for.inc4012

for.inc4012:                                      ; preds = %if.end4011
  %2884 = load i16, i16* %y0, align 2
  %conv4013 = sext i16 %2884 to i32
  %add4014 = add nsw i32 %conv4013, 4
  %conv4015 = trunc i32 %add4014 to i16
  store i16 %conv4015, i16* %y0, align 2
  br label %for.cond2194

for.end4016:                                      ; preds = %land.end2202
  %2885 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x84017 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2885, i32 0, i32 123
  %2886 = load i32, i32* %AllowTransform8x84017, align 4
  %tobool4018 = icmp ne i32 %2886, 0
  br i1 %tobool4018, label %if.then4019, label %if.end4026

if.then4019:                                      ; preds = %for.end4016
  %arraydecay4020 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_diff, i64 0, i64 0
  %2887 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard4021 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2887, i32 0, i32 6
  %2888 = load i32, i32* %hadamard4021, align 8
  %2889 = load i32, i32* %blocktype.addr, align 4
  %call4022 = call i32 @find_SATD([16 x i32]* %arraydecay4020, i32 %2888, i32 %2889)
  %2890 = load i16, i16* %mcost, align 2
  %conv4023 = sext i16 %2890 to i32
  %add4024 = add nsw i32 %conv4023, %call4022
  %conv4025 = trunc i32 %add4024 to i16
  store i16 %conv4025, i16* %mcost, align 2
  br label %if.end4026

if.end4026:                                       ; preds = %if.then4019, %for.end4016
  %2891 = load i16, i16* %mcost, align 2
  %conv4027 = sext i16 %2891 to i32
  %2892 = load i32, i32* %min_mcost.addr, align 4
  %cmp4028 = icmp slt i32 %conv4027, %2892
  br i1 %cmp4028, label %if.then4030, label %if.end4032

if.then4030:                                      ; preds = %if.end4026
  %2893 = load i16, i16* %mcost, align 2
  %conv4031 = sext i16 %2893 to i32
  store i32 %conv4031, i32* %min_mcost.addr, align 4
  %2894 = load i16, i16* %pos, align 2
  store i16 %2894, i16* %best_pos, align 2
  br label %if.end4032

if.end4032:                                       ; preds = %if.then4030, %if.end4026
  br label %for.inc4033

for.inc4033:                                      ; preds = %if.end4032
  %2895 = load i16, i16* %pos, align 2
  %inc4034 = add i16 %2895, 1
  store i16 %inc4034, i16* %pos, align 2
  br label %for.cond2161

for.end4035:                                      ; preds = %for.cond2161
  %2896 = load i16, i16* %best_pos, align 2
  %tobool4036 = icmp ne i16 %2896, 0
  br i1 %tobool4036, label %if.then4037, label %if.end4048

if.then4037:                                      ; preds = %for.end4035
  %2897 = load i32*, i32** @spiral_search_x, align 8
  %2898 = load i16, i16* %best_pos, align 2
  %idxprom4038 = sext i16 %2898 to i64
  %arrayidx4039 = getelementptr inbounds i32, i32* %2897, i64 %idxprom4038
  %2899 = load i32, i32* %arrayidx4039, align 4
  %2900 = load i16*, i16** %mv_x.addr, align 8
  %2901 = load i16, i16* %2900, align 2
  %conv4040 = sext i16 %2901 to i32
  %add4041 = add nsw i32 %conv4040, %2899
  %conv4042 = trunc i32 %add4041 to i16
  store i16 %conv4042, i16* %2900, align 2
  %2902 = load i32*, i32** @spiral_search_y, align 8
  %2903 = load i16, i16* %best_pos, align 2
  %idxprom4043 = sext i16 %2903 to i64
  %arrayidx4044 = getelementptr inbounds i32, i32* %2902, i64 %idxprom4043
  %2904 = load i32, i32* %arrayidx4044, align 4
  %2905 = load i16*, i16** %mv_y.addr, align 8
  %2906 = load i16, i16* %2905, align 2
  %conv4045 = sext i16 %2906 to i32
  %add4046 = add nsw i32 %conv4045, %2904
  %conv4047 = trunc i32 %add4046 to i16
  store i16 %conv4047, i16* %2905, align 2
  br label %if.end4048

if.end4048:                                       ; preds = %if.then4037, %for.end4035
  %2907 = load i32, i32* %min_mcost.addr, align 4
  ret i32 %2907
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BPredPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor, i32 %list) #0 {
entry:
  %blocktype.addr = alloca i32, align 4
  %block8x8.addr = alloca i32, align 4
  %fw_ref.addr = alloca i16, align 2
  %bw_ref.addr = alloca i16, align 2
  %lambda_factor.addr = alloca i32, align 4
  %list.addr = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mvd_bits = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %p_mv = alloca i16******, align 8
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store i16 %fw_ref, i16* %fw_ref.addr, align 2
  store i16 %bw_ref, i16* %bw_ref.addr, align 2
  store i32 %lambda_factor, i32* %lambda_factor.addr, align 4
  store i32 %list, i32* %list.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 20
  %1 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 8
  %cmp = icmp slt i32 %2, 8
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size2 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %3, i32 0, i32 20
  %4 = load i32, i32* %blocktype.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size2, i64 0, i64 %idxprom3
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i64 0, i64 0
  %5 = load i32, i32* %arrayidx5, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 8, %cond.false ]
  store i32 %cond, i32* %bsx, align 4
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size6 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 20
  %7 = load i32, i32* %blocktype.addr, align 4
  %idxprom7 = sext i32 %7 to i64
  %arrayidx8 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size6, i64 0, i64 %idxprom7
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx8, i64 0, i64 1
  %8 = load i32, i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %8, 8
  br i1 %cmp10, label %cond.true11, label %cond.false16

cond.true11:                                      ; preds = %cond.end
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size12 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 20
  %10 = load i32, i32* %blocktype.addr, align 4
  %idxprom13 = sext i32 %10 to i64
  %arrayidx14 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size12, i64 0, i64 %idxprom13
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i64 0, i64 1
  %11 = load i32, i32* %arrayidx15, align 4
  br label %cond.end17

cond.false16:                                     ; preds = %cond.end
  br label %cond.end17

cond.end17:                                       ; preds = %cond.false16, %cond.true11
  %cond18 = phi i32 [ %11, %cond.true11 ], [ 8, %cond.false16 ]
  store i32 %cond18, i32* %bsy, align 4
  store i32 0, i32* %mvd_bits, align 4
  %12 = load i32, i32* %blocktype.addr, align 4
  %cmp19 = icmp slt i32 %12, 4
  br i1 %cmp19, label %cond.true20, label %cond.false21

cond.true20:                                      ; preds = %cond.end17
  %13 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end22

cond.false21:                                     ; preds = %cond.end17
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false21, %cond.true20
  %cond23 = phi i32 [ %13, %cond.true20 ], [ 4, %cond.false21 ]
  store i32 %cond23, i32* %parttype, align 4
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 21
  %15 = load i32, i32* %parttype, align 4
  %idxprom24 = sext i32 %15 to i64
  %arrayidx25 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i64 0, i64 %idxprom24
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx25, i64 0, i64 0
  %16 = load i32, i32* %arrayidx26, align 8
  store i32 %16, i32* %step_h0, align 4
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size27 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 21
  %18 = load i32, i32* %parttype, align 4
  %idxprom28 = sext i32 %18 to i64
  %arrayidx29 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size27, i64 0, i64 %idxprom28
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx29, i64 0, i64 1
  %19 = load i32, i32* %arrayidx30, align 4
  store i32 %19, i32* %step_v0, align 4
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size31 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 21
  %21 = load i32, i32* %blocktype.addr, align 4
  %idxprom32 = sext i32 %21 to i64
  %arrayidx33 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size31, i64 0, i64 %idxprom32
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx33, i64 0, i64 0
  %22 = load i32, i32* %arrayidx34, align 8
  store i32 %22, i32* %step_h, align 4
  %23 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size35 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %23, i32 0, i32 21
  %24 = load i32, i32* %blocktype.addr, align 4
  %idxprom36 = sext i32 %24 to i64
  %arrayidx37 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size35, i64 0, i64 %idxprom36
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx37, i64 0, i64 1
  %25 = load i32, i32* %arrayidx38, align 4
  store i32 %25, i32* %step_v, align 4
  %26 = load i32, i32* %list.addr, align 4
  %tobool = icmp ne i32 %26, 0
  br i1 %tobool, label %cond.true39, label %cond.false40

cond.true39:                                      ; preds = %cond.end22
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 72
  %28 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end41

cond.false40:                                     ; preds = %cond.end22
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 73
  %30 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end41

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond42 = phi i16****** [ %28, %cond.true39 ], [ %30, %cond.false40 ]
  store i16****** %cond42, i16******* %all_mv, align 8
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 70
  %32 = load i16******, i16******* %pred_mv, align 8
  store i16****** %32, i16******* %p_mv, align 8
  %33 = load i32, i32* %parttype, align 4
  %idxprom43 = sext i32 %33 to i64
  %arrayidx44 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i64 0, i64 %idxprom43
  %34 = load i32, i32* %block8x8.addr, align 4
  %idxprom45 = sext i32 %34 to i64
  %arrayidx46 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx44, i64 0, i64 %idxprom45
  %35 = load i32, i32* %arrayidx46, align 4
  store i32 %35, i32* %v, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc167, %cond.end41
  %36 = load i32, i32* %v, align 4
  %37 = load i32, i32* %parttype, align 4
  %idxprom47 = sext i32 %37 to i64
  %arrayidx48 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i64 0, i64 %idxprom47
  %38 = load i32, i32* %block8x8.addr, align 4
  %idxprom49 = sext i32 %38 to i64
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx48, i64 0, i64 %idxprom49
  %39 = load i32, i32* %arrayidx50, align 4
  %40 = load i32, i32* %step_v0, align 4
  %add = add nsw i32 %39, %40
  %cmp51 = icmp slt i32 %36, %add
  br i1 %cmp51, label %for.body, label %for.end169

for.body:                                         ; preds = %for.cond
  %41 = load i32, i32* %parttype, align 4
  %idxprom52 = sext i32 %41 to i64
  %arrayidx53 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i64 0, i64 %idxprom52
  %42 = load i32, i32* %block8x8.addr, align 4
  %idxprom54 = sext i32 %42 to i64
  %arrayidx55 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx53, i64 0, i64 %idxprom54
  %43 = load i32, i32* %arrayidx55, align 4
  store i32 %43, i32* %h, align 4
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc, %for.body
  %44 = load i32, i32* %h, align 4
  %45 = load i32, i32* %parttype, align 4
  %idxprom57 = sext i32 %45 to i64
  %arrayidx58 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i64 0, i64 %idxprom57
  %46 = load i32, i32* %block8x8.addr, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %47 = load i32, i32* %arrayidx60, align 4
  %48 = load i32, i32* %step_h0, align 4
  %add61 = add nsw i32 %47, %48
  %cmp62 = icmp slt i32 %44, %add61
  br i1 %cmp62, label %for.body63, label %for.end

for.body63:                                       ; preds = %for.cond56
  %49 = load i32*, i32** @mvbits, align 8
  %50 = load i16******, i16******* %all_mv, align 8
  %51 = load i32, i32* %h, align 4
  %idxprom64 = sext i32 %51 to i64
  %arrayidx65 = getelementptr inbounds i16*****, i16****** %50, i64 %idxprom64
  %52 = load i16*****, i16****** %arrayidx65, align 8
  %53 = load i32, i32* %v, align 4
  %idxprom66 = sext i32 %53 to i64
  %arrayidx67 = getelementptr inbounds i16****, i16***** %52, i64 %idxprom66
  %54 = load i16****, i16***** %arrayidx67, align 8
  %arrayidx68 = getelementptr inbounds i16***, i16**** %54, i64 0
  %55 = load i16***, i16**** %arrayidx68, align 8
  %56 = load i16, i16* %fw_ref.addr, align 2
  %idxprom69 = sext i16 %56 to i64
  %arrayidx70 = getelementptr inbounds i16**, i16*** %55, i64 %idxprom69
  %57 = load i16**, i16*** %arrayidx70, align 8
  %58 = load i32, i32* %blocktype.addr, align 4
  %idxprom71 = sext i32 %58 to i64
  %arrayidx72 = getelementptr inbounds i16*, i16** %57, i64 %idxprom71
  %59 = load i16*, i16** %arrayidx72, align 8
  %arrayidx73 = getelementptr inbounds i16, i16* %59, i64 0
  %60 = load i16, i16* %arrayidx73, align 2
  %conv = sext i16 %60 to i32
  %61 = load i16******, i16******* %p_mv, align 8
  %62 = load i32, i32* %h, align 4
  %idxprom74 = sext i32 %62 to i64
  %arrayidx75 = getelementptr inbounds i16*****, i16****** %61, i64 %idxprom74
  %63 = load i16*****, i16****** %arrayidx75, align 8
  %64 = load i32, i32* %v, align 4
  %idxprom76 = sext i32 %64 to i64
  %arrayidx77 = getelementptr inbounds i16****, i16***** %63, i64 %idxprom76
  %65 = load i16****, i16***** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i16***, i16**** %65, i64 0
  %66 = load i16***, i16**** %arrayidx78, align 8
  %67 = load i16, i16* %fw_ref.addr, align 2
  %idxprom79 = sext i16 %67 to i64
  %arrayidx80 = getelementptr inbounds i16**, i16*** %66, i64 %idxprom79
  %68 = load i16**, i16*** %arrayidx80, align 8
  %69 = load i32, i32* %blocktype.addr, align 4
  %idxprom81 = sext i32 %69 to i64
  %arrayidx82 = getelementptr inbounds i16*, i16** %68, i64 %idxprom81
  %70 = load i16*, i16** %arrayidx82, align 8
  %arrayidx83 = getelementptr inbounds i16, i16* %70, i64 0
  %71 = load i16, i16* %arrayidx83, align 2
  %conv84 = sext i16 %71 to i32
  %sub = sub nsw i32 %conv, %conv84
  %idxprom85 = sext i32 %sub to i64
  %arrayidx86 = getelementptr inbounds i32, i32* %49, i64 %idxprom85
  %72 = load i32, i32* %arrayidx86, align 4
  %73 = load i32, i32* %mvd_bits, align 4
  %add87 = add nsw i32 %73, %72
  store i32 %add87, i32* %mvd_bits, align 4
  %74 = load i32*, i32** @mvbits, align 8
  %75 = load i16******, i16******* %all_mv, align 8
  %76 = load i32, i32* %h, align 4
  %idxprom88 = sext i32 %76 to i64
  %arrayidx89 = getelementptr inbounds i16*****, i16****** %75, i64 %idxprom88
  %77 = load i16*****, i16****** %arrayidx89, align 8
  %78 = load i32, i32* %v, align 4
  %idxprom90 = sext i32 %78 to i64
  %arrayidx91 = getelementptr inbounds i16****, i16***** %77, i64 %idxprom90
  %79 = load i16****, i16***** %arrayidx91, align 8
  %arrayidx92 = getelementptr inbounds i16***, i16**** %79, i64 0
  %80 = load i16***, i16**** %arrayidx92, align 8
  %81 = load i16, i16* %fw_ref.addr, align 2
  %idxprom93 = sext i16 %81 to i64
  %arrayidx94 = getelementptr inbounds i16**, i16*** %80, i64 %idxprom93
  %82 = load i16**, i16*** %arrayidx94, align 8
  %83 = load i32, i32* %blocktype.addr, align 4
  %idxprom95 = sext i32 %83 to i64
  %arrayidx96 = getelementptr inbounds i16*, i16** %82, i64 %idxprom95
  %84 = load i16*, i16** %arrayidx96, align 8
  %arrayidx97 = getelementptr inbounds i16, i16* %84, i64 1
  %85 = load i16, i16* %arrayidx97, align 2
  %conv98 = sext i16 %85 to i32
  %86 = load i16******, i16******* %p_mv, align 8
  %87 = load i32, i32* %h, align 4
  %idxprom99 = sext i32 %87 to i64
  %arrayidx100 = getelementptr inbounds i16*****, i16****** %86, i64 %idxprom99
  %88 = load i16*****, i16****** %arrayidx100, align 8
  %89 = load i32, i32* %v, align 4
  %idxprom101 = sext i32 %89 to i64
  %arrayidx102 = getelementptr inbounds i16****, i16***** %88, i64 %idxprom101
  %90 = load i16****, i16***** %arrayidx102, align 8
  %arrayidx103 = getelementptr inbounds i16***, i16**** %90, i64 0
  %91 = load i16***, i16**** %arrayidx103, align 8
  %92 = load i16, i16* %fw_ref.addr, align 2
  %idxprom104 = sext i16 %92 to i64
  %arrayidx105 = getelementptr inbounds i16**, i16*** %91, i64 %idxprom104
  %93 = load i16**, i16*** %arrayidx105, align 8
  %94 = load i32, i32* %blocktype.addr, align 4
  %idxprom106 = sext i32 %94 to i64
  %arrayidx107 = getelementptr inbounds i16*, i16** %93, i64 %idxprom106
  %95 = load i16*, i16** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i16, i16* %95, i64 1
  %96 = load i16, i16* %arrayidx108, align 2
  %conv109 = sext i16 %96 to i32
  %sub110 = sub nsw i32 %conv98, %conv109
  %idxprom111 = sext i32 %sub110 to i64
  %arrayidx112 = getelementptr inbounds i32, i32* %74, i64 %idxprom111
  %97 = load i32, i32* %arrayidx112, align 4
  %98 = load i32, i32* %mvd_bits, align 4
  %add113 = add nsw i32 %98, %97
  store i32 %add113, i32* %mvd_bits, align 4
  %99 = load i32*, i32** @mvbits, align 8
  %100 = load i16******, i16******* %all_mv, align 8
  %101 = load i32, i32* %h, align 4
  %idxprom114 = sext i32 %101 to i64
  %arrayidx115 = getelementptr inbounds i16*****, i16****** %100, i64 %idxprom114
  %102 = load i16*****, i16****** %arrayidx115, align 8
  %103 = load i32, i32* %v, align 4
  %idxprom116 = sext i32 %103 to i64
  %arrayidx117 = getelementptr inbounds i16****, i16***** %102, i64 %idxprom116
  %104 = load i16****, i16***** %arrayidx117, align 8
  %arrayidx118 = getelementptr inbounds i16***, i16**** %104, i64 1
  %105 = load i16***, i16**** %arrayidx118, align 8
  %106 = load i16, i16* %bw_ref.addr, align 2
  %idxprom119 = sext i16 %106 to i64
  %arrayidx120 = getelementptr inbounds i16**, i16*** %105, i64 %idxprom119
  %107 = load i16**, i16*** %arrayidx120, align 8
  %108 = load i32, i32* %blocktype.addr, align 4
  %idxprom121 = sext i32 %108 to i64
  %arrayidx122 = getelementptr inbounds i16*, i16** %107, i64 %idxprom121
  %109 = load i16*, i16** %arrayidx122, align 8
  %arrayidx123 = getelementptr inbounds i16, i16* %109, i64 0
  %110 = load i16, i16* %arrayidx123, align 2
  %conv124 = sext i16 %110 to i32
  %111 = load i16******, i16******* %p_mv, align 8
  %112 = load i32, i32* %h, align 4
  %idxprom125 = sext i32 %112 to i64
  %arrayidx126 = getelementptr inbounds i16*****, i16****** %111, i64 %idxprom125
  %113 = load i16*****, i16****** %arrayidx126, align 8
  %114 = load i32, i32* %v, align 4
  %idxprom127 = sext i32 %114 to i64
  %arrayidx128 = getelementptr inbounds i16****, i16***** %113, i64 %idxprom127
  %115 = load i16****, i16***** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds i16***, i16**** %115, i64 1
  %116 = load i16***, i16**** %arrayidx129, align 8
  %117 = load i16, i16* %bw_ref.addr, align 2
  %idxprom130 = sext i16 %117 to i64
  %arrayidx131 = getelementptr inbounds i16**, i16*** %116, i64 %idxprom130
  %118 = load i16**, i16*** %arrayidx131, align 8
  %119 = load i32, i32* %blocktype.addr, align 4
  %idxprom132 = sext i32 %119 to i64
  %arrayidx133 = getelementptr inbounds i16*, i16** %118, i64 %idxprom132
  %120 = load i16*, i16** %arrayidx133, align 8
  %arrayidx134 = getelementptr inbounds i16, i16* %120, i64 0
  %121 = load i16, i16* %arrayidx134, align 2
  %conv135 = sext i16 %121 to i32
  %sub136 = sub nsw i32 %conv124, %conv135
  %idxprom137 = sext i32 %sub136 to i64
  %arrayidx138 = getelementptr inbounds i32, i32* %99, i64 %idxprom137
  %122 = load i32, i32* %arrayidx138, align 4
  %123 = load i32, i32* %mvd_bits, align 4
  %add139 = add nsw i32 %123, %122
  store i32 %add139, i32* %mvd_bits, align 4
  %124 = load i32*, i32** @mvbits, align 8
  %125 = load i16******, i16******* %all_mv, align 8
  %126 = load i32, i32* %h, align 4
  %idxprom140 = sext i32 %126 to i64
  %arrayidx141 = getelementptr inbounds i16*****, i16****** %125, i64 %idxprom140
  %127 = load i16*****, i16****** %arrayidx141, align 8
  %128 = load i32, i32* %v, align 4
  %idxprom142 = sext i32 %128 to i64
  %arrayidx143 = getelementptr inbounds i16****, i16***** %127, i64 %idxprom142
  %129 = load i16****, i16***** %arrayidx143, align 8
  %arrayidx144 = getelementptr inbounds i16***, i16**** %129, i64 1
  %130 = load i16***, i16**** %arrayidx144, align 8
  %131 = load i16, i16* %bw_ref.addr, align 2
  %idxprom145 = sext i16 %131 to i64
  %arrayidx146 = getelementptr inbounds i16**, i16*** %130, i64 %idxprom145
  %132 = load i16**, i16*** %arrayidx146, align 8
  %133 = load i32, i32* %blocktype.addr, align 4
  %idxprom147 = sext i32 %133 to i64
  %arrayidx148 = getelementptr inbounds i16*, i16** %132, i64 %idxprom147
  %134 = load i16*, i16** %arrayidx148, align 8
  %arrayidx149 = getelementptr inbounds i16, i16* %134, i64 1
  %135 = load i16, i16* %arrayidx149, align 2
  %conv150 = sext i16 %135 to i32
  %136 = load i16******, i16******* %p_mv, align 8
  %137 = load i32, i32* %h, align 4
  %idxprom151 = sext i32 %137 to i64
  %arrayidx152 = getelementptr inbounds i16*****, i16****** %136, i64 %idxprom151
  %138 = load i16*****, i16****** %arrayidx152, align 8
  %139 = load i32, i32* %v, align 4
  %idxprom153 = sext i32 %139 to i64
  %arrayidx154 = getelementptr inbounds i16****, i16***** %138, i64 %idxprom153
  %140 = load i16****, i16***** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i16***, i16**** %140, i64 1
  %141 = load i16***, i16**** %arrayidx155, align 8
  %142 = load i16, i16* %bw_ref.addr, align 2
  %idxprom156 = sext i16 %142 to i64
  %arrayidx157 = getelementptr inbounds i16**, i16*** %141, i64 %idxprom156
  %143 = load i16**, i16*** %arrayidx157, align 8
  %144 = load i32, i32* %blocktype.addr, align 4
  %idxprom158 = sext i32 %144 to i64
  %arrayidx159 = getelementptr inbounds i16*, i16** %143, i64 %idxprom158
  %145 = load i16*, i16** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i16, i16* %145, i64 1
  %146 = load i16, i16* %arrayidx160, align 2
  %conv161 = sext i16 %146 to i32
  %sub162 = sub nsw i32 %conv150, %conv161
  %idxprom163 = sext i32 %sub162 to i64
  %arrayidx164 = getelementptr inbounds i32, i32* %124, i64 %idxprom163
  %147 = load i32, i32* %arrayidx164, align 4
  %148 = load i32, i32* %mvd_bits, align 4
  %add165 = add nsw i32 %148, %147
  store i32 %add165, i32* %mvd_bits, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body63
  %149 = load i32, i32* %step_h, align 4
  %150 = load i32, i32* %h, align 4
  %add166 = add nsw i32 %150, %149
  store i32 %add166, i32* %h, align 4
  br label %for.cond56

for.end:                                          ; preds = %for.cond56
  br label %for.inc167

for.inc167:                                       ; preds = %for.end
  %151 = load i32, i32* %step_v, align 4
  %152 = load i32, i32* %v, align 4
  %add168 = add nsw i32 %152, %151
  store i32 %add168, i32* %v, align 4
  br label %for.cond

for.end169:                                       ; preds = %for.cond
  %153 = load i32, i32* %lambda_factor.addr, align 4
  %154 = load i32, i32* %mvd_bits, align 4
  %mul = mul nsw i32 %153, %154
  %shr = ashr i32 %mul, 16
  store i32 %shr, i32* %mcost, align 4
  store i32 0, i32* %byy, align 4
  %155 = load i32, i32* %parttype, align 4
  %idxprom170 = sext i32 %155 to i64
  %arrayidx171 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i64 0, i64 %idxprom170
  %156 = load i32, i32* %block8x8.addr, align 4
  %idxprom172 = sext i32 %156 to i64
  %arrayidx173 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx171, i64 0, i64 %idxprom172
  %157 = load i32, i32* %arrayidx173, align 4
  store i32 %157, i32* %v, align 4
  br label %for.cond174

for.cond174:                                      ; preds = %for.inc244, %for.end169
  %158 = load i32, i32* %v, align 4
  %159 = load i32, i32* %parttype, align 4
  %idxprom175 = sext i32 %159 to i64
  %arrayidx176 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.by0, i64 0, i64 %idxprom175
  %160 = load i32, i32* %block8x8.addr, align 4
  %idxprom177 = sext i32 %160 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  %161 = load i32, i32* %arrayidx178, align 4
  %162 = load i32, i32* %step_v0, align 4
  %add179 = add nsw i32 %161, %162
  %cmp180 = icmp slt i32 %158, %add179
  br i1 %cmp180, label %for.body182, label %for.end247

for.body182:                                      ; preds = %for.cond174
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 38
  %164 = load i32, i32* %opix_y, align 4
  %165 = load i32, i32* %v, align 4
  %shl = shl i32 %165, 2
  store i32 %shl, i32* %block_y, align 4
  %add183 = add nsw i32 %164, %shl
  store i32 %add183, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %166 = load i32, i32* %parttype, align 4
  %idxprom184 = sext i32 %166 to i64
  %arrayidx185 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i64 0, i64 %idxprom184
  %167 = load i32, i32* %block8x8.addr, align 4
  %idxprom186 = sext i32 %167 to i64
  %arrayidx187 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx185, i64 0, i64 %idxprom186
  %168 = load i32, i32* %arrayidx187, align 4
  store i32 %168, i32* %h, align 4
  br label %for.cond188

for.cond188:                                      ; preds = %for.inc240, %for.body182
  %169 = load i32, i32* %h, align 4
  %170 = load i32, i32* %parttype, align 4
  %idxprom189 = sext i32 %170 to i64
  %arrayidx190 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BPredPartitionCost.bx0, i64 0, i64 %idxprom189
  %171 = load i32, i32* %block8x8.addr, align 4
  %idxprom191 = sext i32 %171 to i64
  %arrayidx192 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx190, i64 0, i64 %idxprom191
  %172 = load i32, i32* %arrayidx192, align 4
  %173 = load i32, i32* %step_h0, align 4
  %add193 = add nsw i32 %172, %173
  %cmp194 = icmp slt i32 %169, %add193
  br i1 %cmp194, label %for.body196, label %for.end243

for.body196:                                      ; preds = %for.cond188
  %174 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %174, i32 0, i32 37
  %175 = load i32, i32* %opix_x, align 8
  %176 = load i32, i32* %h, align 4
  %shl197 = shl i32 %176, 2
  store i32 %shl197, i32* %block_x, align 4
  %add198 = add nsw i32 %175, %shl197
  store i32 %add198, i32* %pic_pix_x, align 4
  %177 = load i32, i32* %block_x, align 4
  %178 = load i32, i32* %block_y, align 4
  %179 = load i32, i32* %blocktype.addr, align 4
  %180 = load i32, i32* %blocktype.addr, align 4
  %181 = load i16, i16* %fw_ref.addr, align 2
  %182 = load i16, i16* %bw_ref.addr, align 2
  %183 = load i32, i32* %list.addr, align 4
  call void @LumaPrediction4x4Bi(i32 %177, i32 %178, i32 2, i32 %179, i32 %180, i16 signext %181, i16 signext %182, i32 %183)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond199

for.cond199:                                      ; preds = %for.inc233, %for.body196
  %184 = load i32, i32* %j, align 4
  %cmp200 = icmp slt i32 %184, 4
  br i1 %cmp200, label %for.body202, label %for.end235

for.body202:                                      ; preds = %for.cond199
  store i32 0, i32* %i, align 4
  br label %for.cond203

for.cond203:                                      ; preds = %for.inc230, %for.body202
  %185 = load i32, i32* %i, align 4
  %cmp204 = icmp slt i32 %185, 4
  br i1 %cmp204, label %for.body206, label %for.end232

for.body206:                                      ; preds = %for.cond203
  %186 = load i16**, i16*** @imgY_org, align 8
  %187 = load i32, i32* %pic_pix_y, align 4
  %188 = load i32, i32* %j, align 4
  %add207 = add nsw i32 %187, %188
  %idxprom208 = sext i32 %add207 to i64
  %arrayidx209 = getelementptr inbounds i16*, i16** %186, i64 %idxprom208
  %189 = load i16*, i16** %arrayidx209, align 8
  %190 = load i32, i32* %pic_pix_x, align 4
  %191 = load i32, i32* %i, align 4
  %add210 = add nsw i32 %190, %191
  %idxprom211 = sext i32 %add210 to i64
  %arrayidx212 = getelementptr inbounds i16, i16* %189, i64 %idxprom211
  %192 = load i16, i16* %arrayidx212, align 2
  %conv213 = zext i16 %192 to i32
  %193 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %193, i32 0, i32 45
  %194 = load i32, i32* %i, align 4
  %195 = load i32, i32* %block_x, align 4
  %add214 = add nsw i32 %194, %195
  %idxprom215 = sext i32 %add214 to i64
  %arrayidx216 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i64 0, i64 %idxprom215
  %196 = load i32, i32* %j, align 4
  %197 = load i32, i32* %block_y, align 4
  %add217 = add nsw i32 %196, %197
  %idxprom218 = sext i32 %add217 to i64
  %arrayidx219 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx216, i64 0, i64 %idxprom218
  %198 = load i16, i16* %arrayidx219, align 2
  %conv220 = zext i16 %198 to i32
  %sub221 = sub nsw i32 %conv213, %conv220
  %199 = load i32, i32* %byy, align 4
  %200 = load i32, i32* %j, align 4
  %add222 = add nsw i32 %199, %200
  %idxprom223 = sext i32 %add222 to i64
  %arrayidx224 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %idxprom223
  %201 = load i32, i32* %bxx, align 4
  %202 = load i32, i32* %i, align 4
  %add225 = add nsw i32 %201, %202
  %idxprom226 = sext i32 %add225 to i64
  %arrayidx227 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx224, i64 0, i64 %idxprom226
  store i32 %sub221, i32* %arrayidx227, align 4
  %203 = load i32, i32* %k, align 4
  %idxprom228 = sext i32 %203 to i64
  %arrayidx229 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 %idxprom228
  store i32 %sub221, i32* %arrayidx229, align 4
  br label %for.inc230

for.inc230:                                       ; preds = %for.body206
  %204 = load i32, i32* %i, align 4
  %inc = add nsw i32 %204, 1
  store i32 %inc, i32* %i, align 4
  %205 = load i32, i32* %k, align 4
  %inc231 = add nsw i32 %205, 1
  store i32 %inc231, i32* %k, align 4
  br label %for.cond203

for.end232:                                       ; preds = %for.cond203
  br label %for.inc233

for.inc233:                                       ; preds = %for.end232
  %206 = load i32, i32* %j, align 4
  %inc234 = add nsw i32 %206, 1
  store i32 %inc234, i32* %j, align 4
  br label %for.cond199

for.end235:                                       ; preds = %for.cond199
  %207 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %207, i32 0, i32 123
  %208 = load i32, i32* %AllowTransform8x8, align 4
  %tobool236 = icmp ne i32 %208, 0
  br i1 %tobool236, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end235
  %209 = load i32, i32* %blocktype.addr, align 4
  %cmp237 = icmp sgt i32 %209, 4
  br i1 %cmp237, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end235
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %210 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %210, i32 0, i32 6
  %211 = load i32, i32* %hadamard, align 8
  %call = call i32 @SATD(i32* %arraydecay, i32 %211)
  %212 = load i32, i32* %mcost, align 4
  %add239 = add nsw i32 %212, %call
  store i32 %add239, i32* %mcost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc240

for.inc240:                                       ; preds = %if.end
  %213 = load i32, i32* %bxx, align 4
  %add241 = add nsw i32 %213, 4
  store i32 %add241, i32* %bxx, align 4
  %214 = load i32, i32* %h, align 4
  %inc242 = add nsw i32 %214, 1
  store i32 %inc242, i32* %h, align 4
  br label %for.cond188

for.end243:                                       ; preds = %for.cond188
  br label %for.inc244

for.inc244:                                       ; preds = %for.end243
  %215 = load i32, i32* %byy, align 4
  %add245 = add nsw i32 %215, 4
  store i32 %add245, i32* %byy, align 4
  %216 = load i32, i32* %v, align 4
  %inc246 = add nsw i32 %216, 1
  store i32 %inc246, i32* %v, align 4
  br label %for.cond174

for.end247:                                       ; preds = %for.cond174
  %217 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8248 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %217, i32 0, i32 123
  %218 = load i32, i32* %AllowTransform8x8248, align 4
  %tobool249 = icmp ne i32 %218, 0
  br i1 %tobool249, label %land.lhs.true, label %if.end302

land.lhs.true:                                    ; preds = %for.end247
  %219 = load i32, i32* %blocktype.addr, align 4
  %cmp250 = icmp sle i32 %219, 4
  br i1 %cmp250, label %if.then252, label %if.end302

if.then252:                                       ; preds = %land.lhs.true
  store i32 0, i32* %byy, align 4
  br label %for.cond253

for.cond253:                                      ; preds = %for.inc299, %if.then252
  %220 = load i32, i32* %byy, align 4
  %221 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size254 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %221, i32 0, i32 20
  %222 = load i32, i32* %parttype, align 4
  %idxprom255 = sext i32 %222 to i64
  %arrayidx256 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size254, i64 0, i64 %idxprom255
  %arrayidx257 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx256, i64 0, i64 1
  %223 = load i32, i32* %arrayidx257, align 4
  %cmp258 = icmp slt i32 %220, %223
  br i1 %cmp258, label %for.body260, label %for.end301

for.body260:                                      ; preds = %for.cond253
  store i32 0, i32* %bxx, align 4
  br label %for.cond261

for.cond261:                                      ; preds = %for.inc296, %for.body260
  %224 = load i32, i32* %bxx, align 4
  %225 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size262 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %225, i32 0, i32 20
  %226 = load i32, i32* %parttype, align 4
  %idxprom263 = sext i32 %226 to i64
  %arrayidx264 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size262, i64 0, i64 %idxprom263
  %arrayidx265 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx264, i64 0, i64 0
  %227 = load i32, i32* %arrayidx265, align 8
  %cmp266 = icmp slt i32 %224, %227
  br i1 %cmp266, label %for.body268, label %for.end298

for.body268:                                      ; preds = %for.cond261
  store i32 0, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond269

for.cond269:                                      ; preds = %for.inc289, %for.body268
  %228 = load i32, i32* %i, align 4
  %cmp270 = icmp slt i32 %228, 8
  br i1 %cmp270, label %for.body272, label %for.end291

for.body272:                                      ; preds = %for.cond269
  store i32 0, i32* %j, align 4
  br label %for.cond273

for.cond273:                                      ; preds = %for.inc286, %for.body272
  %229 = load i32, i32* %j, align 4
  %cmp274 = icmp slt i32 %229, 8
  br i1 %cmp274, label %for.body276, label %for.end288

for.body276:                                      ; preds = %for.cond273
  %230 = load i32, i32* %i, align 4
  %231 = load i32, i32* %byy, align 4
  %add277 = add nsw i32 %230, %231
  %idxprom278 = sext i32 %add277 to i64
  %arrayidx279 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %idxprom278
  %232 = load i32, i32* %j, align 4
  %233 = load i32, i32* %bxx, align 4
  %add280 = add nsw i32 %232, %233
  %idxprom281 = sext i32 %add280 to i64
  %arrayidx282 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx279, i64 0, i64 %idxprom281
  %234 = load i32, i32* %arrayidx282, align 4
  %235 = load i32, i32* %k, align 4
  %inc283 = add nsw i32 %235, 1
  store i32 %inc283, i32* %k, align 4
  %idxprom284 = sext i32 %235 to i64
  %arrayidx285 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 %idxprom284
  store i32 %234, i32* %arrayidx285, align 4
  br label %for.inc286

for.inc286:                                       ; preds = %for.body276
  %236 = load i32, i32* %j, align 4
  %inc287 = add nsw i32 %236, 1
  store i32 %inc287, i32* %j, align 4
  br label %for.cond273

for.end288:                                       ; preds = %for.cond273
  br label %for.inc289

for.inc289:                                       ; preds = %for.end288
  %237 = load i32, i32* %i, align 4
  %inc290 = add nsw i32 %237, 1
  store i32 %inc290, i32* %i, align 4
  br label %for.cond269

for.end291:                                       ; preds = %for.cond269
  %arraydecay292 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %238 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard293 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %238, i32 0, i32 6
  %239 = load i32, i32* %hadamard293, align 8
  %call294 = call i32 @SATD8X8(i32* %arraydecay292, i32 %239)
  %240 = load i32, i32* %mcost, align 4
  %add295 = add nsw i32 %240, %call294
  store i32 %add295, i32* %mcost, align 4
  br label %for.inc296

for.inc296:                                       ; preds = %for.end291
  %241 = load i32, i32* %bsx, align 4
  %242 = load i32, i32* %bxx, align 4
  %add297 = add nsw i32 %242, %241
  store i32 %add297, i32* %bxx, align 4
  br label %for.cond261

for.end298:                                       ; preds = %for.cond261
  br label %for.inc299

for.inc299:                                       ; preds = %for.end298
  %243 = load i32, i32* %bsy, align 4
  %244 = load i32, i32* %byy, align 4
  %add300 = add nsw i32 %244, %243
  store i32 %add300, i32* %byy, align 4
  br label %for.cond253

for.end301:                                       ; preds = %for.cond253
  br label %if.end302

if.end302:                                        ; preds = %for.end301, %land.lhs.true, %for.end247
  %245 = load i32, i32* %mcost, align 4
  ret i32 %245
}

declare dso_local void @LumaPrediction4x4Bi(i32, i32, i32, i32, i32, i16 signext, i16 signext, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BlockMotionSearch(i16 signext %ref, i32 %list, i32 %mb_x, i32 %mb_y, i32 %blocktype, i32 %search_range, double %lambda) #0 {
entry:
  %ref.addr = alloca i16, align 2
  %list.addr = alloca i32, align 4
  %mb_x.addr = alloca i32, align 4
  %mb_y.addr = alloca i32, align 4
  %blocktype.addr = alloca i32, align 4
  %search_range.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %pred_mv_x = alloca i16, align 2
  %pred_mv_y = alloca i16, align 2
  %mv_x = alloca i16, align 2
  %mv_y = alloca i16, align 2
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %max_value = alloca i32, align 4
  %min_mcost = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pred_mv = alloca i16*, align 8
  %mv_array = alloca i16***, align 8
  %all_mv = alloca i16******, align 8
  %tstruct1 = alloca %struct.timeb, align 8
  %tstruct2 = alloca %struct.timeb, align 8
  %me_tmp_time = alloca i32, align 4
  %N_Bframe = alloca i32, align 4
  %n_Bframe = alloca i32, align 4
  %cost = alloca i32, align 4
  %h4x4blkno = alloca i32, align 4
  %v4x4blkno = alloca i32, align 4
  %bipred_mv = alloca i16******, align 8
  %min_mcostbi = alloca i32, align 4
  %bimv_x = alloca i16, align 2
  %bimv_y = alloca i16, align 2
  %tempmv_x = alloca i16, align 2
  %tempmv_y = alloca i16, align 2
  %pred_mv_x1 = alloca i16, align 2
  %pred_mv_y1 = alloca i16, align 2
  %pred_mv_x2 = alloca i16, align 2
  %pred_mv_y2 = alloca i16, align 2
  %iterlist = alloca i16, align 2
  %pred_mv_bi = alloca [2 x i16], align 2
  store i16 %ref, i16* %ref.addr, align 2
  store i32 %list, i32* %list.addr, align 4
  store i32 %mb_x, i32* %mb_x.addr, align 4
  store i32 %mb_y, i32* %mb_y.addr, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %search_range, i32* %search_range.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  store i32 2147483647, i32* %max_value, align 4
  %0 = load i32, i32* %max_value, align 4
  store i32 %0, i32* %min_mcost, align 4
  %1 = load i32, i32* %mb_x.addr, align 4
  %shr = ashr i32 %1, 2
  store i32 %shr, i32* %block_x, align 4
  %2 = load i32, i32* %mb_y.addr, align 4
  %shr1 = ashr i32 %2, 2
  store i32 %shr1, i32* %block_y, align 4
  %3 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %3, i32 0, i32 20
  %4 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %5 = load i32, i32* %arrayidx2, align 8
  store i32 %5, i32* %bsx, align 4
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size3 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 20
  %7 = load i32, i32* %blocktype.addr, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size3, i64 0, i64 %idxprom4
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx5, i64 0, i64 1
  %8 = load i32, i32* %arrayidx6, align 4
  store i32 %8, i32* %bsy, align 4
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 37
  %10 = load i32, i32* %opix_x, align 8
  %11 = load i32, i32* %mb_x.addr, align 4
  %add = add nsw i32 %10, %11
  store i32 %add, i32* %pic_pix_x, align 4
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 38
  %13 = load i32, i32* %opix_y, align 4
  %14 = load i32, i32* %mb_y.addr, align 4
  %add7 = add nsw i32 %13, %14
  store i32 %add7, i32* %pic_pix_y, align 4
  %15 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %15, i32 0, i32 35
  %16 = load i16****, i16***** %mv, align 8
  %17 = load i32, i32* %list.addr, align 4
  %idxprom8 = sext i32 %17 to i64
  %arrayidx9 = getelementptr inbounds i16***, i16**** %16, i64 %idxprom8
  %18 = load i16***, i16**** %arrayidx9, align 8
  store i16*** %18, i16**** %mv_array, align 8
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 71
  %20 = load i16******, i16******* %all_mv10, align 8
  store i16****** %20, i16******* %all_mv, align 8
  store i32 0, i32* %N_Bframe, align 4
  store i32 0, i32* %n_Bframe, align 4
  %call = call i32 @ftime(%struct.timeb* %tstruct1)
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 134
  %22 = load i32, i32* %FMEnable, align 4
  %tobool = icmp ne i32 %22, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %23 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %23, i32 0, i32 34
  %24 = load i32, i32* %successive_Bframe, align 4
  store i32 %24, i32* %N_Bframe, align 4
  %25 = load i32, i32* %N_Bframe, align 4
  %tobool11 = icmp ne i32 %25, 0
  br i1 %tobool11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then
  %26 = load i32, i32* @Bframe_ctr, align 4
  %27 = load i32, i32* %N_Bframe, align 4
  %rem = srem i32 %26, %27
  %add12 = add nsw i32 %rem, 1
  br label %cond.end

cond.false:                                       ; preds = %if.then
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add12, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %n_Bframe, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end, %entry
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 70
  %29 = load i16******, i16******* %pred_mv13, align 8
  %30 = load i32, i32* %block_x, align 4
  %idxprom14 = sext i32 %30 to i64
  %arrayidx15 = getelementptr inbounds i16*****, i16****** %29, i64 %idxprom14
  %31 = load i16*****, i16****** %arrayidx15, align 8
  %32 = load i32, i32* %block_y, align 4
  %idxprom16 = sext i32 %32 to i64
  %arrayidx17 = getelementptr inbounds i16****, i16***** %31, i64 %idxprom16
  %33 = load i16****, i16***** %arrayidx17, align 8
  %34 = load i32, i32* %list.addr, align 4
  %idxprom18 = sext i32 %34 to i64
  %arrayidx19 = getelementptr inbounds i16***, i16**** %33, i64 %idxprom18
  %35 = load i16***, i16**** %arrayidx19, align 8
  %36 = load i16, i16* %ref.addr, align 2
  %idxprom20 = sext i16 %36 to i64
  %arrayidx21 = getelementptr inbounds i16**, i16*** %35, i64 %idxprom20
  %37 = load i16**, i16*** %arrayidx21, align 8
  %38 = load i32, i32* %blocktype.addr, align 4
  %idxprom22 = sext i32 %38 to i64
  %arrayidx23 = getelementptr inbounds i16*, i16** %37, i64 %idxprom22
  %39 = load i16*, i16** %arrayidx23, align 8
  store i16* %39, i16** %pred_mv, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc37, %if.end
  %40 = load i32, i32* %j, align 4
  %41 = load i32, i32* %bsy, align 4
  %cmp = icmp slt i32 %40, %41
  br i1 %cmp, label %for.body, label %for.end39

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc, %for.body
  %42 = load i32, i32* %i, align 4
  %43 = load i32, i32* %bsx, align 4
  %cmp25 = icmp slt i32 %42, %43
  br i1 %cmp25, label %for.body26, label %for.end

for.body26:                                       ; preds = %for.cond24
  %44 = load i16**, i16*** @imgY_org, align 8
  %45 = load i32, i32* %pic_pix_y, align 4
  %46 = load i32, i32* %j, align 4
  %add27 = add nsw i32 %45, %46
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds i16*, i16** %44, i64 %idxprom28
  %47 = load i16*, i16** %arrayidx29, align 8
  %48 = load i32, i32* %pic_pix_x, align 4
  %49 = load i32, i32* %i, align 4
  %add30 = add nsw i32 %48, %49
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds i16, i16* %47, i64 %idxprom31
  %50 = load i16, i16* %arrayidx32, align 2
  %51 = load i32, i32* %j, align 4
  %idxprom33 = sext i32 %51 to i64
  %arrayidx34 = getelementptr inbounds [16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 %idxprom33
  %52 = load i16*, i16** %arrayidx34, align 8
  %53 = load i32, i32* %i, align 4
  %idxprom35 = sext i32 %53 to i64
  %arrayidx36 = getelementptr inbounds i16, i16* %52, i64 %idxprom35
  store i16 %50, i16* %arrayidx36, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body26
  %54 = load i32, i32* %i, align 4
  %inc = add nsw i32 %54, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond24

for.end:                                          ; preds = %for.cond24
  br label %for.inc37

for.inc37:                                        ; preds = %for.end
  %55 = load i32, i32* %j, align 4
  %inc38 = add nsw i32 %55, 1
  store i32 %inc38, i32* %j, align 4
  br label %for.cond

for.end39:                                        ; preds = %for.cond
  %56 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %56, i32 0, i32 134
  %57 = load i32, i32* %FMEnable40, align 4
  %tobool41 = icmp ne i32 %57, 0
  br i1 %tobool41, label %if.then42, label %if.end990

if.then42:                                        ; preds = %for.end39
  %58 = load i32, i32* %blocktype.addr, align 4
  %cmp43 = icmp sgt i32 %58, 6
  br i1 %cmp43, label %if.then44, label %if.else

if.then44:                                        ; preds = %if.then42
  %59 = load i16******, i16******* %all_mv, align 8
  %60 = load i32, i32* %block_x, align 4
  %idxprom45 = sext i32 %60 to i64
  %arrayidx46 = getelementptr inbounds i16*****, i16****** %59, i64 %idxprom45
  %61 = load i16*****, i16****** %arrayidx46, align 8
  %62 = load i32, i32* %block_y, align 4
  %idxprom47 = sext i32 %62 to i64
  %arrayidx48 = getelementptr inbounds i16****, i16***** %61, i64 %idxprom47
  %63 = load i16****, i16***** %arrayidx48, align 8
  %64 = load i32, i32* %list.addr, align 4
  %idxprom49 = sext i32 %64 to i64
  %arrayidx50 = getelementptr inbounds i16***, i16**** %63, i64 %idxprom49
  %65 = load i16***, i16**** %arrayidx50, align 8
  %66 = load i16, i16* %ref.addr, align 2
  %idxprom51 = sext i16 %66 to i64
  %arrayidx52 = getelementptr inbounds i16**, i16*** %65, i64 %idxprom51
  %67 = load i16**, i16*** %arrayidx52, align 8
  %arrayidx53 = getelementptr inbounds i16*, i16** %67, i64 5
  %68 = load i16*, i16** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds i16, i16* %68, i64 0
  %69 = load i16, i16* %arrayidx54, align 2
  %conv = sext i16 %69 to i32
  store i32 %conv, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %70 = load i16******, i16******* %all_mv, align 8
  %71 = load i32, i32* %block_x, align 4
  %idxprom55 = sext i32 %71 to i64
  %arrayidx56 = getelementptr inbounds i16*****, i16****** %70, i64 %idxprom55
  %72 = load i16*****, i16****** %arrayidx56, align 8
  %73 = load i32, i32* %block_y, align 4
  %idxprom57 = sext i32 %73 to i64
  %arrayidx58 = getelementptr inbounds i16****, i16***** %72, i64 %idxprom57
  %74 = load i16****, i16***** %arrayidx58, align 8
  %75 = load i32, i32* %list.addr, align 4
  %idxprom59 = sext i32 %75 to i64
  %arrayidx60 = getelementptr inbounds i16***, i16**** %74, i64 %idxprom59
  %76 = load i16***, i16**** %arrayidx60, align 8
  %77 = load i16, i16* %ref.addr, align 2
  %idxprom61 = sext i16 %77 to i64
  %arrayidx62 = getelementptr inbounds i16**, i16*** %76, i64 %idxprom61
  %78 = load i16**, i16*** %arrayidx62, align 8
  %arrayidx63 = getelementptr inbounds i16*, i16** %78, i64 5
  %79 = load i16*, i16** %arrayidx63, align 8
  %arrayidx64 = getelementptr inbounds i16, i16* %79, i64 1
  %80 = load i16, i16* %arrayidx64, align 2
  %conv65 = sext i16 %80 to i32
  store i32 %conv65, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %81 = load i32, i32* %list.addr, align 4
  %cmp66 = icmp eq i32 %81, 1
  br i1 %cmp66, label %cond.true68, label %cond.false80

cond.true68:                                      ; preds = %if.then44
  %82 = load i32*****, i32****** @all_bwmincost, align 8
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 33
  %84 = load i32, i32* %pix_x, align 8
  %shr69 = ashr i32 %84, 2
  %85 = load i32, i32* %block_x, align 4
  %add70 = add nsw i32 %shr69, %85
  %idxprom71 = sext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds i32****, i32***** %82, i64 %idxprom71
  %86 = load i32****, i32***** %arrayidx72, align 8
  %87 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %87, i32 0, i32 34
  %88 = load i32, i32* %pix_y, align 4
  %shr73 = ashr i32 %88, 2
  %89 = load i32, i32* %block_y, align 4
  %add74 = add nsw i32 %shr73, %89
  %idxprom75 = sext i32 %add74 to i64
  %arrayidx76 = getelementptr inbounds i32***, i32**** %86, i64 %idxprom75
  %90 = load i32***, i32**** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds i32**, i32*** %90, i64 0
  %91 = load i32**, i32*** %arrayidx77, align 8
  %arrayidx78 = getelementptr inbounds i32*, i32** %91, i64 5
  %92 = load i32*, i32** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds i32, i32* %92, i64 0
  %93 = load i32, i32* %arrayidx79, align 4
  br label %cond.end95

cond.false80:                                     ; preds = %if.then44
  %94 = load i32*****, i32****** @all_mincost, align 8
  %95 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x81 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %95, i32 0, i32 33
  %96 = load i32, i32* %pix_x81, align 8
  %shr82 = ashr i32 %96, 2
  %97 = load i32, i32* %block_x, align 4
  %add83 = add nsw i32 %shr82, %97
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds i32****, i32***** %94, i64 %idxprom84
  %98 = load i32****, i32***** %arrayidx85, align 8
  %99 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y86 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %pix_y86, align 4
  %shr87 = ashr i32 %100, 2
  %101 = load i32, i32* %block_y, align 4
  %add88 = add nsw i32 %shr87, %101
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds i32***, i32**** %98, i64 %idxprom89
  %102 = load i32***, i32**** %arrayidx90, align 8
  %103 = load i16, i16* %ref.addr, align 2
  %idxprom91 = sext i16 %103 to i64
  %arrayidx92 = getelementptr inbounds i32**, i32*** %102, i64 %idxprom91
  %104 = load i32**, i32*** %arrayidx92, align 8
  %arrayidx93 = getelementptr inbounds i32*, i32** %104, i64 5
  %105 = load i32*, i32** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i32, i32* %105, i64 0
  %106 = load i32, i32* %arrayidx94, align 4
  br label %cond.end95

cond.end95:                                       ; preds = %cond.false80, %cond.true68
  %cond96 = phi i32 [ %93, %cond.true68 ], [ %106, %cond.false80 ]
  store i32 %cond96, i32* @pred_SAD_uplayer, align 4
  %107 = load i32, i32* @pred_SAD_uplayer, align 4
  %div = sdiv i32 %107, 2
  store i32 %div, i32* @pred_SAD_uplayer, align 4
  br label %if.end279

if.else:                                          ; preds = %if.then42
  %108 = load i32, i32* %blocktype.addr, align 4
  %cmp97 = icmp sgt i32 %108, 4
  br i1 %cmp97, label %if.then99, label %if.else156

if.then99:                                        ; preds = %if.else
  %109 = load i16******, i16******* %all_mv, align 8
  %110 = load i32, i32* %block_x, align 4
  %idxprom100 = sext i32 %110 to i64
  %arrayidx101 = getelementptr inbounds i16*****, i16****** %109, i64 %idxprom100
  %111 = load i16*****, i16****** %arrayidx101, align 8
  %112 = load i32, i32* %block_y, align 4
  %idxprom102 = sext i32 %112 to i64
  %arrayidx103 = getelementptr inbounds i16****, i16***** %111, i64 %idxprom102
  %113 = load i16****, i16***** %arrayidx103, align 8
  %114 = load i32, i32* %list.addr, align 4
  %idxprom104 = sext i32 %114 to i64
  %arrayidx105 = getelementptr inbounds i16***, i16**** %113, i64 %idxprom104
  %115 = load i16***, i16**** %arrayidx105, align 8
  %116 = load i16, i16* %ref.addr, align 2
  %idxprom106 = sext i16 %116 to i64
  %arrayidx107 = getelementptr inbounds i16**, i16*** %115, i64 %idxprom106
  %117 = load i16**, i16*** %arrayidx107, align 8
  %arrayidx108 = getelementptr inbounds i16*, i16** %117, i64 4
  %118 = load i16*, i16** %arrayidx108, align 8
  %arrayidx109 = getelementptr inbounds i16, i16* %118, i64 0
  %119 = load i16, i16* %arrayidx109, align 2
  %conv110 = sext i16 %119 to i32
  store i32 %conv110, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %120 = load i16******, i16******* %all_mv, align 8
  %121 = load i32, i32* %block_x, align 4
  %idxprom111 = sext i32 %121 to i64
  %arrayidx112 = getelementptr inbounds i16*****, i16****** %120, i64 %idxprom111
  %122 = load i16*****, i16****** %arrayidx112, align 8
  %123 = load i32, i32* %block_y, align 4
  %idxprom113 = sext i32 %123 to i64
  %arrayidx114 = getelementptr inbounds i16****, i16***** %122, i64 %idxprom113
  %124 = load i16****, i16***** %arrayidx114, align 8
  %125 = load i32, i32* %list.addr, align 4
  %idxprom115 = sext i32 %125 to i64
  %arrayidx116 = getelementptr inbounds i16***, i16**** %124, i64 %idxprom115
  %126 = load i16***, i16**** %arrayidx116, align 8
  %127 = load i16, i16* %ref.addr, align 2
  %idxprom117 = sext i16 %127 to i64
  %arrayidx118 = getelementptr inbounds i16**, i16*** %126, i64 %idxprom117
  %128 = load i16**, i16*** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds i16*, i16** %128, i64 4
  %129 = load i16*, i16** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16, i16* %129, i64 1
  %130 = load i16, i16* %arrayidx120, align 2
  %conv121 = sext i16 %130 to i32
  store i32 %conv121, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %131 = load i32, i32* %list.addr, align 4
  %cmp122 = icmp eq i32 %131, 1
  br i1 %cmp122, label %cond.true124, label %cond.false138

cond.true124:                                     ; preds = %if.then99
  %132 = load i32*****, i32****** @all_bwmincost, align 8
  %133 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x125 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %133, i32 0, i32 33
  %134 = load i32, i32* %pix_x125, align 8
  %shr126 = ashr i32 %134, 2
  %135 = load i32, i32* %block_x, align 4
  %add127 = add nsw i32 %shr126, %135
  %idxprom128 = sext i32 %add127 to i64
  %arrayidx129 = getelementptr inbounds i32****, i32***** %132, i64 %idxprom128
  %136 = load i32****, i32***** %arrayidx129, align 8
  %137 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y130 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %137, i32 0, i32 34
  %138 = load i32, i32* %pix_y130, align 4
  %shr131 = ashr i32 %138, 2
  %139 = load i32, i32* %block_y, align 4
  %add132 = add nsw i32 %shr131, %139
  %idxprom133 = sext i32 %add132 to i64
  %arrayidx134 = getelementptr inbounds i32***, i32**** %136, i64 %idxprom133
  %140 = load i32***, i32**** %arrayidx134, align 8
  %arrayidx135 = getelementptr inbounds i32**, i32*** %140, i64 0
  %141 = load i32**, i32*** %arrayidx135, align 8
  %arrayidx136 = getelementptr inbounds i32*, i32** %141, i64 4
  %142 = load i32*, i32** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds i32, i32* %142, i64 0
  %143 = load i32, i32* %arrayidx137, align 4
  br label %cond.end153

cond.false138:                                    ; preds = %if.then99
  %144 = load i32*****, i32****** @all_mincost, align 8
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 33
  %146 = load i32, i32* %pix_x139, align 8
  %shr140 = ashr i32 %146, 2
  %147 = load i32, i32* %block_x, align 4
  %add141 = add nsw i32 %shr140, %147
  %idxprom142 = sext i32 %add141 to i64
  %arrayidx143 = getelementptr inbounds i32****, i32***** %144, i64 %idxprom142
  %148 = load i32****, i32***** %arrayidx143, align 8
  %149 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %149, i32 0, i32 34
  %150 = load i32, i32* %pix_y144, align 4
  %shr145 = ashr i32 %150, 2
  %151 = load i32, i32* %block_y, align 4
  %add146 = add nsw i32 %shr145, %151
  %idxprom147 = sext i32 %add146 to i64
  %arrayidx148 = getelementptr inbounds i32***, i32**** %148, i64 %idxprom147
  %152 = load i32***, i32**** %arrayidx148, align 8
  %153 = load i16, i16* %ref.addr, align 2
  %idxprom149 = sext i16 %153 to i64
  %arrayidx150 = getelementptr inbounds i32**, i32*** %152, i64 %idxprom149
  %154 = load i32**, i32*** %arrayidx150, align 8
  %arrayidx151 = getelementptr inbounds i32*, i32** %154, i64 4
  %155 = load i32*, i32** %arrayidx151, align 8
  %arrayidx152 = getelementptr inbounds i32, i32* %155, i64 0
  %156 = load i32, i32* %arrayidx152, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false138, %cond.true124
  %cond154 = phi i32 [ %143, %cond.true124 ], [ %156, %cond.false138 ]
  store i32 %cond154, i32* @pred_SAD_uplayer, align 4
  %157 = load i32, i32* @pred_SAD_uplayer, align 4
  %div155 = sdiv i32 %157, 2
  store i32 %div155, i32* @pred_SAD_uplayer, align 4
  br label %if.end278

if.else156:                                       ; preds = %if.else
  %158 = load i32, i32* %blocktype.addr, align 4
  %cmp157 = icmp eq i32 %158, 4
  br i1 %cmp157, label %if.then159, label %if.else216

if.then159:                                       ; preds = %if.else156
  %159 = load i16******, i16******* %all_mv, align 8
  %160 = load i32, i32* %block_x, align 4
  %idxprom160 = sext i32 %160 to i64
  %arrayidx161 = getelementptr inbounds i16*****, i16****** %159, i64 %idxprom160
  %161 = load i16*****, i16****** %arrayidx161, align 8
  %162 = load i32, i32* %block_y, align 4
  %idxprom162 = sext i32 %162 to i64
  %arrayidx163 = getelementptr inbounds i16****, i16***** %161, i64 %idxprom162
  %163 = load i16****, i16***** %arrayidx163, align 8
  %164 = load i32, i32* %list.addr, align 4
  %idxprom164 = sext i32 %164 to i64
  %arrayidx165 = getelementptr inbounds i16***, i16**** %163, i64 %idxprom164
  %165 = load i16***, i16**** %arrayidx165, align 8
  %166 = load i16, i16* %ref.addr, align 2
  %idxprom166 = sext i16 %166 to i64
  %arrayidx167 = getelementptr inbounds i16**, i16*** %165, i64 %idxprom166
  %167 = load i16**, i16*** %arrayidx167, align 8
  %arrayidx168 = getelementptr inbounds i16*, i16** %167, i64 2
  %168 = load i16*, i16** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds i16, i16* %168, i64 0
  %169 = load i16, i16* %arrayidx169, align 2
  %conv170 = sext i16 %169 to i32
  store i32 %conv170, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %170 = load i16******, i16******* %all_mv, align 8
  %171 = load i32, i32* %block_x, align 4
  %idxprom171 = sext i32 %171 to i64
  %arrayidx172 = getelementptr inbounds i16*****, i16****** %170, i64 %idxprom171
  %172 = load i16*****, i16****** %arrayidx172, align 8
  %173 = load i32, i32* %block_y, align 4
  %idxprom173 = sext i32 %173 to i64
  %arrayidx174 = getelementptr inbounds i16****, i16***** %172, i64 %idxprom173
  %174 = load i16****, i16***** %arrayidx174, align 8
  %175 = load i32, i32* %list.addr, align 4
  %idxprom175 = sext i32 %175 to i64
  %arrayidx176 = getelementptr inbounds i16***, i16**** %174, i64 %idxprom175
  %176 = load i16***, i16**** %arrayidx176, align 8
  %177 = load i16, i16* %ref.addr, align 2
  %idxprom177 = sext i16 %177 to i64
  %arrayidx178 = getelementptr inbounds i16**, i16*** %176, i64 %idxprom177
  %178 = load i16**, i16*** %arrayidx178, align 8
  %arrayidx179 = getelementptr inbounds i16*, i16** %178, i64 2
  %179 = load i16*, i16** %arrayidx179, align 8
  %arrayidx180 = getelementptr inbounds i16, i16* %179, i64 1
  %180 = load i16, i16* %arrayidx180, align 2
  %conv181 = sext i16 %180 to i32
  store i32 %conv181, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %181 = load i32, i32* %list.addr, align 4
  %cmp182 = icmp eq i32 %181, 1
  br i1 %cmp182, label %cond.true184, label %cond.false198

cond.true184:                                     ; preds = %if.then159
  %182 = load i32*****, i32****** @all_bwmincost, align 8
  %183 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %183, i32 0, i32 33
  %184 = load i32, i32* %pix_x185, align 8
  %shr186 = ashr i32 %184, 2
  %185 = load i32, i32* %block_x, align 4
  %add187 = add nsw i32 %shr186, %185
  %idxprom188 = sext i32 %add187 to i64
  %arrayidx189 = getelementptr inbounds i32****, i32***** %182, i64 %idxprom188
  %186 = load i32****, i32***** %arrayidx189, align 8
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y190 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 34
  %188 = load i32, i32* %pix_y190, align 4
  %shr191 = ashr i32 %188, 2
  %189 = load i32, i32* %block_y, align 4
  %add192 = add nsw i32 %shr191, %189
  %idxprom193 = sext i32 %add192 to i64
  %arrayidx194 = getelementptr inbounds i32***, i32**** %186, i64 %idxprom193
  %190 = load i32***, i32**** %arrayidx194, align 8
  %arrayidx195 = getelementptr inbounds i32**, i32*** %190, i64 0
  %191 = load i32**, i32*** %arrayidx195, align 8
  %arrayidx196 = getelementptr inbounds i32*, i32** %191, i64 2
  %192 = load i32*, i32** %arrayidx196, align 8
  %arrayidx197 = getelementptr inbounds i32, i32* %192, i64 0
  %193 = load i32, i32* %arrayidx197, align 4
  br label %cond.end213

cond.false198:                                    ; preds = %if.then159
  %194 = load i32*****, i32****** @all_mincost, align 8
  %195 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x199 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %195, i32 0, i32 33
  %196 = load i32, i32* %pix_x199, align 8
  %shr200 = ashr i32 %196, 2
  %197 = load i32, i32* %block_x, align 4
  %add201 = add nsw i32 %shr200, %197
  %idxprom202 = sext i32 %add201 to i64
  %arrayidx203 = getelementptr inbounds i32****, i32***** %194, i64 %idxprom202
  %198 = load i32****, i32***** %arrayidx203, align 8
  %199 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y204 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %199, i32 0, i32 34
  %200 = load i32, i32* %pix_y204, align 4
  %shr205 = ashr i32 %200, 2
  %201 = load i32, i32* %block_y, align 4
  %add206 = add nsw i32 %shr205, %201
  %idxprom207 = sext i32 %add206 to i64
  %arrayidx208 = getelementptr inbounds i32***, i32**** %198, i64 %idxprom207
  %202 = load i32***, i32**** %arrayidx208, align 8
  %203 = load i16, i16* %ref.addr, align 2
  %idxprom209 = sext i16 %203 to i64
  %arrayidx210 = getelementptr inbounds i32**, i32*** %202, i64 %idxprom209
  %204 = load i32**, i32*** %arrayidx210, align 8
  %arrayidx211 = getelementptr inbounds i32*, i32** %204, i64 2
  %205 = load i32*, i32** %arrayidx211, align 8
  %arrayidx212 = getelementptr inbounds i32, i32* %205, i64 0
  %206 = load i32, i32* %arrayidx212, align 4
  br label %cond.end213

cond.end213:                                      ; preds = %cond.false198, %cond.true184
  %cond214 = phi i32 [ %193, %cond.true184 ], [ %206, %cond.false198 ]
  store i32 %cond214, i32* @pred_SAD_uplayer, align 4
  %207 = load i32, i32* @pred_SAD_uplayer, align 4
  %div215 = sdiv i32 %207, 2
  store i32 %div215, i32* @pred_SAD_uplayer, align 4
  br label %if.end277

if.else216:                                       ; preds = %if.else156
  %208 = load i32, i32* %blocktype.addr, align 4
  %cmp217 = icmp sgt i32 %208, 1
  br i1 %cmp217, label %if.then219, label %if.end276

if.then219:                                       ; preds = %if.else216
  %209 = load i16******, i16******* %all_mv, align 8
  %210 = load i32, i32* %block_x, align 4
  %idxprom220 = sext i32 %210 to i64
  %arrayidx221 = getelementptr inbounds i16*****, i16****** %209, i64 %idxprom220
  %211 = load i16*****, i16****** %arrayidx221, align 8
  %212 = load i32, i32* %block_y, align 4
  %idxprom222 = sext i32 %212 to i64
  %arrayidx223 = getelementptr inbounds i16****, i16***** %211, i64 %idxprom222
  %213 = load i16****, i16***** %arrayidx223, align 8
  %214 = load i32, i32* %list.addr, align 4
  %idxprom224 = sext i32 %214 to i64
  %arrayidx225 = getelementptr inbounds i16***, i16**** %213, i64 %idxprom224
  %215 = load i16***, i16**** %arrayidx225, align 8
  %216 = load i16, i16* %ref.addr, align 2
  %idxprom226 = sext i16 %216 to i64
  %arrayidx227 = getelementptr inbounds i16**, i16*** %215, i64 %idxprom226
  %217 = load i16**, i16*** %arrayidx227, align 8
  %arrayidx228 = getelementptr inbounds i16*, i16** %217, i64 1
  %218 = load i16*, i16** %arrayidx228, align 8
  %arrayidx229 = getelementptr inbounds i16, i16* %218, i64 0
  %219 = load i16, i16* %arrayidx229, align 2
  %conv230 = sext i16 %219 to i32
  store i32 %conv230, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %220 = load i16******, i16******* %all_mv, align 8
  %221 = load i32, i32* %block_x, align 4
  %idxprom231 = sext i32 %221 to i64
  %arrayidx232 = getelementptr inbounds i16*****, i16****** %220, i64 %idxprom231
  %222 = load i16*****, i16****** %arrayidx232, align 8
  %223 = load i32, i32* %block_y, align 4
  %idxprom233 = sext i32 %223 to i64
  %arrayidx234 = getelementptr inbounds i16****, i16***** %222, i64 %idxprom233
  %224 = load i16****, i16***** %arrayidx234, align 8
  %225 = load i32, i32* %list.addr, align 4
  %idxprom235 = sext i32 %225 to i64
  %arrayidx236 = getelementptr inbounds i16***, i16**** %224, i64 %idxprom235
  %226 = load i16***, i16**** %arrayidx236, align 8
  %227 = load i16, i16* %ref.addr, align 2
  %idxprom237 = sext i16 %227 to i64
  %arrayidx238 = getelementptr inbounds i16**, i16*** %226, i64 %idxprom237
  %228 = load i16**, i16*** %arrayidx238, align 8
  %arrayidx239 = getelementptr inbounds i16*, i16** %228, i64 1
  %229 = load i16*, i16** %arrayidx239, align 8
  %arrayidx240 = getelementptr inbounds i16, i16* %229, i64 1
  %230 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %230 to i32
  store i32 %conv241, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %231 = load i32, i32* %list.addr, align 4
  %cmp242 = icmp eq i32 %231, 1
  br i1 %cmp242, label %cond.true244, label %cond.false258

cond.true244:                                     ; preds = %if.then219
  %232 = load i32*****, i32****** @all_bwmincost, align 8
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x245 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 33
  %234 = load i32, i32* %pix_x245, align 8
  %shr246 = ashr i32 %234, 2
  %235 = load i32, i32* %block_x, align 4
  %add247 = add nsw i32 %shr246, %235
  %idxprom248 = sext i32 %add247 to i64
  %arrayidx249 = getelementptr inbounds i32****, i32***** %232, i64 %idxprom248
  %236 = load i32****, i32***** %arrayidx249, align 8
  %237 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y250 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %237, i32 0, i32 34
  %238 = load i32, i32* %pix_y250, align 4
  %shr251 = ashr i32 %238, 2
  %239 = load i32, i32* %block_y, align 4
  %add252 = add nsw i32 %shr251, %239
  %idxprom253 = sext i32 %add252 to i64
  %arrayidx254 = getelementptr inbounds i32***, i32**** %236, i64 %idxprom253
  %240 = load i32***, i32**** %arrayidx254, align 8
  %arrayidx255 = getelementptr inbounds i32**, i32*** %240, i64 0
  %241 = load i32**, i32*** %arrayidx255, align 8
  %arrayidx256 = getelementptr inbounds i32*, i32** %241, i64 1
  %242 = load i32*, i32** %arrayidx256, align 8
  %arrayidx257 = getelementptr inbounds i32, i32* %242, i64 0
  %243 = load i32, i32* %arrayidx257, align 4
  br label %cond.end273

cond.false258:                                    ; preds = %if.then219
  %244 = load i32*****, i32****** @all_mincost, align 8
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x259 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 33
  %246 = load i32, i32* %pix_x259, align 8
  %shr260 = ashr i32 %246, 2
  %247 = load i32, i32* %block_x, align 4
  %add261 = add nsw i32 %shr260, %247
  %idxprom262 = sext i32 %add261 to i64
  %arrayidx263 = getelementptr inbounds i32****, i32***** %244, i64 %idxprom262
  %248 = load i32****, i32***** %arrayidx263, align 8
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y264 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 34
  %250 = load i32, i32* %pix_y264, align 4
  %shr265 = ashr i32 %250, 2
  %251 = load i32, i32* %block_y, align 4
  %add266 = add nsw i32 %shr265, %251
  %idxprom267 = sext i32 %add266 to i64
  %arrayidx268 = getelementptr inbounds i32***, i32**** %248, i64 %idxprom267
  %252 = load i32***, i32**** %arrayidx268, align 8
  %253 = load i16, i16* %ref.addr, align 2
  %idxprom269 = sext i16 %253 to i64
  %arrayidx270 = getelementptr inbounds i32**, i32*** %252, i64 %idxprom269
  %254 = load i32**, i32*** %arrayidx270, align 8
  %arrayidx271 = getelementptr inbounds i32*, i32** %254, i64 1
  %255 = load i32*, i32** %arrayidx271, align 8
  %arrayidx272 = getelementptr inbounds i32, i32* %255, i64 0
  %256 = load i32, i32* %arrayidx272, align 4
  br label %cond.end273

cond.end273:                                      ; preds = %cond.false258, %cond.true244
  %cond274 = phi i32 [ %243, %cond.true244 ], [ %256, %cond.false258 ]
  store i32 %cond274, i32* @pred_SAD_uplayer, align 4
  %257 = load i32, i32* @pred_SAD_uplayer, align 4
  %div275 = sdiv i32 %257, 2
  store i32 %div275, i32* @pred_SAD_uplayer, align 4
  br label %if.end276

if.end276:                                        ; preds = %cond.end273, %if.else216
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %cond.end213
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %cond.end153
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %cond.end95
  %258 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %258, i32 0, i32 6
  %259 = load i32, i32* %type, align 8
  %cmp280 = icmp eq i32 %259, 1
  br i1 %cmp280, label %land.lhs.true, label %if.end528

land.lhs.true:                                    ; preds = %if.end279
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %nal_reference_idc = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 113
  %261 = load i32, i32* %nal_reference_idc, align 8
  %cmp282 = icmp sgt i32 %261, 0
  br i1 %cmp282, label %if.then284, label %if.end528

if.then284:                                       ; preds = %land.lhs.true
  %262 = load i32, i32* %blocktype.addr, align 4
  %cmp285 = icmp sgt i32 %262, 6
  br i1 %cmp285, label %if.then287, label %if.else344

if.then287:                                       ; preds = %if.then284
  %263 = load i16******, i16******* %all_mv, align 8
  %264 = load i32, i32* %block_x, align 4
  %idxprom288 = sext i32 %264 to i64
  %arrayidx289 = getelementptr inbounds i16*****, i16****** %263, i64 %idxprom288
  %265 = load i16*****, i16****** %arrayidx289, align 8
  %266 = load i32, i32* %block_y, align 4
  %idxprom290 = sext i32 %266 to i64
  %arrayidx291 = getelementptr inbounds i16****, i16***** %265, i64 %idxprom290
  %267 = load i16****, i16***** %arrayidx291, align 8
  %268 = load i32, i32* %list.addr, align 4
  %idxprom292 = sext i32 %268 to i64
  %arrayidx293 = getelementptr inbounds i16***, i16**** %267, i64 %idxprom292
  %269 = load i16***, i16**** %arrayidx293, align 8
  %270 = load i16, i16* %ref.addr, align 2
  %idxprom294 = sext i16 %270 to i64
  %arrayidx295 = getelementptr inbounds i16**, i16*** %269, i64 %idxprom294
  %271 = load i16**, i16*** %arrayidx295, align 8
  %arrayidx296 = getelementptr inbounds i16*, i16** %271, i64 5
  %272 = load i16*, i16** %arrayidx296, align 8
  %arrayidx297 = getelementptr inbounds i16, i16* %272, i64 0
  %273 = load i16, i16* %arrayidx297, align 2
  %conv298 = sext i16 %273 to i32
  store i32 %conv298, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %274 = load i16******, i16******* %all_mv, align 8
  %275 = load i32, i32* %block_x, align 4
  %idxprom299 = sext i32 %275 to i64
  %arrayidx300 = getelementptr inbounds i16*****, i16****** %274, i64 %idxprom299
  %276 = load i16*****, i16****** %arrayidx300, align 8
  %277 = load i32, i32* %block_y, align 4
  %idxprom301 = sext i32 %277 to i64
  %arrayidx302 = getelementptr inbounds i16****, i16***** %276, i64 %idxprom301
  %278 = load i16****, i16***** %arrayidx302, align 8
  %279 = load i32, i32* %list.addr, align 4
  %idxprom303 = sext i32 %279 to i64
  %arrayidx304 = getelementptr inbounds i16***, i16**** %278, i64 %idxprom303
  %280 = load i16***, i16**** %arrayidx304, align 8
  %281 = load i16, i16* %ref.addr, align 2
  %idxprom305 = sext i16 %281 to i64
  %arrayidx306 = getelementptr inbounds i16**, i16*** %280, i64 %idxprom305
  %282 = load i16**, i16*** %arrayidx306, align 8
  %arrayidx307 = getelementptr inbounds i16*, i16** %282, i64 5
  %283 = load i16*, i16** %arrayidx307, align 8
  %arrayidx308 = getelementptr inbounds i16, i16* %283, i64 1
  %284 = load i16, i16* %arrayidx308, align 2
  %conv309 = sext i16 %284 to i32
  store i32 %conv309, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %285 = load i32, i32* %list.addr, align 4
  %cmp310 = icmp eq i32 %285, 1
  br i1 %cmp310, label %cond.true312, label %cond.false326

cond.true312:                                     ; preds = %if.then287
  %286 = load i32*****, i32****** @all_bwmincost, align 8
  %287 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x313 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %287, i32 0, i32 33
  %288 = load i32, i32* %pix_x313, align 8
  %shr314 = ashr i32 %288, 2
  %289 = load i32, i32* %block_x, align 4
  %add315 = add nsw i32 %shr314, %289
  %idxprom316 = sext i32 %add315 to i64
  %arrayidx317 = getelementptr inbounds i32****, i32***** %286, i64 %idxprom316
  %290 = load i32****, i32***** %arrayidx317, align 8
  %291 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y318 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %291, i32 0, i32 34
  %292 = load i32, i32* %pix_y318, align 4
  %shr319 = ashr i32 %292, 2
  %293 = load i32, i32* %block_y, align 4
  %add320 = add nsw i32 %shr319, %293
  %idxprom321 = sext i32 %add320 to i64
  %arrayidx322 = getelementptr inbounds i32***, i32**** %290, i64 %idxprom321
  %294 = load i32***, i32**** %arrayidx322, align 8
  %arrayidx323 = getelementptr inbounds i32**, i32*** %294, i64 0
  %295 = load i32**, i32*** %arrayidx323, align 8
  %arrayidx324 = getelementptr inbounds i32*, i32** %295, i64 5
  %296 = load i32*, i32** %arrayidx324, align 8
  %arrayidx325 = getelementptr inbounds i32, i32* %296, i64 0
  %297 = load i32, i32* %arrayidx325, align 4
  br label %cond.end341

cond.false326:                                    ; preds = %if.then287
  %298 = load i32*****, i32****** @all_mincost, align 8
  %299 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x327 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %299, i32 0, i32 33
  %300 = load i32, i32* %pix_x327, align 8
  %shr328 = ashr i32 %300, 2
  %301 = load i32, i32* %block_x, align 4
  %add329 = add nsw i32 %shr328, %301
  %idxprom330 = sext i32 %add329 to i64
  %arrayidx331 = getelementptr inbounds i32****, i32***** %298, i64 %idxprom330
  %302 = load i32****, i32***** %arrayidx331, align 8
  %303 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y332 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %303, i32 0, i32 34
  %304 = load i32, i32* %pix_y332, align 4
  %shr333 = ashr i32 %304, 2
  %305 = load i32, i32* %block_y, align 4
  %add334 = add nsw i32 %shr333, %305
  %idxprom335 = sext i32 %add334 to i64
  %arrayidx336 = getelementptr inbounds i32***, i32**** %302, i64 %idxprom335
  %306 = load i32***, i32**** %arrayidx336, align 8
  %307 = load i16, i16* %ref.addr, align 2
  %idxprom337 = sext i16 %307 to i64
  %arrayidx338 = getelementptr inbounds i32**, i32*** %306, i64 %idxprom337
  %308 = load i32**, i32*** %arrayidx338, align 8
  %arrayidx339 = getelementptr inbounds i32*, i32** %308, i64 5
  %309 = load i32*, i32** %arrayidx339, align 8
  %arrayidx340 = getelementptr inbounds i32, i32* %309, i64 0
  %310 = load i32, i32* %arrayidx340, align 4
  br label %cond.end341

cond.end341:                                      ; preds = %cond.false326, %cond.true312
  %cond342 = phi i32 [ %297, %cond.true312 ], [ %310, %cond.false326 ]
  store i32 %cond342, i32* @pred_SAD_uplayer, align 4
  %311 = load i32, i32* @pred_SAD_uplayer, align 4
  %div343 = sdiv i32 %311, 2
  store i32 %div343, i32* @pred_SAD_uplayer, align 4
  br label %if.end527

if.else344:                                       ; preds = %if.then284
  %312 = load i32, i32* %blocktype.addr, align 4
  %cmp345 = icmp sgt i32 %312, 4
  br i1 %cmp345, label %if.then347, label %if.else404

if.then347:                                       ; preds = %if.else344
  %313 = load i16******, i16******* %all_mv, align 8
  %314 = load i32, i32* %block_x, align 4
  %idxprom348 = sext i32 %314 to i64
  %arrayidx349 = getelementptr inbounds i16*****, i16****** %313, i64 %idxprom348
  %315 = load i16*****, i16****** %arrayidx349, align 8
  %316 = load i32, i32* %block_y, align 4
  %idxprom350 = sext i32 %316 to i64
  %arrayidx351 = getelementptr inbounds i16****, i16***** %315, i64 %idxprom350
  %317 = load i16****, i16***** %arrayidx351, align 8
  %318 = load i32, i32* %list.addr, align 4
  %idxprom352 = sext i32 %318 to i64
  %arrayidx353 = getelementptr inbounds i16***, i16**** %317, i64 %idxprom352
  %319 = load i16***, i16**** %arrayidx353, align 8
  %320 = load i16, i16* %ref.addr, align 2
  %idxprom354 = sext i16 %320 to i64
  %arrayidx355 = getelementptr inbounds i16**, i16*** %319, i64 %idxprom354
  %321 = load i16**, i16*** %arrayidx355, align 8
  %arrayidx356 = getelementptr inbounds i16*, i16** %321, i64 4
  %322 = load i16*, i16** %arrayidx356, align 8
  %arrayidx357 = getelementptr inbounds i16, i16* %322, i64 0
  %323 = load i16, i16* %arrayidx357, align 2
  %conv358 = sext i16 %323 to i32
  store i32 %conv358, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %324 = load i16******, i16******* %all_mv, align 8
  %325 = load i32, i32* %block_x, align 4
  %idxprom359 = sext i32 %325 to i64
  %arrayidx360 = getelementptr inbounds i16*****, i16****** %324, i64 %idxprom359
  %326 = load i16*****, i16****** %arrayidx360, align 8
  %327 = load i32, i32* %block_y, align 4
  %idxprom361 = sext i32 %327 to i64
  %arrayidx362 = getelementptr inbounds i16****, i16***** %326, i64 %idxprom361
  %328 = load i16****, i16***** %arrayidx362, align 8
  %329 = load i32, i32* %list.addr, align 4
  %idxprom363 = sext i32 %329 to i64
  %arrayidx364 = getelementptr inbounds i16***, i16**** %328, i64 %idxprom363
  %330 = load i16***, i16**** %arrayidx364, align 8
  %331 = load i16, i16* %ref.addr, align 2
  %idxprom365 = sext i16 %331 to i64
  %arrayidx366 = getelementptr inbounds i16**, i16*** %330, i64 %idxprom365
  %332 = load i16**, i16*** %arrayidx366, align 8
  %arrayidx367 = getelementptr inbounds i16*, i16** %332, i64 4
  %333 = load i16*, i16** %arrayidx367, align 8
  %arrayidx368 = getelementptr inbounds i16, i16* %333, i64 1
  %334 = load i16, i16* %arrayidx368, align 2
  %conv369 = sext i16 %334 to i32
  store i32 %conv369, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %335 = load i32, i32* %list.addr, align 4
  %cmp370 = icmp eq i32 %335, 1
  br i1 %cmp370, label %cond.true372, label %cond.false386

cond.true372:                                     ; preds = %if.then347
  %336 = load i32*****, i32****** @all_bwmincost, align 8
  %337 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x373 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %337, i32 0, i32 33
  %338 = load i32, i32* %pix_x373, align 8
  %shr374 = ashr i32 %338, 2
  %339 = load i32, i32* %block_x, align 4
  %add375 = add nsw i32 %shr374, %339
  %idxprom376 = sext i32 %add375 to i64
  %arrayidx377 = getelementptr inbounds i32****, i32***** %336, i64 %idxprom376
  %340 = load i32****, i32***** %arrayidx377, align 8
  %341 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %341, i32 0, i32 34
  %342 = load i32, i32* %pix_y378, align 4
  %shr379 = ashr i32 %342, 2
  %343 = load i32, i32* %block_y, align 4
  %add380 = add nsw i32 %shr379, %343
  %idxprom381 = sext i32 %add380 to i64
  %arrayidx382 = getelementptr inbounds i32***, i32**** %340, i64 %idxprom381
  %344 = load i32***, i32**** %arrayidx382, align 8
  %arrayidx383 = getelementptr inbounds i32**, i32*** %344, i64 0
  %345 = load i32**, i32*** %arrayidx383, align 8
  %arrayidx384 = getelementptr inbounds i32*, i32** %345, i64 4
  %346 = load i32*, i32** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds i32, i32* %346, i64 0
  %347 = load i32, i32* %arrayidx385, align 4
  br label %cond.end401

cond.false386:                                    ; preds = %if.then347
  %348 = load i32*****, i32****** @all_mincost, align 8
  %349 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x387 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %349, i32 0, i32 33
  %350 = load i32, i32* %pix_x387, align 8
  %shr388 = ashr i32 %350, 2
  %351 = load i32, i32* %block_x, align 4
  %add389 = add nsw i32 %shr388, %351
  %idxprom390 = sext i32 %add389 to i64
  %arrayidx391 = getelementptr inbounds i32****, i32***** %348, i64 %idxprom390
  %352 = load i32****, i32***** %arrayidx391, align 8
  %353 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %pix_y392, align 4
  %shr393 = ashr i32 %354, 2
  %355 = load i32, i32* %block_y, align 4
  %add394 = add nsw i32 %shr393, %355
  %idxprom395 = sext i32 %add394 to i64
  %arrayidx396 = getelementptr inbounds i32***, i32**** %352, i64 %idxprom395
  %356 = load i32***, i32**** %arrayidx396, align 8
  %357 = load i16, i16* %ref.addr, align 2
  %idxprom397 = sext i16 %357 to i64
  %arrayidx398 = getelementptr inbounds i32**, i32*** %356, i64 %idxprom397
  %358 = load i32**, i32*** %arrayidx398, align 8
  %arrayidx399 = getelementptr inbounds i32*, i32** %358, i64 4
  %359 = load i32*, i32** %arrayidx399, align 8
  %arrayidx400 = getelementptr inbounds i32, i32* %359, i64 0
  %360 = load i32, i32* %arrayidx400, align 4
  br label %cond.end401

cond.end401:                                      ; preds = %cond.false386, %cond.true372
  %cond402 = phi i32 [ %347, %cond.true372 ], [ %360, %cond.false386 ]
  store i32 %cond402, i32* @pred_SAD_uplayer, align 4
  %361 = load i32, i32* @pred_SAD_uplayer, align 4
  %div403 = sdiv i32 %361, 2
  store i32 %div403, i32* @pred_SAD_uplayer, align 4
  br label %if.end526

if.else404:                                       ; preds = %if.else344
  %362 = load i32, i32* %blocktype.addr, align 4
  %cmp405 = icmp eq i32 %362, 4
  br i1 %cmp405, label %if.then407, label %if.else464

if.then407:                                       ; preds = %if.else404
  %363 = load i16******, i16******* %all_mv, align 8
  %364 = load i32, i32* %block_x, align 4
  %idxprom408 = sext i32 %364 to i64
  %arrayidx409 = getelementptr inbounds i16*****, i16****** %363, i64 %idxprom408
  %365 = load i16*****, i16****** %arrayidx409, align 8
  %366 = load i32, i32* %block_y, align 4
  %idxprom410 = sext i32 %366 to i64
  %arrayidx411 = getelementptr inbounds i16****, i16***** %365, i64 %idxprom410
  %367 = load i16****, i16***** %arrayidx411, align 8
  %368 = load i32, i32* %list.addr, align 4
  %idxprom412 = sext i32 %368 to i64
  %arrayidx413 = getelementptr inbounds i16***, i16**** %367, i64 %idxprom412
  %369 = load i16***, i16**** %arrayidx413, align 8
  %370 = load i16, i16* %ref.addr, align 2
  %idxprom414 = sext i16 %370 to i64
  %arrayidx415 = getelementptr inbounds i16**, i16*** %369, i64 %idxprom414
  %371 = load i16**, i16*** %arrayidx415, align 8
  %arrayidx416 = getelementptr inbounds i16*, i16** %371, i64 2
  %372 = load i16*, i16** %arrayidx416, align 8
  %arrayidx417 = getelementptr inbounds i16, i16* %372, i64 0
  %373 = load i16, i16* %arrayidx417, align 2
  %conv418 = sext i16 %373 to i32
  store i32 %conv418, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %374 = load i16******, i16******* %all_mv, align 8
  %375 = load i32, i32* %block_x, align 4
  %idxprom419 = sext i32 %375 to i64
  %arrayidx420 = getelementptr inbounds i16*****, i16****** %374, i64 %idxprom419
  %376 = load i16*****, i16****** %arrayidx420, align 8
  %377 = load i32, i32* %block_y, align 4
  %idxprom421 = sext i32 %377 to i64
  %arrayidx422 = getelementptr inbounds i16****, i16***** %376, i64 %idxprom421
  %378 = load i16****, i16***** %arrayidx422, align 8
  %379 = load i32, i32* %list.addr, align 4
  %idxprom423 = sext i32 %379 to i64
  %arrayidx424 = getelementptr inbounds i16***, i16**** %378, i64 %idxprom423
  %380 = load i16***, i16**** %arrayidx424, align 8
  %381 = load i16, i16* %ref.addr, align 2
  %idxprom425 = sext i16 %381 to i64
  %arrayidx426 = getelementptr inbounds i16**, i16*** %380, i64 %idxprom425
  %382 = load i16**, i16*** %arrayidx426, align 8
  %arrayidx427 = getelementptr inbounds i16*, i16** %382, i64 2
  %383 = load i16*, i16** %arrayidx427, align 8
  %arrayidx428 = getelementptr inbounds i16, i16* %383, i64 1
  %384 = load i16, i16* %arrayidx428, align 2
  %conv429 = sext i16 %384 to i32
  store i32 %conv429, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %385 = load i32, i32* %list.addr, align 4
  %cmp430 = icmp eq i32 %385, 1
  br i1 %cmp430, label %cond.true432, label %cond.false446

cond.true432:                                     ; preds = %if.then407
  %386 = load i32*****, i32****** @all_bwmincost, align 8
  %387 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x433 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %387, i32 0, i32 33
  %388 = load i32, i32* %pix_x433, align 8
  %shr434 = ashr i32 %388, 2
  %389 = load i32, i32* %block_x, align 4
  %add435 = add nsw i32 %shr434, %389
  %idxprom436 = sext i32 %add435 to i64
  %arrayidx437 = getelementptr inbounds i32****, i32***** %386, i64 %idxprom436
  %390 = load i32****, i32***** %arrayidx437, align 8
  %391 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y438 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %391, i32 0, i32 34
  %392 = load i32, i32* %pix_y438, align 4
  %shr439 = ashr i32 %392, 2
  %393 = load i32, i32* %block_y, align 4
  %add440 = add nsw i32 %shr439, %393
  %idxprom441 = sext i32 %add440 to i64
  %arrayidx442 = getelementptr inbounds i32***, i32**** %390, i64 %idxprom441
  %394 = load i32***, i32**** %arrayidx442, align 8
  %arrayidx443 = getelementptr inbounds i32**, i32*** %394, i64 0
  %395 = load i32**, i32*** %arrayidx443, align 8
  %arrayidx444 = getelementptr inbounds i32*, i32** %395, i64 2
  %396 = load i32*, i32** %arrayidx444, align 8
  %arrayidx445 = getelementptr inbounds i32, i32* %396, i64 0
  %397 = load i32, i32* %arrayidx445, align 4
  br label %cond.end461

cond.false446:                                    ; preds = %if.then407
  %398 = load i32*****, i32****** @all_mincost, align 8
  %399 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x447 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %399, i32 0, i32 33
  %400 = load i32, i32* %pix_x447, align 8
  %shr448 = ashr i32 %400, 2
  %401 = load i32, i32* %block_x, align 4
  %add449 = add nsw i32 %shr448, %401
  %idxprom450 = sext i32 %add449 to i64
  %arrayidx451 = getelementptr inbounds i32****, i32***** %398, i64 %idxprom450
  %402 = load i32****, i32***** %arrayidx451, align 8
  %403 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y452 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %403, i32 0, i32 34
  %404 = load i32, i32* %pix_y452, align 4
  %shr453 = ashr i32 %404, 2
  %405 = load i32, i32* %block_y, align 4
  %add454 = add nsw i32 %shr453, %405
  %idxprom455 = sext i32 %add454 to i64
  %arrayidx456 = getelementptr inbounds i32***, i32**** %402, i64 %idxprom455
  %406 = load i32***, i32**** %arrayidx456, align 8
  %407 = load i16, i16* %ref.addr, align 2
  %idxprom457 = sext i16 %407 to i64
  %arrayidx458 = getelementptr inbounds i32**, i32*** %406, i64 %idxprom457
  %408 = load i32**, i32*** %arrayidx458, align 8
  %arrayidx459 = getelementptr inbounds i32*, i32** %408, i64 2
  %409 = load i32*, i32** %arrayidx459, align 8
  %arrayidx460 = getelementptr inbounds i32, i32* %409, i64 0
  %410 = load i32, i32* %arrayidx460, align 4
  br label %cond.end461

cond.end461:                                      ; preds = %cond.false446, %cond.true432
  %cond462 = phi i32 [ %397, %cond.true432 ], [ %410, %cond.false446 ]
  store i32 %cond462, i32* @pred_SAD_uplayer, align 4
  %411 = load i32, i32* @pred_SAD_uplayer, align 4
  %div463 = sdiv i32 %411, 2
  store i32 %div463, i32* @pred_SAD_uplayer, align 4
  br label %if.end525

if.else464:                                       ; preds = %if.else404
  %412 = load i32, i32* %blocktype.addr, align 4
  %cmp465 = icmp sgt i32 %412, 1
  br i1 %cmp465, label %if.then467, label %if.end524

if.then467:                                       ; preds = %if.else464
  %413 = load i16******, i16******* %all_mv, align 8
  %414 = load i32, i32* %block_x, align 4
  %idxprom468 = sext i32 %414 to i64
  %arrayidx469 = getelementptr inbounds i16*****, i16****** %413, i64 %idxprom468
  %415 = load i16*****, i16****** %arrayidx469, align 8
  %416 = load i32, i32* %block_y, align 4
  %idxprom470 = sext i32 %416 to i64
  %arrayidx471 = getelementptr inbounds i16****, i16***** %415, i64 %idxprom470
  %417 = load i16****, i16***** %arrayidx471, align 8
  %418 = load i32, i32* %list.addr, align 4
  %idxprom472 = sext i32 %418 to i64
  %arrayidx473 = getelementptr inbounds i16***, i16**** %417, i64 %idxprom472
  %419 = load i16***, i16**** %arrayidx473, align 8
  %420 = load i16, i16* %ref.addr, align 2
  %idxprom474 = sext i16 %420 to i64
  %arrayidx475 = getelementptr inbounds i16**, i16*** %419, i64 %idxprom474
  %421 = load i16**, i16*** %arrayidx475, align 8
  %arrayidx476 = getelementptr inbounds i16*, i16** %421, i64 1
  %422 = load i16*, i16** %arrayidx476, align 8
  %arrayidx477 = getelementptr inbounds i16, i16* %422, i64 0
  %423 = load i16, i16* %arrayidx477, align 2
  %conv478 = sext i16 %423 to i32
  store i32 %conv478, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 0), align 4
  %424 = load i16******, i16******* %all_mv, align 8
  %425 = load i32, i32* %block_x, align 4
  %idxprom479 = sext i32 %425 to i64
  %arrayidx480 = getelementptr inbounds i16*****, i16****** %424, i64 %idxprom479
  %426 = load i16*****, i16****** %arrayidx480, align 8
  %427 = load i32, i32* %block_y, align 4
  %idxprom481 = sext i32 %427 to i64
  %arrayidx482 = getelementptr inbounds i16****, i16***** %426, i64 %idxprom481
  %428 = load i16****, i16***** %arrayidx482, align 8
  %429 = load i32, i32* %list.addr, align 4
  %idxprom483 = sext i32 %429 to i64
  %arrayidx484 = getelementptr inbounds i16***, i16**** %428, i64 %idxprom483
  %430 = load i16***, i16**** %arrayidx484, align 8
  %431 = load i16, i16* %ref.addr, align 2
  %idxprom485 = sext i16 %431 to i64
  %arrayidx486 = getelementptr inbounds i16**, i16*** %430, i64 %idxprom485
  %432 = load i16**, i16*** %arrayidx486, align 8
  %arrayidx487 = getelementptr inbounds i16*, i16** %432, i64 1
  %433 = load i16*, i16** %arrayidx487, align 8
  %arrayidx488 = getelementptr inbounds i16, i16* %433, i64 1
  %434 = load i16, i16* %arrayidx488, align 2
  %conv489 = sext i16 %434 to i32
  store i32 %conv489, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_uplayer, i64 0, i64 1), align 4
  %435 = load i32, i32* %list.addr, align 4
  %cmp490 = icmp eq i32 %435, 1
  br i1 %cmp490, label %cond.true492, label %cond.false506

cond.true492:                                     ; preds = %if.then467
  %436 = load i32*****, i32****** @all_bwmincost, align 8
  %437 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x493 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %437, i32 0, i32 33
  %438 = load i32, i32* %pix_x493, align 8
  %shr494 = ashr i32 %438, 2
  %439 = load i32, i32* %block_x, align 4
  %add495 = add nsw i32 %shr494, %439
  %idxprom496 = sext i32 %add495 to i64
  %arrayidx497 = getelementptr inbounds i32****, i32***** %436, i64 %idxprom496
  %440 = load i32****, i32***** %arrayidx497, align 8
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y498 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 34
  %442 = load i32, i32* %pix_y498, align 4
  %shr499 = ashr i32 %442, 2
  %443 = load i32, i32* %block_y, align 4
  %add500 = add nsw i32 %shr499, %443
  %idxprom501 = sext i32 %add500 to i64
  %arrayidx502 = getelementptr inbounds i32***, i32**** %440, i64 %idxprom501
  %444 = load i32***, i32**** %arrayidx502, align 8
  %arrayidx503 = getelementptr inbounds i32**, i32*** %444, i64 0
  %445 = load i32**, i32*** %arrayidx503, align 8
  %arrayidx504 = getelementptr inbounds i32*, i32** %445, i64 1
  %446 = load i32*, i32** %arrayidx504, align 8
  %arrayidx505 = getelementptr inbounds i32, i32* %446, i64 0
  %447 = load i32, i32* %arrayidx505, align 4
  br label %cond.end521

cond.false506:                                    ; preds = %if.then467
  %448 = load i32*****, i32****** @all_mincost, align 8
  %449 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x507 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %449, i32 0, i32 33
  %450 = load i32, i32* %pix_x507, align 8
  %shr508 = ashr i32 %450, 2
  %451 = load i32, i32* %block_x, align 4
  %add509 = add nsw i32 %shr508, %451
  %idxprom510 = sext i32 %add509 to i64
  %arrayidx511 = getelementptr inbounds i32****, i32***** %448, i64 %idxprom510
  %452 = load i32****, i32***** %arrayidx511, align 8
  %453 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y512 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %453, i32 0, i32 34
  %454 = load i32, i32* %pix_y512, align 4
  %shr513 = ashr i32 %454, 2
  %455 = load i32, i32* %block_y, align 4
  %add514 = add nsw i32 %shr513, %455
  %idxprom515 = sext i32 %add514 to i64
  %arrayidx516 = getelementptr inbounds i32***, i32**** %452, i64 %idxprom515
  %456 = load i32***, i32**** %arrayidx516, align 8
  %457 = load i16, i16* %ref.addr, align 2
  %idxprom517 = sext i16 %457 to i64
  %arrayidx518 = getelementptr inbounds i32**, i32*** %456, i64 %idxprom517
  %458 = load i32**, i32*** %arrayidx518, align 8
  %arrayidx519 = getelementptr inbounds i32*, i32** %458, i64 1
  %459 = load i32*, i32** %arrayidx519, align 8
  %arrayidx520 = getelementptr inbounds i32, i32* %459, i64 0
  %460 = load i32, i32* %arrayidx520, align 4
  br label %cond.end521

cond.end521:                                      ; preds = %cond.false506, %cond.true492
  %cond522 = phi i32 [ %447, %cond.true492 ], [ %460, %cond.false506 ]
  store i32 %cond522, i32* @pred_SAD_uplayer, align 4
  %461 = load i32, i32* @pred_SAD_uplayer, align 4
  %div523 = sdiv i32 %461, 2
  store i32 %div523, i32* @pred_SAD_uplayer, align 4
  br label %if.end524

if.end524:                                        ; preds = %cond.end521, %if.else464
  br label %if.end525

if.end525:                                        ; preds = %if.end524, %cond.end461
  br label %if.end526

if.end526:                                        ; preds = %if.end525, %cond.end401
  br label %if.end527

if.end527:                                        ; preds = %if.end526, %cond.end341
  br label %if.end528

if.end528:                                        ; preds = %if.end527, %land.lhs.true, %if.end279
  %462 = load i32, i32* @flag_intra_SAD, align 4
  %tobool529 = icmp ne i32 %462, 0
  br i1 %tobool529, label %cond.true530, label %cond.false531

cond.true530:                                     ; preds = %if.end528
  br label %cond.end532

cond.false531:                                    ; preds = %if.end528
  %463 = load i32, i32* @pred_SAD_uplayer, align 4
  br label %cond.end532

cond.end532:                                      ; preds = %cond.false531, %cond.true530
  %cond533 = phi i32 [ 0, %cond.true530 ], [ %463, %cond.false531 ]
  store i32 %cond533, i32* @pred_SAD_uplayer, align 4
  %464 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %number = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %464, i32 0, i32 0
  %465 = load i32, i32* %number, align 8
  %466 = load i16, i16* %ref.addr, align 2
  %conv534 = sext i16 %466 to i32
  %add535 = add nsw i32 %conv534, 1
  %cmp536 = icmp sgt i32 %465, %add535
  br i1 %cmp536, label %if.then538, label %if.end584

if.then538:                                       ; preds = %cond.end532
  %467 = load i32*****, i32****** @all_mincost, align 8
  %468 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x539 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %468, i32 0, i32 33
  %469 = load i32, i32* %pix_x539, align 8
  %shr540 = ashr i32 %469, 2
  %470 = load i32, i32* %block_x, align 4
  %add541 = add nsw i32 %shr540, %470
  %idxprom542 = sext i32 %add541 to i64
  %arrayidx543 = getelementptr inbounds i32****, i32***** %467, i64 %idxprom542
  %471 = load i32****, i32***** %arrayidx543, align 8
  %472 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y544 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %472, i32 0, i32 34
  %473 = load i32, i32* %pix_y544, align 4
  %shr545 = ashr i32 %473, 2
  %474 = load i32, i32* %block_y, align 4
  %add546 = add nsw i32 %shr545, %474
  %idxprom547 = sext i32 %add546 to i64
  %arrayidx548 = getelementptr inbounds i32***, i32**** %471, i64 %idxprom547
  %475 = load i32***, i32**** %arrayidx548, align 8
  %476 = load i16, i16* %ref.addr, align 2
  %idxprom549 = sext i16 %476 to i64
  %arrayidx550 = getelementptr inbounds i32**, i32*** %475, i64 %idxprom549
  %477 = load i32**, i32*** %arrayidx550, align 8
  %478 = load i32, i32* %blocktype.addr, align 4
  %idxprom551 = sext i32 %478 to i64
  %arrayidx552 = getelementptr inbounds i32*, i32** %477, i64 %idxprom551
  %479 = load i32*, i32** %arrayidx552, align 8
  %arrayidx553 = getelementptr inbounds i32, i32* %479, i64 0
  %480 = load i32, i32* %arrayidx553, align 4
  store i32 %480, i32* @pred_SAD_time, align 4
  %481 = load i32*****, i32****** @all_mincost, align 8
  %482 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x554 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %482, i32 0, i32 33
  %483 = load i32, i32* %pix_x554, align 8
  %shr555 = ashr i32 %483, 2
  %484 = load i32, i32* %block_x, align 4
  %add556 = add nsw i32 %shr555, %484
  %idxprom557 = sext i32 %add556 to i64
  %arrayidx558 = getelementptr inbounds i32****, i32***** %481, i64 %idxprom557
  %485 = load i32****, i32***** %arrayidx558, align 8
  %486 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y559 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %486, i32 0, i32 34
  %487 = load i32, i32* %pix_y559, align 4
  %shr560 = ashr i32 %487, 2
  %488 = load i32, i32* %block_y, align 4
  %add561 = add nsw i32 %shr560, %488
  %idxprom562 = sext i32 %add561 to i64
  %arrayidx563 = getelementptr inbounds i32***, i32**** %485, i64 %idxprom562
  %489 = load i32***, i32**** %arrayidx563, align 8
  %490 = load i16, i16* %ref.addr, align 2
  %idxprom564 = sext i16 %490 to i64
  %arrayidx565 = getelementptr inbounds i32**, i32*** %489, i64 %idxprom564
  %491 = load i32**, i32*** %arrayidx565, align 8
  %492 = load i32, i32* %blocktype.addr, align 4
  %idxprom566 = sext i32 %492 to i64
  %arrayidx567 = getelementptr inbounds i32*, i32** %491, i64 %idxprom566
  %493 = load i32*, i32** %arrayidx567, align 8
  %arrayidx568 = getelementptr inbounds i32, i32* %493, i64 1
  %494 = load i32, i32* %arrayidx568, align 4
  store i32 %494, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i64 0, i64 0), align 4
  %495 = load i32*****, i32****** @all_mincost, align 8
  %496 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %496, i32 0, i32 33
  %497 = load i32, i32* %pix_x569, align 8
  %shr570 = ashr i32 %497, 2
  %498 = load i32, i32* %block_x, align 4
  %add571 = add nsw i32 %shr570, %498
  %idxprom572 = sext i32 %add571 to i64
  %arrayidx573 = getelementptr inbounds i32****, i32***** %495, i64 %idxprom572
  %499 = load i32****, i32***** %arrayidx573, align 8
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y574 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 34
  %501 = load i32, i32* %pix_y574, align 4
  %shr575 = ashr i32 %501, 2
  %502 = load i32, i32* %block_y, align 4
  %add576 = add nsw i32 %shr575, %502
  %idxprom577 = sext i32 %add576 to i64
  %arrayidx578 = getelementptr inbounds i32***, i32**** %499, i64 %idxprom577
  %503 = load i32***, i32**** %arrayidx578, align 8
  %504 = load i16, i16* %ref.addr, align 2
  %idxprom579 = sext i16 %504 to i64
  %arrayidx580 = getelementptr inbounds i32**, i32*** %503, i64 %idxprom579
  %505 = load i32**, i32*** %arrayidx580, align 8
  %506 = load i32, i32* %blocktype.addr, align 4
  %idxprom581 = sext i32 %506 to i64
  %arrayidx582 = getelementptr inbounds i32*, i32** %505, i64 %idxprom581
  %507 = load i32*, i32** %arrayidx582, align 8
  %arrayidx583 = getelementptr inbounds i32, i32* %507, i64 2
  %508 = load i32, i32* %arrayidx583, align 4
  store i32 %508, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i64 0, i64 1), align 4
  br label %if.end584

if.end584:                                        ; preds = %if.then538, %cond.end532
  %509 = load i32, i32* %list.addr, align 4
  %cmp585 = icmp eq i32 %509, 1
  br i1 %cmp585, label %land.lhs.true587, label %if.end667

land.lhs.true587:                                 ; preds = %if.end584
  %510 = load i32, i32* @Bframe_ctr, align 4
  %511 = load i32, i32* %N_Bframe, align 4
  %rem588 = srem i32 %510, %511
  %cmp589 = icmp sgt i32 %rem588, 1
  br i1 %cmp589, label %if.then591, label %if.end667

if.then591:                                       ; preds = %land.lhs.true587
  %512 = load i32*****, i32****** @all_bwmincost, align 8
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x592 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 33
  %514 = load i32, i32* %pix_x592, align 8
  %shr593 = ashr i32 %514, 2
  %515 = load i32, i32* %block_x, align 4
  %add594 = add nsw i32 %shr593, %515
  %idxprom595 = sext i32 %add594 to i64
  %arrayidx596 = getelementptr inbounds i32****, i32***** %512, i64 %idxprom595
  %516 = load i32****, i32***** %arrayidx596, align 8
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y597 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 34
  %518 = load i32, i32* %pix_y597, align 4
  %shr598 = ashr i32 %518, 2
  %519 = load i32, i32* %block_y, align 4
  %add599 = add nsw i32 %shr598, %519
  %idxprom600 = sext i32 %add599 to i64
  %arrayidx601 = getelementptr inbounds i32***, i32**** %516, i64 %idxprom600
  %520 = load i32***, i32**** %arrayidx601, align 8
  %521 = load i16, i16* %ref.addr, align 2
  %idxprom602 = sext i16 %521 to i64
  %arrayidx603 = getelementptr inbounds i32**, i32*** %520, i64 %idxprom602
  %522 = load i32**, i32*** %arrayidx603, align 8
  %523 = load i32, i32* %blocktype.addr, align 4
  %idxprom604 = sext i32 %523 to i64
  %arrayidx605 = getelementptr inbounds i32*, i32** %522, i64 %idxprom604
  %524 = load i32*, i32** %arrayidx605, align 8
  %arrayidx606 = getelementptr inbounds i32, i32* %524, i64 0
  %525 = load i32, i32* %arrayidx606, align 4
  store i32 %525, i32* @pred_SAD_time, align 4
  %526 = load i32*****, i32****** @all_bwmincost, align 8
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x607 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 33
  %528 = load i32, i32* %pix_x607, align 8
  %shr608 = ashr i32 %528, 2
  %529 = load i32, i32* %block_x, align 4
  %add609 = add nsw i32 %shr608, %529
  %idxprom610 = sext i32 %add609 to i64
  %arrayidx611 = getelementptr inbounds i32****, i32***** %526, i64 %idxprom610
  %530 = load i32****, i32***** %arrayidx611, align 8
  %531 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %531, i32 0, i32 34
  %532 = load i32, i32* %pix_y612, align 4
  %shr613 = ashr i32 %532, 2
  %533 = load i32, i32* %block_y, align 4
  %add614 = add nsw i32 %shr613, %533
  %idxprom615 = sext i32 %add614 to i64
  %arrayidx616 = getelementptr inbounds i32***, i32**** %530, i64 %idxprom615
  %534 = load i32***, i32**** %arrayidx616, align 8
  %arrayidx617 = getelementptr inbounds i32**, i32*** %534, i64 0
  %535 = load i32**, i32*** %arrayidx617, align 8
  %536 = load i32, i32* %blocktype.addr, align 4
  %idxprom618 = sext i32 %536 to i64
  %arrayidx619 = getelementptr inbounds i32*, i32** %535, i64 %idxprom618
  %537 = load i32*, i32** %arrayidx619, align 8
  %arrayidx620 = getelementptr inbounds i32, i32* %537, i64 1
  %538 = load i32, i32* %arrayidx620, align 4
  %conv621 = sitofp i32 %538 to double
  %539 = load i32, i32* %n_Bframe, align 4
  %cmp622 = icmp eq i32 %539, 1
  br i1 %cmp622, label %cond.true624, label %cond.false626

cond.true624:                                     ; preds = %if.then591
  %540 = load i32, i32* %N_Bframe, align 4
  %conv625 = sitofp i32 %540 to double
  br label %cond.end633

cond.false626:                                    ; preds = %if.then591
  %541 = load i32, i32* %N_Bframe, align 4
  %542 = load i32, i32* %n_Bframe, align 4
  %sub = sub nsw i32 %541, %542
  %conv627 = sitofp i32 %sub to double
  %add628 = fadd double %conv627, 1.000000e+00
  %543 = load i32, i32* %N_Bframe, align 4
  %544 = load i32, i32* %n_Bframe, align 4
  %sub629 = sub nsw i32 %543, %544
  %conv630 = sitofp i32 %sub629 to double
  %add631 = fadd double %conv630, 2.000000e+00
  %div632 = fdiv double %add628, %add631
  br label %cond.end633

cond.end633:                                      ; preds = %cond.false626, %cond.true624
  %cond634 = phi double [ %conv625, %cond.true624 ], [ %div632, %cond.false626 ]
  %mul = fmul double %conv621, %cond634
  %conv635 = fptosi double %mul to i32
  store i32 %conv635, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i64 0, i64 0), align 4
  %545 = load i32*****, i32****** @all_bwmincost, align 8
  %546 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x636 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %546, i32 0, i32 33
  %547 = load i32, i32* %pix_x636, align 8
  %shr637 = ashr i32 %547, 2
  %548 = load i32, i32* %block_x, align 4
  %add638 = add nsw i32 %shr637, %548
  %idxprom639 = sext i32 %add638 to i64
  %arrayidx640 = getelementptr inbounds i32****, i32***** %545, i64 %idxprom639
  %549 = load i32****, i32***** %arrayidx640, align 8
  %550 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y641 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %550, i32 0, i32 34
  %551 = load i32, i32* %pix_y641, align 4
  %shr642 = ashr i32 %551, 2
  %552 = load i32, i32* %block_y, align 4
  %add643 = add nsw i32 %shr642, %552
  %idxprom644 = sext i32 %add643 to i64
  %arrayidx645 = getelementptr inbounds i32***, i32**** %549, i64 %idxprom644
  %553 = load i32***, i32**** %arrayidx645, align 8
  %arrayidx646 = getelementptr inbounds i32**, i32*** %553, i64 0
  %554 = load i32**, i32*** %arrayidx646, align 8
  %555 = load i32, i32* %blocktype.addr, align 4
  %idxprom647 = sext i32 %555 to i64
  %arrayidx648 = getelementptr inbounds i32*, i32** %554, i64 %idxprom647
  %556 = load i32*, i32** %arrayidx648, align 8
  %arrayidx649 = getelementptr inbounds i32, i32* %556, i64 2
  %557 = load i32, i32* %arrayidx649, align 4
  %conv650 = sitofp i32 %557 to double
  %558 = load i32, i32* %n_Bframe, align 4
  %cmp651 = icmp eq i32 %558, 1
  br i1 %cmp651, label %cond.true653, label %cond.false655

cond.true653:                                     ; preds = %cond.end633
  %559 = load i32, i32* %N_Bframe, align 4
  %conv654 = sitofp i32 %559 to double
  br label %cond.end663

cond.false655:                                    ; preds = %cond.end633
  %560 = load i32, i32* %N_Bframe, align 4
  %561 = load i32, i32* %n_Bframe, align 4
  %sub656 = sub nsw i32 %560, %561
  %conv657 = sitofp i32 %sub656 to double
  %add658 = fadd double %conv657, 1.000000e+00
  %562 = load i32, i32* %N_Bframe, align 4
  %563 = load i32, i32* %n_Bframe, align 4
  %sub659 = sub nsw i32 %562, %563
  %conv660 = sitofp i32 %sub659 to double
  %add661 = fadd double %conv660, 2.000000e+00
  %div662 = fdiv double %add658, %add661
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false655, %cond.true653
  %cond664 = phi double [ %conv654, %cond.true653 ], [ %div662, %cond.false655 ]
  %mul665 = fmul double %conv650, %cond664
  %conv666 = fptosi double %mul665 to i32
  store i32 %conv666, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_time, i64 0, i64 1), align 4
  br label %if.end667

if.end667:                                        ; preds = %cond.end663, %land.lhs.true587, %if.end584
  %564 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %564, i32 0, i32 91
  %565 = load i32, i32* %PicInterlace, align 8
  %cmp668 = icmp eq i32 %565, 1
  br i1 %cmp668, label %if.then670, label %if.else836

if.then670:                                       ; preds = %if.end667
  %566 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type671 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %566, i32 0, i32 6
  %567 = load i32, i32* %type671, align 8
  %cmp672 = icmp eq i32 %567, 0
  br i1 %cmp672, label %land.lhs.true674, label %if.end755

land.lhs.true674:                                 ; preds = %if.then670
  %568 = load i16, i16* %ref.addr, align 2
  %conv675 = sext i16 %568 to i32
  %cmp676 = icmp sgt i32 %conv675, 1
  br i1 %cmp676, label %if.then678, label %if.end755

if.then678:                                       ; preds = %land.lhs.true674
  %569 = load i32*****, i32****** @all_mincost, align 8
  %570 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x679 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %570, i32 0, i32 33
  %571 = load i32, i32* %pix_x679, align 8
  %shr680 = ashr i32 %571, 2
  %572 = load i32, i32* %block_x, align 4
  %add681 = add nsw i32 %shr680, %572
  %idxprom682 = sext i32 %add681 to i64
  %arrayidx683 = getelementptr inbounds i32****, i32***** %569, i64 %idxprom682
  %573 = load i32****, i32***** %arrayidx683, align 8
  %574 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y684 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %574, i32 0, i32 34
  %575 = load i32, i32* %pix_y684, align 4
  %shr685 = ashr i32 %575, 2
  %576 = load i32, i32* %block_y, align 4
  %add686 = add nsw i32 %shr685, %576
  %idxprom687 = sext i32 %add686 to i64
  %arrayidx688 = getelementptr inbounds i32***, i32**** %573, i64 %idxprom687
  %577 = load i32***, i32**** %arrayidx688, align 8
  %578 = load i16, i16* %ref.addr, align 2
  %conv689 = sext i16 %578 to i32
  %sub690 = sub nsw i32 %conv689, 2
  %idxprom691 = sext i32 %sub690 to i64
  %arrayidx692 = getelementptr inbounds i32**, i32*** %577, i64 %idxprom691
  %579 = load i32**, i32*** %arrayidx692, align 8
  %580 = load i32, i32* %blocktype.addr, align 4
  %idxprom693 = sext i32 %580 to i64
  %arrayidx694 = getelementptr inbounds i32*, i32** %579, i64 %idxprom693
  %581 = load i32*, i32** %arrayidx694, align 8
  %arrayidx695 = getelementptr inbounds i32, i32* %581, i64 0
  %582 = load i32, i32* %arrayidx695, align 4
  store i32 %582, i32* @pred_SAD_ref, align 4
  %583 = load i32, i32* @flag_intra_SAD, align 4
  %tobool696 = icmp ne i32 %583, 0
  br i1 %tobool696, label %cond.true697, label %cond.false698

cond.true697:                                     ; preds = %if.then678
  br label %cond.end699

cond.false698:                                    ; preds = %if.then678
  %584 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end699

cond.end699:                                      ; preds = %cond.false698, %cond.true697
  %cond700 = phi i32 [ 0, %cond.true697 ], [ %584, %cond.false698 ]
  store i32 %cond700, i32* @pred_SAD_ref, align 4
  %585 = load i32*****, i32****** @all_mincost, align 8
  %586 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x701 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %586, i32 0, i32 33
  %587 = load i32, i32* %pix_x701, align 8
  %shr702 = ashr i32 %587, 2
  %588 = load i32, i32* %block_x, align 4
  %add703 = add nsw i32 %shr702, %588
  %idxprom704 = sext i32 %add703 to i64
  %arrayidx705 = getelementptr inbounds i32****, i32***** %585, i64 %idxprom704
  %589 = load i32****, i32***** %arrayidx705, align 8
  %590 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y706 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %590, i32 0, i32 34
  %591 = load i32, i32* %pix_y706, align 4
  %shr707 = ashr i32 %591, 2
  %592 = load i32, i32* %block_y, align 4
  %add708 = add nsw i32 %shr707, %592
  %idxprom709 = sext i32 %add708 to i64
  %arrayidx710 = getelementptr inbounds i32***, i32**** %589, i64 %idxprom709
  %593 = load i32***, i32**** %arrayidx710, align 8
  %594 = load i16, i16* %ref.addr, align 2
  %conv711 = sext i16 %594 to i32
  %sub712 = sub nsw i32 %conv711, 2
  %idxprom713 = sext i32 %sub712 to i64
  %arrayidx714 = getelementptr inbounds i32**, i32*** %593, i64 %idxprom713
  %595 = load i32**, i32*** %arrayidx714, align 8
  %596 = load i32, i32* %blocktype.addr, align 4
  %idxprom715 = sext i32 %596 to i64
  %arrayidx716 = getelementptr inbounds i32*, i32** %595, i64 %idxprom715
  %597 = load i32*, i32** %arrayidx716, align 8
  %arrayidx717 = getelementptr inbounds i32, i32* %597, i64 1
  %598 = load i32, i32* %arrayidx717, align 4
  store i32 %598, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %599 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %600 = load i16, i16* %ref.addr, align 2
  %conv718 = sext i16 %600 to i32
  %shr719 = ashr i32 %conv718, 1
  %add720 = add nsw i32 %shr719, 1
  %mul721 = mul nsw i32 %599, %add720
  %conv722 = sitofp i32 %mul721 to float
  %601 = load i16, i16* %ref.addr, align 2
  %conv723 = sext i16 %601 to i32
  %shr724 = ashr i32 %conv723, 1
  %conv725 = sitofp i32 %shr724 to float
  %div726 = fdiv float %conv722, %conv725
  %conv727 = fptosi float %div726 to i32
  store i32 %conv727, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %602 = load i32*****, i32****** @all_mincost, align 8
  %603 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x728 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %603, i32 0, i32 33
  %604 = load i32, i32* %pix_x728, align 8
  %shr729 = ashr i32 %604, 2
  %605 = load i32, i32* %block_x, align 4
  %add730 = add nsw i32 %shr729, %605
  %idxprom731 = sext i32 %add730 to i64
  %arrayidx732 = getelementptr inbounds i32****, i32***** %602, i64 %idxprom731
  %606 = load i32****, i32***** %arrayidx732, align 8
  %607 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y733 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %607, i32 0, i32 34
  %608 = load i32, i32* %pix_y733, align 4
  %shr734 = ashr i32 %608, 2
  %609 = load i32, i32* %block_y, align 4
  %add735 = add nsw i32 %shr734, %609
  %idxprom736 = sext i32 %add735 to i64
  %arrayidx737 = getelementptr inbounds i32***, i32**** %606, i64 %idxprom736
  %610 = load i32***, i32**** %arrayidx737, align 8
  %611 = load i16, i16* %ref.addr, align 2
  %conv738 = sext i16 %611 to i32
  %sub739 = sub nsw i32 %conv738, 2
  %idxprom740 = sext i32 %sub739 to i64
  %arrayidx741 = getelementptr inbounds i32**, i32*** %610, i64 %idxprom740
  %612 = load i32**, i32*** %arrayidx741, align 8
  %613 = load i32, i32* %blocktype.addr, align 4
  %idxprom742 = sext i32 %613 to i64
  %arrayidx743 = getelementptr inbounds i32*, i32** %612, i64 %idxprom742
  %614 = load i32*, i32** %arrayidx743, align 8
  %arrayidx744 = getelementptr inbounds i32, i32* %614, i64 2
  %615 = load i32, i32* %arrayidx744, align 4
  store i32 %615, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  %616 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  %617 = load i16, i16* %ref.addr, align 2
  %conv745 = sext i16 %617 to i32
  %shr746 = ashr i32 %conv745, 1
  %add747 = add nsw i32 %shr746, 1
  %mul748 = mul nsw i32 %616, %add747
  %conv749 = sitofp i32 %mul748 to float
  %618 = load i16, i16* %ref.addr, align 2
  %conv750 = sext i16 %618 to i32
  %shr751 = ashr i32 %conv750, 1
  %conv752 = sitofp i32 %shr751 to float
  %div753 = fdiv float %conv749, %conv752
  %conv754 = fptosi float %div753 to i32
  store i32 %conv754, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  br label %if.end755

if.end755:                                        ; preds = %cond.end699, %land.lhs.true674, %if.then670
  %619 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type756 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %619, i32 0, i32 6
  %620 = load i32, i32* %type756, align 8
  %cmp757 = icmp eq i32 %620, 1
  br i1 %cmp757, label %land.lhs.true759, label %if.end835

land.lhs.true759:                                 ; preds = %if.end755
  %621 = load i32, i32* %list.addr, align 4
  %cmp760 = icmp eq i32 %621, 0
  br i1 %cmp760, label %land.lhs.true762, label %if.end835

land.lhs.true762:                                 ; preds = %land.lhs.true759
  %622 = load i16, i16* %ref.addr, align 2
  %conv763 = sext i16 %622 to i32
  %cmp764 = icmp eq i32 %conv763, 0
  br i1 %cmp764, label %if.then769, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true762
  %623 = load i16, i16* %ref.addr, align 2
  %conv766 = sext i16 %623 to i32
  %cmp767 = icmp eq i32 %conv766, 1
  br i1 %cmp767, label %if.then769, label %if.end835

if.then769:                                       ; preds = %lor.lhs.false, %land.lhs.true762
  %624 = load i32*****, i32****** @all_bwmincost, align 8
  %625 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x770 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %625, i32 0, i32 33
  %626 = load i32, i32* %pix_x770, align 8
  %shr771 = ashr i32 %626, 2
  %627 = load i32, i32* %block_x, align 4
  %add772 = add nsw i32 %shr771, %627
  %idxprom773 = sext i32 %add772 to i64
  %arrayidx774 = getelementptr inbounds i32****, i32***** %624, i64 %idxprom773
  %628 = load i32****, i32***** %arrayidx774, align 8
  %629 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y775 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %629, i32 0, i32 34
  %630 = load i32, i32* %pix_y775, align 4
  %shr776 = ashr i32 %630, 2
  %631 = load i32, i32* %block_y, align 4
  %add777 = add nsw i32 %shr776, %631
  %idxprom778 = sext i32 %add777 to i64
  %arrayidx779 = getelementptr inbounds i32***, i32**** %628, i64 %idxprom778
  %632 = load i32***, i32**** %arrayidx779, align 8
  %arrayidx780 = getelementptr inbounds i32**, i32*** %632, i64 0
  %633 = load i32**, i32*** %arrayidx780, align 8
  %634 = load i32, i32* %blocktype.addr, align 4
  %idxprom781 = sext i32 %634 to i64
  %arrayidx782 = getelementptr inbounds i32*, i32** %633, i64 %idxprom781
  %635 = load i32*, i32** %arrayidx782, align 8
  %arrayidx783 = getelementptr inbounds i32, i32* %635, i64 0
  %636 = load i32, i32* %arrayidx783, align 4
  store i32 %636, i32* @pred_SAD_ref, align 4
  %637 = load i32, i32* @flag_intra_SAD, align 4
  %tobool784 = icmp ne i32 %637, 0
  br i1 %tobool784, label %cond.true785, label %cond.false786

cond.true785:                                     ; preds = %if.then769
  br label %cond.end787

cond.false786:                                    ; preds = %if.then769
  %638 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end787

cond.end787:                                      ; preds = %cond.false786, %cond.true785
  %cond788 = phi i32 [ 0, %cond.true785 ], [ %638, %cond.false786 ]
  store i32 %cond788, i32* @pred_SAD_ref, align 4
  %639 = load i32*****, i32****** @all_bwmincost, align 8
  %640 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x789 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %640, i32 0, i32 33
  %641 = load i32, i32* %pix_x789, align 8
  %shr790 = ashr i32 %641, 2
  %642 = load i32, i32* %block_x, align 4
  %add791 = add nsw i32 %shr790, %642
  %idxprom792 = sext i32 %add791 to i64
  %arrayidx793 = getelementptr inbounds i32****, i32***** %639, i64 %idxprom792
  %643 = load i32****, i32***** %arrayidx793, align 8
  %644 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %644, i32 0, i32 34
  %645 = load i32, i32* %pix_y794, align 4
  %shr795 = ashr i32 %645, 2
  %646 = load i32, i32* %block_y, align 4
  %add796 = add nsw i32 %shr795, %646
  %idxprom797 = sext i32 %add796 to i64
  %arrayidx798 = getelementptr inbounds i32***, i32**** %643, i64 %idxprom797
  %647 = load i32***, i32**** %arrayidx798, align 8
  %648 = load i16, i16* %ref.addr, align 2
  %idxprom799 = sext i16 %648 to i64
  %arrayidx800 = getelementptr inbounds i32**, i32*** %647, i64 %idxprom799
  %649 = load i32**, i32*** %arrayidx800, align 8
  %650 = load i32, i32* %blocktype.addr, align 4
  %idxprom801 = sext i32 %650 to i64
  %arrayidx802 = getelementptr inbounds i32*, i32** %649, i64 %idxprom801
  %651 = load i32*, i32** %arrayidx802, align 8
  %arrayidx803 = getelementptr inbounds i32, i32* %651, i64 1
  %652 = load i32, i32* %arrayidx803, align 4
  %653 = load i32, i32* %n_Bframe, align 4
  %sub804 = sub nsw i32 0, %653
  %mul805 = mul nsw i32 %652, %sub804
  %conv806 = sitofp i32 %mul805 to float
  %654 = load i32, i32* %N_Bframe, align 4
  %655 = load i32, i32* %n_Bframe, align 4
  %sub807 = sub nsw i32 %654, %655
  %conv808 = sitofp i32 %sub807 to float
  %add809 = fadd float %conv808, 1.000000e+00
  %div810 = fdiv float %conv806, %add809
  %conv811 = fptosi float %div810 to i32
  store i32 %conv811, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %656 = load i32*****, i32****** @all_bwmincost, align 8
  %657 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x812 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %657, i32 0, i32 33
  %658 = load i32, i32* %pix_x812, align 8
  %shr813 = ashr i32 %658, 2
  %659 = load i32, i32* %block_x, align 4
  %add814 = add nsw i32 %shr813, %659
  %idxprom815 = sext i32 %add814 to i64
  %arrayidx816 = getelementptr inbounds i32****, i32***** %656, i64 %idxprom815
  %660 = load i32****, i32***** %arrayidx816, align 8
  %661 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y817 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %661, i32 0, i32 34
  %662 = load i32, i32* %pix_y817, align 4
  %shr818 = ashr i32 %662, 2
  %663 = load i32, i32* %block_y, align 4
  %add819 = add nsw i32 %shr818, %663
  %idxprom820 = sext i32 %add819 to i64
  %arrayidx821 = getelementptr inbounds i32***, i32**** %660, i64 %idxprom820
  %664 = load i32***, i32**** %arrayidx821, align 8
  %665 = load i16, i16* %ref.addr, align 2
  %idxprom822 = sext i16 %665 to i64
  %arrayidx823 = getelementptr inbounds i32**, i32*** %664, i64 %idxprom822
  %666 = load i32**, i32*** %arrayidx823, align 8
  %667 = load i32, i32* %blocktype.addr, align 4
  %idxprom824 = sext i32 %667 to i64
  %arrayidx825 = getelementptr inbounds i32*, i32** %666, i64 %idxprom824
  %668 = load i32*, i32** %arrayidx825, align 8
  %arrayidx826 = getelementptr inbounds i32, i32* %668, i64 2
  %669 = load i32, i32* %arrayidx826, align 4
  %670 = load i32, i32* %n_Bframe, align 4
  %sub827 = sub nsw i32 0, %670
  %mul828 = mul nsw i32 %669, %sub827
  %conv829 = sitofp i32 %mul828 to float
  %671 = load i32, i32* %N_Bframe, align 4
  %672 = load i32, i32* %n_Bframe, align 4
  %sub830 = sub nsw i32 %671, %672
  %conv831 = sitofp i32 %sub830 to float
  %add832 = fadd float %conv831, 1.000000e+00
  %div833 = fdiv float %conv829, %add832
  %conv834 = fptosi float %div833 to i32
  store i32 %conv834, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  br label %if.end835

if.end835:                                        ; preds = %cond.end787, %lor.lhs.false, %land.lhs.true759, %if.end755
  br label %if.end989

if.else836:                                       ; preds = %if.end667
  %673 = load i16, i16* %ref.addr, align 2
  %conv837 = sext i16 %673 to i32
  %cmp838 = icmp sgt i32 %conv837, 0
  br i1 %cmp838, label %if.then840, label %if.end911

if.then840:                                       ; preds = %if.else836
  %674 = load i32*****, i32****** @all_mincost, align 8
  %675 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x841 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %675, i32 0, i32 33
  %676 = load i32, i32* %pix_x841, align 8
  %shr842 = ashr i32 %676, 2
  %677 = load i32, i32* %block_x, align 4
  %add843 = add nsw i32 %shr842, %677
  %idxprom844 = sext i32 %add843 to i64
  %arrayidx845 = getelementptr inbounds i32****, i32***** %674, i64 %idxprom844
  %678 = load i32****, i32***** %arrayidx845, align 8
  %679 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y846 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %679, i32 0, i32 34
  %680 = load i32, i32* %pix_y846, align 4
  %shr847 = ashr i32 %680, 2
  %681 = load i32, i32* %block_y, align 4
  %add848 = add nsw i32 %shr847, %681
  %idxprom849 = sext i32 %add848 to i64
  %arrayidx850 = getelementptr inbounds i32***, i32**** %678, i64 %idxprom849
  %682 = load i32***, i32**** %arrayidx850, align 8
  %683 = load i16, i16* %ref.addr, align 2
  %conv851 = sext i16 %683 to i32
  %sub852 = sub nsw i32 %conv851, 1
  %idxprom853 = sext i32 %sub852 to i64
  %arrayidx854 = getelementptr inbounds i32**, i32*** %682, i64 %idxprom853
  %684 = load i32**, i32*** %arrayidx854, align 8
  %685 = load i32, i32* %blocktype.addr, align 4
  %idxprom855 = sext i32 %685 to i64
  %arrayidx856 = getelementptr inbounds i32*, i32** %684, i64 %idxprom855
  %686 = load i32*, i32** %arrayidx856, align 8
  %arrayidx857 = getelementptr inbounds i32, i32* %686, i64 0
  %687 = load i32, i32* %arrayidx857, align 4
  store i32 %687, i32* @pred_SAD_ref, align 4
  %688 = load i32, i32* @flag_intra_SAD, align 4
  %tobool858 = icmp ne i32 %688, 0
  br i1 %tobool858, label %cond.true859, label %cond.false860

cond.true859:                                     ; preds = %if.then840
  br label %cond.end861

cond.false860:                                    ; preds = %if.then840
  %689 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end861

cond.end861:                                      ; preds = %cond.false860, %cond.true859
  %cond862 = phi i32 [ 0, %cond.true859 ], [ %689, %cond.false860 ]
  store i32 %cond862, i32* @pred_SAD_ref, align 4
  %690 = load i32*****, i32****** @all_mincost, align 8
  %691 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x863 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %691, i32 0, i32 33
  %692 = load i32, i32* %pix_x863, align 8
  %shr864 = ashr i32 %692, 2
  %693 = load i32, i32* %block_x, align 4
  %add865 = add nsw i32 %shr864, %693
  %idxprom866 = sext i32 %add865 to i64
  %arrayidx867 = getelementptr inbounds i32****, i32***** %690, i64 %idxprom866
  %694 = load i32****, i32***** %arrayidx867, align 8
  %695 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y868 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %695, i32 0, i32 34
  %696 = load i32, i32* %pix_y868, align 4
  %shr869 = ashr i32 %696, 2
  %697 = load i32, i32* %block_y, align 4
  %add870 = add nsw i32 %shr869, %697
  %idxprom871 = sext i32 %add870 to i64
  %arrayidx872 = getelementptr inbounds i32***, i32**** %694, i64 %idxprom871
  %698 = load i32***, i32**** %arrayidx872, align 8
  %699 = load i16, i16* %ref.addr, align 2
  %conv873 = sext i16 %699 to i32
  %sub874 = sub nsw i32 %conv873, 1
  %idxprom875 = sext i32 %sub874 to i64
  %arrayidx876 = getelementptr inbounds i32**, i32*** %698, i64 %idxprom875
  %700 = load i32**, i32*** %arrayidx876, align 8
  %701 = load i32, i32* %blocktype.addr, align 4
  %idxprom877 = sext i32 %701 to i64
  %arrayidx878 = getelementptr inbounds i32*, i32** %700, i64 %idxprom877
  %702 = load i32*, i32** %arrayidx878, align 8
  %arrayidx879 = getelementptr inbounds i32, i32* %702, i64 1
  %703 = load i32, i32* %arrayidx879, align 4
  store i32 %703, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %704 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %705 = load i16, i16* %ref.addr, align 2
  %conv880 = sext i16 %705 to i32
  %add881 = add nsw i32 %conv880, 1
  %mul882 = mul nsw i32 %704, %add881
  %conv883 = sitofp i32 %mul882 to float
  %706 = load i16, i16* %ref.addr, align 2
  %conv884 = sitofp i16 %706 to float
  %div885 = fdiv float %conv883, %conv884
  %conv886 = fptosi float %div885 to i32
  store i32 %conv886, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %707 = load i32*****, i32****** @all_mincost, align 8
  %708 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x887 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %708, i32 0, i32 33
  %709 = load i32, i32* %pix_x887, align 8
  %shr888 = ashr i32 %709, 2
  %710 = load i32, i32* %block_x, align 4
  %add889 = add nsw i32 %shr888, %710
  %idxprom890 = sext i32 %add889 to i64
  %arrayidx891 = getelementptr inbounds i32****, i32***** %707, i64 %idxprom890
  %711 = load i32****, i32***** %arrayidx891, align 8
  %712 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y892 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %712, i32 0, i32 34
  %713 = load i32, i32* %pix_y892, align 4
  %shr893 = ashr i32 %713, 2
  %714 = load i32, i32* %block_y, align 4
  %add894 = add nsw i32 %shr893, %714
  %idxprom895 = sext i32 %add894 to i64
  %arrayidx896 = getelementptr inbounds i32***, i32**** %711, i64 %idxprom895
  %715 = load i32***, i32**** %arrayidx896, align 8
  %716 = load i16, i16* %ref.addr, align 2
  %conv897 = sext i16 %716 to i32
  %sub898 = sub nsw i32 %conv897, 1
  %idxprom899 = sext i32 %sub898 to i64
  %arrayidx900 = getelementptr inbounds i32**, i32*** %715, i64 %idxprom899
  %717 = load i32**, i32*** %arrayidx900, align 8
  %718 = load i32, i32* %blocktype.addr, align 4
  %idxprom901 = sext i32 %718 to i64
  %arrayidx902 = getelementptr inbounds i32*, i32** %717, i64 %idxprom901
  %719 = load i32*, i32** %arrayidx902, align 8
  %arrayidx903 = getelementptr inbounds i32, i32* %719, i64 2
  %720 = load i32, i32* %arrayidx903, align 4
  store i32 %720, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  %721 = load i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  %722 = load i16, i16* %ref.addr, align 2
  %conv904 = sext i16 %722 to i32
  %add905 = add nsw i32 %conv904, 1
  %mul906 = mul nsw i32 %721, %add905
  %conv907 = sitofp i32 %mul906 to float
  %723 = load i16, i16* %ref.addr, align 2
  %conv908 = sitofp i16 %723 to float
  %div909 = fdiv float %conv907, %conv908
  %conv910 = fptosi float %div909 to i32
  store i32 %conv910, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  br label %if.end911

if.end911:                                        ; preds = %cond.end861, %if.else836
  %724 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type912 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %724, i32 0, i32 6
  %725 = load i32, i32* %type912, align 8
  %cmp913 = icmp eq i32 %725, 1
  br i1 %cmp913, label %land.lhs.true915, label %if.end988

land.lhs.true915:                                 ; preds = %if.end911
  %726 = load i32, i32* %list.addr, align 4
  %cmp916 = icmp eq i32 %726, 0
  br i1 %cmp916, label %land.lhs.true918, label %if.end988

land.lhs.true918:                                 ; preds = %land.lhs.true915
  %727 = load i16, i16* %ref.addr, align 2
  %conv919 = sext i16 %727 to i32
  %cmp920 = icmp eq i32 %conv919, 0
  br i1 %cmp920, label %if.then922, label %if.end988

if.then922:                                       ; preds = %land.lhs.true918
  %728 = load i32*****, i32****** @all_bwmincost, align 8
  %729 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x923 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %729, i32 0, i32 33
  %730 = load i32, i32* %pix_x923, align 8
  %shr924 = ashr i32 %730, 2
  %731 = load i32, i32* %block_x, align 4
  %add925 = add nsw i32 %shr924, %731
  %idxprom926 = sext i32 %add925 to i64
  %arrayidx927 = getelementptr inbounds i32****, i32***** %728, i64 %idxprom926
  %732 = load i32****, i32***** %arrayidx927, align 8
  %733 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y928 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %733, i32 0, i32 34
  %734 = load i32, i32* %pix_y928, align 4
  %shr929 = ashr i32 %734, 2
  %735 = load i32, i32* %block_y, align 4
  %add930 = add nsw i32 %shr929, %735
  %idxprom931 = sext i32 %add930 to i64
  %arrayidx932 = getelementptr inbounds i32***, i32**** %732, i64 %idxprom931
  %736 = load i32***, i32**** %arrayidx932, align 8
  %arrayidx933 = getelementptr inbounds i32**, i32*** %736, i64 0
  %737 = load i32**, i32*** %arrayidx933, align 8
  %738 = load i32, i32* %blocktype.addr, align 4
  %idxprom934 = sext i32 %738 to i64
  %arrayidx935 = getelementptr inbounds i32*, i32** %737, i64 %idxprom934
  %739 = load i32*, i32** %arrayidx935, align 8
  %arrayidx936 = getelementptr inbounds i32, i32* %739, i64 0
  %740 = load i32, i32* %arrayidx936, align 4
  store i32 %740, i32* @pred_SAD_ref, align 4
  %741 = load i32, i32* @flag_intra_SAD, align 4
  %tobool937 = icmp ne i32 %741, 0
  br i1 %tobool937, label %cond.true938, label %cond.false939

cond.true938:                                     ; preds = %if.then922
  br label %cond.end940

cond.false939:                                    ; preds = %if.then922
  %742 = load i32, i32* @pred_SAD_ref, align 4
  br label %cond.end940

cond.end940:                                      ; preds = %cond.false939, %cond.true938
  %cond941 = phi i32 [ 0, %cond.true938 ], [ %742, %cond.false939 ]
  store i32 %cond941, i32* @pred_SAD_ref, align 4
  %743 = load i32*****, i32****** @all_bwmincost, align 8
  %744 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x942 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %744, i32 0, i32 33
  %745 = load i32, i32* %pix_x942, align 8
  %shr943 = ashr i32 %745, 2
  %746 = load i32, i32* %block_x, align 4
  %add944 = add nsw i32 %shr943, %746
  %idxprom945 = sext i32 %add944 to i64
  %arrayidx946 = getelementptr inbounds i32****, i32***** %743, i64 %idxprom945
  %747 = load i32****, i32***** %arrayidx946, align 8
  %748 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y947 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %748, i32 0, i32 34
  %749 = load i32, i32* %pix_y947, align 4
  %shr948 = ashr i32 %749, 2
  %750 = load i32, i32* %block_y, align 4
  %add949 = add nsw i32 %shr948, %750
  %idxprom950 = sext i32 %add949 to i64
  %arrayidx951 = getelementptr inbounds i32***, i32**** %747, i64 %idxprom950
  %751 = load i32***, i32**** %arrayidx951, align 8
  %752 = load i16, i16* %ref.addr, align 2
  %idxprom952 = sext i16 %752 to i64
  %arrayidx953 = getelementptr inbounds i32**, i32*** %751, i64 %idxprom952
  %753 = load i32**, i32*** %arrayidx953, align 8
  %754 = load i32, i32* %blocktype.addr, align 4
  %idxprom954 = sext i32 %754 to i64
  %arrayidx955 = getelementptr inbounds i32*, i32** %753, i64 %idxprom954
  %755 = load i32*, i32** %arrayidx955, align 8
  %arrayidx956 = getelementptr inbounds i32, i32* %755, i64 1
  %756 = load i32, i32* %arrayidx956, align 4
  %757 = load i32, i32* %n_Bframe, align 4
  %sub957 = sub nsw i32 0, %757
  %mul958 = mul nsw i32 %756, %sub957
  %conv959 = sitofp i32 %mul958 to float
  %758 = load i32, i32* %N_Bframe, align 4
  %759 = load i32, i32* %n_Bframe, align 4
  %sub960 = sub nsw i32 %758, %759
  %conv961 = sitofp i32 %sub960 to float
  %add962 = fadd float %conv961, 1.000000e+00
  %div963 = fdiv float %conv959, %add962
  %conv964 = fptosi float %div963 to i32
  store i32 %conv964, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 0), align 4
  %760 = load i32*****, i32****** @all_bwmincost, align 8
  %761 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x965 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %761, i32 0, i32 33
  %762 = load i32, i32* %pix_x965, align 8
  %shr966 = ashr i32 %762, 2
  %763 = load i32, i32* %block_x, align 4
  %add967 = add nsw i32 %shr966, %763
  %idxprom968 = sext i32 %add967 to i64
  %arrayidx969 = getelementptr inbounds i32****, i32***** %760, i64 %idxprom968
  %764 = load i32****, i32***** %arrayidx969, align 8
  %765 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y970 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %765, i32 0, i32 34
  %766 = load i32, i32* %pix_y970, align 4
  %shr971 = ashr i32 %766, 2
  %767 = load i32, i32* %block_y, align 4
  %add972 = add nsw i32 %shr971, %767
  %idxprom973 = sext i32 %add972 to i64
  %arrayidx974 = getelementptr inbounds i32***, i32**** %764, i64 %idxprom973
  %768 = load i32***, i32**** %arrayidx974, align 8
  %769 = load i16, i16* %ref.addr, align 2
  %idxprom975 = sext i16 %769 to i64
  %arrayidx976 = getelementptr inbounds i32**, i32*** %768, i64 %idxprom975
  %770 = load i32**, i32*** %arrayidx976, align 8
  %771 = load i32, i32* %blocktype.addr, align 4
  %idxprom977 = sext i32 %771 to i64
  %arrayidx978 = getelementptr inbounds i32*, i32** %770, i64 %idxprom977
  %772 = load i32*, i32** %arrayidx978, align 8
  %arrayidx979 = getelementptr inbounds i32, i32* %772, i64 2
  %773 = load i32, i32* %arrayidx979, align 4
  %774 = load i32, i32* %n_Bframe, align 4
  %sub980 = sub nsw i32 0, %774
  %mul981 = mul nsw i32 %773, %sub980
  %conv982 = sitofp i32 %mul981 to float
  %775 = load i32, i32* %N_Bframe, align 4
  %776 = load i32, i32* %n_Bframe, align 4
  %sub983 = sub nsw i32 %775, %776
  %conv984 = sitofp i32 %sub983 to float
  %add985 = fadd float %conv984, 1.000000e+00
  %div986 = fdiv float %conv982, %add985
  %conv987 = fptosi float %div986 to i32
  store i32 %conv987, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @pred_MV_ref, i64 0, i64 1), align 4
  br label %if.end988

if.end988:                                        ; preds = %cond.end940, %land.lhs.true918, %land.lhs.true915, %if.end911
  br label %if.end989

if.end989:                                        ; preds = %if.end988, %if.end835
  br label %if.end990

if.end990:                                        ; preds = %if.end989, %for.end39
  %777 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable991 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %777, i32 0, i32 134
  %778 = load i32, i32* %FMEnable991, align 4
  %tobool992 = icmp ne i32 %778, 0
  br i1 %tobool992, label %if.then993, label %if.end994

if.then993:                                       ; preds = %if.end990
  %779 = load i32, i32* %blocktype.addr, align 4
  store i32 %779, i32* @FME_blocktype, align 4
  br label %if.end994

if.end994:                                        ; preds = %if.then993, %if.end990
  %780 = load i16*, i16** %pred_mv, align 8
  %781 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %781, i32 0, i32 32
  %782 = load i16***, i16**** %ref_idx, align 8
  %783 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv995 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %783, i32 0, i32 35
  %784 = load i16****, i16***** %mv995, align 8
  %785 = load i16, i16* %ref.addr, align 2
  %786 = load i32, i32* %list.addr, align 4
  %787 = load i32, i32* %block_x, align 4
  %788 = load i32, i32* %block_y, align 4
  %789 = load i32, i32* %bsx, align 4
  %790 = load i32, i32* %bsy, align 4
  call void @SetMotionVectorPredictor(i16* %780, i16*** %782, i16**** %784, i16 signext %785, i32 %786, i32 %787, i32 %788, i32 %789, i32 %790)
  %791 = load i16*, i16** %pred_mv, align 8
  %arrayidx996 = getelementptr inbounds i16, i16* %791, i64 0
  %792 = load i16, i16* %arrayidx996, align 2
  store i16 %792, i16* %pred_mv_x, align 2
  %793 = load i16*, i16** %pred_mv, align 8
  %arrayidx997 = getelementptr inbounds i16, i16* %793, i64 1
  %794 = load i16, i16* %arrayidx997, align 2
  store i16 %794, i16* %pred_mv_y, align 2
  %795 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable998 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %795, i32 0, i32 134
  %796 = load i32, i32* %FMEnable998, align 4
  %tobool999 = icmp ne i32 %796, 0
  br i1 %tobool999, label %if.then1000, label %if.else1116

if.then1000:                                      ; preds = %if.end994
  %797 = load i16, i16* %pred_mv_x, align 2
  %conv1001 = sext i16 %797 to i32
  %div1002 = sdiv i32 %conv1001, 4
  %conv1003 = trunc i32 %div1002 to i16
  store i16 %conv1003, i16* %mv_x, align 2
  %798 = load i16, i16* %pred_mv_y, align 2
  %conv1004 = sext i16 %798 to i32
  %div1005 = sdiv i32 %conv1004, 4
  %conv1006 = trunc i32 %div1005 to i16
  store i16 %conv1006, i16* %mv_y, align 2
  %799 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %799, i32 0, i32 85
  %800 = load i32, i32* %rdopt, align 8
  %tobool1007 = icmp ne i32 %800, 0
  br i1 %tobool1007, label %if.end1059, label %if.then1008

if.then1008:                                      ; preds = %if.then1000
  %801 = load i32, i32* %search_range.addr, align 4
  %sub1009 = sub nsw i32 0, %801
  %802 = load i32, i32* %search_range.addr, align 4
  %803 = load i16, i16* %mv_x, align 2
  %conv1010 = sext i16 %803 to i32
  %cmp1011 = icmp slt i32 %802, %conv1010
  br i1 %cmp1011, label %cond.true1013, label %cond.false1014

cond.true1013:                                    ; preds = %if.then1008
  %804 = load i32, i32* %search_range.addr, align 4
  br label %cond.end1016

cond.false1014:                                   ; preds = %if.then1008
  %805 = load i16, i16* %mv_x, align 2
  %conv1015 = sext i16 %805 to i32
  br label %cond.end1016

cond.end1016:                                     ; preds = %cond.false1014, %cond.true1013
  %cond1017 = phi i32 [ %804, %cond.true1013 ], [ %conv1015, %cond.false1014 ]
  %cmp1018 = icmp sgt i32 %sub1009, %cond1017
  br i1 %cmp1018, label %cond.true1020, label %cond.false1022

cond.true1020:                                    ; preds = %cond.end1016
  %806 = load i32, i32* %search_range.addr, align 4
  %sub1021 = sub nsw i32 0, %806
  br label %cond.end1031

cond.false1022:                                   ; preds = %cond.end1016
  %807 = load i32, i32* %search_range.addr, align 4
  %808 = load i16, i16* %mv_x, align 2
  %conv1023 = sext i16 %808 to i32
  %cmp1024 = icmp slt i32 %807, %conv1023
  br i1 %cmp1024, label %cond.true1026, label %cond.false1027

cond.true1026:                                    ; preds = %cond.false1022
  %809 = load i32, i32* %search_range.addr, align 4
  br label %cond.end1029

cond.false1027:                                   ; preds = %cond.false1022
  %810 = load i16, i16* %mv_x, align 2
  %conv1028 = sext i16 %810 to i32
  br label %cond.end1029

cond.end1029:                                     ; preds = %cond.false1027, %cond.true1026
  %cond1030 = phi i32 [ %809, %cond.true1026 ], [ %conv1028, %cond.false1027 ]
  br label %cond.end1031

cond.end1031:                                     ; preds = %cond.end1029, %cond.true1020
  %cond1032 = phi i32 [ %sub1021, %cond.true1020 ], [ %cond1030, %cond.end1029 ]
  %conv1033 = trunc i32 %cond1032 to i16
  store i16 %conv1033, i16* %mv_x, align 2
  %811 = load i32, i32* %search_range.addr, align 4
  %sub1034 = sub nsw i32 0, %811
  %812 = load i32, i32* %search_range.addr, align 4
  %813 = load i16, i16* %mv_y, align 2
  %conv1035 = sext i16 %813 to i32
  %cmp1036 = icmp slt i32 %812, %conv1035
  br i1 %cmp1036, label %cond.true1038, label %cond.false1039

cond.true1038:                                    ; preds = %cond.end1031
  %814 = load i32, i32* %search_range.addr, align 4
  br label %cond.end1041

cond.false1039:                                   ; preds = %cond.end1031
  %815 = load i16, i16* %mv_y, align 2
  %conv1040 = sext i16 %815 to i32
  br label %cond.end1041

cond.end1041:                                     ; preds = %cond.false1039, %cond.true1038
  %cond1042 = phi i32 [ %814, %cond.true1038 ], [ %conv1040, %cond.false1039 ]
  %cmp1043 = icmp sgt i32 %sub1034, %cond1042
  br i1 %cmp1043, label %cond.true1045, label %cond.false1047

cond.true1045:                                    ; preds = %cond.end1041
  %816 = load i32, i32* %search_range.addr, align 4
  %sub1046 = sub nsw i32 0, %816
  br label %cond.end1056

cond.false1047:                                   ; preds = %cond.end1041
  %817 = load i32, i32* %search_range.addr, align 4
  %818 = load i16, i16* %mv_y, align 2
  %conv1048 = sext i16 %818 to i32
  %cmp1049 = icmp slt i32 %817, %conv1048
  br i1 %cmp1049, label %cond.true1051, label %cond.false1052

cond.true1051:                                    ; preds = %cond.false1047
  %819 = load i32, i32* %search_range.addr, align 4
  br label %cond.end1054

cond.false1052:                                   ; preds = %cond.false1047
  %820 = load i16, i16* %mv_y, align 2
  %conv1053 = sext i16 %820 to i32
  br label %cond.end1054

cond.end1054:                                     ; preds = %cond.false1052, %cond.true1051
  %cond1055 = phi i32 [ %819, %cond.true1051 ], [ %conv1053, %cond.false1052 ]
  br label %cond.end1056

cond.end1056:                                     ; preds = %cond.end1054, %cond.true1045
  %cond1057 = phi i32 [ %sub1046, %cond.true1045 ], [ %cond1055, %cond.end1054 ]
  %conv1058 = trunc i32 %cond1057 to i16
  store i16 %conv1058, i16* %mv_y, align 2
  br label %if.end1059

if.end1059:                                       ; preds = %cond.end1056, %if.then1000
  %821 = load i16, i16* %ref.addr, align 2
  %822 = load i32, i32* %list.addr, align 4
  %823 = load i32, i32* %pic_pix_x, align 4
  %824 = load i32, i32* %pic_pix_y, align 4
  %825 = load i32, i32* %blocktype.addr, align 4
  %826 = load i16, i16* %pred_mv_x, align 2
  %827 = load i16, i16* %pred_mv_y, align 2
  %828 = load i32, i32* %search_range.addr, align 4
  %829 = load i32, i32* %min_mcost, align 4
  %830 = load double, double* %lambda.addr, align 8
  %call1060 = call i32 @FastIntegerPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %821, i32 %822, i32 %823, i32 %824, i32 %825, i16 signext %826, i16 signext %827, i16* %mv_x, i16* %mv_y, i32 %828, i32 %829, double %830)
  store i32 %call1060, i32* %min_mcost, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond1061

for.cond1061:                                     ; preds = %for.inc1113, %if.end1059
  %831 = load i32, i32* %i, align 4
  %832 = load i32, i32* %bsx, align 4
  %shr1062 = ashr i32 %832, 2
  %cmp1063 = icmp slt i32 %831, %shr1062
  br i1 %cmp1063, label %for.body1065, label %for.end1115

for.body1065:                                     ; preds = %for.cond1061
  store i32 0, i32* %j, align 4
  br label %for.cond1066

for.cond1066:                                     ; preds = %for.inc1110, %for.body1065
  %833 = load i32, i32* %j, align 4
  %834 = load i32, i32* %bsy, align 4
  %shr1067 = ashr i32 %834, 2
  %cmp1068 = icmp slt i32 %833, %shr1067
  br i1 %cmp1068, label %for.body1070, label %for.end1112

for.body1070:                                     ; preds = %for.cond1066
  %835 = load i32, i32* %list.addr, align 4
  %cmp1071 = icmp eq i32 %835, 0
  br i1 %cmp1071, label %if.then1073, label %if.else1091

if.then1073:                                      ; preds = %for.body1070
  %836 = load i32, i32* %min_mcost, align 4
  %837 = load i32*****, i32****** @all_mincost, align 8
  %838 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1074 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %838, i32 0, i32 33
  %839 = load i32, i32* %pix_x1074, align 8
  %shr1075 = ashr i32 %839, 2
  %840 = load i32, i32* %block_x, align 4
  %add1076 = add nsw i32 %shr1075, %840
  %841 = load i32, i32* %i, align 4
  %add1077 = add nsw i32 %add1076, %841
  %idxprom1078 = sext i32 %add1077 to i64
  %arrayidx1079 = getelementptr inbounds i32****, i32***** %837, i64 %idxprom1078
  %842 = load i32****, i32***** %arrayidx1079, align 8
  %843 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1080 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %843, i32 0, i32 34
  %844 = load i32, i32* %pix_y1080, align 4
  %shr1081 = ashr i32 %844, 2
  %845 = load i32, i32* %block_y, align 4
  %add1082 = add nsw i32 %shr1081, %845
  %846 = load i32, i32* %j, align 4
  %add1083 = add nsw i32 %add1082, %846
  %idxprom1084 = sext i32 %add1083 to i64
  %arrayidx1085 = getelementptr inbounds i32***, i32**** %842, i64 %idxprom1084
  %847 = load i32***, i32**** %arrayidx1085, align 8
  %848 = load i16, i16* %ref.addr, align 2
  %idxprom1086 = sext i16 %848 to i64
  %arrayidx1087 = getelementptr inbounds i32**, i32*** %847, i64 %idxprom1086
  %849 = load i32**, i32*** %arrayidx1087, align 8
  %850 = load i32, i32* %blocktype.addr, align 4
  %idxprom1088 = sext i32 %850 to i64
  %arrayidx1089 = getelementptr inbounds i32*, i32** %849, i64 %idxprom1088
  %851 = load i32*, i32** %arrayidx1089, align 8
  %arrayidx1090 = getelementptr inbounds i32, i32* %851, i64 0
  store i32 %836, i32* %arrayidx1090, align 4
  br label %if.end1109

if.else1091:                                      ; preds = %for.body1070
  %852 = load i32, i32* %min_mcost, align 4
  %853 = load i32*****, i32****** @all_bwmincost, align 8
  %854 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1092 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %854, i32 0, i32 33
  %855 = load i32, i32* %pix_x1092, align 8
  %shr1093 = ashr i32 %855, 2
  %856 = load i32, i32* %block_x, align 4
  %add1094 = add nsw i32 %shr1093, %856
  %857 = load i32, i32* %i, align 4
  %add1095 = add nsw i32 %add1094, %857
  %idxprom1096 = sext i32 %add1095 to i64
  %arrayidx1097 = getelementptr inbounds i32****, i32***** %853, i64 %idxprom1096
  %858 = load i32****, i32***** %arrayidx1097, align 8
  %859 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1098 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %859, i32 0, i32 34
  %860 = load i32, i32* %pix_y1098, align 4
  %shr1099 = ashr i32 %860, 2
  %861 = load i32, i32* %block_y, align 4
  %add1100 = add nsw i32 %shr1099, %861
  %862 = load i32, i32* %j, align 4
  %add1101 = add nsw i32 %add1100, %862
  %idxprom1102 = sext i32 %add1101 to i64
  %arrayidx1103 = getelementptr inbounds i32***, i32**** %858, i64 %idxprom1102
  %863 = load i32***, i32**** %arrayidx1103, align 8
  %864 = load i16, i16* %ref.addr, align 2
  %idxprom1104 = sext i16 %864 to i64
  %arrayidx1105 = getelementptr inbounds i32**, i32*** %863, i64 %idxprom1104
  %865 = load i32**, i32*** %arrayidx1105, align 8
  %866 = load i32, i32* %blocktype.addr, align 4
  %idxprom1106 = sext i32 %866 to i64
  %arrayidx1107 = getelementptr inbounds i32*, i32** %865, i64 %idxprom1106
  %867 = load i32*, i32** %arrayidx1107, align 8
  %arrayidx1108 = getelementptr inbounds i32, i32* %867, i64 0
  store i32 %852, i32* %arrayidx1108, align 4
  br label %if.end1109

if.end1109:                                       ; preds = %if.else1091, %if.then1073
  br label %for.inc1110

for.inc1110:                                      ; preds = %if.end1109
  %868 = load i32, i32* %j, align 4
  %inc1111 = add nsw i32 %868, 1
  store i32 %inc1111, i32* %j, align 4
  br label %for.cond1066

for.end1112:                                      ; preds = %for.cond1066
  br label %for.inc1113

for.inc1113:                                      ; preds = %for.end1112
  %869 = load i32, i32* %i, align 4
  %inc1114 = add nsw i32 %869, 1
  store i32 %inc1114, i32* %i, align 4
  br label %for.cond1061

for.end1115:                                      ; preds = %for.cond1061
  br label %if.end1118

if.else1116:                                      ; preds = %if.end994
  %870 = load i16, i16* %ref.addr, align 2
  %871 = load i32, i32* %list.addr, align 4
  %872 = load i32, i32* %pic_pix_x, align 4
  %873 = load i32, i32* %pic_pix_y, align 4
  %874 = load i32, i32* %blocktype.addr, align 4
  %875 = load i16, i16* %pred_mv_x, align 2
  %876 = load i16, i16* %pred_mv_y, align 2
  %877 = load i32, i32* %search_range.addr, align 4
  %878 = load i32, i32* %min_mcost, align 4
  %879 = load double, double* %lambda.addr, align 8
  %call1117 = call i32 @FastFullPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %870, i32 %871, i32 %872, i32 %873, i32 %874, i16 signext %875, i16 signext %876, i16* %mv_x, i16* %mv_y, i32 %877, i32 %878, double %879)
  store i32 %call1117, i32* %min_mcost, align 4
  br label %if.end1118

if.end1118:                                       ; preds = %if.else1116, %for.end1115
  %880 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %880, i32 0, i32 6
  %881 = load i32, i32* %hadamard, align 8
  %tobool1119 = icmp ne i32 %881, 0
  br i1 %tobool1119, label %land.lhs.true1120, label %if.end1123

land.lhs.true1120:                                ; preds = %if.end1118
  %882 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %882, i32 0, i32 7
  %883 = load i32, i32* %hadamardqpel, align 4
  %tobool1121 = icmp ne i32 %883, 0
  br i1 %tobool1121, label %if.end1123, label %if.then1122

if.then1122:                                      ; preds = %land.lhs.true1120
  %884 = load i32, i32* %max_value, align 4
  store i32 %884, i32* %min_mcost, align 4
  br label %if.end1123

if.end1123:                                       ; preds = %if.then1122, %land.lhs.true1120, %if.end1118
  %885 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable1124 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %885, i32 0, i32 134
  %886 = load i32, i32* %FMEnable1124, align 4
  %tobool1125 = icmp ne i32 %886, 0
  br i1 %tobool1125, label %if.then1126, label %if.else1227

if.then1126:                                      ; preds = %if.end1123
  %887 = load i32, i32* %blocktype.addr, align 4
  %cmp1127 = icmp sgt i32 %887, 3
  br i1 %cmp1127, label %if.then1129, label %if.else1131

if.then1129:                                      ; preds = %if.then1126
  %888 = load i16, i16* %ref.addr, align 2
  %889 = load i32, i32* %list.addr, align 4
  %890 = load i32, i32* %pic_pix_x, align 4
  %891 = load i32, i32* %pic_pix_y, align 4
  %892 = load i32, i32* %blocktype.addr, align 4
  %893 = load i16, i16* %pred_mv_x, align 2
  %894 = load i16, i16* %pred_mv_y, align 2
  %895 = load i32, i32* %min_mcost, align 4
  %896 = load double, double* %lambda.addr, align 8
  %call1130 = call i32 @FastSubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %888, i32 %889, i32 %890, i32 %891, i32 %892, i16 signext %893, i16 signext %894, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %895, double %896, i32 0)
  store i32 %call1130, i32* %min_mcost, align 4
  br label %if.end1133

if.else1131:                                      ; preds = %if.then1126
  %897 = load i16, i16* %ref.addr, align 2
  %898 = load i32, i32* %list.addr, align 4
  %899 = load i32, i32* %pic_pix_x, align 4
  %900 = load i32, i32* %pic_pix_y, align 4
  %901 = load i32, i32* %blocktype.addr, align 4
  %902 = load i16, i16* %pred_mv_x, align 2
  %903 = load i16, i16* %pred_mv_y, align 2
  %904 = load i32, i32* %min_mcost, align 4
  %905 = load double, double* %lambda.addr, align 8
  %call1132 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %897, i32 %898, i32 %899, i32 %900, i32 %901, i16 signext %902, i16 signext %903, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %904, double %905)
  store i32 %call1132, i32* %min_mcost, align 4
  br label %if.end1133

if.end1133:                                       ; preds = %if.else1131, %if.then1129
  store i32 0, i32* %i, align 4
  br label %for.cond1134

for.cond1134:                                     ; preds = %for.inc1224, %if.end1133
  %906 = load i32, i32* %i, align 4
  %907 = load i32, i32* %bsx, align 4
  %shr1135 = ashr i32 %907, 2
  %cmp1136 = icmp slt i32 %906, %shr1135
  br i1 %cmp1136, label %for.body1138, label %for.end1226

for.body1138:                                     ; preds = %for.cond1134
  store i32 0, i32* %j, align 4
  br label %for.cond1139

for.cond1139:                                     ; preds = %for.inc1221, %for.body1138
  %908 = load i32, i32* %j, align 4
  %909 = load i32, i32* %bsy, align 4
  %shr1140 = ashr i32 %909, 2
  %cmp1141 = icmp slt i32 %908, %shr1140
  br i1 %cmp1141, label %for.body1143, label %for.end1223

for.body1143:                                     ; preds = %for.cond1139
  %910 = load i32, i32* %list.addr, align 4
  %cmp1144 = icmp eq i32 %910, 0
  br i1 %cmp1144, label %if.then1146, label %if.else1183

if.then1146:                                      ; preds = %for.body1143
  %911 = load i16, i16* %mv_x, align 2
  %conv1147 = sext i16 %911 to i32
  %912 = load i32*****, i32****** @all_mincost, align 8
  %913 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1148 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %913, i32 0, i32 33
  %914 = load i32, i32* %pix_x1148, align 8
  %shr1149 = ashr i32 %914, 2
  %915 = load i32, i32* %block_x, align 4
  %add1150 = add nsw i32 %shr1149, %915
  %916 = load i32, i32* %i, align 4
  %add1151 = add nsw i32 %add1150, %916
  %idxprom1152 = sext i32 %add1151 to i64
  %arrayidx1153 = getelementptr inbounds i32****, i32***** %912, i64 %idxprom1152
  %917 = load i32****, i32***** %arrayidx1153, align 8
  %918 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1154 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %918, i32 0, i32 34
  %919 = load i32, i32* %pix_y1154, align 4
  %shr1155 = ashr i32 %919, 2
  %920 = load i32, i32* %block_y, align 4
  %add1156 = add nsw i32 %shr1155, %920
  %921 = load i32, i32* %j, align 4
  %add1157 = add nsw i32 %add1156, %921
  %idxprom1158 = sext i32 %add1157 to i64
  %arrayidx1159 = getelementptr inbounds i32***, i32**** %917, i64 %idxprom1158
  %922 = load i32***, i32**** %arrayidx1159, align 8
  %923 = load i16, i16* %ref.addr, align 2
  %idxprom1160 = sext i16 %923 to i64
  %arrayidx1161 = getelementptr inbounds i32**, i32*** %922, i64 %idxprom1160
  %924 = load i32**, i32*** %arrayidx1161, align 8
  %925 = load i32, i32* %blocktype.addr, align 4
  %idxprom1162 = sext i32 %925 to i64
  %arrayidx1163 = getelementptr inbounds i32*, i32** %924, i64 %idxprom1162
  %926 = load i32*, i32** %arrayidx1163, align 8
  %arrayidx1164 = getelementptr inbounds i32, i32* %926, i64 1
  store i32 %conv1147, i32* %arrayidx1164, align 4
  %927 = load i16, i16* %mv_y, align 2
  %conv1165 = sext i16 %927 to i32
  %928 = load i32*****, i32****** @all_mincost, align 8
  %929 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %929, i32 0, i32 33
  %930 = load i32, i32* %pix_x1166, align 8
  %shr1167 = ashr i32 %930, 2
  %931 = load i32, i32* %block_x, align 4
  %add1168 = add nsw i32 %shr1167, %931
  %932 = load i32, i32* %i, align 4
  %add1169 = add nsw i32 %add1168, %932
  %idxprom1170 = sext i32 %add1169 to i64
  %arrayidx1171 = getelementptr inbounds i32****, i32***** %928, i64 %idxprom1170
  %933 = load i32****, i32***** %arrayidx1171, align 8
  %934 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1172 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %934, i32 0, i32 34
  %935 = load i32, i32* %pix_y1172, align 4
  %shr1173 = ashr i32 %935, 2
  %936 = load i32, i32* %block_y, align 4
  %add1174 = add nsw i32 %shr1173, %936
  %937 = load i32, i32* %j, align 4
  %add1175 = add nsw i32 %add1174, %937
  %idxprom1176 = sext i32 %add1175 to i64
  %arrayidx1177 = getelementptr inbounds i32***, i32**** %933, i64 %idxprom1176
  %938 = load i32***, i32**** %arrayidx1177, align 8
  %939 = load i16, i16* %ref.addr, align 2
  %idxprom1178 = sext i16 %939 to i64
  %arrayidx1179 = getelementptr inbounds i32**, i32*** %938, i64 %idxprom1178
  %940 = load i32**, i32*** %arrayidx1179, align 8
  %941 = load i32, i32* %blocktype.addr, align 4
  %idxprom1180 = sext i32 %941 to i64
  %arrayidx1181 = getelementptr inbounds i32*, i32** %940, i64 %idxprom1180
  %942 = load i32*, i32** %arrayidx1181, align 8
  %arrayidx1182 = getelementptr inbounds i32, i32* %942, i64 2
  store i32 %conv1165, i32* %arrayidx1182, align 4
  br label %if.end1220

if.else1183:                                      ; preds = %for.body1143
  %943 = load i16, i16* %mv_x, align 2
  %conv1184 = sext i16 %943 to i32
  %944 = load i32*****, i32****** @all_bwmincost, align 8
  %945 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %945, i32 0, i32 33
  %946 = load i32, i32* %pix_x1185, align 8
  %shr1186 = ashr i32 %946, 2
  %947 = load i32, i32* %block_x, align 4
  %add1187 = add nsw i32 %shr1186, %947
  %948 = load i32, i32* %i, align 4
  %add1188 = add nsw i32 %add1187, %948
  %idxprom1189 = sext i32 %add1188 to i64
  %arrayidx1190 = getelementptr inbounds i32****, i32***** %944, i64 %idxprom1189
  %949 = load i32****, i32***** %arrayidx1190, align 8
  %950 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %950, i32 0, i32 34
  %951 = load i32, i32* %pix_y1191, align 4
  %shr1192 = ashr i32 %951, 2
  %952 = load i32, i32* %block_y, align 4
  %add1193 = add nsw i32 %shr1192, %952
  %953 = load i32, i32* %j, align 4
  %add1194 = add nsw i32 %add1193, %953
  %idxprom1195 = sext i32 %add1194 to i64
  %arrayidx1196 = getelementptr inbounds i32***, i32**** %949, i64 %idxprom1195
  %954 = load i32***, i32**** %arrayidx1196, align 8
  %955 = load i16, i16* %ref.addr, align 2
  %idxprom1197 = sext i16 %955 to i64
  %arrayidx1198 = getelementptr inbounds i32**, i32*** %954, i64 %idxprom1197
  %956 = load i32**, i32*** %arrayidx1198, align 8
  %957 = load i32, i32* %blocktype.addr, align 4
  %idxprom1199 = sext i32 %957 to i64
  %arrayidx1200 = getelementptr inbounds i32*, i32** %956, i64 %idxprom1199
  %958 = load i32*, i32** %arrayidx1200, align 8
  %arrayidx1201 = getelementptr inbounds i32, i32* %958, i64 1
  store i32 %conv1184, i32* %arrayidx1201, align 4
  %959 = load i16, i16* %mv_y, align 2
  %conv1202 = sext i16 %959 to i32
  %960 = load i32*****, i32****** @all_bwmincost, align 8
  %961 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %961, i32 0, i32 33
  %962 = load i32, i32* %pix_x1203, align 8
  %shr1204 = ashr i32 %962, 2
  %963 = load i32, i32* %block_x, align 4
  %add1205 = add nsw i32 %shr1204, %963
  %964 = load i32, i32* %i, align 4
  %add1206 = add nsw i32 %add1205, %964
  %idxprom1207 = sext i32 %add1206 to i64
  %arrayidx1208 = getelementptr inbounds i32****, i32***** %960, i64 %idxprom1207
  %965 = load i32****, i32***** %arrayidx1208, align 8
  %966 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1209 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %966, i32 0, i32 34
  %967 = load i32, i32* %pix_y1209, align 4
  %shr1210 = ashr i32 %967, 2
  %968 = load i32, i32* %block_y, align 4
  %add1211 = add nsw i32 %shr1210, %968
  %969 = load i32, i32* %j, align 4
  %add1212 = add nsw i32 %add1211, %969
  %idxprom1213 = sext i32 %add1212 to i64
  %arrayidx1214 = getelementptr inbounds i32***, i32**** %965, i64 %idxprom1213
  %970 = load i32***, i32**** %arrayidx1214, align 8
  %971 = load i16, i16* %ref.addr, align 2
  %idxprom1215 = sext i16 %971 to i64
  %arrayidx1216 = getelementptr inbounds i32**, i32*** %970, i64 %idxprom1215
  %972 = load i32**, i32*** %arrayidx1216, align 8
  %973 = load i32, i32* %blocktype.addr, align 4
  %idxprom1217 = sext i32 %973 to i64
  %arrayidx1218 = getelementptr inbounds i32*, i32** %972, i64 %idxprom1217
  %974 = load i32*, i32** %arrayidx1218, align 8
  %arrayidx1219 = getelementptr inbounds i32, i32* %974, i64 2
  store i32 %conv1202, i32* %arrayidx1219, align 4
  br label %if.end1220

if.end1220:                                       ; preds = %if.else1183, %if.then1146
  br label %for.inc1221

for.inc1221:                                      ; preds = %if.end1220
  %975 = load i32, i32* %j, align 4
  %inc1222 = add nsw i32 %975, 1
  store i32 %inc1222, i32* %j, align 4
  br label %for.cond1139

for.end1223:                                      ; preds = %for.cond1139
  br label %for.inc1224

for.inc1224:                                      ; preds = %for.end1223
  %976 = load i32, i32* %i, align 4
  %inc1225 = add nsw i32 %976, 1
  store i32 %inc1225, i32* %i, align 4
  br label %for.cond1134

for.end1226:                                      ; preds = %for.cond1134
  br label %if.end1236

if.else1227:                                      ; preds = %if.end1123
  %977 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard1228 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %977, i32 0, i32 6
  %978 = load i32, i32* %hadamard1228, align 8
  %tobool1229 = icmp ne i32 %978, 0
  br i1 %tobool1229, label %land.lhs.true1230, label %if.end1234

land.lhs.true1230:                                ; preds = %if.else1227
  %979 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamardqpel1231 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %979, i32 0, i32 7
  %980 = load i32, i32* %hadamardqpel1231, align 4
  %tobool1232 = icmp ne i32 %980, 0
  br i1 %tobool1232, label %if.end1234, label %if.then1233

if.then1233:                                      ; preds = %land.lhs.true1230
  %981 = load i32, i32* %max_value, align 4
  store i32 %981, i32* %min_mcost, align 4
  br label %if.end1234

if.end1234:                                       ; preds = %if.then1233, %land.lhs.true1230, %if.else1227
  %982 = load i16, i16* %ref.addr, align 2
  %983 = load i32, i32* %list.addr, align 4
  %984 = load i32, i32* %pic_pix_x, align 4
  %985 = load i32, i32* %pic_pix_y, align 4
  %986 = load i32, i32* %blocktype.addr, align 4
  %987 = load i16, i16* %pred_mv_x, align 2
  %988 = load i16, i16* %pred_mv_y, align 2
  %989 = load i32, i32* %min_mcost, align 4
  %990 = load double, double* %lambda.addr, align 8
  %call1235 = call i32 @SubPelBlockMotionSearch(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %982, i32 %983, i32 %984, i32 %985, i32 %986, i16 signext %987, i16 signext %988, i16* %mv_x, i16* %mv_y, i32 9, i32 9, i32 %989, double %990)
  store i32 %call1235, i32* %min_mcost, align 4
  br label %if.end1236

if.end1236:                                       ; preds = %if.end1234, %for.end1226
  %991 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt1237 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %991, i32 0, i32 85
  %992 = load i32, i32* %rdopt1237, align 8
  %tobool1238 = icmp ne i32 %992, 0
  br i1 %tobool1238, label %if.end1275, label %if.then1239

if.then1239:                                      ; preds = %if.end1236
  %993 = load i32, i32* %blocktype.addr, align 4
  %cmp1240 = icmp eq i32 %993, 1
  br i1 %cmp1240, label %land.lhs.true1242, label %if.end1274

land.lhs.true1242:                                ; preds = %if.then1239
  %994 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1243 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %994, i32 0, i32 6
  %995 = load i32, i32* %type1243, align 8
  %cmp1244 = icmp eq i32 %995, 0
  br i1 %cmp1244, label %if.then1250, label %lor.lhs.false1246

lor.lhs.false1246:                                ; preds = %land.lhs.true1242
  %996 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1247 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %996, i32 0, i32 6
  %997 = load i32, i32* %type1247, align 8
  %cmp1248 = icmp eq i32 %997, 3
  br i1 %cmp1248, label %if.then1250, label %if.end1274

if.then1250:                                      ; preds = %lor.lhs.false1246, %land.lhs.true1242
  call void @FindSkipModeMotionVector()
  %998 = load double, double* %lambda.addr, align 8
  %call1251 = call i32 @GetSkipCostMB(double %998)
  store i32 %call1251, i32* %cost, align 4
  %999 = load double, double* %lambda.addr, align 8
  %mul1252 = fmul double 8.000000e+00, %999
  %add1253 = fadd double %mul1252, 4.999000e-01
  %1000 = call double @llvm.floor.f64(double %add1253)
  %conv1254 = fptosi double %1000 to i32
  %1001 = load i32, i32* %cost, align 4
  %sub1255 = sub nsw i32 %1001, %conv1254
  store i32 %sub1255, i32* %cost, align 4
  %1002 = load i32, i32* %cost, align 4
  %1003 = load i32, i32* %min_mcost, align 4
  %cmp1256 = icmp slt i32 %1002, %1003
  br i1 %cmp1256, label %if.then1258, label %if.end1273

if.then1258:                                      ; preds = %if.then1250
  %1004 = load i32, i32* %cost, align 4
  store i32 %1004, i32* %min_mcost, align 4
  %1005 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv1259 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1005, i32 0, i32 71
  %1006 = load i16******, i16******* %all_mv1259, align 8
  %arrayidx1260 = getelementptr inbounds i16*****, i16****** %1006, i64 0
  %1007 = load i16*****, i16****** %arrayidx1260, align 8
  %arrayidx1261 = getelementptr inbounds i16****, i16***** %1007, i64 0
  %1008 = load i16****, i16***** %arrayidx1261, align 8
  %arrayidx1262 = getelementptr inbounds i16***, i16**** %1008, i64 0
  %1009 = load i16***, i16**** %arrayidx1262, align 8
  %arrayidx1263 = getelementptr inbounds i16**, i16*** %1009, i64 0
  %1010 = load i16**, i16*** %arrayidx1263, align 8
  %arrayidx1264 = getelementptr inbounds i16*, i16** %1010, i64 0
  %1011 = load i16*, i16** %arrayidx1264, align 8
  %arrayidx1265 = getelementptr inbounds i16, i16* %1011, i64 0
  %1012 = load i16, i16* %arrayidx1265, align 2
  store i16 %1012, i16* %mv_x, align 2
  %1013 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv1266 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1013, i32 0, i32 71
  %1014 = load i16******, i16******* %all_mv1266, align 8
  %arrayidx1267 = getelementptr inbounds i16*****, i16****** %1014, i64 0
  %1015 = load i16*****, i16****** %arrayidx1267, align 8
  %arrayidx1268 = getelementptr inbounds i16****, i16***** %1015, i64 0
  %1016 = load i16****, i16***** %arrayidx1268, align 8
  %arrayidx1269 = getelementptr inbounds i16***, i16**** %1016, i64 0
  %1017 = load i16***, i16**** %arrayidx1269, align 8
  %arrayidx1270 = getelementptr inbounds i16**, i16*** %1017, i64 0
  %1018 = load i16**, i16*** %arrayidx1270, align 8
  %arrayidx1271 = getelementptr inbounds i16*, i16** %1018, i64 0
  %1019 = load i16*, i16** %arrayidx1271, align 8
  %arrayidx1272 = getelementptr inbounds i16, i16* %1019, i64 1
  %1020 = load i16, i16* %arrayidx1272, align 2
  store i16 %1020, i16* %mv_y, align 2
  br label %if.end1273

if.end1273:                                       ; preds = %if.then1258, %if.then1250
  br label %if.end1274

if.end1274:                                       ; preds = %if.end1273, %lor.lhs.false1246, %if.then1239
  br label %if.end1275

if.end1275:                                       ; preds = %if.end1274, %if.end1236
  %1021 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %FMEnable1276 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1021, i32 0, i32 134
  %1022 = load i32, i32* %FMEnable1276, align 4
  %tobool1277 = icmp ne i32 %1022, 0
  br i1 %tobool1277, label %if.then1278, label %if.else1341

if.then1278:                                      ; preds = %if.end1275
  %1023 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1279 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1023, i32 0, i32 33
  %1024 = load i32, i32* %pix_x1279, align 8
  %shr1280 = ashr i32 %1024, 2
  %1025 = load i32, i32* %block_x, align 4
  %add1281 = add nsw i32 %shr1280, %1025
  store i32 %add1281, i32* %h4x4blkno, align 4
  %1026 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1282 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1026, i32 0, i32 34
  %1027 = load i32, i32* %pix_y1282, align 4
  %shr1283 = ashr i32 %1027, 2
  %1028 = load i32, i32* %block_y, align 4
  %add1284 = add nsw i32 %shr1283, %1028
  store i32 %add1284, i32* %v4x4blkno, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond1285

for.cond1285:                                     ; preds = %for.inc1338, %if.then1278
  %1029 = load i32, i32* %i, align 4
  %1030 = load i32, i32* %bsx, align 4
  %shr1286 = ashr i32 %1030, 2
  %cmp1287 = icmp slt i32 %1029, %shr1286
  br i1 %cmp1287, label %for.body1289, label %for.end1340

for.body1289:                                     ; preds = %for.cond1285
  store i32 0, i32* %j, align 4
  br label %for.cond1290

for.cond1290:                                     ; preds = %for.inc1335, %for.body1289
  %1031 = load i32, i32* %j, align 4
  %1032 = load i32, i32* %bsy, align 4
  %shr1291 = ashr i32 %1032, 2
  %cmp1292 = icmp slt i32 %1031, %shr1291
  br i1 %cmp1292, label %for.body1294, label %for.end1337

for.body1294:                                     ; preds = %for.cond1290
  %1033 = load i16, i16* %mv_x, align 2
  %1034 = load i16******, i16******* %all_mv, align 8
  %1035 = load i32, i32* %block_x, align 4
  %1036 = load i32, i32* %i, align 4
  %add1295 = add nsw i32 %1035, %1036
  %idxprom1296 = sext i32 %add1295 to i64
  %arrayidx1297 = getelementptr inbounds i16*****, i16****** %1034, i64 %idxprom1296
  %1037 = load i16*****, i16****** %arrayidx1297, align 8
  %1038 = load i32, i32* %block_y, align 4
  %1039 = load i32, i32* %j, align 4
  %add1298 = add nsw i32 %1038, %1039
  %idxprom1299 = sext i32 %add1298 to i64
  %arrayidx1300 = getelementptr inbounds i16****, i16***** %1037, i64 %idxprom1299
  %1040 = load i16****, i16***** %arrayidx1300, align 8
  %1041 = load i32, i32* %list.addr, align 4
  %idxprom1301 = sext i32 %1041 to i64
  %arrayidx1302 = getelementptr inbounds i16***, i16**** %1040, i64 %idxprom1301
  %1042 = load i16***, i16**** %arrayidx1302, align 8
  %1043 = load i16, i16* %ref.addr, align 2
  %idxprom1303 = sext i16 %1043 to i64
  %arrayidx1304 = getelementptr inbounds i16**, i16*** %1042, i64 %idxprom1303
  %1044 = load i16**, i16*** %arrayidx1304, align 8
  %1045 = load i32, i32* %blocktype.addr, align 4
  %idxprom1305 = sext i32 %1045 to i64
  %arrayidx1306 = getelementptr inbounds i16*, i16** %1044, i64 %idxprom1305
  %1046 = load i16*, i16** %arrayidx1306, align 8
  %arrayidx1307 = getelementptr inbounds i16, i16* %1046, i64 0
  store i16 %1033, i16* %arrayidx1307, align 2
  %1047 = load i16, i16* %mv_y, align 2
  %1048 = load i16******, i16******* %all_mv, align 8
  %1049 = load i32, i32* %block_x, align 4
  %1050 = load i32, i32* %i, align 4
  %add1308 = add nsw i32 %1049, %1050
  %idxprom1309 = sext i32 %add1308 to i64
  %arrayidx1310 = getelementptr inbounds i16*****, i16****** %1048, i64 %idxprom1309
  %1051 = load i16*****, i16****** %arrayidx1310, align 8
  %1052 = load i32, i32* %block_y, align 4
  %1053 = load i32, i32* %j, align 4
  %add1311 = add nsw i32 %1052, %1053
  %idxprom1312 = sext i32 %add1311 to i64
  %arrayidx1313 = getelementptr inbounds i16****, i16***** %1051, i64 %idxprom1312
  %1054 = load i16****, i16***** %arrayidx1313, align 8
  %1055 = load i32, i32* %list.addr, align 4
  %idxprom1314 = sext i32 %1055 to i64
  %arrayidx1315 = getelementptr inbounds i16***, i16**** %1054, i64 %idxprom1314
  %1056 = load i16***, i16**** %arrayidx1315, align 8
  %1057 = load i16, i16* %ref.addr, align 2
  %idxprom1316 = sext i16 %1057 to i64
  %arrayidx1317 = getelementptr inbounds i16**, i16*** %1056, i64 %idxprom1316
  %1058 = load i16**, i16*** %arrayidx1317, align 8
  %1059 = load i32, i32* %blocktype.addr, align 4
  %idxprom1318 = sext i32 %1059 to i64
  %arrayidx1319 = getelementptr inbounds i16*, i16** %1058, i64 %idxprom1318
  %1060 = load i16*, i16** %arrayidx1319, align 8
  %arrayidx1320 = getelementptr inbounds i16, i16* %1060, i64 1
  store i16 %1047, i16* %arrayidx1320, align 2
  %1061 = load i16, i16* %mv_x, align 2
  %1062 = load i16***, i16**** %mv_array, align 8
  %1063 = load i32, i32* %h4x4blkno, align 4
  %1064 = load i32, i32* %i, align 4
  %add1321 = add nsw i32 %1063, %1064
  %idxprom1322 = sext i32 %add1321 to i64
  %arrayidx1323 = getelementptr inbounds i16**, i16*** %1062, i64 %idxprom1322
  %1065 = load i16**, i16*** %arrayidx1323, align 8
  %1066 = load i32, i32* %v4x4blkno, align 4
  %1067 = load i32, i32* %j, align 4
  %add1324 = add nsw i32 %1066, %1067
  %idxprom1325 = sext i32 %add1324 to i64
  %arrayidx1326 = getelementptr inbounds i16*, i16** %1065, i64 %idxprom1325
  %1068 = load i16*, i16** %arrayidx1326, align 8
  %arrayidx1327 = getelementptr inbounds i16, i16* %1068, i64 0
  store i16 %1061, i16* %arrayidx1327, align 2
  %1069 = load i16, i16* %mv_y, align 2
  %1070 = load i16***, i16**** %mv_array, align 8
  %1071 = load i32, i32* %h4x4blkno, align 4
  %1072 = load i32, i32* %i, align 4
  %add1328 = add nsw i32 %1071, %1072
  %idxprom1329 = sext i32 %add1328 to i64
  %arrayidx1330 = getelementptr inbounds i16**, i16*** %1070, i64 %idxprom1329
  %1073 = load i16**, i16*** %arrayidx1330, align 8
  %1074 = load i32, i32* %v4x4blkno, align 4
  %1075 = load i32, i32* %j, align 4
  %add1331 = add nsw i32 %1074, %1075
  %idxprom1332 = sext i32 %add1331 to i64
  %arrayidx1333 = getelementptr inbounds i16*, i16** %1073, i64 %idxprom1332
  %1076 = load i16*, i16** %arrayidx1333, align 8
  %arrayidx1334 = getelementptr inbounds i16, i16* %1076, i64 1
  store i16 %1069, i16* %arrayidx1334, align 2
  br label %for.inc1335

for.inc1335:                                      ; preds = %for.body1294
  %1077 = load i32, i32* %j, align 4
  %inc1336 = add nsw i32 %1077, 1
  store i32 %inc1336, i32* %j, align 4
  br label %for.cond1290

for.end1337:                                      ; preds = %for.cond1290
  br label %for.inc1338

for.inc1338:                                      ; preds = %for.end1337
  %1078 = load i32, i32* %i, align 4
  %inc1339 = add nsw i32 %1078, 1
  store i32 %inc1339, i32* %i, align 4
  br label %for.cond1285

for.end1340:                                      ; preds = %for.cond1285
  br label %if.end1384

if.else1341:                                      ; preds = %if.end1275
  store i32 0, i32* %i, align 4
  br label %for.cond1342

for.cond1342:                                     ; preds = %for.inc1381, %if.else1341
  %1079 = load i32, i32* %i, align 4
  %1080 = load i32, i32* %bsx, align 4
  %shr1343 = ashr i32 %1080, 2
  %cmp1344 = icmp slt i32 %1079, %shr1343
  br i1 %cmp1344, label %for.body1346, label %for.end1383

for.body1346:                                     ; preds = %for.cond1342
  store i32 0, i32* %j, align 4
  br label %for.cond1347

for.cond1347:                                     ; preds = %for.inc1378, %for.body1346
  %1081 = load i32, i32* %j, align 4
  %1082 = load i32, i32* %bsy, align 4
  %shr1348 = ashr i32 %1082, 2
  %cmp1349 = icmp slt i32 %1081, %shr1348
  br i1 %cmp1349, label %for.body1351, label %for.end1380

for.body1351:                                     ; preds = %for.cond1347
  %1083 = load i16, i16* %mv_x, align 2
  %1084 = load i16******, i16******* %all_mv, align 8
  %1085 = load i32, i32* %block_x, align 4
  %1086 = load i32, i32* %i, align 4
  %add1352 = add nsw i32 %1085, %1086
  %idxprom1353 = sext i32 %add1352 to i64
  %arrayidx1354 = getelementptr inbounds i16*****, i16****** %1084, i64 %idxprom1353
  %1087 = load i16*****, i16****** %arrayidx1354, align 8
  %1088 = load i32, i32* %block_y, align 4
  %1089 = load i32, i32* %j, align 4
  %add1355 = add nsw i32 %1088, %1089
  %idxprom1356 = sext i32 %add1355 to i64
  %arrayidx1357 = getelementptr inbounds i16****, i16***** %1087, i64 %idxprom1356
  %1090 = load i16****, i16***** %arrayidx1357, align 8
  %1091 = load i32, i32* %list.addr, align 4
  %idxprom1358 = sext i32 %1091 to i64
  %arrayidx1359 = getelementptr inbounds i16***, i16**** %1090, i64 %idxprom1358
  %1092 = load i16***, i16**** %arrayidx1359, align 8
  %1093 = load i16, i16* %ref.addr, align 2
  %idxprom1360 = sext i16 %1093 to i64
  %arrayidx1361 = getelementptr inbounds i16**, i16*** %1092, i64 %idxprom1360
  %1094 = load i16**, i16*** %arrayidx1361, align 8
  %1095 = load i32, i32* %blocktype.addr, align 4
  %idxprom1362 = sext i32 %1095 to i64
  %arrayidx1363 = getelementptr inbounds i16*, i16** %1094, i64 %idxprom1362
  %1096 = load i16*, i16** %arrayidx1363, align 8
  %arrayidx1364 = getelementptr inbounds i16, i16* %1096, i64 0
  store i16 %1083, i16* %arrayidx1364, align 2
  %1097 = load i16, i16* %mv_y, align 2
  %1098 = load i16******, i16******* %all_mv, align 8
  %1099 = load i32, i32* %block_x, align 4
  %1100 = load i32, i32* %i, align 4
  %add1365 = add nsw i32 %1099, %1100
  %idxprom1366 = sext i32 %add1365 to i64
  %arrayidx1367 = getelementptr inbounds i16*****, i16****** %1098, i64 %idxprom1366
  %1101 = load i16*****, i16****** %arrayidx1367, align 8
  %1102 = load i32, i32* %block_y, align 4
  %1103 = load i32, i32* %j, align 4
  %add1368 = add nsw i32 %1102, %1103
  %idxprom1369 = sext i32 %add1368 to i64
  %arrayidx1370 = getelementptr inbounds i16****, i16***** %1101, i64 %idxprom1369
  %1104 = load i16****, i16***** %arrayidx1370, align 8
  %1105 = load i32, i32* %list.addr, align 4
  %idxprom1371 = sext i32 %1105 to i64
  %arrayidx1372 = getelementptr inbounds i16***, i16**** %1104, i64 %idxprom1371
  %1106 = load i16***, i16**** %arrayidx1372, align 8
  %1107 = load i16, i16* %ref.addr, align 2
  %idxprom1373 = sext i16 %1107 to i64
  %arrayidx1374 = getelementptr inbounds i16**, i16*** %1106, i64 %idxprom1373
  %1108 = load i16**, i16*** %arrayidx1374, align 8
  %1109 = load i32, i32* %blocktype.addr, align 4
  %idxprom1375 = sext i32 %1109 to i64
  %arrayidx1376 = getelementptr inbounds i16*, i16** %1108, i64 %idxprom1375
  %1110 = load i16*, i16** %arrayidx1376, align 8
  %arrayidx1377 = getelementptr inbounds i16, i16* %1110, i64 1
  store i16 %1097, i16* %arrayidx1377, align 2
  br label %for.inc1378

for.inc1378:                                      ; preds = %for.body1351
  %1111 = load i32, i32* %j, align 4
  %inc1379 = add nsw i32 %1111, 1
  store i32 %inc1379, i32* %j, align 4
  br label %for.cond1347

for.end1380:                                      ; preds = %for.cond1347
  br label %for.inc1381

for.inc1381:                                      ; preds = %for.end1380
  %1112 = load i32, i32* %i, align 4
  %inc1382 = add nsw i32 %1112, 1
  store i32 %inc1382, i32* %i, align 4
  br label %for.cond1342

for.end1383:                                      ; preds = %for.cond1342
  br label %if.end1384

if.end1384:                                       ; preds = %for.end1383, %for.end1340
  %1113 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type1385 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1113, i32 0, i32 6
  %1114 = load i32, i32* %type1385, align 8
  %cmp1386 = icmp eq i32 %1114, 1
  br i1 %cmp1386, label %land.lhs.true1388, label %if.end1569

land.lhs.true1388:                                ; preds = %if.end1384
  %1115 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMotionEstimation = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1115, i32 0, i32 39
  %1116 = load i32, i32* %BiPredMotionEstimation, align 8
  %cmp1389 = icmp ne i32 %1116, 0
  br i1 %cmp1389, label %land.lhs.true1391, label %if.end1569

land.lhs.true1391:                                ; preds = %land.lhs.true1388
  %1117 = load i32, i32* %blocktype.addr, align 4
  %cmp1392 = icmp eq i32 %1117, 1
  br i1 %cmp1392, label %land.lhs.true1394, label %if.end1569

land.lhs.true1394:                                ; preds = %land.lhs.true1391
  %1118 = load i16, i16* %ref.addr, align 2
  %conv1395 = sext i16 %1118 to i32
  %cmp1396 = icmp eq i32 %conv1395, 0
  br i1 %cmp1396, label %if.then1398, label %if.end1569

if.then1398:                                      ; preds = %land.lhs.true1394
  %1119 = load i32, i32* %list.addr, align 4
  %tobool1399 = icmp ne i32 %1119, 0
  br i1 %tobool1399, label %cond.true1400, label %cond.false1401

cond.true1400:                                    ; preds = %if.then1398
  %1120 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1120, i32 0, i32 72
  %1121 = load i16******, i16******* %bipred_mv1, align 8
  br label %cond.end1402

cond.false1401:                                   ; preds = %if.then1398
  %1122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %bipred_mv2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1122, i32 0, i32 73
  %1123 = load i16******, i16******* %bipred_mv2, align 8
  br label %cond.end1402

cond.end1402:                                     ; preds = %cond.false1401, %cond.true1400
  %cond1403 = phi i16****** [ %1121, %cond.true1400 ], [ %1123, %cond.false1401 ]
  store i16****** %cond1403, i16******* %bipred_mv, align 8
  %1124 = load i32, i32* %max_value, align 4
  store i32 %1124, i32* %min_mcostbi, align 4
  store i16 0, i16* %pred_mv_x2, align 2
  store i16 0, i16* %pred_mv_y2, align 2
  %1125 = load i32, i32* %list.addr, align 4
  %conv1404 = trunc i32 %1125 to i16
  store i16 %conv1404, i16* %iterlist, align 2
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 0
  %1126 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx1405 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %1126, i32 0, i32 32
  %1127 = load i16***, i16**** %ref_idx1405, align 8
  %1128 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv1406 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %1128, i32 0, i32 35
  %1129 = load i16****, i16***** %mv1406, align 8
  %1130 = load i32, i32* %list.addr, align 4
  %cmp1407 = icmp eq i32 %1130, 0
  %1131 = zext i1 %cmp1407 to i64
  %cond1409 = select i1 %cmp1407, i32 1, i32 0
  %1132 = load i32, i32* %block_x, align 4
  %1133 = load i32, i32* %block_y, align 4
  %1134 = load i32, i32* %bsx, align 4
  %1135 = load i32, i32* %bsy, align 4
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %1127, i16**** %1129, i16 signext 0, i32 %cond1409, i32 %1132, i32 %1133, i32 %1134, i32 %1135)
  %1136 = load i16, i16* %mv_x, align 2
  %conv1410 = sext i16 %1136 to i32
  %add1411 = add nsw i32 %conv1410, 2
  %shr1412 = ashr i32 %add1411, 2
  %conv1413 = trunc i32 %shr1412 to i16
  store i16 %conv1413, i16* %mv_x, align 2
  %1137 = load i16, i16* %mv_y, align 2
  %conv1414 = sext i16 %1137 to i32
  %add1415 = add nsw i32 %conv1414, 2
  %shr1416 = ashr i32 %add1415, 2
  %conv1417 = trunc i32 %shr1416 to i16
  store i16 %conv1417, i16* %mv_y, align 2
  store i32 0, i32* %i, align 4
  br label %for.cond1418

for.cond1418:                                     ; preds = %for.inc1456, %cond.end1402
  %1138 = load i32, i32* %i, align 4
  %1139 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMERefinements = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1139, i32 0, i32 40
  %1140 = load i32, i32* %BiPredMERefinements, align 4
  %cmp1419 = icmp sle i32 %1138, %1140
  br i1 %cmp1419, label %for.body1421, label %for.end1458

for.body1421:                                     ; preds = %for.cond1418
  %1141 = load i32, i32* %i, align 4
  %rem1422 = srem i32 %1141, 2
  %tobool1423 = icmp ne i32 %rem1422, 0
  br i1 %tobool1423, label %if.then1424, label %if.else1433

if.then1424:                                      ; preds = %for.body1421
  %1142 = load i16*, i16** %pred_mv, align 8
  %arrayidx1425 = getelementptr inbounds i16, i16* %1142, i64 0
  %1143 = load i16, i16* %arrayidx1425, align 2
  store i16 %1143, i16* %pred_mv_x2, align 2
  %1144 = load i16*, i16** %pred_mv, align 8
  %arrayidx1426 = getelementptr inbounds i16, i16* %1144, i64 1
  %1145 = load i16, i16* %arrayidx1426, align 2
  store i16 %1145, i16* %pred_mv_y2, align 2
  %arrayidx1427 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 0
  %1146 = load i16, i16* %arrayidx1427, align 2
  store i16 %1146, i16* %pred_mv_x1, align 2
  %arrayidx1428 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 1
  %1147 = load i16, i16* %arrayidx1428, align 2
  store i16 %1147, i16* %pred_mv_y1, align 2
  %1148 = load i16, i16* %bimv_x, align 2
  store i16 %1148, i16* %tempmv_x, align 2
  %1149 = load i16, i16* %bimv_y, align 2
  store i16 %1149, i16* %tempmv_y, align 2
  %1150 = load i16, i16* %mv_x, align 2
  store i16 %1150, i16* %bimv_x, align 2
  %1151 = load i16, i16* %mv_y, align 2
  store i16 %1151, i16* %bimv_y, align 2
  %1152 = load i32, i32* %list.addr, align 4
  %cmp1429 = icmp eq i32 %1152, 0
  %1153 = zext i1 %cmp1429 to i64
  %cond1431 = select i1 %cmp1429, i32 1, i32 0
  %conv1432 = trunc i32 %cond1431 to i16
  store i16 %conv1432, i16* %iterlist, align 2
  br label %if.end1452

if.else1433:                                      ; preds = %for.body1421
  %1154 = load i16*, i16** %pred_mv, align 8
  %arrayidx1434 = getelementptr inbounds i16, i16* %1154, i64 0
  %1155 = load i16, i16* %arrayidx1434, align 2
  store i16 %1155, i16* %pred_mv_x1, align 2
  %1156 = load i16*, i16** %pred_mv, align 8
  %arrayidx1435 = getelementptr inbounds i16, i16* %1156, i64 1
  %1157 = load i16, i16* %arrayidx1435, align 2
  store i16 %1157, i16* %pred_mv_y1, align 2
  %arrayidx1436 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 0
  %1158 = load i16, i16* %arrayidx1436, align 2
  store i16 %1158, i16* %pred_mv_x2, align 2
  %arrayidx1437 = getelementptr inbounds [2 x i16], [2 x i16]* %pred_mv_bi, i64 0, i64 1
  %1159 = load i16, i16* %arrayidx1437, align 2
  store i16 %1159, i16* %pred_mv_y2, align 2
  %1160 = load i32, i32* %i, align 4
  %cmp1438 = icmp ne i32 %1160, 0
  br i1 %cmp1438, label %if.then1440, label %if.else1441

if.then1440:                                      ; preds = %if.else1433
  %1161 = load i16, i16* %bimv_x, align 2
  store i16 %1161, i16* %tempmv_x, align 2
  %1162 = load i16, i16* %bimv_y, align 2
  store i16 %1162, i16* %tempmv_y, align 2
  %1163 = load i16, i16* %mv_x, align 2
  store i16 %1163, i16* %bimv_x, align 2
  %1164 = load i16, i16* %mv_y, align 2
  store i16 %1164, i16* %bimv_y, align 2
  br label %if.end1450

if.else1441:                                      ; preds = %if.else1433
  %1165 = load i16, i16* %mv_x, align 2
  store i16 %1165, i16* %tempmv_x, align 2
  %1166 = load i16, i16* %mv_y, align 2
  store i16 %1166, i16* %tempmv_y, align 2
  %1167 = load i16, i16* %pred_mv_x2, align 2
  %conv1442 = sext i16 %1167 to i32
  %add1443 = add nsw i32 %conv1442, 2
  %shr1444 = ashr i32 %add1443, 2
  %conv1445 = trunc i32 %shr1444 to i16
  store i16 %conv1445, i16* %bimv_x, align 2
  %1168 = load i16, i16* %pred_mv_y2, align 2
  %conv1446 = sext i16 %1168 to i32
  %add1447 = add nsw i32 %conv1446, 2
  %shr1448 = ashr i32 %add1447, 2
  %conv1449 = trunc i32 %shr1448 to i16
  store i16 %conv1449, i16* %bimv_y, align 2
  br label %if.end1450

if.end1450:                                       ; preds = %if.else1441, %if.then1440
  %1169 = load i32, i32* %list.addr, align 4
  %conv1451 = trunc i32 %1169 to i16
  store i16 %conv1451, i16* %iterlist, align 2
  br label %if.end1452

if.end1452:                                       ; preds = %if.end1450, %if.then1424
  %1170 = load i16, i16* %ref.addr, align 2
  %1171 = load i16, i16* %iterlist, align 2
  %conv1453 = sext i16 %1171 to i32
  %1172 = load i32, i32* %pic_pix_x, align 4
  %1173 = load i32, i32* %pic_pix_y, align 4
  %1174 = load i32, i32* %blocktype.addr, align 4
  %1175 = load i32, i32* %i, align 4
  %1176 = load i16, i16* %pred_mv_x1, align 2
  %1177 = load i16, i16* %pred_mv_y1, align 2
  %1178 = load i16, i16* %pred_mv_x2, align 2
  %1179 = load i16, i16* %pred_mv_y2, align 2
  %1180 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMESearchRange = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1180, i32 0, i32 41
  %1181 = load i32, i32* %BiPredMESearchRange, align 8
  %1182 = load i32, i32* %i, align 4
  %shr1454 = ashr i32 %1181, %1182
  %1183 = load i32, i32* %min_mcostbi, align 4
  %1184 = load double, double* %lambda.addr, align 8
  %call1455 = call i32 @FullPelBlockMotionBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext %1170, i32 %conv1453, i32 %1172, i32 %1173, i32 %1174, i32 %1175, i16 signext %1176, i16 signext %1177, i16 signext %1178, i16 signext %1179, i16* %bimv_x, i16* %bimv_y, i16* %tempmv_x, i16* %tempmv_y, i32 %shr1454, i32 %1183, double %1184)
  store i32 %call1455, i32* %min_mcostbi, align 4
  %1185 = load i16, i16* %tempmv_x, align 2
  store i16 %1185, i16* %mv_x, align 2
  %1186 = load i16, i16* %tempmv_y, align 2
  store i16 %1186, i16* %mv_y, align 2
  br label %for.inc1456

for.inc1456:                                      ; preds = %if.end1452
  %1187 = load i32, i32* %i, align 4
  %inc1457 = add nsw i32 %1187, 1
  store i32 %inc1457, i32* %i, align 4
  br label %for.cond1418

for.end1458:                                      ; preds = %for.cond1418
  %1188 = load i16, i16* %tempmv_x, align 2
  %conv1459 = sext i16 %1188 to i32
  %shl = shl i32 %conv1459, 2
  %conv1460 = trunc i32 %shl to i16
  store i16 %conv1460, i16* %tempmv_x, align 2
  %1189 = load i16, i16* %tempmv_y, align 2
  %conv1461 = sext i16 %1189 to i32
  %shl1462 = shl i32 %conv1461, 2
  %conv1463 = trunc i32 %shl1462 to i16
  store i16 %conv1463, i16* %tempmv_y, align 2
  %1190 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMESubPel = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1190, i32 0, i32 42
  %1191 = load i32, i32* %BiPredMESubPel, align 4
  %tobool1464 = icmp ne i32 %1191, 0
  br i1 %tobool1464, label %if.then1465, label %if.else1473

if.then1465:                                      ; preds = %for.end1458
  %1192 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard1466 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1192, i32 0, i32 6
  %1193 = load i32, i32* %hadamard1466, align 8
  %tobool1467 = icmp ne i32 %1193, 0
  br i1 %tobool1467, label %if.then1468, label %if.end1469

if.then1468:                                      ; preds = %if.then1465
  %1194 = load i32, i32* %max_value, align 4
  store i32 %1194, i32* %min_mcostbi, align 4
  br label %if.end1469

if.end1469:                                       ; preds = %if.then1468, %if.then1465
  %1195 = load i16, i16* %iterlist, align 2
  %conv1470 = sext i16 %1195 to i32
  %1196 = load i32, i32* %pic_pix_x, align 4
  %1197 = load i32, i32* %pic_pix_y, align 4
  %1198 = load i32, i32* %blocktype.addr, align 4
  %1199 = load i16, i16* %pred_mv_x2, align 2
  %1200 = load i16, i16* %pred_mv_y2, align 2
  %1201 = load i32, i32* %min_mcostbi, align 4
  %1202 = load double, double* %lambda.addr, align 8
  %mul1471 = fmul double %1202, 5.000000e-01
  %call1472 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext 0, i32 %conv1470, i32 %1196, i32 %1197, i32 %1198, i16 signext %1199, i16 signext %1200, i16* %bimv_x, i16* %bimv_y, i16* %tempmv_x, i16* %tempmv_y, i32 9, i32 9, i32 %1201, double %mul1471)
  store i32 %call1472, i32* %min_mcostbi, align 4
  br label %if.end1480

if.else1473:                                      ; preds = %for.end1458
  %1203 = load i16, i16* %bimv_x, align 2
  %conv1474 = sext i16 %1203 to i32
  %shl1475 = shl i32 %conv1474, 2
  %conv1476 = trunc i32 %shl1475 to i16
  store i16 %conv1476, i16* %bimv_x, align 2
  %1204 = load i16, i16* %bimv_y, align 2
  %conv1477 = sext i16 %1204 to i32
  %shl1478 = shl i32 %conv1477, 2
  %conv1479 = trunc i32 %shl1478 to i16
  store i16 %conv1479, i16* %bimv_y, align 2
  br label %if.end1480

if.end1480:                                       ; preds = %if.else1473, %if.end1469
  %1205 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %BiPredMESubPel1481 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1205, i32 0, i32 42
  %1206 = load i32, i32* %BiPredMESubPel1481, align 4
  %cmp1482 = icmp eq i32 %1206, 2
  br i1 %cmp1482, label %if.then1484, label %if.else1495

if.then1484:                                      ; preds = %if.end1480
  %1207 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard1485 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1207, i32 0, i32 6
  %1208 = load i32, i32* %hadamard1485, align 8
  %tobool1486 = icmp ne i32 %1208, 0
  br i1 %tobool1486, label %if.then1487, label %if.end1488

if.then1487:                                      ; preds = %if.then1484
  %1209 = load i32, i32* %max_value, align 4
  store i32 %1209, i32* %min_mcostbi, align 4
  br label %if.end1488

if.end1488:                                       ; preds = %if.then1487, %if.then1484
  %1210 = load i16, i16* %iterlist, align 2
  %conv1489 = sext i16 %1210 to i32
  %cmp1490 = icmp eq i32 %conv1489, 0
  %1211 = zext i1 %cmp1490 to i64
  %cond1492 = select i1 %cmp1490, i32 1, i32 0
  %1212 = load i32, i32* %pic_pix_x, align 4
  %1213 = load i32, i32* %pic_pix_y, align 4
  %1214 = load i32, i32* %blocktype.addr, align 4
  %1215 = load i16, i16* %pred_mv_x, align 2
  %1216 = load i16, i16* %pred_mv_y, align 2
  %1217 = load i32, i32* %min_mcostbi, align 4
  %1218 = load double, double* %lambda.addr, align 8
  %mul1493 = fmul double %1218, 5.000000e-01
  %call1494 = call i32 @SubPelBlockSearchBiPred(i16** getelementptr inbounds ([16 x i16*], [16 x i16*]* @BlockMotionSearch.orig_pic, i64 0, i64 0), i16 signext 0, i32 %cond1492, i32 %1212, i32 %1213, i32 %1214, i16 signext %1215, i16 signext %1216, i16* %mv_x, i16* %mv_y, i16* %bimv_x, i16* %bimv_y, i32 9, i32 9, i32 %1217, double %mul1493)
  store i32 %call1494, i32* %min_mcostbi, align 4
  br label %if.end1496

if.else1495:                                      ; preds = %if.end1480
  %1219 = load i16, i16* %tempmv_x, align 2
  store i16 %1219, i16* %mv_x, align 2
  %1220 = load i16, i16* %tempmv_y, align 2
  store i16 %1220, i16* %mv_y, align 2
  br label %if.end1496

if.end1496:                                       ; preds = %if.else1495, %if.end1488
  store i32 0, i32* %i, align 4
  br label %for.cond1497

for.cond1497:                                     ; preds = %for.inc1566, %if.end1496
  %1221 = load i32, i32* %i, align 4
  %1222 = load i32, i32* %bsx, align 4
  %shr1498 = ashr i32 %1222, 2
  %cmp1499 = icmp slt i32 %1221, %shr1498
  br i1 %cmp1499, label %for.body1501, label %for.end1568

for.body1501:                                     ; preds = %for.cond1497
  store i32 0, i32* %j, align 4
  br label %for.cond1502

for.cond1502:                                     ; preds = %for.inc1563, %for.body1501
  %1223 = load i32, i32* %j, align 4
  %1224 = load i32, i32* %bsy, align 4
  %shr1503 = ashr i32 %1224, 2
  %cmp1504 = icmp slt i32 %1223, %shr1503
  br i1 %cmp1504, label %for.body1506, label %for.end1565

for.body1506:                                     ; preds = %for.cond1502
  %1225 = load i16, i16* %mv_x, align 2
  %1226 = load i16******, i16******* %bipred_mv, align 8
  %1227 = load i32, i32* %block_x, align 4
  %1228 = load i32, i32* %i, align 4
  %add1507 = add nsw i32 %1227, %1228
  %idxprom1508 = sext i32 %add1507 to i64
  %arrayidx1509 = getelementptr inbounds i16*****, i16****** %1226, i64 %idxprom1508
  %1229 = load i16*****, i16****** %arrayidx1509, align 8
  %1230 = load i32, i32* %block_y, align 4
  %1231 = load i32, i32* %j, align 4
  %add1510 = add nsw i32 %1230, %1231
  %idxprom1511 = sext i32 %add1510 to i64
  %arrayidx1512 = getelementptr inbounds i16****, i16***** %1229, i64 %idxprom1511
  %1232 = load i16****, i16***** %arrayidx1512, align 8
  %1233 = load i16, i16* %iterlist, align 2
  %idxprom1513 = sext i16 %1233 to i64
  %arrayidx1514 = getelementptr inbounds i16***, i16**** %1232, i64 %idxprom1513
  %1234 = load i16***, i16**** %arrayidx1514, align 8
  %arrayidx1515 = getelementptr inbounds i16**, i16*** %1234, i64 0
  %1235 = load i16**, i16*** %arrayidx1515, align 8
  %1236 = load i32, i32* %blocktype.addr, align 4
  %idxprom1516 = sext i32 %1236 to i64
  %arrayidx1517 = getelementptr inbounds i16*, i16** %1235, i64 %idxprom1516
  %1237 = load i16*, i16** %arrayidx1517, align 8
  %arrayidx1518 = getelementptr inbounds i16, i16* %1237, i64 0
  store i16 %1225, i16* %arrayidx1518, align 2
  %1238 = load i16, i16* %mv_y, align 2
  %1239 = load i16******, i16******* %bipred_mv, align 8
  %1240 = load i32, i32* %block_x, align 4
  %1241 = load i32, i32* %i, align 4
  %add1519 = add nsw i32 %1240, %1241
  %idxprom1520 = sext i32 %add1519 to i64
  %arrayidx1521 = getelementptr inbounds i16*****, i16****** %1239, i64 %idxprom1520
  %1242 = load i16*****, i16****** %arrayidx1521, align 8
  %1243 = load i32, i32* %block_y, align 4
  %1244 = load i32, i32* %j, align 4
  %add1522 = add nsw i32 %1243, %1244
  %idxprom1523 = sext i32 %add1522 to i64
  %arrayidx1524 = getelementptr inbounds i16****, i16***** %1242, i64 %idxprom1523
  %1245 = load i16****, i16***** %arrayidx1524, align 8
  %1246 = load i16, i16* %iterlist, align 2
  %idxprom1525 = sext i16 %1246 to i64
  %arrayidx1526 = getelementptr inbounds i16***, i16**** %1245, i64 %idxprom1525
  %1247 = load i16***, i16**** %arrayidx1526, align 8
  %arrayidx1527 = getelementptr inbounds i16**, i16*** %1247, i64 0
  %1248 = load i16**, i16*** %arrayidx1527, align 8
  %1249 = load i32, i32* %blocktype.addr, align 4
  %idxprom1528 = sext i32 %1249 to i64
  %arrayidx1529 = getelementptr inbounds i16*, i16** %1248, i64 %idxprom1528
  %1250 = load i16*, i16** %arrayidx1529, align 8
  %arrayidx1530 = getelementptr inbounds i16, i16* %1250, i64 1
  store i16 %1238, i16* %arrayidx1530, align 2
  %1251 = load i16, i16* %bimv_x, align 2
  %1252 = load i16******, i16******* %bipred_mv, align 8
  %1253 = load i32, i32* %block_x, align 4
  %1254 = load i32, i32* %i, align 4
  %add1531 = add nsw i32 %1253, %1254
  %idxprom1532 = sext i32 %add1531 to i64
  %arrayidx1533 = getelementptr inbounds i16*****, i16****** %1252, i64 %idxprom1532
  %1255 = load i16*****, i16****** %arrayidx1533, align 8
  %1256 = load i32, i32* %block_y, align 4
  %1257 = load i32, i32* %j, align 4
  %add1534 = add nsw i32 %1256, %1257
  %idxprom1535 = sext i32 %add1534 to i64
  %arrayidx1536 = getelementptr inbounds i16****, i16***** %1255, i64 %idxprom1535
  %1258 = load i16****, i16***** %arrayidx1536, align 8
  %1259 = load i16, i16* %iterlist, align 2
  %conv1537 = sext i16 %1259 to i32
  %cmp1538 = icmp eq i32 %conv1537, 0
  %1260 = zext i1 %cmp1538 to i64
  %cond1540 = select i1 %cmp1538, i32 1, i32 0
  %idxprom1541 = sext i32 %cond1540 to i64
  %arrayidx1542 = getelementptr inbounds i16***, i16**** %1258, i64 %idxprom1541
  %1261 = load i16***, i16**** %arrayidx1542, align 8
  %arrayidx1543 = getelementptr inbounds i16**, i16*** %1261, i64 0
  %1262 = load i16**, i16*** %arrayidx1543, align 8
  %1263 = load i32, i32* %blocktype.addr, align 4
  %idxprom1544 = sext i32 %1263 to i64
  %arrayidx1545 = getelementptr inbounds i16*, i16** %1262, i64 %idxprom1544
  %1264 = load i16*, i16** %arrayidx1545, align 8
  %arrayidx1546 = getelementptr inbounds i16, i16* %1264, i64 0
  store i16 %1251, i16* %arrayidx1546, align 2
  %1265 = load i16, i16* %bimv_y, align 2
  %1266 = load i16******, i16******* %bipred_mv, align 8
  %1267 = load i32, i32* %block_x, align 4
  %1268 = load i32, i32* %i, align 4
  %add1547 = add nsw i32 %1267, %1268
  %idxprom1548 = sext i32 %add1547 to i64
  %arrayidx1549 = getelementptr inbounds i16*****, i16****** %1266, i64 %idxprom1548
  %1269 = load i16*****, i16****** %arrayidx1549, align 8
  %1270 = load i32, i32* %block_y, align 4
  %1271 = load i32, i32* %j, align 4
  %add1550 = add nsw i32 %1270, %1271
  %idxprom1551 = sext i32 %add1550 to i64
  %arrayidx1552 = getelementptr inbounds i16****, i16***** %1269, i64 %idxprom1551
  %1272 = load i16****, i16***** %arrayidx1552, align 8
  %1273 = load i16, i16* %iterlist, align 2
  %conv1553 = sext i16 %1273 to i32
  %cmp1554 = icmp eq i32 %conv1553, 0
  %1274 = zext i1 %cmp1554 to i64
  %cond1556 = select i1 %cmp1554, i32 1, i32 0
  %idxprom1557 = sext i32 %cond1556 to i64
  %arrayidx1558 = getelementptr inbounds i16***, i16**** %1272, i64 %idxprom1557
  %1275 = load i16***, i16**** %arrayidx1558, align 8
  %arrayidx1559 = getelementptr inbounds i16**, i16*** %1275, i64 0
  %1276 = load i16**, i16*** %arrayidx1559, align 8
  %1277 = load i32, i32* %blocktype.addr, align 4
  %idxprom1560 = sext i32 %1277 to i64
  %arrayidx1561 = getelementptr inbounds i16*, i16** %1276, i64 %idxprom1560
  %1278 = load i16*, i16** %arrayidx1561, align 8
  %arrayidx1562 = getelementptr inbounds i16, i16* %1278, i64 1
  store i16 %1265, i16* %arrayidx1562, align 2
  br label %for.inc1563

for.inc1563:                                      ; preds = %for.body1506
  %1279 = load i32, i32* %j, align 4
  %inc1564 = add nsw i32 %1279, 1
  store i32 %inc1564, i32* %j, align 4
  br label %for.cond1502

for.end1565:                                      ; preds = %for.cond1502
  br label %for.inc1566

for.inc1566:                                      ; preds = %for.end1565
  %1280 = load i32, i32* %i, align 4
  %inc1567 = add nsw i32 %1280, 1
  store i32 %inc1567, i32* %i, align 4
  br label %for.cond1497

for.end1568:                                      ; preds = %for.cond1497
  br label %if.end1569

if.end1569:                                       ; preds = %for.end1568, %land.lhs.true1394, %land.lhs.true1391, %land.lhs.true1388, %if.end1384
  %call1570 = call i32 @ftime(%struct.timeb* %tstruct2)
  %time = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 0
  %1281 = load i64, i64* %time, align 8
  %mul1571 = mul nsw i64 %1281, 1000
  %millitm = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct2, i32 0, i32 1
  %1282 = load i16, i16* %millitm, align 8
  %conv1572 = zext i16 %1282 to i64
  %add1573 = add nsw i64 %mul1571, %conv1572
  %time1574 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 0
  %1283 = load i64, i64* %time1574, align 8
  %mul1575 = mul nsw i64 %1283, 1000
  %millitm1576 = getelementptr inbounds %struct.timeb, %struct.timeb* %tstruct1, i32 0, i32 1
  %1284 = load i16, i16* %millitm1576, align 8
  %conv1577 = zext i16 %1284 to i64
  %add1578 = add nsw i64 %mul1575, %conv1577
  %sub1579 = sub nsw i64 %add1573, %add1578
  %conv1580 = trunc i64 %sub1579 to i32
  store i32 %conv1580, i32* %me_tmp_time, align 4
  %1285 = load i32, i32* %me_tmp_time, align 4
  %1286 = load i32, i32* @me_tot_time, align 4
  %add1581 = add nsw i32 %1286, %1285
  store i32 %add1581, i32* @me_tot_time, align 4
  %1287 = load i32, i32* %me_tmp_time, align 4
  %1288 = load i32, i32* @me_time, align 4
  %add1582 = add nsw i32 %1288, %1287
  store i32 %add1582, i32* @me_time, align 4
  %1289 = load i32, i32* %min_mcost, align 4
  ret i32 %1289
}

declare dso_local i32 @ftime(%struct.timeb*) #2

declare dso_local i32 @FastIntegerPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, double) #2

declare dso_local i32 @FastSubPelBlockMotionSearch(i16**, i16 signext, i32, i32, i32, i32, i16 signext, i16 signext, i16*, i16*, i32, i32, i32, double, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @GetSkipCostMB(double %lambda) #0 {
entry:
  %lambda.addr = alloca double, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %diff = alloca [16 x i32], align 16
  %cost = alloca i32, align 4
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %mb_x = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %block = alloca i32, align 4
  store double %lambda, double* %lambda.addr, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %block, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc84, %entry
  %0 = load i32, i32* %block, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end86

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %block, align 4
  %div = sdiv i32 %1, 2
  %shl = shl i32 %div, 3
  store i32 %shl, i32* %mb_y, align 4
  %2 = load i32, i32* %block, align 4
  %rem = srem i32 %2, 2
  %shl1 = shl i32 %rem, 3
  store i32 %shl1, i32* %mb_x, align 4
  %3 = load i32, i32* %mb_y, align 4
  store i32 %3, i32* %block_y, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc48, %for.body
  %4 = load i32, i32* %block_y, align 4
  %5 = load i32, i32* %mb_y, align 4
  %add = add nsw i32 %5, 8
  %cmp3 = icmp slt i32 %4, %add
  br i1 %cmp3, label %for.body4, label %for.end50

for.body4:                                        ; preds = %for.cond2
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 38
  %7 = load i32, i32* %opix_y, align 4
  %8 = load i32, i32* %block_y, align 4
  %add5 = add nsw i32 %7, %8
  store i32 %add5, i32* %pic_pix_y, align 4
  %9 = load i32, i32* %mb_x, align 4
  store i32 %9, i32* %block_x, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc45, %for.body4
  %10 = load i32, i32* %block_x, align 4
  %11 = load i32, i32* %mb_x, align 4
  %add7 = add nsw i32 %11, 8
  %cmp8 = icmp slt i32 %10, %add7
  br i1 %cmp8, label %for.body9, label %for.end47

for.body9:                                        ; preds = %for.cond6
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 37
  %13 = load i32, i32* %opix_x, align 8
  %14 = load i32, i32* %block_x, align 4
  %add10 = add nsw i32 %13, %14
  store i32 %add10, i32* %pic_pix_x, align 4
  %15 = load i32, i32* %block_x, align 4
  %16 = load i32, i32* %block_y, align 4
  call void @LumaPrediction4x4(i32 %15, i32 %16, i32 0, i32 0, i32 0, i16 signext 0, i16 signext 0)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc39, %for.body9
  %17 = load i32, i32* %j, align 4
  %cmp12 = icmp slt i32 %17, 4
  br i1 %cmp12, label %for.body13, label %for.end41

for.body13:                                       ; preds = %for.cond11
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %for.body13
  %18 = load i32, i32* %i, align 4
  %cmp15 = icmp slt i32 %18, 4
  br i1 %cmp15, label %for.body16, label %for.end

for.body16:                                       ; preds = %for.cond14
  %19 = load i16**, i16*** @imgY_org, align 8
  %20 = load i32, i32* %pic_pix_y, align 4
  %21 = load i32, i32* %j, align 4
  %add17 = add nsw i32 %20, %21
  %idxprom = sext i32 %add17 to i64
  %arrayidx = getelementptr inbounds i16*, i16** %19, i64 %idxprom
  %22 = load i16*, i16** %arrayidx, align 8
  %23 = load i32, i32* %pic_pix_x, align 4
  %24 = load i32, i32* %i, align 4
  %add18 = add nsw i32 %23, %24
  %idxprom19 = sext i32 %add18 to i64
  %arrayidx20 = getelementptr inbounds i16, i16* %22, i64 %idxprom19
  %25 = load i16, i16* %arrayidx20, align 2
  %conv = zext i16 %25 to i32
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 45
  %27 = load i32, i32* %i, align 4
  %28 = load i32, i32* %block_x, align 4
  %add21 = add nsw i32 %27, %28
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i64 0, i64 %idxprom22
  %29 = load i32, i32* %j, align 4
  %30 = load i32, i32* %block_y, align 4
  %add24 = add nsw i32 %29, %30
  %idxprom25 = sext i32 %add24 to i64
  %arrayidx26 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx23, i64 0, i64 %idxprom25
  %31 = load i16, i16* %arrayidx26, align 2
  %conv27 = zext i16 %31 to i32
  %sub = sub nsw i32 %conv, %conv27
  %32 = load i32, i32* %block_y, align 4
  %33 = load i32, i32* %mb_y, align 4
  %sub28 = sub nsw i32 %32, %33
  %34 = load i32, i32* %j, align 4
  %add29 = add nsw i32 %sub28, %34
  %idxprom30 = sext i32 %add29 to i64
  %arrayidx31 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %idxprom30
  %35 = load i32, i32* %block_x, align 4
  %36 = load i32, i32* %mb_x, align 4
  %sub32 = sub nsw i32 %35, %36
  %37 = load i32, i32* %i, align 4
  %add33 = add nsw i32 %sub32, %37
  %idxprom34 = sext i32 %add33 to i64
  %arrayidx35 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx31, i64 0, i64 %idxprom34
  store i32 %sub, i32* %arrayidx35, align 4
  %38 = load i32, i32* %k, align 4
  %idxprom36 = sext i32 %38 to i64
  %arrayidx37 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom36
  store i32 %sub, i32* %arrayidx37, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body16
  %39 = load i32, i32* %i, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4
  %40 = load i32, i32* %k, align 4
  %inc38 = add nsw i32 %40, 1
  store i32 %inc38, i32* %k, align 4
  br label %for.cond14

for.end:                                          ; preds = %for.cond14
  br label %for.inc39

for.inc39:                                        ; preds = %for.end
  %41 = load i32, i32* %j, align 4
  %inc40 = add nsw i32 %41, 1
  store i32 %inc40, i32* %j, align 4
  br label %for.cond11

for.end41:                                        ; preds = %for.cond11
  %42 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %42, i32 0, i32 85
  %43 = load i32, i32* %rdopt, align 8
  %cmp42 = icmp eq i32 %43, 0
  br i1 %cmp42, label %land.lhs.true, label %if.then

land.lhs.true:                                    ; preds = %for.end41
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 123
  %45 = load i32, i32* %AllowTransform8x8, align 4
  %tobool = icmp ne i32 %45, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true, %for.end41
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %46 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %46, i32 0, i32 6
  %47 = load i32, i32* %hadamard, align 8
  %call = call i32 @SATD(i32* %arraydecay, i32 %47)
  %48 = load i32, i32* %cost, align 4
  %add44 = add nsw i32 %48, %call
  store i32 %add44, i32* %cost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true
  br label %for.inc45

for.inc45:                                        ; preds = %if.end
  %49 = load i32, i32* %block_x, align 4
  %add46 = add nsw i32 %49, 4
  store i32 %add46, i32* %block_x, align 4
  br label %for.cond6

for.end47:                                        ; preds = %for.cond6
  br label %for.inc48

for.inc48:                                        ; preds = %for.end47
  %50 = load i32, i32* %block_y, align 4
  %add49 = add nsw i32 %50, 4
  store i32 %add49, i32* %block_y, align 4
  br label %for.cond2

for.end50:                                        ; preds = %for.cond2
  %51 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %51, i32 0, i32 85
  %52 = load i32, i32* %rdopt51, align 8
  %cmp52 = icmp eq i32 %52, 0
  br i1 %cmp52, label %land.lhs.true54, label %if.end83

land.lhs.true54:                                  ; preds = %for.end50
  %53 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x855 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %53, i32 0, i32 123
  %54 = load i32, i32* %AllowTransform8x855, align 4
  %tobool56 = icmp ne i32 %54, 0
  br i1 %tobool56, label %if.then57, label %if.end83

if.then57:                                        ; preds = %land.lhs.true54
  store i32 0, i32* %k, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc76, %if.then57
  %55 = load i32, i32* %j, align 4
  %cmp59 = icmp slt i32 %55, 8
  br i1 %cmp59, label %for.body61, label %for.end78

for.body61:                                       ; preds = %for.cond58
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc72, %for.body61
  %56 = load i32, i32* %i, align 4
  %cmp63 = icmp slt i32 %56, 8
  br i1 %cmp63, label %for.body65, label %for.end75

for.body65:                                       ; preds = %for.cond62
  %57 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %57 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %idxprom66
  %58 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %58 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  %59 = load i32, i32* %arrayidx69, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %60 to i64
  %arrayidx71 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 %idxprom70
  store i32 %59, i32* %arrayidx71, align 4
  br label %for.inc72

for.inc72:                                        ; preds = %for.body65
  %61 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %61, 1
  store i32 %inc73, i32* %i, align 4
  %62 = load i32, i32* %k, align 4
  %inc74 = add nsw i32 %62, 1
  store i32 %inc74, i32* %k, align 4
  br label %for.cond62

for.end75:                                        ; preds = %for.cond62
  br label %for.inc76

for.inc76:                                        ; preds = %for.end75
  %63 = load i32, i32* %j, align 4
  %inc77 = add nsw i32 %63, 1
  store i32 %inc77, i32* %j, align 4
  br label %for.cond58

for.end78:                                        ; preds = %for.cond58
  %arraydecay79 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 0
  %64 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %64, i32 0, i32 6
  %65 = load i32, i32* %hadamard80, align 8
  %call81 = call i32 @SATD8X8(i32* %arraydecay79, i32 %65)
  %66 = load i32, i32* %cost, align 4
  %add82 = add nsw i32 %66, %call81
  store i32 %add82, i32* %cost, align 4
  br label %if.end83

if.end83:                                         ; preds = %for.end78, %land.lhs.true54, %for.end50
  br label %for.inc84

for.inc84:                                        ; preds = %if.end83
  %67 = load i32, i32* %block, align 4
  %inc85 = add nsw i32 %67, 1
  store i32 %inc85, i32* %block, align 4
  br label %for.cond

for.end86:                                        ; preds = %for.cond
  %68 = load i32, i32* %cost, align 4
  ret i32 %68
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @BIDPartitionCost(i32 %blocktype, i32 %block8x8, i16 signext %fw_ref, i16 signext %bw_ref, i32 %lambda_factor) #0 {
entry:
  %blocktype.addr = alloca i32, align 4
  %block8x8.addr = alloca i32, align 4
  %fw_ref.addr = alloca i16, align 2
  %bw_ref.addr = alloca i16, align 2
  %lambda_factor.addr = alloca i32, align 4
  %diff = alloca [64 x i32], align 16
  %curr_blk = alloca [16 x [16 x i32]], align 16
  %bsx = alloca i32, align 4
  %bsy = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %mvd_bits = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %bxx = alloca i32, align 4
  %byy = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %p_mv = alloca i16******, align 8
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store i16 %fw_ref, i16* %fw_ref.addr, align 2
  store i16 %bw_ref, i16* %bw_ref.addr, align 2
  store i32 %lambda_factor, i32* %lambda_factor.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 20
  %1 = load i32, i32* %blocktype.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size, i64 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %2 = load i32, i32* %arrayidx1, align 8
  %cmp = icmp slt i32 %2, 8
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size2 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %3, i32 0, i32 20
  %4 = load i32, i32* %blocktype.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size2, i64 0, i64 %idxprom3
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx4, i64 0, i64 0
  %5 = load i32, i32* %arrayidx5, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 8, %cond.false ]
  store i32 %cond, i32* %bsx, align 4
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size6 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 20
  %7 = load i32, i32* %blocktype.addr, align 4
  %idxprom7 = sext i32 %7 to i64
  %arrayidx8 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size6, i64 0, i64 %idxprom7
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx8, i64 0, i64 1
  %8 = load i32, i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %8, 8
  br i1 %cmp10, label %cond.true11, label %cond.false16

cond.true11:                                      ; preds = %cond.end
  %9 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size12 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %9, i32 0, i32 20
  %10 = load i32, i32* %blocktype.addr, align 4
  %idxprom13 = sext i32 %10 to i64
  %arrayidx14 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size12, i64 0, i64 %idxprom13
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i64 0, i64 1
  %11 = load i32, i32* %arrayidx15, align 4
  br label %cond.end17

cond.false16:                                     ; preds = %cond.end
  br label %cond.end17

cond.end17:                                       ; preds = %cond.false16, %cond.true11
  %cond18 = phi i32 [ %11, %cond.true11 ], [ 8, %cond.false16 ]
  store i32 %cond18, i32* %bsy, align 4
  store i32 0, i32* %mvd_bits, align 4
  %12 = load i32, i32* %blocktype.addr, align 4
  %cmp19 = icmp slt i32 %12, 4
  br i1 %cmp19, label %cond.true20, label %cond.false21

cond.true20:                                      ; preds = %cond.end17
  %13 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end22

cond.false21:                                     ; preds = %cond.end17
  br label %cond.end22

cond.end22:                                       ; preds = %cond.false21, %cond.true20
  %cond23 = phi i32 [ %13, %cond.true20 ], [ 4, %cond.false21 ]
  store i32 %cond23, i32* %parttype, align 4
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 21
  %15 = load i32, i32* %parttype, align 4
  %idxprom24 = sext i32 %15 to i64
  %arrayidx25 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i64 0, i64 %idxprom24
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx25, i64 0, i64 0
  %16 = load i32, i32* %arrayidx26, align 8
  store i32 %16, i32* %step_h0, align 4
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size27 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 21
  %18 = load i32, i32* %parttype, align 4
  %idxprom28 = sext i32 %18 to i64
  %arrayidx29 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size27, i64 0, i64 %idxprom28
  %arrayidx30 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx29, i64 0, i64 1
  %19 = load i32, i32* %arrayidx30, align 4
  store i32 %19, i32* %step_v0, align 4
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size31 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 21
  %21 = load i32, i32* %blocktype.addr, align 4
  %idxprom32 = sext i32 %21 to i64
  %arrayidx33 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size31, i64 0, i64 %idxprom32
  %arrayidx34 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx33, i64 0, i64 0
  %22 = load i32, i32* %arrayidx34, align 8
  store i32 %22, i32* %step_h, align 4
  %23 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size35 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %23, i32 0, i32 21
  %24 = load i32, i32* %blocktype.addr, align 4
  %idxprom36 = sext i32 %24 to i64
  %arrayidx37 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size35, i64 0, i64 %idxprom36
  %arrayidx38 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx37, i64 0, i64 1
  %25 = load i32, i32* %arrayidx38, align 4
  store i32 %25, i32* %step_v, align 4
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 71
  %27 = load i16******, i16******* %all_mv39, align 8
  store i16****** %27, i16******* %all_mv, align 8
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pred_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 70
  %29 = load i16******, i16******* %pred_mv, align 8
  store i16****** %29, i16******* %p_mv, align 8
  %30 = load i32, i32* %parttype, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i64 0, i64 %idxprom40
  %31 = load i32, i32* %block8x8.addr, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %arrayidx43, align 4
  store i32 %32, i32* %v, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc164, %cond.end22
  %33 = load i32, i32* %v, align 4
  %34 = load i32, i32* %parttype, align 4
  %idxprom44 = sext i32 %34 to i64
  %arrayidx45 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i64 0, i64 %idxprom44
  %35 = load i32, i32* %block8x8.addr, align 4
  %idxprom46 = sext i32 %35 to i64
  %arrayidx47 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx45, i64 0, i64 %idxprom46
  %36 = load i32, i32* %arrayidx47, align 4
  %37 = load i32, i32* %step_v0, align 4
  %add = add nsw i32 %36, %37
  %cmp48 = icmp slt i32 %33, %add
  br i1 %cmp48, label %for.body, label %for.end166

for.body:                                         ; preds = %for.cond
  %38 = load i32, i32* %parttype, align 4
  %idxprom49 = sext i32 %38 to i64
  %arrayidx50 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i64 0, i64 %idxprom49
  %39 = load i32, i32* %block8x8.addr, align 4
  %idxprom51 = sext i32 %39 to i64
  %arrayidx52 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx50, i64 0, i64 %idxprom51
  %40 = load i32, i32* %arrayidx52, align 4
  store i32 %40, i32* %h, align 4
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc, %for.body
  %41 = load i32, i32* %h, align 4
  %42 = load i32, i32* %parttype, align 4
  %idxprom54 = sext i32 %42 to i64
  %arrayidx55 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i64 0, i64 %idxprom54
  %43 = load i32, i32* %block8x8.addr, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  %44 = load i32, i32* %arrayidx57, align 4
  %45 = load i32, i32* %step_h0, align 4
  %add58 = add nsw i32 %44, %45
  %cmp59 = icmp slt i32 %41, %add58
  br i1 %cmp59, label %for.body60, label %for.end

for.body60:                                       ; preds = %for.cond53
  %46 = load i32*, i32** @mvbits, align 8
  %47 = load i16******, i16******* %all_mv, align 8
  %48 = load i32, i32* %h, align 4
  %idxprom61 = sext i32 %48 to i64
  %arrayidx62 = getelementptr inbounds i16*****, i16****** %47, i64 %idxprom61
  %49 = load i16*****, i16****** %arrayidx62, align 8
  %50 = load i32, i32* %v, align 4
  %idxprom63 = sext i32 %50 to i64
  %arrayidx64 = getelementptr inbounds i16****, i16***** %49, i64 %idxprom63
  %51 = load i16****, i16***** %arrayidx64, align 8
  %arrayidx65 = getelementptr inbounds i16***, i16**** %51, i64 0
  %52 = load i16***, i16**** %arrayidx65, align 8
  %53 = load i16, i16* %fw_ref.addr, align 2
  %idxprom66 = sext i16 %53 to i64
  %arrayidx67 = getelementptr inbounds i16**, i16*** %52, i64 %idxprom66
  %54 = load i16**, i16*** %arrayidx67, align 8
  %55 = load i32, i32* %blocktype.addr, align 4
  %idxprom68 = sext i32 %55 to i64
  %arrayidx69 = getelementptr inbounds i16*, i16** %54, i64 %idxprom68
  %56 = load i16*, i16** %arrayidx69, align 8
  %arrayidx70 = getelementptr inbounds i16, i16* %56, i64 0
  %57 = load i16, i16* %arrayidx70, align 2
  %conv = sext i16 %57 to i32
  %58 = load i16******, i16******* %p_mv, align 8
  %59 = load i32, i32* %h, align 4
  %idxprom71 = sext i32 %59 to i64
  %arrayidx72 = getelementptr inbounds i16*****, i16****** %58, i64 %idxprom71
  %60 = load i16*****, i16****** %arrayidx72, align 8
  %61 = load i32, i32* %v, align 4
  %idxprom73 = sext i32 %61 to i64
  %arrayidx74 = getelementptr inbounds i16****, i16***** %60, i64 %idxprom73
  %62 = load i16****, i16***** %arrayidx74, align 8
  %arrayidx75 = getelementptr inbounds i16***, i16**** %62, i64 0
  %63 = load i16***, i16**** %arrayidx75, align 8
  %64 = load i16, i16* %fw_ref.addr, align 2
  %idxprom76 = sext i16 %64 to i64
  %arrayidx77 = getelementptr inbounds i16**, i16*** %63, i64 %idxprom76
  %65 = load i16**, i16*** %arrayidx77, align 8
  %66 = load i32, i32* %blocktype.addr, align 4
  %idxprom78 = sext i32 %66 to i64
  %arrayidx79 = getelementptr inbounds i16*, i16** %65, i64 %idxprom78
  %67 = load i16*, i16** %arrayidx79, align 8
  %arrayidx80 = getelementptr inbounds i16, i16* %67, i64 0
  %68 = load i16, i16* %arrayidx80, align 2
  %conv81 = sext i16 %68 to i32
  %sub = sub nsw i32 %conv, %conv81
  %idxprom82 = sext i32 %sub to i64
  %arrayidx83 = getelementptr inbounds i32, i32* %46, i64 %idxprom82
  %69 = load i32, i32* %arrayidx83, align 4
  %70 = load i32, i32* %mvd_bits, align 4
  %add84 = add nsw i32 %70, %69
  store i32 %add84, i32* %mvd_bits, align 4
  %71 = load i32*, i32** @mvbits, align 8
  %72 = load i16******, i16******* %all_mv, align 8
  %73 = load i32, i32* %h, align 4
  %idxprom85 = sext i32 %73 to i64
  %arrayidx86 = getelementptr inbounds i16*****, i16****** %72, i64 %idxprom85
  %74 = load i16*****, i16****** %arrayidx86, align 8
  %75 = load i32, i32* %v, align 4
  %idxprom87 = sext i32 %75 to i64
  %arrayidx88 = getelementptr inbounds i16****, i16***** %74, i64 %idxprom87
  %76 = load i16****, i16***** %arrayidx88, align 8
  %arrayidx89 = getelementptr inbounds i16***, i16**** %76, i64 0
  %77 = load i16***, i16**** %arrayidx89, align 8
  %78 = load i16, i16* %fw_ref.addr, align 2
  %idxprom90 = sext i16 %78 to i64
  %arrayidx91 = getelementptr inbounds i16**, i16*** %77, i64 %idxprom90
  %79 = load i16**, i16*** %arrayidx91, align 8
  %80 = load i32, i32* %blocktype.addr, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds i16*, i16** %79, i64 %idxprom92
  %81 = load i16*, i16** %arrayidx93, align 8
  %arrayidx94 = getelementptr inbounds i16, i16* %81, i64 1
  %82 = load i16, i16* %arrayidx94, align 2
  %conv95 = sext i16 %82 to i32
  %83 = load i16******, i16******* %p_mv, align 8
  %84 = load i32, i32* %h, align 4
  %idxprom96 = sext i32 %84 to i64
  %arrayidx97 = getelementptr inbounds i16*****, i16****** %83, i64 %idxprom96
  %85 = load i16*****, i16****** %arrayidx97, align 8
  %86 = load i32, i32* %v, align 4
  %idxprom98 = sext i32 %86 to i64
  %arrayidx99 = getelementptr inbounds i16****, i16***** %85, i64 %idxprom98
  %87 = load i16****, i16***** %arrayidx99, align 8
  %arrayidx100 = getelementptr inbounds i16***, i16**** %87, i64 0
  %88 = load i16***, i16**** %arrayidx100, align 8
  %89 = load i16, i16* %fw_ref.addr, align 2
  %idxprom101 = sext i16 %89 to i64
  %arrayidx102 = getelementptr inbounds i16**, i16*** %88, i64 %idxprom101
  %90 = load i16**, i16*** %arrayidx102, align 8
  %91 = load i32, i32* %blocktype.addr, align 4
  %idxprom103 = sext i32 %91 to i64
  %arrayidx104 = getelementptr inbounds i16*, i16** %90, i64 %idxprom103
  %92 = load i16*, i16** %arrayidx104, align 8
  %arrayidx105 = getelementptr inbounds i16, i16* %92, i64 1
  %93 = load i16, i16* %arrayidx105, align 2
  %conv106 = sext i16 %93 to i32
  %sub107 = sub nsw i32 %conv95, %conv106
  %idxprom108 = sext i32 %sub107 to i64
  %arrayidx109 = getelementptr inbounds i32, i32* %71, i64 %idxprom108
  %94 = load i32, i32* %arrayidx109, align 4
  %95 = load i32, i32* %mvd_bits, align 4
  %add110 = add nsw i32 %95, %94
  store i32 %add110, i32* %mvd_bits, align 4
  %96 = load i32*, i32** @mvbits, align 8
  %97 = load i16******, i16******* %all_mv, align 8
  %98 = load i32, i32* %h, align 4
  %idxprom111 = sext i32 %98 to i64
  %arrayidx112 = getelementptr inbounds i16*****, i16****** %97, i64 %idxprom111
  %99 = load i16*****, i16****** %arrayidx112, align 8
  %100 = load i32, i32* %v, align 4
  %idxprom113 = sext i32 %100 to i64
  %arrayidx114 = getelementptr inbounds i16****, i16***** %99, i64 %idxprom113
  %101 = load i16****, i16***** %arrayidx114, align 8
  %arrayidx115 = getelementptr inbounds i16***, i16**** %101, i64 1
  %102 = load i16***, i16**** %arrayidx115, align 8
  %103 = load i16, i16* %bw_ref.addr, align 2
  %idxprom116 = sext i16 %103 to i64
  %arrayidx117 = getelementptr inbounds i16**, i16*** %102, i64 %idxprom116
  %104 = load i16**, i16*** %arrayidx117, align 8
  %105 = load i32, i32* %blocktype.addr, align 4
  %idxprom118 = sext i32 %105 to i64
  %arrayidx119 = getelementptr inbounds i16*, i16** %104, i64 %idxprom118
  %106 = load i16*, i16** %arrayidx119, align 8
  %arrayidx120 = getelementptr inbounds i16, i16* %106, i64 0
  %107 = load i16, i16* %arrayidx120, align 2
  %conv121 = sext i16 %107 to i32
  %108 = load i16******, i16******* %p_mv, align 8
  %109 = load i32, i32* %h, align 4
  %idxprom122 = sext i32 %109 to i64
  %arrayidx123 = getelementptr inbounds i16*****, i16****** %108, i64 %idxprom122
  %110 = load i16*****, i16****** %arrayidx123, align 8
  %111 = load i32, i32* %v, align 4
  %idxprom124 = sext i32 %111 to i64
  %arrayidx125 = getelementptr inbounds i16****, i16***** %110, i64 %idxprom124
  %112 = load i16****, i16***** %arrayidx125, align 8
  %arrayidx126 = getelementptr inbounds i16***, i16**** %112, i64 1
  %113 = load i16***, i16**** %arrayidx126, align 8
  %114 = load i16, i16* %bw_ref.addr, align 2
  %idxprom127 = sext i16 %114 to i64
  %arrayidx128 = getelementptr inbounds i16**, i16*** %113, i64 %idxprom127
  %115 = load i16**, i16*** %arrayidx128, align 8
  %116 = load i32, i32* %blocktype.addr, align 4
  %idxprom129 = sext i32 %116 to i64
  %arrayidx130 = getelementptr inbounds i16*, i16** %115, i64 %idxprom129
  %117 = load i16*, i16** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds i16, i16* %117, i64 0
  %118 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %118 to i32
  %sub133 = sub nsw i32 %conv121, %conv132
  %idxprom134 = sext i32 %sub133 to i64
  %arrayidx135 = getelementptr inbounds i32, i32* %96, i64 %idxprom134
  %119 = load i32, i32* %arrayidx135, align 4
  %120 = load i32, i32* %mvd_bits, align 4
  %add136 = add nsw i32 %120, %119
  store i32 %add136, i32* %mvd_bits, align 4
  %121 = load i32*, i32** @mvbits, align 8
  %122 = load i16******, i16******* %all_mv, align 8
  %123 = load i32, i32* %h, align 4
  %idxprom137 = sext i32 %123 to i64
  %arrayidx138 = getelementptr inbounds i16*****, i16****** %122, i64 %idxprom137
  %124 = load i16*****, i16****** %arrayidx138, align 8
  %125 = load i32, i32* %v, align 4
  %idxprom139 = sext i32 %125 to i64
  %arrayidx140 = getelementptr inbounds i16****, i16***** %124, i64 %idxprom139
  %126 = load i16****, i16***** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i16***, i16**** %126, i64 1
  %127 = load i16***, i16**** %arrayidx141, align 8
  %128 = load i16, i16* %bw_ref.addr, align 2
  %idxprom142 = sext i16 %128 to i64
  %arrayidx143 = getelementptr inbounds i16**, i16*** %127, i64 %idxprom142
  %129 = load i16**, i16*** %arrayidx143, align 8
  %130 = load i32, i32* %blocktype.addr, align 4
  %idxprom144 = sext i32 %130 to i64
  %arrayidx145 = getelementptr inbounds i16*, i16** %129, i64 %idxprom144
  %131 = load i16*, i16** %arrayidx145, align 8
  %arrayidx146 = getelementptr inbounds i16, i16* %131, i64 1
  %132 = load i16, i16* %arrayidx146, align 2
  %conv147 = sext i16 %132 to i32
  %133 = load i16******, i16******* %p_mv, align 8
  %134 = load i32, i32* %h, align 4
  %idxprom148 = sext i32 %134 to i64
  %arrayidx149 = getelementptr inbounds i16*****, i16****** %133, i64 %idxprom148
  %135 = load i16*****, i16****** %arrayidx149, align 8
  %136 = load i32, i32* %v, align 4
  %idxprom150 = sext i32 %136 to i64
  %arrayidx151 = getelementptr inbounds i16****, i16***** %135, i64 %idxprom150
  %137 = load i16****, i16***** %arrayidx151, align 8
  %arrayidx152 = getelementptr inbounds i16***, i16**** %137, i64 1
  %138 = load i16***, i16**** %arrayidx152, align 8
  %139 = load i16, i16* %bw_ref.addr, align 2
  %idxprom153 = sext i16 %139 to i64
  %arrayidx154 = getelementptr inbounds i16**, i16*** %138, i64 %idxprom153
  %140 = load i16**, i16*** %arrayidx154, align 8
  %141 = load i32, i32* %blocktype.addr, align 4
  %idxprom155 = sext i32 %141 to i64
  %arrayidx156 = getelementptr inbounds i16*, i16** %140, i64 %idxprom155
  %142 = load i16*, i16** %arrayidx156, align 8
  %arrayidx157 = getelementptr inbounds i16, i16* %142, i64 1
  %143 = load i16, i16* %arrayidx157, align 2
  %conv158 = sext i16 %143 to i32
  %sub159 = sub nsw i32 %conv147, %conv158
  %idxprom160 = sext i32 %sub159 to i64
  %arrayidx161 = getelementptr inbounds i32, i32* %121, i64 %idxprom160
  %144 = load i32, i32* %arrayidx161, align 4
  %145 = load i32, i32* %mvd_bits, align 4
  %add162 = add nsw i32 %145, %144
  store i32 %add162, i32* %mvd_bits, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body60
  %146 = load i32, i32* %step_h, align 4
  %147 = load i32, i32* %h, align 4
  %add163 = add nsw i32 %147, %146
  store i32 %add163, i32* %h, align 4
  br label %for.cond53

for.end:                                          ; preds = %for.cond53
  br label %for.inc164

for.inc164:                                       ; preds = %for.end
  %148 = load i32, i32* %step_v, align 4
  %149 = load i32, i32* %v, align 4
  %add165 = add nsw i32 %149, %148
  store i32 %add165, i32* %v, align 4
  br label %for.cond

for.end166:                                       ; preds = %for.cond
  %150 = load i32, i32* %lambda_factor.addr, align 4
  %151 = load i32, i32* %mvd_bits, align 4
  %mul = mul nsw i32 %150, %151
  %shr = ashr i32 %mul, 16
  store i32 %shr, i32* %mcost, align 4
  store i32 0, i32* %byy, align 4
  %152 = load i32, i32* %parttype, align 4
  %idxprom167 = sext i32 %152 to i64
  %arrayidx168 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i64 0, i64 %idxprom167
  %153 = load i32, i32* %block8x8.addr, align 4
  %idxprom169 = sext i32 %153 to i64
  %arrayidx170 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx168, i64 0, i64 %idxprom169
  %154 = load i32, i32* %arrayidx170, align 4
  store i32 %154, i32* %v, align 4
  br label %for.cond171

for.cond171:                                      ; preds = %for.inc240, %for.end166
  %155 = load i32, i32* %v, align 4
  %156 = load i32, i32* %parttype, align 4
  %idxprom172 = sext i32 %156 to i64
  %arrayidx173 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.by0, i64 0, i64 %idxprom172
  %157 = load i32, i32* %block8x8.addr, align 4
  %idxprom174 = sext i32 %157 to i64
  %arrayidx175 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx173, i64 0, i64 %idxprom174
  %158 = load i32, i32* %arrayidx175, align 4
  %159 = load i32, i32* %step_v0, align 4
  %add176 = add nsw i32 %158, %159
  %cmp177 = icmp slt i32 %155, %add176
  br i1 %cmp177, label %for.body179, label %for.end243

for.body179:                                      ; preds = %for.cond171
  %160 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %160, i32 0, i32 38
  %161 = load i32, i32* %opix_y, align 4
  %162 = load i32, i32* %v, align 4
  %shl = shl i32 %162, 2
  store i32 %shl, i32* %block_y, align 4
  %add180 = add nsw i32 %161, %shl
  store i32 %add180, i32* %pic_pix_y, align 4
  store i32 0, i32* %bxx, align 4
  %163 = load i32, i32* %parttype, align 4
  %idxprom181 = sext i32 %163 to i64
  %arrayidx182 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i64 0, i64 %idxprom181
  %164 = load i32, i32* %block8x8.addr, align 4
  %idxprom183 = sext i32 %164 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %165 = load i32, i32* %arrayidx184, align 4
  store i32 %165, i32* %h, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc236, %for.body179
  %166 = load i32, i32* %h, align 4
  %167 = load i32, i32* %parttype, align 4
  %idxprom186 = sext i32 %167 to i64
  %arrayidx187 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @BIDPartitionCost.bx0, i64 0, i64 %idxprom186
  %168 = load i32, i32* %block8x8.addr, align 4
  %idxprom188 = sext i32 %168 to i64
  %arrayidx189 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx187, i64 0, i64 %idxprom188
  %169 = load i32, i32* %arrayidx189, align 4
  %170 = load i32, i32* %step_h0, align 4
  %add190 = add nsw i32 %169, %170
  %cmp191 = icmp slt i32 %166, %add190
  br i1 %cmp191, label %for.body193, label %for.end239

for.body193:                                      ; preds = %for.cond185
  %171 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %171, i32 0, i32 37
  %172 = load i32, i32* %opix_x, align 8
  %173 = load i32, i32* %h, align 4
  %shl194 = shl i32 %173, 2
  store i32 %shl194, i32* %block_x, align 4
  %add195 = add nsw i32 %172, %shl194
  store i32 %add195, i32* %pic_pix_x, align 4
  %174 = load i32, i32* %block_x, align 4
  %175 = load i32, i32* %block_y, align 4
  %176 = load i32, i32* %blocktype.addr, align 4
  %177 = load i32, i32* %blocktype.addr, align 4
  %178 = load i16, i16* %fw_ref.addr, align 2
  %179 = load i16, i16* %bw_ref.addr, align 2
  call void @LumaPrediction4x4(i32 %174, i32 %175, i32 2, i32 %176, i32 %177, i16 signext %178, i16 signext %179)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond196

for.cond196:                                      ; preds = %for.inc230, %for.body193
  %180 = load i32, i32* %j, align 4
  %cmp197 = icmp slt i32 %180, 4
  br i1 %cmp197, label %for.body199, label %for.end232

for.body199:                                      ; preds = %for.cond196
  store i32 0, i32* %i, align 4
  br label %for.cond200

for.cond200:                                      ; preds = %for.inc227, %for.body199
  %181 = load i32, i32* %i, align 4
  %cmp201 = icmp slt i32 %181, 4
  br i1 %cmp201, label %for.body203, label %for.end229

for.body203:                                      ; preds = %for.cond200
  %182 = load i16**, i16*** @imgY_org, align 8
  %183 = load i32, i32* %pic_pix_y, align 4
  %184 = load i32, i32* %j, align 4
  %add204 = add nsw i32 %183, %184
  %idxprom205 = sext i32 %add204 to i64
  %arrayidx206 = getelementptr inbounds i16*, i16** %182, i64 %idxprom205
  %185 = load i16*, i16** %arrayidx206, align 8
  %186 = load i32, i32* %pic_pix_x, align 4
  %187 = load i32, i32* %i, align 4
  %add207 = add nsw i32 %186, %187
  %idxprom208 = sext i32 %add207 to i64
  %arrayidx209 = getelementptr inbounds i16, i16* %185, i64 %idxprom208
  %188 = load i16, i16* %arrayidx209, align 2
  %conv210 = zext i16 %188 to i32
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 45
  %190 = load i32, i32* %i, align 4
  %191 = load i32, i32* %block_x, align 4
  %add211 = add nsw i32 %190, %191
  %idxprom212 = sext i32 %add211 to i64
  %arrayidx213 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i64 0, i64 %idxprom212
  %192 = load i32, i32* %j, align 4
  %193 = load i32, i32* %block_y, align 4
  %add214 = add nsw i32 %192, %193
  %idxprom215 = sext i32 %add214 to i64
  %arrayidx216 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx213, i64 0, i64 %idxprom215
  %194 = load i16, i16* %arrayidx216, align 2
  %conv217 = zext i16 %194 to i32
  %sub218 = sub nsw i32 %conv210, %conv217
  %195 = load i32, i32* %byy, align 4
  %196 = load i32, i32* %j, align 4
  %add219 = add nsw i32 %195, %196
  %idxprom220 = sext i32 %add219 to i64
  %arrayidx221 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %idxprom220
  %197 = load i32, i32* %bxx, align 4
  %198 = load i32, i32* %i, align 4
  %add222 = add nsw i32 %197, %198
  %idxprom223 = sext i32 %add222 to i64
  %arrayidx224 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx221, i64 0, i64 %idxprom223
  store i32 %sub218, i32* %arrayidx224, align 4
  %199 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %199 to i64
  %arrayidx226 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 %idxprom225
  store i32 %sub218, i32* %arrayidx226, align 4
  br label %for.inc227

for.inc227:                                       ; preds = %for.body203
  %200 = load i32, i32* %i, align 4
  %inc = add nsw i32 %200, 1
  store i32 %inc, i32* %i, align 4
  %201 = load i32, i32* %k, align 4
  %inc228 = add nsw i32 %201, 1
  store i32 %inc228, i32* %k, align 4
  br label %for.cond200

for.end229:                                       ; preds = %for.cond200
  br label %for.inc230

for.inc230:                                       ; preds = %for.end229
  %202 = load i32, i32* %j, align 4
  %inc231 = add nsw i32 %202, 1
  store i32 %inc231, i32* %j, align 4
  br label %for.cond196

for.end232:                                       ; preds = %for.cond196
  %203 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %203, i32 0, i32 123
  %204 = load i32, i32* %AllowTransform8x8, align 4
  %tobool = icmp ne i32 %204, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end232
  %205 = load i32, i32* %blocktype.addr, align 4
  %cmp233 = icmp sgt i32 %205, 4
  br i1 %cmp233, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.end232
  %arraydecay = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %206 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %206, i32 0, i32 6
  %207 = load i32, i32* %hadamard, align 8
  %call = call i32 @SATD(i32* %arraydecay, i32 %207)
  %208 = load i32, i32* %mcost, align 4
  %add235 = add nsw i32 %208, %call
  store i32 %add235, i32* %mcost, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc236

for.inc236:                                       ; preds = %if.end
  %209 = load i32, i32* %bxx, align 4
  %add237 = add nsw i32 %209, 4
  store i32 %add237, i32* %bxx, align 4
  %210 = load i32, i32* %h, align 4
  %inc238 = add nsw i32 %210, 1
  store i32 %inc238, i32* %h, align 4
  br label %for.cond185

for.end239:                                       ; preds = %for.cond185
  br label %for.inc240

for.inc240:                                       ; preds = %for.end239
  %211 = load i32, i32* %byy, align 4
  %add241 = add nsw i32 %211, 4
  store i32 %add241, i32* %byy, align 4
  %212 = load i32, i32* %v, align 4
  %inc242 = add nsw i32 %212, 1
  store i32 %inc242, i32* %v, align 4
  br label %for.cond171

for.end243:                                       ; preds = %for.cond171
  %213 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8244 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %213, i32 0, i32 123
  %214 = load i32, i32* %AllowTransform8x8244, align 4
  %tobool245 = icmp ne i32 %214, 0
  br i1 %tobool245, label %land.lhs.true, label %if.end298

land.lhs.true:                                    ; preds = %for.end243
  %215 = load i32, i32* %blocktype.addr, align 4
  %cmp246 = icmp sle i32 %215, 4
  br i1 %cmp246, label %if.then248, label %if.end298

if.then248:                                       ; preds = %land.lhs.true
  store i32 0, i32* %byy, align 4
  br label %for.cond249

for.cond249:                                      ; preds = %for.inc295, %if.then248
  %216 = load i32, i32* %byy, align 4
  %217 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size250 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %217, i32 0, i32 20
  %218 = load i32, i32* %parttype, align 4
  %idxprom251 = sext i32 %218 to i64
  %arrayidx252 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size250, i64 0, i64 %idxprom251
  %arrayidx253 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx252, i64 0, i64 1
  %219 = load i32, i32* %arrayidx253, align 4
  %cmp254 = icmp slt i32 %216, %219
  br i1 %cmp254, label %for.body256, label %for.end297

for.body256:                                      ; preds = %for.cond249
  store i32 0, i32* %bxx, align 4
  br label %for.cond257

for.cond257:                                      ; preds = %for.inc292, %for.body256
  %220 = load i32, i32* %bxx, align 4
  %221 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %blc_size258 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %221, i32 0, i32 20
  %222 = load i32, i32* %parttype, align 4
  %idxprom259 = sext i32 %222 to i64
  %arrayidx260 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %blc_size258, i64 0, i64 %idxprom259
  %arrayidx261 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx260, i64 0, i64 0
  %223 = load i32, i32* %arrayidx261, align 8
  %cmp262 = icmp slt i32 %220, %223
  br i1 %cmp262, label %for.body264, label %for.end294

for.body264:                                      ; preds = %for.cond257
  store i32 0, i32* %k, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond265

for.cond265:                                      ; preds = %for.inc285, %for.body264
  %224 = load i32, i32* %i, align 4
  %cmp266 = icmp slt i32 %224, 8
  br i1 %cmp266, label %for.body268, label %for.end287

for.body268:                                      ; preds = %for.cond265
  store i32 0, i32* %j, align 4
  br label %for.cond269

for.cond269:                                      ; preds = %for.inc282, %for.body268
  %225 = load i32, i32* %j, align 4
  %cmp270 = icmp slt i32 %225, 8
  br i1 %cmp270, label %for.body272, label %for.end284

for.body272:                                      ; preds = %for.cond269
  %226 = load i32, i32* %i, align 4
  %227 = load i32, i32* %byy, align 4
  %add273 = add nsw i32 %226, %227
  %idxprom274 = sext i32 %add273 to i64
  %arrayidx275 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* %curr_blk, i64 0, i64 %idxprom274
  %228 = load i32, i32* %j, align 4
  %229 = load i32, i32* %bxx, align 4
  %add276 = add nsw i32 %228, %229
  %idxprom277 = sext i32 %add276 to i64
  %arrayidx278 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx275, i64 0, i64 %idxprom277
  %230 = load i32, i32* %arrayidx278, align 4
  %231 = load i32, i32* %k, align 4
  %inc279 = add nsw i32 %231, 1
  store i32 %inc279, i32* %k, align 4
  %idxprom280 = sext i32 %231 to i64
  %arrayidx281 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 %idxprom280
  store i32 %230, i32* %arrayidx281, align 4
  br label %for.inc282

for.inc282:                                       ; preds = %for.body272
  %232 = load i32, i32* %j, align 4
  %inc283 = add nsw i32 %232, 1
  store i32 %inc283, i32* %j, align 4
  br label %for.cond269

for.end284:                                       ; preds = %for.cond269
  br label %for.inc285

for.inc285:                                       ; preds = %for.end284
  %233 = load i32, i32* %i, align 4
  %inc286 = add nsw i32 %233, 1
  store i32 %inc286, i32* %i, align 4
  br label %for.cond265

for.end287:                                       ; preds = %for.cond265
  %arraydecay288 = getelementptr inbounds [64 x i32], [64 x i32]* %diff, i64 0, i64 0
  %234 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard289 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %234, i32 0, i32 6
  %235 = load i32, i32* %hadamard289, align 8
  %call290 = call i32 @SATD8X8(i32* %arraydecay288, i32 %235)
  %236 = load i32, i32* %mcost, align 4
  %add291 = add nsw i32 %236, %call290
  store i32 %add291, i32* %mcost, align 4
  br label %for.inc292

for.inc292:                                       ; preds = %for.end287
  %237 = load i32, i32* %bsx, align 4
  %238 = load i32, i32* %bxx, align 4
  %add293 = add nsw i32 %238, %237
  store i32 %add293, i32* %bxx, align 4
  br label %for.cond257

for.end294:                                       ; preds = %for.cond257
  br label %for.inc295

for.inc295:                                       ; preds = %for.end294
  %239 = load i32, i32* %bsy, align 4
  %240 = load i32, i32* %byy, align 4
  %add296 = add nsw i32 %240, %239
  store i32 %add296, i32* %byy, align 4
  br label %for.cond249

for.end297:                                       ; preds = %for.cond249
  br label %if.end298

if.end298:                                        ; preds = %for.end297, %land.lhs.true, %for.end243
  %241 = load i32, i32* %mcost, align 4
  ret i32 %241
}

declare dso_local void @LumaPrediction4x4(i32, i32, i32, i32, i32, i16 signext, i16 signext) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @FindSkipModeMotionVector() #0 {
entry:
  %bx = alloca i32, align 4
  %by = alloca i32, align 4
  %all_mv = alloca i16******, align 8
  %pmv = alloca [2 x i16], align 2
  %zeroMotionAbove = alloca i32, align 4
  %zeroMotionLeft = alloca i32, align 4
  %mb_a = alloca %struct.pix_pos, align 4
  %mb_b = alloca %struct.pix_pos, align 4
  %a_mv_y = alloca i32, align 4
  %a_ref_idx = alloca i32, align 4
  %b_mv_y = alloca i32, align 4
  %b_ref_idx = alloca i32, align 4
  %currMB = alloca %struct.macroblock*, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 71
  %1 = load i16******, i16******* %all_mv1, align 8
  store i16****** %1, i16******* %all_mv, align 8
  store i32 0, i32* %a_mv_y, align 4
  store i32 0, i32* %a_ref_idx, align 4
  store i32 0, i32* %b_mv_y, align 4
  store i32 0, i32* %b_ref_idx, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 3
  %7 = load i32, i32* %current_mb_nr2, align 4
  call void @getLuma4x4Neighbour(i32 %7, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_a)
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 3
  %9 = load i32, i32* %current_mb_nr3, align 4
  call void @getLuma4x4Neighbour(i32 %9, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_b)
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 0
  %10 = load i32, i32* %available, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.then, label %if.end37

if.then:                                          ; preds = %entry
  %11 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %11, i32 0, i32 35
  %12 = load i16****, i16***** %mv, align 8
  %arrayidx4 = getelementptr inbounds i16***, i16**** %12, i64 0
  %13 = load i16***, i16**** %arrayidx4, align 8
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 4
  %14 = load i32, i32* %pos_x, align 4
  %idxprom5 = sext i32 %14 to i64
  %arrayidx6 = getelementptr inbounds i16**, i16*** %13, i64 %idxprom5
  %15 = load i16**, i16*** %arrayidx6, align 8
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 5
  %16 = load i32, i32* %pos_y, align 4
  %idxprom7 = sext i32 %16 to i64
  %arrayidx8 = getelementptr inbounds i16*, i16** %15, i64 %idxprom7
  %17 = load i16*, i16** %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds i16, i16* %17, i64 1
  %18 = load i16, i16* %arrayidx9, align 2
  %conv = sext i16 %18 to i32
  store i32 %conv, i32* %a_mv_y, align 4
  %19 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %19, i32 0, i32 32
  %20 = load i16***, i16**** %ref_idx, align 8
  %arrayidx10 = getelementptr inbounds i16**, i16*** %20, i64 0
  %21 = load i16**, i16*** %arrayidx10, align 8
  %pos_x11 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 4
  %22 = load i32, i32* %pos_x11, align 4
  %idxprom12 = sext i32 %22 to i64
  %arrayidx13 = getelementptr inbounds i16*, i16** %21, i64 %idxprom12
  %23 = load i16*, i16** %arrayidx13, align 8
  %pos_y14 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 5
  %24 = load i32, i32* %pos_y14, align 4
  %idxprom15 = sext i32 %24 to i64
  %arrayidx16 = getelementptr inbounds i16, i16* %23, i64 %idxprom15
  %25 = load i16, i16* %arrayidx16, align 2
  %conv17 = sext i16 %25 to i32
  store i32 %conv17, i32* %a_ref_idx, align 4
  %26 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %26, i32 0, i32 22
  %27 = load i32, i32* %mb_field, align 4
  %tobool18 = icmp ne i32 %27, 0
  br i1 %tobool18, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %if.then
  %28 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %28, i32 0, i32 51
  %29 = load %struct.macroblock*, %struct.macroblock** %mb_data19, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 1
  %30 = load i32, i32* %mb_addr, align 4
  %idxprom20 = sext i32 %30 to i64
  %arrayidx21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %29, i64 %idxprom20
  %mb_field22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx21, i32 0, i32 22
  %31 = load i32, i32* %mb_field22, align 4
  %tobool23 = icmp ne i32 %31, 0
  br i1 %tobool23, label %if.end, label %if.then24

if.then24:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %a_mv_y, align 4
  %div = sdiv i32 %32, 2
  store i32 %div, i32* %a_mv_y, align 4
  %33 = load i32, i32* %a_ref_idx, align 4
  %mul = mul nsw i32 %33, 2
  store i32 %mul, i32* %a_ref_idx, align 4
  br label %if.end

if.end:                                           ; preds = %if.then24, %land.lhs.true, %if.then
  %34 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %34, i32 0, i32 22
  %35 = load i32, i32* %mb_field25, align 4
  %tobool26 = icmp ne i32 %35, 0
  br i1 %tobool26, label %if.end36, label %land.lhs.true27

land.lhs.true27:                                  ; preds = %if.end
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data28 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 51
  %37 = load %struct.macroblock*, %struct.macroblock** %mb_data28, align 8
  %mb_addr29 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 1
  %38 = load i32, i32* %mb_addr29, align 4
  %idxprom30 = sext i32 %38 to i64
  %arrayidx31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %37, i64 %idxprom30
  %mb_field32 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx31, i32 0, i32 22
  %39 = load i32, i32* %mb_field32, align 4
  %tobool33 = icmp ne i32 %39, 0
  br i1 %tobool33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %land.lhs.true27
  %40 = load i32, i32* %a_mv_y, align 4
  %mul35 = mul nsw i32 %40, 2
  store i32 %mul35, i32* %a_mv_y, align 4
  %41 = load i32, i32* %a_ref_idx, align 4
  %shr = ashr i32 %41, 1
  store i32 %shr, i32* %a_ref_idx, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %land.lhs.true27, %if.end
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %entry
  %available38 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 0
  %42 = load i32, i32* %available38, align 4
  %tobool39 = icmp ne i32 %42, 0
  br i1 %tobool39, label %if.then40, label %if.end86

if.then40:                                        ; preds = %if.end37
  %43 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv41 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %43, i32 0, i32 35
  %44 = load i16****, i16***** %mv41, align 8
  %arrayidx42 = getelementptr inbounds i16***, i16**** %44, i64 0
  %45 = load i16***, i16**** %arrayidx42, align 8
  %pos_x43 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 4
  %46 = load i32, i32* %pos_x43, align 4
  %idxprom44 = sext i32 %46 to i64
  %arrayidx45 = getelementptr inbounds i16**, i16*** %45, i64 %idxprom44
  %47 = load i16**, i16*** %arrayidx45, align 8
  %pos_y46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 5
  %48 = load i32, i32* %pos_y46, align 4
  %idxprom47 = sext i32 %48 to i64
  %arrayidx48 = getelementptr inbounds i16*, i16** %47, i64 %idxprom47
  %49 = load i16*, i16** %arrayidx48, align 8
  %arrayidx49 = getelementptr inbounds i16, i16* %49, i64 1
  %50 = load i16, i16* %arrayidx49, align 2
  %conv50 = sext i16 %50 to i32
  store i32 %conv50, i32* %b_mv_y, align 4
  %51 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx51 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %51, i32 0, i32 32
  %52 = load i16***, i16**** %ref_idx51, align 8
  %arrayidx52 = getelementptr inbounds i16**, i16*** %52, i64 0
  %53 = load i16**, i16*** %arrayidx52, align 8
  %pos_x53 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 4
  %54 = load i32, i32* %pos_x53, align 4
  %idxprom54 = sext i32 %54 to i64
  %arrayidx55 = getelementptr inbounds i16*, i16** %53, i64 %idxprom54
  %55 = load i16*, i16** %arrayidx55, align 8
  %pos_y56 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 5
  %56 = load i32, i32* %pos_y56, align 4
  %idxprom57 = sext i32 %56 to i64
  %arrayidx58 = getelementptr inbounds i16, i16* %55, i64 %idxprom57
  %57 = load i16, i16* %arrayidx58, align 2
  %conv59 = sext i16 %57 to i32
  store i32 %conv59, i32* %b_ref_idx, align 4
  %58 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %58, i32 0, i32 22
  %59 = load i32, i32* %mb_field60, align 4
  %tobool61 = icmp ne i32 %59, 0
  br i1 %tobool61, label %land.lhs.true62, label %if.end72

land.lhs.true62:                                  ; preds = %if.then40
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data63 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 51
  %61 = load %struct.macroblock*, %struct.macroblock** %mb_data63, align 8
  %mb_addr64 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 1
  %62 = load i32, i32* %mb_addr64, align 4
  %idxprom65 = sext i32 %62 to i64
  %arrayidx66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %61, i64 %idxprom65
  %mb_field67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx66, i32 0, i32 22
  %63 = load i32, i32* %mb_field67, align 4
  %tobool68 = icmp ne i32 %63, 0
  br i1 %tobool68, label %if.end72, label %if.then69

if.then69:                                        ; preds = %land.lhs.true62
  %64 = load i32, i32* %b_mv_y, align 4
  %div70 = sdiv i32 %64, 2
  store i32 %div70, i32* %b_mv_y, align 4
  %65 = load i32, i32* %b_ref_idx, align 4
  %mul71 = mul nsw i32 %65, 2
  store i32 %mul71, i32* %b_ref_idx, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then69, %land.lhs.true62, %if.then40
  %66 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %66, i32 0, i32 22
  %67 = load i32, i32* %mb_field73, align 4
  %tobool74 = icmp ne i32 %67, 0
  br i1 %tobool74, label %if.end85, label %land.lhs.true75

land.lhs.true75:                                  ; preds = %if.end72
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data76 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 51
  %69 = load %struct.macroblock*, %struct.macroblock** %mb_data76, align 8
  %mb_addr77 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 1
  %70 = load i32, i32* %mb_addr77, align 4
  %idxprom78 = sext i32 %70 to i64
  %arrayidx79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %69, i64 %idxprom78
  %mb_field80 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx79, i32 0, i32 22
  %71 = load i32, i32* %mb_field80, align 4
  %tobool81 = icmp ne i32 %71, 0
  br i1 %tobool81, label %if.then82, label %if.end85

if.then82:                                        ; preds = %land.lhs.true75
  %72 = load i32, i32* %b_mv_y, align 4
  %mul83 = mul nsw i32 %72, 2
  store i32 %mul83, i32* %b_mv_y, align 4
  %73 = load i32, i32* %b_ref_idx, align 4
  %shr84 = ashr i32 %73, 1
  store i32 %shr84, i32* %b_ref_idx, align 4
  br label %if.end85

if.end85:                                         ; preds = %if.then82, %land.lhs.true75, %if.end72
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end37
  %available87 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 0
  %74 = load i32, i32* %available87, align 4
  %tobool88 = icmp ne i32 %74, 0
  br i1 %tobool88, label %cond.false, label %cond.true

cond.true:                                        ; preds = %if.end86
  br label %cond.end

cond.false:                                       ; preds = %if.end86
  %75 = load i32, i32* %a_ref_idx, align 4
  %cmp = icmp eq i32 %75, 0
  br i1 %cmp, label %land.lhs.true90, label %land.end

land.lhs.true90:                                  ; preds = %cond.false
  %76 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv91 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %76, i32 0, i32 35
  %77 = load i16****, i16***** %mv91, align 8
  %arrayidx92 = getelementptr inbounds i16***, i16**** %77, i64 0
  %78 = load i16***, i16**** %arrayidx92, align 8
  %pos_x93 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 4
  %79 = load i32, i32* %pos_x93, align 4
  %idxprom94 = sext i32 %79 to i64
  %arrayidx95 = getelementptr inbounds i16**, i16*** %78, i64 %idxprom94
  %80 = load i16**, i16*** %arrayidx95, align 8
  %pos_y96 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_a, i32 0, i32 5
  %81 = load i32, i32* %pos_y96, align 4
  %idxprom97 = sext i32 %81 to i64
  %arrayidx98 = getelementptr inbounds i16*, i16** %80, i64 %idxprom97
  %82 = load i16*, i16** %arrayidx98, align 8
  %arrayidx99 = getelementptr inbounds i16, i16* %82, i64 0
  %83 = load i16, i16* %arrayidx99, align 2
  %conv100 = sext i16 %83 to i32
  %cmp101 = icmp eq i32 %conv100, 0
  br i1 %cmp101, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true90
  %84 = load i32, i32* %a_mv_y, align 4
  %cmp103 = icmp eq i32 %84, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true90, %cond.false
  %85 = phi i1 [ false, %land.lhs.true90 ], [ false, %cond.false ], [ %cmp103, %land.rhs ]
  %86 = zext i1 %85 to i64
  %cond = select i1 %85, i32 1, i32 0
  br label %cond.end

cond.end:                                         ; preds = %land.end, %cond.true
  %cond105 = phi i32 [ 1, %cond.true ], [ %cond, %land.end ]
  store i32 %cond105, i32* %zeroMotionLeft, align 4
  %available106 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 0
  %87 = load i32, i32* %available106, align 4
  %tobool107 = icmp ne i32 %87, 0
  br i1 %tobool107, label %cond.false109, label %cond.true108

cond.true108:                                     ; preds = %cond.end
  br label %cond.end130

cond.false109:                                    ; preds = %cond.end
  %88 = load i32, i32* %b_ref_idx, align 4
  %cmp110 = icmp eq i32 %88, 0
  br i1 %cmp110, label %land.lhs.true112, label %land.end128

land.lhs.true112:                                 ; preds = %cond.false109
  %89 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv113 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %89, i32 0, i32 35
  %90 = load i16****, i16***** %mv113, align 8
  %arrayidx114 = getelementptr inbounds i16***, i16**** %90, i64 0
  %91 = load i16***, i16**** %arrayidx114, align 8
  %pos_x115 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 4
  %92 = load i32, i32* %pos_x115, align 4
  %idxprom116 = sext i32 %92 to i64
  %arrayidx117 = getelementptr inbounds i16**, i16*** %91, i64 %idxprom116
  %93 = load i16**, i16*** %arrayidx117, align 8
  %pos_y118 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_b, i32 0, i32 5
  %94 = load i32, i32* %pos_y118, align 4
  %idxprom119 = sext i32 %94 to i64
  %arrayidx120 = getelementptr inbounds i16*, i16** %93, i64 %idxprom119
  %95 = load i16*, i16** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds i16, i16* %95, i64 0
  %96 = load i16, i16* %arrayidx121, align 2
  %conv122 = sext i16 %96 to i32
  %cmp123 = icmp eq i32 %conv122, 0
  br i1 %cmp123, label %land.rhs125, label %land.end128

land.rhs125:                                      ; preds = %land.lhs.true112
  %97 = load i32, i32* %b_mv_y, align 4
  %cmp126 = icmp eq i32 %97, 0
  br label %land.end128

land.end128:                                      ; preds = %land.rhs125, %land.lhs.true112, %cond.false109
  %98 = phi i1 [ false, %land.lhs.true112 ], [ false, %cond.false109 ], [ %cmp126, %land.rhs125 ]
  %99 = zext i1 %98 to i64
  %cond129 = select i1 %98, i32 1, i32 0
  br label %cond.end130

cond.end130:                                      ; preds = %land.end128, %cond.true108
  %cond131 = phi i32 [ 1, %cond.true108 ], [ %cond129, %land.end128 ]
  store i32 %cond131, i32* %zeroMotionAbove, align 4
  %100 = load i32, i32* %zeroMotionAbove, align 4
  %tobool132 = icmp ne i32 %100, 0
  br i1 %tobool132, label %if.then134, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.end130
  %101 = load i32, i32* %zeroMotionLeft, align 4
  %tobool133 = icmp ne i32 %101, 0
  br i1 %tobool133, label %if.then134, label %if.else

if.then134:                                       ; preds = %lor.lhs.false, %cond.end130
  store i32 0, i32* %by, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc157, %if.then134
  %102 = load i32, i32* %by, align 4
  %cmp135 = icmp slt i32 %102, 4
  br i1 %cmp135, label %for.body, label %for.end159

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %bx, align 4
  br label %for.cond137

for.cond137:                                      ; preds = %for.inc, %for.body
  %103 = load i32, i32* %bx, align 4
  %cmp138 = icmp slt i32 %103, 4
  br i1 %cmp138, label %for.body140, label %for.end

for.body140:                                      ; preds = %for.cond137
  %104 = load i16******, i16******* %all_mv, align 8
  %105 = load i32, i32* %bx, align 4
  %idxprom141 = sext i32 %105 to i64
  %arrayidx142 = getelementptr inbounds i16*****, i16****** %104, i64 %idxprom141
  %106 = load i16*****, i16****** %arrayidx142, align 8
  %107 = load i32, i32* %by, align 4
  %idxprom143 = sext i32 %107 to i64
  %arrayidx144 = getelementptr inbounds i16****, i16***** %106, i64 %idxprom143
  %108 = load i16****, i16***** %arrayidx144, align 8
  %arrayidx145 = getelementptr inbounds i16***, i16**** %108, i64 0
  %109 = load i16***, i16**** %arrayidx145, align 8
  %arrayidx146 = getelementptr inbounds i16**, i16*** %109, i64 0
  %110 = load i16**, i16*** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds i16*, i16** %110, i64 0
  %111 = load i16*, i16** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i16, i16* %111, i64 0
  store i16 0, i16* %arrayidx148, align 2
  %112 = load i16******, i16******* %all_mv, align 8
  %113 = load i32, i32* %bx, align 4
  %idxprom149 = sext i32 %113 to i64
  %arrayidx150 = getelementptr inbounds i16*****, i16****** %112, i64 %idxprom149
  %114 = load i16*****, i16****** %arrayidx150, align 8
  %115 = load i32, i32* %by, align 4
  %idxprom151 = sext i32 %115 to i64
  %arrayidx152 = getelementptr inbounds i16****, i16***** %114, i64 %idxprom151
  %116 = load i16****, i16***** %arrayidx152, align 8
  %arrayidx153 = getelementptr inbounds i16***, i16**** %116, i64 0
  %117 = load i16***, i16**** %arrayidx153, align 8
  %arrayidx154 = getelementptr inbounds i16**, i16*** %117, i64 0
  %118 = load i16**, i16*** %arrayidx154, align 8
  %arrayidx155 = getelementptr inbounds i16*, i16** %118, i64 0
  %119 = load i16*, i16** %arrayidx155, align 8
  %arrayidx156 = getelementptr inbounds i16, i16* %119, i64 1
  store i16 0, i16* %arrayidx156, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body140
  %120 = load i32, i32* %bx, align 4
  %inc = add nsw i32 %120, 1
  store i32 %inc, i32* %bx, align 4
  br label %for.cond137

for.end:                                          ; preds = %for.cond137
  br label %for.inc157

for.inc157:                                       ; preds = %for.end
  %121 = load i32, i32* %by, align 4
  %inc158 = add nsw i32 %121, 1
  store i32 %inc158, i32* %by, align 4
  br label %for.cond

for.end159:                                       ; preds = %for.cond
  br label %if.end194

if.else:                                          ; preds = %lor.lhs.false
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 0
  %122 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx160 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %122, i32 0, i32 32
  %123 = load i16***, i16**** %ref_idx160, align 8
  %124 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv161 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %124, i32 0, i32 35
  %125 = load i16****, i16***** %mv161, align 8
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %123, i16**** %125, i16 signext 0, i32 0, i32 0, i32 0, i32 16, i32 16)
  store i32 0, i32* %by, align 4
  br label %for.cond162

for.cond162:                                      ; preds = %for.inc191, %if.else
  %126 = load i32, i32* %by, align 4
  %cmp163 = icmp slt i32 %126, 4
  br i1 %cmp163, label %for.body165, label %for.end193

for.body165:                                      ; preds = %for.cond162
  store i32 0, i32* %bx, align 4
  br label %for.cond166

for.cond166:                                      ; preds = %for.inc188, %for.body165
  %127 = load i32, i32* %bx, align 4
  %cmp167 = icmp slt i32 %127, 4
  br i1 %cmp167, label %for.body169, label %for.end190

for.body169:                                      ; preds = %for.cond166
  %arrayidx170 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 0
  %128 = load i16, i16* %arrayidx170, align 2
  %129 = load i16******, i16******* %all_mv, align 8
  %130 = load i32, i32* %bx, align 4
  %idxprom171 = sext i32 %130 to i64
  %arrayidx172 = getelementptr inbounds i16*****, i16****** %129, i64 %idxprom171
  %131 = load i16*****, i16****** %arrayidx172, align 8
  %132 = load i32, i32* %by, align 4
  %idxprom173 = sext i32 %132 to i64
  %arrayidx174 = getelementptr inbounds i16****, i16***** %131, i64 %idxprom173
  %133 = load i16****, i16***** %arrayidx174, align 8
  %arrayidx175 = getelementptr inbounds i16***, i16**** %133, i64 0
  %134 = load i16***, i16**** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds i16**, i16*** %134, i64 0
  %135 = load i16**, i16*** %arrayidx176, align 8
  %arrayidx177 = getelementptr inbounds i16*, i16** %135, i64 0
  %136 = load i16*, i16** %arrayidx177, align 8
  %arrayidx178 = getelementptr inbounds i16, i16* %136, i64 0
  store i16 %128, i16* %arrayidx178, align 2
  %arrayidx179 = getelementptr inbounds [2 x i16], [2 x i16]* %pmv, i64 0, i64 1
  %137 = load i16, i16* %arrayidx179, align 2
  %138 = load i16******, i16******* %all_mv, align 8
  %139 = load i32, i32* %bx, align 4
  %idxprom180 = sext i32 %139 to i64
  %arrayidx181 = getelementptr inbounds i16*****, i16****** %138, i64 %idxprom180
  %140 = load i16*****, i16****** %arrayidx181, align 8
  %141 = load i32, i32* %by, align 4
  %idxprom182 = sext i32 %141 to i64
  %arrayidx183 = getelementptr inbounds i16****, i16***** %140, i64 %idxprom182
  %142 = load i16****, i16***** %arrayidx183, align 8
  %arrayidx184 = getelementptr inbounds i16***, i16**** %142, i64 0
  %143 = load i16***, i16**** %arrayidx184, align 8
  %arrayidx185 = getelementptr inbounds i16**, i16*** %143, i64 0
  %144 = load i16**, i16*** %arrayidx185, align 8
  %arrayidx186 = getelementptr inbounds i16*, i16** %144, i64 0
  %145 = load i16*, i16** %arrayidx186, align 8
  %arrayidx187 = getelementptr inbounds i16, i16* %145, i64 1
  store i16 %137, i16* %arrayidx187, align 2
  br label %for.inc188

for.inc188:                                       ; preds = %for.body169
  %146 = load i32, i32* %bx, align 4
  %inc189 = add nsw i32 %146, 1
  store i32 %inc189, i32* %bx, align 4
  br label %for.cond166

for.end190:                                       ; preds = %for.cond166
  br label %for.inc191

for.inc191:                                       ; preds = %for.end190
  %147 = load i32, i32* %by, align 4
  %inc192 = add nsw i32 %147, 1
  store i32 %inc192, i32* %by, align 4
  br label %for.cond162

for.end193:                                       ; preds = %for.cond162
  br label %if.end194

if.end194:                                        ; preds = %for.end193, %for.end159
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Get_Direct_Cost8x8(i32 %block, i32* %cost8x8) #0 {
entry:
  %retval = alloca i32, align 4
  %block.addr = alloca i32, align 4
  %cost8x8.addr = alloca i32*, align 8
  %block_y = alloca i32, align 4
  %block_x = alloca i32, align 4
  %pic_pix_y = alloca i32, align 4
  %pic_pix_x = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %curr_diff = alloca [8 x [8 x i32]], align 16
  %diff8x8 = alloca [64 x i32], align 16
  %diff = alloca [16 x i32], align 16
  %cost = alloca i32, align 4
  %mb_y = alloca i32, align 4
  %mb_x = alloca i32, align 4
  store i32 %block, i32* %block.addr, align 4
  store i32* %cost8x8, i32** %cost8x8.addr, align 8
  store i32 0, i32* %cost, align 4
  %0 = load i32, i32* %block.addr, align 4
  %div = sdiv i32 %0, 2
  %shl = shl i32 %div, 3
  store i32 %shl, i32* %mb_y, align 4
  %1 = load i32, i32* %block.addr, align 4
  %rem = srem i32 %1, 2
  %shl1 = shl i32 %rem, 3
  store i32 %shl1, i32* %mb_x, align 4
  %2 = load i32, i32* %mb_y, align 4
  store i32 %2, i32* %block_y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc74, %entry
  %3 = load i32, i32* %block_y, align 4
  %4 = load i32, i32* %mb_y, align 4
  %add = add nsw i32 %4, 8
  %cmp = icmp slt i32 %3, %add
  br i1 %cmp, label %for.body, label %for.end76

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 38
  %6 = load i32, i32* %opix_y, align 4
  %7 = load i32, i32* %block_y, align 4
  %add2 = add nsw i32 %6, %7
  store i32 %add2, i32* %pic_pix_y, align 4
  %8 = load i32, i32* %mb_x, align 4
  store i32 %8, i32* %block_x, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc71, %for.body
  %9 = load i32, i32* %block_x, align 4
  %10 = load i32, i32* %mb_x, align 4
  %add4 = add nsw i32 %10, 8
  %cmp5 = icmp slt i32 %9, %add4
  br i1 %cmp5, label %for.body6, label %for.end73

for.body6:                                        ; preds = %for.cond3
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 37
  %12 = load i32, i32* %opix_x, align 8
  %13 = load i32, i32* %block_x, align 4
  %add7 = add nsw i32 %12, %13
  store i32 %add7, i32* %pic_pix_x, align 4
  %14 = load i16**, i16*** @direct_pdir, align 8
  %15 = load i32, i32* %pic_pix_x, align 4
  %shr = ashr i32 %15, 2
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i16*, i16** %14, i64 %idxprom
  %16 = load i16*, i16** %arrayidx, align 8
  %17 = load i32, i32* %pic_pix_y, align 4
  %shr8 = ashr i32 %17, 2
  %idxprom9 = sext i32 %shr8 to i64
  %arrayidx10 = getelementptr inbounds i16, i16* %16, i64 %idxprom9
  %18 = load i16, i16* %arrayidx10, align 2
  %conv = sext i16 %18 to i32
  %cmp11 = icmp slt i32 %conv, 0
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %for.body6
  %19 = load i32*, i32** %cost8x8.addr, align 8
  store i32 2147483647, i32* %19, align 4
  store i32 2147483647, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %for.body6
  %20 = load i32, i32* %block_x, align 4
  %21 = load i32, i32* %block_y, align 4
  %22 = load i16**, i16*** @direct_pdir, align 8
  %23 = load i32, i32* %pic_pix_x, align 4
  %shr13 = ashr i32 %23, 2
  %idxprom14 = sext i32 %shr13 to i64
  %arrayidx15 = getelementptr inbounds i16*, i16** %22, i64 %idxprom14
  %24 = load i16*, i16** %arrayidx15, align 8
  %25 = load i32, i32* %pic_pix_y, align 4
  %shr16 = ashr i32 %25, 2
  %idxprom17 = sext i32 %shr16 to i64
  %arrayidx18 = getelementptr inbounds i16, i16* %24, i64 %idxprom17
  %26 = load i16, i16* %arrayidx18, align 2
  %conv19 = sext i16 %26 to i32
  %27 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx20 = getelementptr inbounds i16**, i16*** %27, i64 0
  %28 = load i16**, i16*** %arrayidx20, align 8
  %29 = load i32, i32* %pic_pix_x, align 4
  %shr21 = ashr i32 %29, 2
  %idxprom22 = sext i32 %shr21 to i64
  %arrayidx23 = getelementptr inbounds i16*, i16** %28, i64 %idxprom22
  %30 = load i16*, i16** %arrayidx23, align 8
  %31 = load i32, i32* %pic_pix_y, align 4
  %shr24 = ashr i32 %31, 2
  %idxprom25 = sext i32 %shr24 to i64
  %arrayidx26 = getelementptr inbounds i16, i16* %30, i64 %idxprom25
  %32 = load i16, i16* %arrayidx26, align 2
  %33 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx27 = getelementptr inbounds i16**, i16*** %33, i64 1
  %34 = load i16**, i16*** %arrayidx27, align 8
  %35 = load i32, i32* %pic_pix_x, align 4
  %shr28 = ashr i32 %35, 2
  %idxprom29 = sext i32 %shr28 to i64
  %arrayidx30 = getelementptr inbounds i16*, i16** %34, i64 %idxprom29
  %36 = load i16*, i16** %arrayidx30, align 8
  %37 = load i32, i32* %pic_pix_y, align 4
  %shr31 = ashr i32 %37, 2
  %idxprom32 = sext i32 %shr31 to i64
  %arrayidx33 = getelementptr inbounds i16, i16* %36, i64 %idxprom32
  %38 = load i16, i16* %arrayidx33, align 2
  call void @LumaPrediction4x4(i32 %20, i32 %21, i32 %conv19, i32 0, i32 0, i16 signext %32, i16 signext %38)
  store i32 0, i32* %j, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc67, %if.end
  %39 = load i32, i32* %j, align 4
  %cmp35 = icmp slt i32 %39, 4
  br i1 %cmp35, label %for.body37, label %for.end69

for.body37:                                       ; preds = %for.cond34
  store i32 0, i32* %i, align 4
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc, %for.body37
  %40 = load i32, i32* %i, align 4
  %cmp39 = icmp slt i32 %40, 4
  br i1 %cmp39, label %for.body41, label %for.end

for.body41:                                       ; preds = %for.cond38
  %41 = load i16**, i16*** @imgY_org, align 8
  %42 = load i32, i32* %pic_pix_y, align 4
  %43 = load i32, i32* %j, align 4
  %add42 = add nsw i32 %42, %43
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds i16*, i16** %41, i64 %idxprom43
  %44 = load i16*, i16** %arrayidx44, align 8
  %45 = load i32, i32* %pic_pix_x, align 4
  %46 = load i32, i32* %i, align 4
  %add45 = add nsw i32 %45, %46
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds i16, i16* %44, i64 %idxprom46
  %47 = load i16, i16* %arrayidx47, align 2
  %conv48 = zext i16 %47 to i32
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mpr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 45
  %49 = load i32, i32* %i, align 4
  %50 = load i32, i32* %block_x, align 4
  %add49 = add nsw i32 %49, %50
  %idxprom50 = sext i32 %add49 to i64
  %arrayidx51 = getelementptr inbounds [16 x [16 x i16]], [16 x [16 x i16]]* %mpr, i64 0, i64 %idxprom50
  %51 = load i32, i32* %j, align 4
  %52 = load i32, i32* %block_y, align 4
  %add52 = add nsw i32 %51, %52
  %idxprom53 = sext i32 %add52 to i64
  %arrayidx54 = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx51, i64 0, i64 %idxprom53
  %53 = load i16, i16* %arrayidx54, align 2
  %conv55 = zext i16 %53 to i32
  %sub = sub nsw i32 %conv48, %conv55
  %54 = load i32, i32* %block_y, align 4
  %55 = load i32, i32* %mb_y, align 4
  %sub56 = sub nsw i32 %54, %55
  %56 = load i32, i32* %j, align 4
  %add57 = add nsw i32 %sub56, %56
  %idxprom58 = sext i32 %add57 to i64
  %arrayidx59 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %idxprom58
  %57 = load i32, i32* %block_x, align 4
  %58 = load i32, i32* %mb_x, align 4
  %sub60 = sub nsw i32 %57, %58
  %59 = load i32, i32* %i, align 4
  %add61 = add nsw i32 %sub60, %59
  %idxprom62 = sext i32 %add61 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx59, i64 0, i64 %idxprom62
  store i32 %sub, i32* %arrayidx63, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %60 to i64
  %arrayidx65 = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 %idxprom64
  store i32 %sub, i32* %arrayidx65, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body41
  %61 = load i32, i32* %i, align 4
  %inc = add nsw i32 %61, 1
  store i32 %inc, i32* %i, align 4
  %62 = load i32, i32* %k, align 4
  %inc66 = add nsw i32 %62, 1
  store i32 %inc66, i32* %k, align 4
  br label %for.cond38

for.end:                                          ; preds = %for.cond38
  br label %for.inc67

for.inc67:                                        ; preds = %for.end
  %63 = load i32, i32* %j, align 4
  %inc68 = add nsw i32 %63, 1
  store i32 %inc68, i32* %j, align 4
  br label %for.cond34

for.end69:                                        ; preds = %for.cond34
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %diff, i64 0, i64 0
  %64 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %64, i32 0, i32 6
  %65 = load i32, i32* %hadamard, align 8
  %call = call i32 @SATD(i32* %arraydecay, i32 %65)
  %66 = load i32, i32* %cost, align 4
  %add70 = add nsw i32 %66, %call
  store i32 %add70, i32* %cost, align 4
  br label %for.inc71

for.inc71:                                        ; preds = %for.end69
  %67 = load i32, i32* %block_x, align 4
  %add72 = add nsw i32 %67, 4
  store i32 %add72, i32* %block_x, align 4
  br label %for.cond3

for.end73:                                        ; preds = %for.cond3
  br label %for.inc74

for.inc74:                                        ; preds = %for.end73
  %68 = load i32, i32* %block_y, align 4
  %add75 = add nsw i32 %68, 4
  store i32 %add75, i32* %block_y, align 4
  br label %for.cond

for.end76:                                        ; preds = %for.cond
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %rdopt = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 85
  %70 = load i32, i32* %rdopt, align 8
  %cmp77 = icmp eq i32 %70, 0
  br i1 %cmp77, label %land.lhs.true, label %if.end105

land.lhs.true:                                    ; preds = %for.end76
  %71 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %71, i32 0, i32 123
  %72 = load i32, i32* %AllowTransform8x8, align 4
  %tobool = icmp ne i32 %72, 0
  br i1 %tobool, label %if.then79, label %if.end105

if.then79:                                        ; preds = %land.lhs.true
  store i32 0, i32* %k, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc98, %if.then79
  %73 = load i32, i32* %j, align 4
  %cmp81 = icmp slt i32 %73, 8
  br i1 %cmp81, label %for.body83, label %for.end100

for.body83:                                       ; preds = %for.cond80
  store i32 0, i32* %i, align 4
  br label %for.cond84

for.cond84:                                       ; preds = %for.inc94, %for.body83
  %74 = load i32, i32* %i, align 4
  %cmp85 = icmp slt i32 %74, 8
  br i1 %cmp85, label %for.body87, label %for.end97

for.body87:                                       ; preds = %for.cond84
  %75 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %75 to i64
  %arrayidx89 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %curr_diff, i64 0, i64 %idxprom88
  %76 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %76 to i64
  %arrayidx91 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  %77 = load i32, i32* %arrayidx91, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %78 to i64
  %arrayidx93 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 %idxprom92
  store i32 %77, i32* %arrayidx93, align 4
  br label %for.inc94

for.inc94:                                        ; preds = %for.body87
  %79 = load i32, i32* %i, align 4
  %inc95 = add nsw i32 %79, 1
  store i32 %inc95, i32* %i, align 4
  %80 = load i32, i32* %k, align 4
  %inc96 = add nsw i32 %80, 1
  store i32 %inc96, i32* %k, align 4
  br label %for.cond84

for.end97:                                        ; preds = %for.cond84
  br label %for.inc98

for.inc98:                                        ; preds = %for.end97
  %81 = load i32, i32* %j, align 4
  %inc99 = add nsw i32 %81, 1
  store i32 %inc99, i32* %j, align 4
  br label %for.cond80

for.end100:                                       ; preds = %for.cond80
  %arraydecay101 = getelementptr inbounds [64 x i32], [64 x i32]* %diff8x8, i64 0, i64 0
  %82 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %hadamard102 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %82, i32 0, i32 6
  %83 = load i32, i32* %hadamard102, align 8
  %call103 = call i32 @SATD8X8(i32* %arraydecay101, i32 %83)
  %84 = load i32*, i32** %cost8x8.addr, align 8
  %85 = load i32, i32* %84, align 4
  %add104 = add nsw i32 %85, %call103
  store i32 %add104, i32* %84, align 4
  br label %if.end105

if.end105:                                        ; preds = %for.end100, %land.lhs.true, %for.end76
  %86 = load i32, i32* %cost, align 4
  store i32 %86, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end105, %if.then
  %87 = load i32, i32* %retval, align 4
  ret i32 %87
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Get_Direct_CostMB(double %lambda) #0 {
entry:
  %retval = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %i = alloca i32, align 4
  %cost = alloca i32, align 4
  %cost8x8 = alloca i32, align 4
  store double %lambda, double* %lambda.addr, align 8
  store i32 0, i32* %cost, align 4
  store i32 0, i32* %cost8x8, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4
  %call = call i32 @Get_Direct_Cost8x8(i32 %1, i32* %cost8x8)
  %2 = load i32, i32* %cost, align 4
  %add = add nsw i32 %2, %call
  store i32 %add, i32* %cost, align 4
  %3 = load i32, i32* %cost, align 4
  %cmp1 = icmp eq i32 %3, 2147483647
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %4 = load i32, i32* %cost8x8, align 4
  %cmp2 = icmp eq i32 %4, 2147483647
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %5 = load i32, i32* %cost, align 4
  store i32 %5, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %AllowTransform8x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 123
  %8 = load i32, i32* %AllowTransform8x8, align 4
  switch i32 %8, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb10
  ]

sw.bb:                                            ; preds = %for.end
  %9 = load i32, i32* %cost8x8, align 4
  %10 = load i32, i32* %cost, align 4
  %cmp3 = icmp slt i32 %9, %10
  br i1 %cmp3, label %if.then8, label %lor.lhs.false4

lor.lhs.false4:                                   ; preds = %sw.bb
  %11 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %InterSearch8x4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %11, i32 0, i32 66
  %12 = load i32, i32* %InterSearch8x4, align 8
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %land.lhs.true, label %if.then8

land.lhs.true:                                    ; preds = %lor.lhs.false4
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %InterSearch4x8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 67
  %14 = load i32, i32* %InterSearch4x8, align 4
  %tobool5 = icmp ne i32 %14, 0
  br i1 %tobool5, label %land.lhs.true6, label %if.then8

land.lhs.true6:                                   ; preds = %land.lhs.true
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %InterSearch4x4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 68
  %16 = load i32, i32* %InterSearch4x4, align 8
  %tobool7 = icmp ne i32 %16, 0
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %land.lhs.true6, %land.lhs.true, %lor.lhs.false4, %sw.bb
  %17 = load i32, i32* %cost8x8, align 4
  store i32 %17, i32* %cost, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %land.lhs.true6
  br label %sw.epilog

sw.bb10:                                          ; preds = %for.end
  %18 = load i32, i32* %cost8x8, align 4
  store i32 %18, i32* %cost, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %for.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %if.end9
  %19 = load i32, i32* %cost, align 4
  store i32 %19, i32* %retval, align 4
  br label %return

return:                                           ; preds = %sw.epilog, %if.then
  %20 = load i32, i32* %retval, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PartitionMotionSearch(i32 %blocktype, i32 %block8x8, double %lambda) #0 {
entry:
  %blocktype.addr = alloca i32, align 4
  %block8x8.addr = alloca i32, align 4
  %lambda.addr = alloca double, align 8
  %ref_array = alloca i16**, align 8
  %mv_array = alloca i16***, align 8
  %ref = alloca i16, align 2
  %v = alloca i32, align 4
  %h = alloca i32, align 4
  %mcost = alloca i32, align 4
  %search_range = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %pic_block_x = alloca i32, align 4
  %pic_block_y = alloca i32, align 4
  %bslice = alloca i32, align 4
  %parttype = alloca i32, align 4
  %step_h0 = alloca i32, align 4
  %step_v0 = alloca i32, align 4
  %step_h = alloca i32, align 4
  %step_v = alloca i32, align 4
  %list = alloca i32, align 4
  %numlists = alloca i32, align 4
  %list_offset = alloca i32, align 4
  store i32 %blocktype, i32* %blocktype.addr, align 4
  store i32 %block8x8, i32* %block8x8.addr, align 4
  store double %lambda, double* %lambda.addr, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 1
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %bslice, align 4
  %2 = load i32, i32* %blocktype.addr, align 4
  %cmp1 = icmp slt i32 %2, 4
  br i1 %cmp1, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 4, %cond.false ]
  store i32 %cond, i32* %parttype, align 4
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 21
  %5 = load i32, i32* %parttype, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size, i64 0, i64 %idxprom
  %arrayidx3 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx, i64 0, i64 0
  %6 = load i32, i32* %arrayidx3, align 8
  store i32 %6, i32* %step_h0, align 4
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size4 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 21
  %8 = load i32, i32* %parttype, align 4
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size4, i64 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx6, i64 0, i64 1
  %9 = load i32, i32* %arrayidx7, align 4
  store i32 %9, i32* %step_v0, align 4
  %10 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size8 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %10, i32 0, i32 21
  %11 = load i32, i32* %blocktype.addr, align 4
  %idxprom9 = sext i32 %11 to i64
  %arrayidx10 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size8, i64 0, i64 %idxprom9
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx10, i64 0, i64 0
  %12 = load i32, i32* %arrayidx11, align 8
  store i32 %12, i32* %step_h, align 4
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %part_size12 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 21
  %14 = load i32, i32* %blocktype.addr, align 4
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr inbounds [8 x [2 x i32]], [8 x [2 x i32]]* %part_size12, i64 0, i64 %idxprom13
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx14, i64 0, i64 1
  %15 = load i32, i32* %arrayidx15, align 4
  store i32 %15, i32* %step_v, align 4
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 51
  %17 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 3
  %19 = load i32, i32* %current_mb_nr, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %17, i64 %idxprom16
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx17, i32 0, i32 22
  %20 = load i32, i32* %mb_field, align 4
  %tobool = icmp ne i32 %20, 0
  br i1 %tobool, label %if.then, label %if.else21

if.then:                                          ; preds = %cond.end
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 3
  %22 = load i32, i32* %current_mb_nr18, align 4
  %rem = srem i32 %22, 2
  %tobool19 = icmp ne i32 %rem, 0
  br i1 %tobool19, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.then
  store i32 4, i32* %list_offset, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  store i32 2, i32* %list_offset, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then20
  br label %if.end22

if.else21:                                        ; preds = %cond.end
  store i32 0, i32* %list_offset, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.end
  %23 = load i32, i32* %bslice, align 4
  %tobool23 = icmp ne i32 %23, 0
  %24 = zext i1 %tobool23 to i64
  %cond24 = select i1 %tobool23, i32 2, i32 1
  store i32 %cond24, i32* %numlists, align 4
  store i32 0, i32* %list, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc186, %if.end22
  %25 = load i32, i32* %list, align 4
  %26 = load i32, i32* %numlists, align 4
  %cmp25 = icmp slt i32 %25, %26
  br i1 %cmp25, label %for.body, label %for.end188

for.body:                                         ; preds = %for.cond
  store i16 0, i16* %ref, align 2
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc183, %for.body
  %27 = load i16, i16* %ref, align 2
  %conv28 = sext i16 %27 to i32
  %28 = load i32, i32* %list, align 4
  %29 = load i32, i32* %list_offset, align 4
  %add = add nsw i32 %28, %29
  %idxprom29 = sext i32 %add to i64
  %arrayidx30 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i64 0, i64 %idxprom29
  %30 = load i32, i32* %arrayidx30, align 4
  %cmp31 = icmp slt i32 %conv28, %30
  br i1 %cmp31, label %for.body33, label %for.end185

for.body33:                                       ; preds = %for.cond27
  %31 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %full_search = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %31, i32 0, i32 78
  %32 = load i32, i32* %full_search, align 4
  %cmp34 = icmp eq i32 %32, 2
  br i1 %cmp34, label %if.then36, label %if.else38

if.then36:                                        ; preds = %for.body33
  %33 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range37 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %33, i32 0, i32 8
  %34 = load i32, i32* %search_range37, align 8
  store i32 %34, i32* %search_range, align 4
  br label %if.end72

if.else38:                                        ; preds = %for.body33
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %full_search39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 78
  %36 = load i32, i32* %full_search39, align 4
  %cmp40 = icmp eq i32 %36, 1
  br i1 %cmp40, label %if.then42, label %if.else53

if.then42:                                        ; preds = %if.else38
  %37 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %37, i32 0, i32 8
  %38 = load i32, i32* %search_range43, align 8
  %39 = load i16, i16* %ref, align 2
  %conv44 = sext i16 %39 to i32
  %cmp45 = icmp slt i32 %conv44, 1
  br i1 %cmp45, label %cond.true47, label %cond.false49

cond.true47:                                      ; preds = %if.then42
  %40 = load i16, i16* %ref, align 2
  %conv48 = sext i16 %40 to i32
  br label %cond.end50

cond.false49:                                     ; preds = %if.then42
  br label %cond.end50

cond.end50:                                       ; preds = %cond.false49, %cond.true47
  %cond51 = phi i32 [ %conv48, %cond.true47 ], [ 1, %cond.false49 ]
  %add52 = add nsw i32 %cond51, 1
  %div = sdiv i32 %38, %add52
  store i32 %div, i32* %search_range, align 4
  br label %if.end71

if.else53:                                        ; preds = %if.else38
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %search_range54 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 8
  %42 = load i32, i32* %search_range54, align 8
  %43 = load i16, i16* %ref, align 2
  %conv55 = sext i16 %43 to i32
  %cmp56 = icmp slt i32 %conv55, 1
  br i1 %cmp56, label %cond.true58, label %cond.false60

cond.true58:                                      ; preds = %if.else53
  %44 = load i16, i16* %ref, align 2
  %conv59 = sext i16 %44 to i32
  br label %cond.end61

cond.false60:                                     ; preds = %if.else53
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false60, %cond.true58
  %cond62 = phi i32 [ %conv59, %cond.true58 ], [ 1, %cond.false60 ]
  %add63 = add nsw i32 %cond62, 1
  %45 = load i32, i32* %blocktype.addr, align 4
  %cmp64 = icmp slt i32 2, %45
  br i1 %cmp64, label %cond.true66, label %cond.false67

cond.true66:                                      ; preds = %cond.end61
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end61
  %46 = load i32, i32* %blocktype.addr, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true66
  %cond69 = phi i32 [ 2, %cond.true66 ], [ %46, %cond.false67 ]
  %mul = mul nsw i32 %add63, %cond69
  %div70 = sdiv i32 %42, %mul
  store i32 %div70, i32* %search_range, align 4
  br label %if.end71

if.end71:                                         ; preds = %cond.end68, %cond.end50
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then36
  %47 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %47, i32 0, i32 32
  %48 = load i16***, i16**** %ref_idx, align 8
  %49 = load i32, i32* %list, align 4
  %idxprom73 = sext i32 %49 to i64
  %arrayidx74 = getelementptr inbounds i16**, i16*** %48, i64 %idxprom73
  %50 = load i16**, i16*** %arrayidx74, align 8
  store i16** %50, i16*** %ref_array, align 8
  %51 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %51, i32 0, i32 35
  %52 = load i16****, i16***** %mv, align 8
  %53 = load i32, i32* %list, align 4
  %idxprom75 = sext i32 %53 to i64
  %arrayidx76 = getelementptr inbounds i16***, i16**** %52, i64 %idxprom75
  %54 = load i16***, i16**** %arrayidx76, align 8
  store i16*** %54, i16**** %mv_array, align 8
  %55 = load i32****, i32***** @motion_cost, align 8
  %56 = load i32, i32* %blocktype.addr, align 4
  %idxprom77 = sext i32 %56 to i64
  %arrayidx78 = getelementptr inbounds i32***, i32**** %55, i64 %idxprom77
  %57 = load i32***, i32**** %arrayidx78, align 8
  %58 = load i32, i32* %list, align 4
  %idxprom79 = sext i32 %58 to i64
  %arrayidx80 = getelementptr inbounds i32**, i32*** %57, i64 %idxprom79
  %59 = load i32**, i32*** %arrayidx80, align 8
  %60 = load i16, i16* %ref, align 2
  %idxprom81 = sext i16 %60 to i64
  %arrayidx82 = getelementptr inbounds i32*, i32** %59, i64 %idxprom81
  %61 = load i32*, i32** %arrayidx82, align 8
  %62 = load i32, i32* %block8x8.addr, align 4
  %idxprom83 = sext i32 %62 to i64
  %arrayidx84 = getelementptr inbounds i32, i32* %61, i64 %idxprom83
  store i32 0, i32* %arrayidx84, align 4
  %63 = load i32, i32* %parttype, align 4
  %idxprom85 = sext i32 %63 to i64
  %arrayidx86 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i64 0, i64 %idxprom85
  %64 = load i32, i32* %block8x8.addr, align 4
  %idxprom87 = sext i32 %64 to i64
  %arrayidx88 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx86, i64 0, i64 %idxprom87
  %65 = load i32, i32* %arrayidx88, align 4
  store i32 %65, i32* %v, align 4
  br label %for.cond89

for.cond89:                                       ; preds = %for.inc180, %if.end72
  %66 = load i32, i32* %v, align 4
  %67 = load i32, i32* %parttype, align 4
  %idxprom90 = sext i32 %67 to i64
  %arrayidx91 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.by0, i64 0, i64 %idxprom90
  %68 = load i32, i32* %block8x8.addr, align 4
  %idxprom92 = sext i32 %68 to i64
  %arrayidx93 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx91, i64 0, i64 %idxprom92
  %69 = load i32, i32* %arrayidx93, align 4
  %70 = load i32, i32* %step_v0, align 4
  %add94 = add nsw i32 %69, %70
  %cmp95 = icmp slt i32 %66, %add94
  br i1 %cmp95, label %for.body97, label %for.end182

for.body97:                                       ; preds = %for.cond89
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 32
  %72 = load i32, i32* %block_y, align 4
  %73 = load i32, i32* %v, align 4
  %add98 = add nsw i32 %72, %73
  store i32 %add98, i32* %pic_block_y, align 4
  %74 = load i32, i32* %parttype, align 4
  %idxprom99 = sext i32 %74 to i64
  %arrayidx100 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i64 0, i64 %idxprom99
  %75 = load i32, i32* %block8x8.addr, align 4
  %idxprom101 = sext i32 %75 to i64
  %arrayidx102 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx100, i64 0, i64 %idxprom101
  %76 = load i32, i32* %arrayidx102, align 4
  store i32 %76, i32* %h, align 4
  br label %for.cond103

for.cond103:                                      ; preds = %for.inc177, %for.body97
  %77 = load i32, i32* %h, align 4
  %78 = load i32, i32* %parttype, align 4
  %idxprom104 = sext i32 %78 to i64
  %arrayidx105 = getelementptr inbounds [5 x [4 x i32]], [5 x [4 x i32]]* @PartitionMotionSearch.bx0, i64 0, i64 %idxprom104
  %79 = load i32, i32* %block8x8.addr, align 4
  %idxprom106 = sext i32 %79 to i64
  %arrayidx107 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx105, i64 0, i64 %idxprom106
  %80 = load i32, i32* %arrayidx107, align 4
  %81 = load i32, i32* %step_h0, align 4
  %add108 = add nsw i32 %80, %81
  %cmp109 = icmp slt i32 %77, %add108
  br i1 %cmp109, label %for.body111, label %for.end179

for.body111:                                      ; preds = %for.cond103
  %82 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %block_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %82, i32 0, i32 31
  %83 = load i32, i32* %block_x, align 8
  %84 = load i32, i32* %h, align 4
  %add112 = add nsw i32 %83, %84
  store i32 %add112, i32* %pic_block_x, align 4
  %85 = load i16, i16* %ref, align 2
  %86 = load i32, i32* %list, align 4
  %87 = load i32, i32* %h, align 4
  %shl = shl i32 %87, 2
  %88 = load i32, i32* %v, align 4
  %shl113 = shl i32 %88, 2
  %89 = load i32, i32* %blocktype.addr, align 4
  %90 = load i32, i32* %search_range, align 4
  %91 = load double, double* %lambda.addr, align 8
  %call = call i32 @BlockMotionSearch(i16 signext %85, i32 %86, i32 %shl, i32 %shl113, i32 %89, i32 %90, double %91)
  store i32 %call, i32* %mcost, align 4
  %92 = load i32, i32* %mcost, align 4
  %93 = load i32****, i32***** @motion_cost, align 8
  %94 = load i32, i32* %blocktype.addr, align 4
  %idxprom114 = sext i32 %94 to i64
  %arrayidx115 = getelementptr inbounds i32***, i32**** %93, i64 %idxprom114
  %95 = load i32***, i32**** %arrayidx115, align 8
  %96 = load i32, i32* %list, align 4
  %idxprom116 = sext i32 %96 to i64
  %arrayidx117 = getelementptr inbounds i32**, i32*** %95, i64 %idxprom116
  %97 = load i32**, i32*** %arrayidx117, align 8
  %98 = load i16, i16* %ref, align 2
  %idxprom118 = sext i16 %98 to i64
  %arrayidx119 = getelementptr inbounds i32*, i32** %97, i64 %idxprom118
  %99 = load i32*, i32** %arrayidx119, align 8
  %100 = load i32, i32* %block8x8.addr, align 4
  %idxprom120 = sext i32 %100 to i64
  %arrayidx121 = getelementptr inbounds i32, i32* %99, i64 %idxprom120
  %101 = load i32, i32* %arrayidx121, align 4
  %add122 = add nsw i32 %101, %92
  store i32 %add122, i32* %arrayidx121, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond123

for.cond123:                                      ; preds = %for.inc174, %for.body111
  %102 = load i32, i32* %j, align 4
  %103 = load i32, i32* %step_v, align 4
  %cmp124 = icmp slt i32 %102, %103
  br i1 %cmp124, label %for.body126, label %for.end176

for.body126:                                      ; preds = %for.cond123
  store i32 0, i32* %i, align 4
  br label %for.cond127

for.cond127:                                      ; preds = %for.inc, %for.body126
  %104 = load i32, i32* %i, align 4
  %105 = load i32, i32* %step_h, align 4
  %cmp128 = icmp slt i32 %104, %105
  br i1 %cmp128, label %for.body130, label %for.end

for.body130:                                      ; preds = %for.cond127
  %106 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %106, i32 0, i32 71
  %107 = load i16******, i16******* %all_mv, align 8
  %108 = load i32, i32* %h, align 4
  %idxprom131 = sext i32 %108 to i64
  %arrayidx132 = getelementptr inbounds i16*****, i16****** %107, i64 %idxprom131
  %109 = load i16*****, i16****** %arrayidx132, align 8
  %110 = load i32, i32* %v, align 4
  %idxprom133 = sext i32 %110 to i64
  %arrayidx134 = getelementptr inbounds i16****, i16***** %109, i64 %idxprom133
  %111 = load i16****, i16***** %arrayidx134, align 8
  %112 = load i32, i32* %list, align 4
  %idxprom135 = sext i32 %112 to i64
  %arrayidx136 = getelementptr inbounds i16***, i16**** %111, i64 %idxprom135
  %113 = load i16***, i16**** %arrayidx136, align 8
  %114 = load i16, i16* %ref, align 2
  %idxprom137 = sext i16 %114 to i64
  %arrayidx138 = getelementptr inbounds i16**, i16*** %113, i64 %idxprom137
  %115 = load i16**, i16*** %arrayidx138, align 8
  %116 = load i32, i32* %blocktype.addr, align 4
  %idxprom139 = sext i32 %116 to i64
  %arrayidx140 = getelementptr inbounds i16*, i16** %115, i64 %idxprom139
  %117 = load i16*, i16** %arrayidx140, align 8
  %arrayidx141 = getelementptr inbounds i16, i16* %117, i64 0
  %118 = load i16, i16* %arrayidx141, align 2
  %119 = load i16***, i16**** %mv_array, align 8
  %120 = load i32, i32* %pic_block_x, align 4
  %121 = load i32, i32* %i, align 4
  %add142 = add nsw i32 %120, %121
  %idxprom143 = sext i32 %add142 to i64
  %arrayidx144 = getelementptr inbounds i16**, i16*** %119, i64 %idxprom143
  %122 = load i16**, i16*** %arrayidx144, align 8
  %123 = load i32, i32* %pic_block_y, align 4
  %124 = load i32, i32* %j, align 4
  %add145 = add nsw i32 %123, %124
  %idxprom146 = sext i32 %add145 to i64
  %arrayidx147 = getelementptr inbounds i16*, i16** %122, i64 %idxprom146
  %125 = load i16*, i16** %arrayidx147, align 8
  %arrayidx148 = getelementptr inbounds i16, i16* %125, i64 0
  store i16 %118, i16* %arrayidx148, align 2
  %126 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv149 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %126, i32 0, i32 71
  %127 = load i16******, i16******* %all_mv149, align 8
  %128 = load i32, i32* %h, align 4
  %idxprom150 = sext i32 %128 to i64
  %arrayidx151 = getelementptr inbounds i16*****, i16****** %127, i64 %idxprom150
  %129 = load i16*****, i16****** %arrayidx151, align 8
  %130 = load i32, i32* %v, align 4
  %idxprom152 = sext i32 %130 to i64
  %arrayidx153 = getelementptr inbounds i16****, i16***** %129, i64 %idxprom152
  %131 = load i16****, i16***** %arrayidx153, align 8
  %132 = load i32, i32* %list, align 4
  %idxprom154 = sext i32 %132 to i64
  %arrayidx155 = getelementptr inbounds i16***, i16**** %131, i64 %idxprom154
  %133 = load i16***, i16**** %arrayidx155, align 8
  %134 = load i16, i16* %ref, align 2
  %idxprom156 = sext i16 %134 to i64
  %arrayidx157 = getelementptr inbounds i16**, i16*** %133, i64 %idxprom156
  %135 = load i16**, i16*** %arrayidx157, align 8
  %136 = load i32, i32* %blocktype.addr, align 4
  %idxprom158 = sext i32 %136 to i64
  %arrayidx159 = getelementptr inbounds i16*, i16** %135, i64 %idxprom158
  %137 = load i16*, i16** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds i16, i16* %137, i64 1
  %138 = load i16, i16* %arrayidx160, align 2
  %139 = load i16***, i16**** %mv_array, align 8
  %140 = load i32, i32* %pic_block_x, align 4
  %141 = load i32, i32* %i, align 4
  %add161 = add nsw i32 %140, %141
  %idxprom162 = sext i32 %add161 to i64
  %arrayidx163 = getelementptr inbounds i16**, i16*** %139, i64 %idxprom162
  %142 = load i16**, i16*** %arrayidx163, align 8
  %143 = load i32, i32* %pic_block_y, align 4
  %144 = load i32, i32* %j, align 4
  %add164 = add nsw i32 %143, %144
  %idxprom165 = sext i32 %add164 to i64
  %arrayidx166 = getelementptr inbounds i16*, i16** %142, i64 %idxprom165
  %145 = load i16*, i16** %arrayidx166, align 8
  %arrayidx167 = getelementptr inbounds i16, i16* %145, i64 1
  store i16 %138, i16* %arrayidx167, align 2
  %146 = load i16, i16* %ref, align 2
  %147 = load i16**, i16*** %ref_array, align 8
  %148 = load i32, i32* %pic_block_x, align 4
  %149 = load i32, i32* %i, align 4
  %add168 = add nsw i32 %148, %149
  %idxprom169 = sext i32 %add168 to i64
  %arrayidx170 = getelementptr inbounds i16*, i16** %147, i64 %idxprom169
  %150 = load i16*, i16** %arrayidx170, align 8
  %151 = load i32, i32* %pic_block_y, align 4
  %152 = load i32, i32* %j, align 4
  %add171 = add nsw i32 %151, %152
  %idxprom172 = sext i32 %add171 to i64
  %arrayidx173 = getelementptr inbounds i16, i16* %150, i64 %idxprom172
  store i16 %146, i16* %arrayidx173, align 2
  br label %for.inc

for.inc:                                          ; preds = %for.body130
  %153 = load i32, i32* %i, align 4
  %inc = add nsw i32 %153, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond127

for.end:                                          ; preds = %for.cond127
  br label %for.inc174

for.inc174:                                       ; preds = %for.end
  %154 = load i32, i32* %j, align 4
  %inc175 = add nsw i32 %154, 1
  store i32 %inc175, i32* %j, align 4
  br label %for.cond123

for.end176:                                       ; preds = %for.cond123
  br label %for.inc177

for.inc177:                                       ; preds = %for.end176
  %155 = load i32, i32* %step_h, align 4
  %156 = load i32, i32* %h, align 4
  %add178 = add nsw i32 %156, %155
  store i32 %add178, i32* %h, align 4
  br label %for.cond103

for.end179:                                       ; preds = %for.cond103
  br label %for.inc180

for.inc180:                                       ; preds = %for.end179
  %157 = load i32, i32* %step_v, align 4
  %158 = load i32, i32* %v, align 4
  %add181 = add nsw i32 %158, %157
  store i32 %add181, i32* %v, align 4
  br label %for.cond89

for.end182:                                       ; preds = %for.cond89
  br label %for.inc183

for.inc183:                                       ; preds = %for.end182
  %159 = load i16, i16* %ref, align 2
  %inc184 = add i16 %159, 1
  store i16 %inc184, i16* %ref, align 2
  br label %for.cond27

for.end185:                                       ; preds = %for.cond27
  br label %for.inc186

for.inc186:                                       ; preds = %for.end185
  %160 = load i32, i32* %list, align 4
  %inc187 = add nsw i32 %160, 1
  store i32 %inc187, i32* %list, align 4
  br label %for.cond

for.end188:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Get_Direct_Motion_Vectors() #0 {
entry:
  %block_x = alloca i32, align 4
  %block_y = alloca i32, align 4
  %pic_block_x = alloca i32, align 4
  %pic_block_y = alloca i32, align 4
  %opic_block_x = alloca i32, align 4
  %opic_block_y = alloca i32, align 4
  %all_mvs = alloca i16******, align 8
  %mv_scale = alloca i32, align 4
  %moving_block = alloca i8**, align 8
  %co_located_mv = alloca i16****, align 8
  %co_located_ref_idx = alloca i16***, align 8
  %co_located_ref_id = alloca i64***, align 8
  %currMB = alloca %struct.macroblock*, align 8
  %fw_rFrameL = alloca i16, align 2
  %fw_rFrameU = alloca i16, align 2
  %fw_rFrameUL = alloca i16, align 2
  %fw_rFrameUR = alloca i16, align 2
  %bw_rFrameL = alloca i16, align 2
  %bw_rFrameU = alloca i16, align 2
  %bw_rFrameUL = alloca i16, align 2
  %bw_rFrameUR = alloca i16, align 2
  %fw_rFrame = alloca i16, align 2
  %bw_rFrame = alloca i16, align 2
  %pmvfw = alloca [2 x i16], align 2
  %pmvbw = alloca [2 x i16], align 2
  %mb_left = alloca %struct.pix_pos, align 4
  %mb_up = alloca %struct.pix_pos, align 4
  %mb_upleft = alloca %struct.pix_pos, align 4
  %mb_upright = alloca %struct.pix_pos, align 4
  %refList = alloca i32, align 4
  %ref_idx1308 = alloca i32, align 4
  %list_offset = alloca i32, align 4
  %mapped_idx = alloca i32, align 4
  %iref = alloca i32, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %all_mv = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 71
  %1 = load i16******, i16******* %all_mv, align 8
  store i16****** %1, i16******* %all_mvs, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 51
  %3 = load %struct.macroblock*, %struct.macroblock** %mb_data, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 3
  %5 = load i32, i32* %current_mb_nr, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %struct.macroblock, %struct.macroblock* %3, i64 %idxprom
  store %struct.macroblock* %arrayidx, %struct.macroblock** %currMB, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 90
  %7 = load i32, i32* %MbaffFrameFlag, align 8
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %land.lhs.true, label %if.else5

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field = getelementptr inbounds %struct.macroblock, %struct.macroblock* %8, i32 0, i32 22
  %9 = load i32, i32* %mb_field, align 4
  %tobool1 = icmp ne i32 %9, 0
  br i1 %tobool1, label %if.then, label %if.else5

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 3
  %11 = load i32, i32* %current_mb_nr2, align 4
  %rem = srem i32 %11, 2
  %tobool3 = icmp ne i32 %rem, 0
  br i1 %tobool3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %12 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_moving_block = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %12, i32 0, i32 17
  %13 = load i8**, i8*** %bottom_moving_block, align 8
  store i8** %13, i8*** %moving_block, align 8
  %14 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %14, i32 0, i32 16
  %15 = load i16****, i16***** %bottom_mv, align 8
  store i16**** %15, i16***** %co_located_mv, align 8
  %16 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %16, i32 0, i32 14
  %17 = load i16***, i16**** %bottom_ref_idx, align 8
  store i16*** %17, i16**** %co_located_ref_idx, align 8
  %18 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %bottom_ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %18, i32 0, i32 15
  %19 = load i64***, i64**** %bottom_ref_pic_id, align 8
  store i64*** %19, i64**** %co_located_ref_id, align 8
  br label %if.end

if.else:                                          ; preds = %if.then
  %20 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_moving_block = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %20, i32 0, i32 12
  %21 = load i8**, i8*** %top_moving_block, align 8
  store i8** %21, i8*** %moving_block, align 8
  %22 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %22, i32 0, i32 11
  %23 = load i16****, i16***** %top_mv, align 8
  store i16**** %23, i16***** %co_located_mv, align 8
  %24 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %24, i32 0, i32 9
  %25 = load i16***, i16**** %top_ref_idx, align 8
  store i16*** %25, i16**** %co_located_ref_idx, align 8
  %26 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %top_ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %26, i32 0, i32 10
  %27 = load i64***, i64**** %top_ref_pic_id, align 8
  store i64*** %27, i64**** %co_located_ref_id, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end7

if.else5:                                         ; preds = %land.lhs.true, %entry
  %28 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %moving_block6 = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %28, i32 0, i32 7
  %29 = load i8**, i8*** %moving_block6, align 8
  store i8** %29, i8*** %moving_block, align 8
  %30 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %mv = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %30, i32 0, i32 6
  %31 = load i16****, i16***** %mv, align 8
  store i16**** %31, i16***** %co_located_mv, align 8
  %32 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %ref_idx = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %32, i32 0, i32 4
  %33 = load i16***, i16**** %ref_idx, align 8
  store i16*** %33, i16**** %co_located_ref_idx, align 8
  %34 = load %struct.colocated_params*, %struct.colocated_params** @Co_located, align 8
  %ref_pic_id = getelementptr inbounds %struct.colocated_params, %struct.colocated_params* %34, i32 0, i32 5
  %35 = load i64***, i64**** %ref_pic_id, align 8
  store i64*** %35, i64**** %co_located_ref_id, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.else5, %if.end
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %direct_spatial_mv_pred_flag = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 78
  %37 = load i32, i32* %direct_spatial_mv_pred_flag, align 4
  %tobool8 = icmp ne i32 %37, 0
  br i1 %tobool8, label %if.then9, label %if.else1293

if.then9:                                         ; preds = %if.end7
  %38 = bitcast [2 x i16]* %pmvfw to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %38, i8 0, i64 4, i1 false)
  %39 = bitcast [2 x i16]* %pmvbw to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %39, i8 0, i64 4, i1 false)
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 3
  %41 = load i32, i32* %current_mb_nr10, align 4
  call void @getLuma4x4Neighbour(i32 %41, i32 0, i32 0, i32 -1, i32 0, %struct.pix_pos* %mb_left)
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr11 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 3
  %43 = load i32, i32* %current_mb_nr11, align 4
  call void @getLuma4x4Neighbour(i32 %43, i32 0, i32 0, i32 0, i32 -1, %struct.pix_pos* %mb_up)
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 3
  %45 = load i32, i32* %current_mb_nr12, align 4
  call void @getLuma4x4Neighbour(i32 %45, i32 0, i32 0, i32 16, i32 -1, %struct.pix_pos* %mb_upright)
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr13 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 3
  %47 = load i32, i32* %current_mb_nr13, align 4
  call void @getLuma4x4Neighbour(i32 %47, i32 0, i32 0, i32 -1, i32 -1, %struct.pix_pos* %mb_upleft)
  %48 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %48, i32 0, i32 90
  %49 = load i32, i32* %MbaffFrameFlag14, align 8
  %tobool15 = icmp ne i32 %49, 0
  br i1 %tobool15, label %if.else139, label %if.then16

if.then16:                                        ; preds = %if.then9
  %available = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %50 = load i32, i32* %available, align 4
  %tobool17 = icmp ne i32 %50, 0
  br i1 %tobool17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then16
  %51 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx18 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %51, i32 0, i32 32
  %52 = load i16***, i16**** %ref_idx18, align 8
  %arrayidx19 = getelementptr inbounds i16**, i16*** %52, i64 0
  %53 = load i16**, i16*** %arrayidx19, align 8
  %pos_x = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %54 = load i32, i32* %pos_x, align 4
  %idxprom20 = sext i32 %54 to i64
  %arrayidx21 = getelementptr inbounds i16*, i16** %53, i64 %idxprom20
  %55 = load i16*, i16** %arrayidx21, align 8
  %pos_y = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %56 = load i32, i32* %pos_y, align 4
  %idxprom22 = sext i32 %56 to i64
  %arrayidx23 = getelementptr inbounds i16, i16* %55, i64 %idxprom22
  %57 = load i16, i16* %arrayidx23, align 2
  %conv = sext i16 %57 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.then16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ -1, %cond.false ]
  %conv24 = trunc i32 %cond to i16
  store i16 %conv24, i16* %fw_rFrameL, align 2
  %available25 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %58 = load i32, i32* %available25, align 4
  %tobool26 = icmp ne i32 %58, 0
  br i1 %tobool26, label %cond.true27, label %cond.false37

cond.true27:                                      ; preds = %cond.end
  %59 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx28 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %59, i32 0, i32 32
  %60 = load i16***, i16**** %ref_idx28, align 8
  %arrayidx29 = getelementptr inbounds i16**, i16*** %60, i64 0
  %61 = load i16**, i16*** %arrayidx29, align 8
  %pos_x30 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %62 = load i32, i32* %pos_x30, align 4
  %idxprom31 = sext i32 %62 to i64
  %arrayidx32 = getelementptr inbounds i16*, i16** %61, i64 %idxprom31
  %63 = load i16*, i16** %arrayidx32, align 8
  %pos_y33 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %64 = load i32, i32* %pos_y33, align 4
  %idxprom34 = sext i32 %64 to i64
  %arrayidx35 = getelementptr inbounds i16, i16* %63, i64 %idxprom34
  %65 = load i16, i16* %arrayidx35, align 2
  %conv36 = sext i16 %65 to i32
  br label %cond.end38

cond.false37:                                     ; preds = %cond.end
  br label %cond.end38

cond.end38:                                       ; preds = %cond.false37, %cond.true27
  %cond39 = phi i32 [ %conv36, %cond.true27 ], [ -1, %cond.false37 ]
  %conv40 = trunc i32 %cond39 to i16
  store i16 %conv40, i16* %fw_rFrameU, align 2
  %available41 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %66 = load i32, i32* %available41, align 4
  %tobool42 = icmp ne i32 %66, 0
  br i1 %tobool42, label %cond.true43, label %cond.false53

cond.true43:                                      ; preds = %cond.end38
  %67 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx44 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %67, i32 0, i32 32
  %68 = load i16***, i16**** %ref_idx44, align 8
  %arrayidx45 = getelementptr inbounds i16**, i16*** %68, i64 0
  %69 = load i16**, i16*** %arrayidx45, align 8
  %pos_x46 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %70 = load i32, i32* %pos_x46, align 4
  %idxprom47 = sext i32 %70 to i64
  %arrayidx48 = getelementptr inbounds i16*, i16** %69, i64 %idxprom47
  %71 = load i16*, i16** %arrayidx48, align 8
  %pos_y49 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %72 = load i32, i32* %pos_y49, align 4
  %idxprom50 = sext i32 %72 to i64
  %arrayidx51 = getelementptr inbounds i16, i16* %71, i64 %idxprom50
  %73 = load i16, i16* %arrayidx51, align 2
  %conv52 = sext i16 %73 to i32
  br label %cond.end54

cond.false53:                                     ; preds = %cond.end38
  br label %cond.end54

cond.end54:                                       ; preds = %cond.false53, %cond.true43
  %cond55 = phi i32 [ %conv52, %cond.true43 ], [ -1, %cond.false53 ]
  %conv56 = trunc i32 %cond55 to i16
  store i16 %conv56, i16* %fw_rFrameUL, align 2
  %available57 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %74 = load i32, i32* %available57, align 4
  %tobool58 = icmp ne i32 %74, 0
  br i1 %tobool58, label %cond.true59, label %cond.false69

cond.true59:                                      ; preds = %cond.end54
  %75 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx60 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %75, i32 0, i32 32
  %76 = load i16***, i16**** %ref_idx60, align 8
  %arrayidx61 = getelementptr inbounds i16**, i16*** %76, i64 0
  %77 = load i16**, i16*** %arrayidx61, align 8
  %pos_x62 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %78 = load i32, i32* %pos_x62, align 4
  %idxprom63 = sext i32 %78 to i64
  %arrayidx64 = getelementptr inbounds i16*, i16** %77, i64 %idxprom63
  %79 = load i16*, i16** %arrayidx64, align 8
  %pos_y65 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %80 = load i32, i32* %pos_y65, align 4
  %idxprom66 = sext i32 %80 to i64
  %arrayidx67 = getelementptr inbounds i16, i16* %79, i64 %idxprom66
  %81 = load i16, i16* %arrayidx67, align 2
  %conv68 = sext i16 %81 to i32
  br label %cond.end71

cond.false69:                                     ; preds = %cond.end54
  %82 = load i16, i16* %fw_rFrameUL, align 2
  %conv70 = sext i16 %82 to i32
  br label %cond.end71

cond.end71:                                       ; preds = %cond.false69, %cond.true59
  %cond72 = phi i32 [ %conv68, %cond.true59 ], [ %conv70, %cond.false69 ]
  %conv73 = trunc i32 %cond72 to i16
  store i16 %conv73, i16* %fw_rFrameUR, align 2
  %available74 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %83 = load i32, i32* %available74, align 4
  %tobool75 = icmp ne i32 %83, 0
  br i1 %tobool75, label %cond.true76, label %cond.false86

cond.true76:                                      ; preds = %cond.end71
  %84 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx77 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %84, i32 0, i32 32
  %85 = load i16***, i16**** %ref_idx77, align 8
  %arrayidx78 = getelementptr inbounds i16**, i16*** %85, i64 1
  %86 = load i16**, i16*** %arrayidx78, align 8
  %pos_x79 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %87 = load i32, i32* %pos_x79, align 4
  %idxprom80 = sext i32 %87 to i64
  %arrayidx81 = getelementptr inbounds i16*, i16** %86, i64 %idxprom80
  %88 = load i16*, i16** %arrayidx81, align 8
  %pos_y82 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %89 = load i32, i32* %pos_y82, align 4
  %idxprom83 = sext i32 %89 to i64
  %arrayidx84 = getelementptr inbounds i16, i16* %88, i64 %idxprom83
  %90 = load i16, i16* %arrayidx84, align 2
  %conv85 = sext i16 %90 to i32
  br label %cond.end87

cond.false86:                                     ; preds = %cond.end71
  br label %cond.end87

cond.end87:                                       ; preds = %cond.false86, %cond.true76
  %cond88 = phi i32 [ %conv85, %cond.true76 ], [ -1, %cond.false86 ]
  %conv89 = trunc i32 %cond88 to i16
  store i16 %conv89, i16* %bw_rFrameL, align 2
  %available90 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %91 = load i32, i32* %available90, align 4
  %tobool91 = icmp ne i32 %91, 0
  br i1 %tobool91, label %cond.true92, label %cond.false102

cond.true92:                                      ; preds = %cond.end87
  %92 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx93 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %92, i32 0, i32 32
  %93 = load i16***, i16**** %ref_idx93, align 8
  %arrayidx94 = getelementptr inbounds i16**, i16*** %93, i64 1
  %94 = load i16**, i16*** %arrayidx94, align 8
  %pos_x95 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %95 = load i32, i32* %pos_x95, align 4
  %idxprom96 = sext i32 %95 to i64
  %arrayidx97 = getelementptr inbounds i16*, i16** %94, i64 %idxprom96
  %96 = load i16*, i16** %arrayidx97, align 8
  %pos_y98 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %97 = load i32, i32* %pos_y98, align 4
  %idxprom99 = sext i32 %97 to i64
  %arrayidx100 = getelementptr inbounds i16, i16* %96, i64 %idxprom99
  %98 = load i16, i16* %arrayidx100, align 2
  %conv101 = sext i16 %98 to i32
  br label %cond.end103

cond.false102:                                    ; preds = %cond.end87
  br label %cond.end103

cond.end103:                                      ; preds = %cond.false102, %cond.true92
  %cond104 = phi i32 [ %conv101, %cond.true92 ], [ -1, %cond.false102 ]
  %conv105 = trunc i32 %cond104 to i16
  store i16 %conv105, i16* %bw_rFrameU, align 2
  %available106 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %99 = load i32, i32* %available106, align 4
  %tobool107 = icmp ne i32 %99, 0
  br i1 %tobool107, label %cond.true108, label %cond.false118

cond.true108:                                     ; preds = %cond.end103
  %100 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx109 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %100, i32 0, i32 32
  %101 = load i16***, i16**** %ref_idx109, align 8
  %arrayidx110 = getelementptr inbounds i16**, i16*** %101, i64 1
  %102 = load i16**, i16*** %arrayidx110, align 8
  %pos_x111 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %103 = load i32, i32* %pos_x111, align 4
  %idxprom112 = sext i32 %103 to i64
  %arrayidx113 = getelementptr inbounds i16*, i16** %102, i64 %idxprom112
  %104 = load i16*, i16** %arrayidx113, align 8
  %pos_y114 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %105 = load i32, i32* %pos_y114, align 4
  %idxprom115 = sext i32 %105 to i64
  %arrayidx116 = getelementptr inbounds i16, i16* %104, i64 %idxprom115
  %106 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %106 to i32
  br label %cond.end119

cond.false118:                                    ; preds = %cond.end103
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false118, %cond.true108
  %cond120 = phi i32 [ %conv117, %cond.true108 ], [ -1, %cond.false118 ]
  %conv121 = trunc i32 %cond120 to i16
  store i16 %conv121, i16* %bw_rFrameUL, align 2
  %available122 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %107 = load i32, i32* %available122, align 4
  %tobool123 = icmp ne i32 %107, 0
  br i1 %tobool123, label %cond.true124, label %cond.false134

cond.true124:                                     ; preds = %cond.end119
  %108 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx125 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %108, i32 0, i32 32
  %109 = load i16***, i16**** %ref_idx125, align 8
  %arrayidx126 = getelementptr inbounds i16**, i16*** %109, i64 1
  %110 = load i16**, i16*** %arrayidx126, align 8
  %pos_x127 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %111 = load i32, i32* %pos_x127, align 4
  %idxprom128 = sext i32 %111 to i64
  %arrayidx129 = getelementptr inbounds i16*, i16** %110, i64 %idxprom128
  %112 = load i16*, i16** %arrayidx129, align 8
  %pos_y130 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %113 = load i32, i32* %pos_y130, align 4
  %idxprom131 = sext i32 %113 to i64
  %arrayidx132 = getelementptr inbounds i16, i16* %112, i64 %idxprom131
  %114 = load i16, i16* %arrayidx132, align 2
  %conv133 = sext i16 %114 to i32
  br label %cond.end136

cond.false134:                                    ; preds = %cond.end119
  %115 = load i16, i16* %bw_rFrameUL, align 2
  %conv135 = sext i16 %115 to i32
  br label %cond.end136

cond.end136:                                      ; preds = %cond.false134, %cond.true124
  %cond137 = phi i32 [ %conv133, %cond.true124 ], [ %conv135, %cond.false134 ]
  %conv138 = trunc i32 %cond137 to i16
  store i16 %conv138, i16* %bw_rFrameUR, align 2
  br label %if.end912

if.else139:                                       ; preds = %if.then9
  %116 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %116, i32 0, i32 22
  %117 = load i32, i32* %mb_field140, align 4
  %tobool141 = icmp ne i32 %117, 0
  br i1 %tobool141, label %if.then142, label %if.else525

if.then142:                                       ; preds = %if.else139
  %available143 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %118 = load i32, i32* %available143, align 4
  %tobool144 = icmp ne i32 %118, 0
  br i1 %tobool144, label %cond.true145, label %cond.false183

cond.true145:                                     ; preds = %if.then142
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data146 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 51
  %120 = load %struct.macroblock*, %struct.macroblock** %mb_data146, align 8
  %mb_addr = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %121 = load i32, i32* %mb_addr, align 4
  %idxprom147 = sext i32 %121 to i64
  %arrayidx148 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %120, i64 %idxprom147
  %mb_field149 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx148, i32 0, i32 22
  %122 = load i32, i32* %mb_field149, align 4
  %tobool150 = icmp ne i32 %122, 0
  br i1 %tobool150, label %cond.true161, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.true145
  %123 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx151 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %123, i32 0, i32 32
  %124 = load i16***, i16**** %ref_idx151, align 8
  %arrayidx152 = getelementptr inbounds i16**, i16*** %124, i64 0
  %125 = load i16**, i16*** %arrayidx152, align 8
  %pos_x153 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %126 = load i32, i32* %pos_x153, align 4
  %idxprom154 = sext i32 %126 to i64
  %arrayidx155 = getelementptr inbounds i16*, i16** %125, i64 %idxprom154
  %127 = load i16*, i16** %arrayidx155, align 8
  %pos_y156 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %128 = load i32, i32* %pos_y156, align 4
  %idxprom157 = sext i32 %128 to i64
  %arrayidx158 = getelementptr inbounds i16, i16* %127, i64 %idxprom157
  %129 = load i16, i16* %arrayidx158, align 2
  %conv159 = sext i16 %129 to i32
  %cmp = icmp slt i32 %conv159, 0
  br i1 %cmp, label %cond.true161, label %cond.false171

cond.true161:                                     ; preds = %lor.lhs.false, %cond.true145
  %130 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx162 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %130, i32 0, i32 32
  %131 = load i16***, i16**** %ref_idx162, align 8
  %arrayidx163 = getelementptr inbounds i16**, i16*** %131, i64 0
  %132 = load i16**, i16*** %arrayidx163, align 8
  %pos_x164 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %133 = load i32, i32* %pos_x164, align 4
  %idxprom165 = sext i32 %133 to i64
  %arrayidx166 = getelementptr inbounds i16*, i16** %132, i64 %idxprom165
  %134 = load i16*, i16** %arrayidx166, align 8
  %pos_y167 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %135 = load i32, i32* %pos_y167, align 4
  %idxprom168 = sext i32 %135 to i64
  %arrayidx169 = getelementptr inbounds i16, i16* %134, i64 %idxprom168
  %136 = load i16, i16* %arrayidx169, align 2
  %conv170 = sext i16 %136 to i32
  br label %cond.end181

cond.false171:                                    ; preds = %lor.lhs.false
  %137 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx172 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %137, i32 0, i32 32
  %138 = load i16***, i16**** %ref_idx172, align 8
  %arrayidx173 = getelementptr inbounds i16**, i16*** %138, i64 0
  %139 = load i16**, i16*** %arrayidx173, align 8
  %pos_x174 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %140 = load i32, i32* %pos_x174, align 4
  %idxprom175 = sext i32 %140 to i64
  %arrayidx176 = getelementptr inbounds i16*, i16** %139, i64 %idxprom175
  %141 = load i16*, i16** %arrayidx176, align 8
  %pos_y177 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %142 = load i32, i32* %pos_y177, align 4
  %idxprom178 = sext i32 %142 to i64
  %arrayidx179 = getelementptr inbounds i16, i16* %141, i64 %idxprom178
  %143 = load i16, i16* %arrayidx179, align 2
  %conv180 = sext i16 %143 to i32
  %mul = mul nsw i32 %conv180, 2
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false171, %cond.true161
  %cond182 = phi i32 [ %conv170, %cond.true161 ], [ %mul, %cond.false171 ]
  br label %cond.end184

cond.false183:                                    ; preds = %if.then142
  br label %cond.end184

cond.end184:                                      ; preds = %cond.false183, %cond.end181
  %cond185 = phi i32 [ %cond182, %cond.end181 ], [ -1, %cond.false183 ]
  %conv186 = trunc i32 %cond185 to i16
  store i16 %conv186, i16* %fw_rFrameL, align 2
  %available187 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %144 = load i32, i32* %available187, align 4
  %tobool188 = icmp ne i32 %144, 0
  br i1 %tobool188, label %cond.true189, label %cond.false231

cond.true189:                                     ; preds = %cond.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data190 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 51
  %146 = load %struct.macroblock*, %struct.macroblock** %mb_data190, align 8
  %mb_addr191 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %147 = load i32, i32* %mb_addr191, align 4
  %idxprom192 = sext i32 %147 to i64
  %arrayidx193 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %146, i64 %idxprom192
  %mb_field194 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx193, i32 0, i32 22
  %148 = load i32, i32* %mb_field194, align 4
  %tobool195 = icmp ne i32 %148, 0
  br i1 %tobool195, label %cond.true208, label %lor.lhs.false196

lor.lhs.false196:                                 ; preds = %cond.true189
  %149 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx197 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %149, i32 0, i32 32
  %150 = load i16***, i16**** %ref_idx197, align 8
  %arrayidx198 = getelementptr inbounds i16**, i16*** %150, i64 0
  %151 = load i16**, i16*** %arrayidx198, align 8
  %pos_x199 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %152 = load i32, i32* %pos_x199, align 4
  %idxprom200 = sext i32 %152 to i64
  %arrayidx201 = getelementptr inbounds i16*, i16** %151, i64 %idxprom200
  %153 = load i16*, i16** %arrayidx201, align 8
  %pos_y202 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %154 = load i32, i32* %pos_y202, align 4
  %idxprom203 = sext i32 %154 to i64
  %arrayidx204 = getelementptr inbounds i16, i16* %153, i64 %idxprom203
  %155 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %155 to i32
  %cmp206 = icmp slt i32 %conv205, 0
  br i1 %cmp206, label %cond.true208, label %cond.false218

cond.true208:                                     ; preds = %lor.lhs.false196, %cond.true189
  %156 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx209 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %156, i32 0, i32 32
  %157 = load i16***, i16**** %ref_idx209, align 8
  %arrayidx210 = getelementptr inbounds i16**, i16*** %157, i64 0
  %158 = load i16**, i16*** %arrayidx210, align 8
  %pos_x211 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %159 = load i32, i32* %pos_x211, align 4
  %idxprom212 = sext i32 %159 to i64
  %arrayidx213 = getelementptr inbounds i16*, i16** %158, i64 %idxprom212
  %160 = load i16*, i16** %arrayidx213, align 8
  %pos_y214 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %161 = load i32, i32* %pos_y214, align 4
  %idxprom215 = sext i32 %161 to i64
  %arrayidx216 = getelementptr inbounds i16, i16* %160, i64 %idxprom215
  %162 = load i16, i16* %arrayidx216, align 2
  %conv217 = sext i16 %162 to i32
  br label %cond.end229

cond.false218:                                    ; preds = %lor.lhs.false196
  %163 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx219 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %163, i32 0, i32 32
  %164 = load i16***, i16**** %ref_idx219, align 8
  %arrayidx220 = getelementptr inbounds i16**, i16*** %164, i64 0
  %165 = load i16**, i16*** %arrayidx220, align 8
  %pos_x221 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %166 = load i32, i32* %pos_x221, align 4
  %idxprom222 = sext i32 %166 to i64
  %arrayidx223 = getelementptr inbounds i16*, i16** %165, i64 %idxprom222
  %167 = load i16*, i16** %arrayidx223, align 8
  %pos_y224 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %168 = load i32, i32* %pos_y224, align 4
  %idxprom225 = sext i32 %168 to i64
  %arrayidx226 = getelementptr inbounds i16, i16* %167, i64 %idxprom225
  %169 = load i16, i16* %arrayidx226, align 2
  %conv227 = sext i16 %169 to i32
  %mul228 = mul nsw i32 %conv227, 2
  br label %cond.end229

cond.end229:                                      ; preds = %cond.false218, %cond.true208
  %cond230 = phi i32 [ %conv217, %cond.true208 ], [ %mul228, %cond.false218 ]
  br label %cond.end232

cond.false231:                                    ; preds = %cond.end184
  br label %cond.end232

cond.end232:                                      ; preds = %cond.false231, %cond.end229
  %cond233 = phi i32 [ %cond230, %cond.end229 ], [ -1, %cond.false231 ]
  %conv234 = trunc i32 %cond233 to i16
  store i16 %conv234, i16* %fw_rFrameU, align 2
  %available235 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %170 = load i32, i32* %available235, align 4
  %tobool236 = icmp ne i32 %170, 0
  br i1 %tobool236, label %cond.true237, label %cond.false279

cond.true237:                                     ; preds = %cond.end232
  %171 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data238 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %171, i32 0, i32 51
  %172 = load %struct.macroblock*, %struct.macroblock** %mb_data238, align 8
  %mb_addr239 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %173 = load i32, i32* %mb_addr239, align 4
  %idxprom240 = sext i32 %173 to i64
  %arrayidx241 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %172, i64 %idxprom240
  %mb_field242 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx241, i32 0, i32 22
  %174 = load i32, i32* %mb_field242, align 4
  %tobool243 = icmp ne i32 %174, 0
  br i1 %tobool243, label %cond.true256, label %lor.lhs.false244

lor.lhs.false244:                                 ; preds = %cond.true237
  %175 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx245 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %175, i32 0, i32 32
  %176 = load i16***, i16**** %ref_idx245, align 8
  %arrayidx246 = getelementptr inbounds i16**, i16*** %176, i64 0
  %177 = load i16**, i16*** %arrayidx246, align 8
  %pos_x247 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %178 = load i32, i32* %pos_x247, align 4
  %idxprom248 = sext i32 %178 to i64
  %arrayidx249 = getelementptr inbounds i16*, i16** %177, i64 %idxprom248
  %179 = load i16*, i16** %arrayidx249, align 8
  %pos_y250 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %180 = load i32, i32* %pos_y250, align 4
  %idxprom251 = sext i32 %180 to i64
  %arrayidx252 = getelementptr inbounds i16, i16* %179, i64 %idxprom251
  %181 = load i16, i16* %arrayidx252, align 2
  %conv253 = sext i16 %181 to i32
  %cmp254 = icmp slt i32 %conv253, 0
  br i1 %cmp254, label %cond.true256, label %cond.false266

cond.true256:                                     ; preds = %lor.lhs.false244, %cond.true237
  %182 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx257 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %182, i32 0, i32 32
  %183 = load i16***, i16**** %ref_idx257, align 8
  %arrayidx258 = getelementptr inbounds i16**, i16*** %183, i64 0
  %184 = load i16**, i16*** %arrayidx258, align 8
  %pos_x259 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %185 = load i32, i32* %pos_x259, align 4
  %idxprom260 = sext i32 %185 to i64
  %arrayidx261 = getelementptr inbounds i16*, i16** %184, i64 %idxprom260
  %186 = load i16*, i16** %arrayidx261, align 8
  %pos_y262 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %187 = load i32, i32* %pos_y262, align 4
  %idxprom263 = sext i32 %187 to i64
  %arrayidx264 = getelementptr inbounds i16, i16* %186, i64 %idxprom263
  %188 = load i16, i16* %arrayidx264, align 2
  %conv265 = sext i16 %188 to i32
  br label %cond.end277

cond.false266:                                    ; preds = %lor.lhs.false244
  %189 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx267 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %189, i32 0, i32 32
  %190 = load i16***, i16**** %ref_idx267, align 8
  %arrayidx268 = getelementptr inbounds i16**, i16*** %190, i64 0
  %191 = load i16**, i16*** %arrayidx268, align 8
  %pos_x269 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %192 = load i32, i32* %pos_x269, align 4
  %idxprom270 = sext i32 %192 to i64
  %arrayidx271 = getelementptr inbounds i16*, i16** %191, i64 %idxprom270
  %193 = load i16*, i16** %arrayidx271, align 8
  %pos_y272 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %194 = load i32, i32* %pos_y272, align 4
  %idxprom273 = sext i32 %194 to i64
  %arrayidx274 = getelementptr inbounds i16, i16* %193, i64 %idxprom273
  %195 = load i16, i16* %arrayidx274, align 2
  %conv275 = sext i16 %195 to i32
  %mul276 = mul nsw i32 %conv275, 2
  br label %cond.end277

cond.end277:                                      ; preds = %cond.false266, %cond.true256
  %cond278 = phi i32 [ %conv265, %cond.true256 ], [ %mul276, %cond.false266 ]
  br label %cond.end280

cond.false279:                                    ; preds = %cond.end232
  br label %cond.end280

cond.end280:                                      ; preds = %cond.false279, %cond.end277
  %cond281 = phi i32 [ %cond278, %cond.end277 ], [ -1, %cond.false279 ]
  %conv282 = trunc i32 %cond281 to i16
  store i16 %conv282, i16* %fw_rFrameUL, align 2
  %available283 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %196 = load i32, i32* %available283, align 4
  %tobool284 = icmp ne i32 %196, 0
  br i1 %tobool284, label %cond.true285, label %cond.false327

cond.true285:                                     ; preds = %cond.end280
  %197 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data286 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %197, i32 0, i32 51
  %198 = load %struct.macroblock*, %struct.macroblock** %mb_data286, align 8
  %mb_addr287 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %199 = load i32, i32* %mb_addr287, align 4
  %idxprom288 = sext i32 %199 to i64
  %arrayidx289 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %198, i64 %idxprom288
  %mb_field290 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx289, i32 0, i32 22
  %200 = load i32, i32* %mb_field290, align 4
  %tobool291 = icmp ne i32 %200, 0
  br i1 %tobool291, label %cond.true304, label %lor.lhs.false292

lor.lhs.false292:                                 ; preds = %cond.true285
  %201 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx293 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %201, i32 0, i32 32
  %202 = load i16***, i16**** %ref_idx293, align 8
  %arrayidx294 = getelementptr inbounds i16**, i16*** %202, i64 0
  %203 = load i16**, i16*** %arrayidx294, align 8
  %pos_x295 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %204 = load i32, i32* %pos_x295, align 4
  %idxprom296 = sext i32 %204 to i64
  %arrayidx297 = getelementptr inbounds i16*, i16** %203, i64 %idxprom296
  %205 = load i16*, i16** %arrayidx297, align 8
  %pos_y298 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %206 = load i32, i32* %pos_y298, align 4
  %idxprom299 = sext i32 %206 to i64
  %arrayidx300 = getelementptr inbounds i16, i16* %205, i64 %idxprom299
  %207 = load i16, i16* %arrayidx300, align 2
  %conv301 = sext i16 %207 to i32
  %cmp302 = icmp slt i32 %conv301, 0
  br i1 %cmp302, label %cond.true304, label %cond.false314

cond.true304:                                     ; preds = %lor.lhs.false292, %cond.true285
  %208 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx305 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %208, i32 0, i32 32
  %209 = load i16***, i16**** %ref_idx305, align 8
  %arrayidx306 = getelementptr inbounds i16**, i16*** %209, i64 0
  %210 = load i16**, i16*** %arrayidx306, align 8
  %pos_x307 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %211 = load i32, i32* %pos_x307, align 4
  %idxprom308 = sext i32 %211 to i64
  %arrayidx309 = getelementptr inbounds i16*, i16** %210, i64 %idxprom308
  %212 = load i16*, i16** %arrayidx309, align 8
  %pos_y310 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %213 = load i32, i32* %pos_y310, align 4
  %idxprom311 = sext i32 %213 to i64
  %arrayidx312 = getelementptr inbounds i16, i16* %212, i64 %idxprom311
  %214 = load i16, i16* %arrayidx312, align 2
  %conv313 = sext i16 %214 to i32
  br label %cond.end325

cond.false314:                                    ; preds = %lor.lhs.false292
  %215 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx315 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %215, i32 0, i32 32
  %216 = load i16***, i16**** %ref_idx315, align 8
  %arrayidx316 = getelementptr inbounds i16**, i16*** %216, i64 0
  %217 = load i16**, i16*** %arrayidx316, align 8
  %pos_x317 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %218 = load i32, i32* %pos_x317, align 4
  %idxprom318 = sext i32 %218 to i64
  %arrayidx319 = getelementptr inbounds i16*, i16** %217, i64 %idxprom318
  %219 = load i16*, i16** %arrayidx319, align 8
  %pos_y320 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %220 = load i32, i32* %pos_y320, align 4
  %idxprom321 = sext i32 %220 to i64
  %arrayidx322 = getelementptr inbounds i16, i16* %219, i64 %idxprom321
  %221 = load i16, i16* %arrayidx322, align 2
  %conv323 = sext i16 %221 to i32
  %mul324 = mul nsw i32 %conv323, 2
  br label %cond.end325

cond.end325:                                      ; preds = %cond.false314, %cond.true304
  %cond326 = phi i32 [ %conv313, %cond.true304 ], [ %mul324, %cond.false314 ]
  br label %cond.end329

cond.false327:                                    ; preds = %cond.end280
  %222 = load i16, i16* %fw_rFrameUL, align 2
  %conv328 = sext i16 %222 to i32
  br label %cond.end329

cond.end329:                                      ; preds = %cond.false327, %cond.end325
  %cond330 = phi i32 [ %cond326, %cond.end325 ], [ %conv328, %cond.false327 ]
  %conv331 = trunc i32 %cond330 to i16
  store i16 %conv331, i16* %fw_rFrameUR, align 2
  %available332 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %223 = load i32, i32* %available332, align 4
  %tobool333 = icmp ne i32 %223, 0
  br i1 %tobool333, label %cond.true334, label %cond.false376

cond.true334:                                     ; preds = %cond.end329
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data335 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 51
  %225 = load %struct.macroblock*, %struct.macroblock** %mb_data335, align 8
  %mb_addr336 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %226 = load i32, i32* %mb_addr336, align 4
  %idxprom337 = sext i32 %226 to i64
  %arrayidx338 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %225, i64 %idxprom337
  %mb_field339 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx338, i32 0, i32 22
  %227 = load i32, i32* %mb_field339, align 4
  %tobool340 = icmp ne i32 %227, 0
  br i1 %tobool340, label %cond.true353, label %lor.lhs.false341

lor.lhs.false341:                                 ; preds = %cond.true334
  %228 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx342 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %228, i32 0, i32 32
  %229 = load i16***, i16**** %ref_idx342, align 8
  %arrayidx343 = getelementptr inbounds i16**, i16*** %229, i64 1
  %230 = load i16**, i16*** %arrayidx343, align 8
  %pos_x344 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %231 = load i32, i32* %pos_x344, align 4
  %idxprom345 = sext i32 %231 to i64
  %arrayidx346 = getelementptr inbounds i16*, i16** %230, i64 %idxprom345
  %232 = load i16*, i16** %arrayidx346, align 8
  %pos_y347 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %233 = load i32, i32* %pos_y347, align 4
  %idxprom348 = sext i32 %233 to i64
  %arrayidx349 = getelementptr inbounds i16, i16* %232, i64 %idxprom348
  %234 = load i16, i16* %arrayidx349, align 2
  %conv350 = sext i16 %234 to i32
  %cmp351 = icmp slt i32 %conv350, 0
  br i1 %cmp351, label %cond.true353, label %cond.false363

cond.true353:                                     ; preds = %lor.lhs.false341, %cond.true334
  %235 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx354 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %235, i32 0, i32 32
  %236 = load i16***, i16**** %ref_idx354, align 8
  %arrayidx355 = getelementptr inbounds i16**, i16*** %236, i64 1
  %237 = load i16**, i16*** %arrayidx355, align 8
  %pos_x356 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %238 = load i32, i32* %pos_x356, align 4
  %idxprom357 = sext i32 %238 to i64
  %arrayidx358 = getelementptr inbounds i16*, i16** %237, i64 %idxprom357
  %239 = load i16*, i16** %arrayidx358, align 8
  %pos_y359 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %240 = load i32, i32* %pos_y359, align 4
  %idxprom360 = sext i32 %240 to i64
  %arrayidx361 = getelementptr inbounds i16, i16* %239, i64 %idxprom360
  %241 = load i16, i16* %arrayidx361, align 2
  %conv362 = sext i16 %241 to i32
  br label %cond.end374

cond.false363:                                    ; preds = %lor.lhs.false341
  %242 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx364 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %242, i32 0, i32 32
  %243 = load i16***, i16**** %ref_idx364, align 8
  %arrayidx365 = getelementptr inbounds i16**, i16*** %243, i64 1
  %244 = load i16**, i16*** %arrayidx365, align 8
  %pos_x366 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %245 = load i32, i32* %pos_x366, align 4
  %idxprom367 = sext i32 %245 to i64
  %arrayidx368 = getelementptr inbounds i16*, i16** %244, i64 %idxprom367
  %246 = load i16*, i16** %arrayidx368, align 8
  %pos_y369 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %247 = load i32, i32* %pos_y369, align 4
  %idxprom370 = sext i32 %247 to i64
  %arrayidx371 = getelementptr inbounds i16, i16* %246, i64 %idxprom370
  %248 = load i16, i16* %arrayidx371, align 2
  %conv372 = sext i16 %248 to i32
  %mul373 = mul nsw i32 %conv372, 2
  br label %cond.end374

cond.end374:                                      ; preds = %cond.false363, %cond.true353
  %cond375 = phi i32 [ %conv362, %cond.true353 ], [ %mul373, %cond.false363 ]
  br label %cond.end377

cond.false376:                                    ; preds = %cond.end329
  br label %cond.end377

cond.end377:                                      ; preds = %cond.false376, %cond.end374
  %cond378 = phi i32 [ %cond375, %cond.end374 ], [ -1, %cond.false376 ]
  %conv379 = trunc i32 %cond378 to i16
  store i16 %conv379, i16* %bw_rFrameL, align 2
  %available380 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %249 = load i32, i32* %available380, align 4
  %tobool381 = icmp ne i32 %249, 0
  br i1 %tobool381, label %cond.true382, label %cond.false424

cond.true382:                                     ; preds = %cond.end377
  %250 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %250, i32 0, i32 51
  %251 = load %struct.macroblock*, %struct.macroblock** %mb_data383, align 8
  %mb_addr384 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %252 = load i32, i32* %mb_addr384, align 4
  %idxprom385 = sext i32 %252 to i64
  %arrayidx386 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %251, i64 %idxprom385
  %mb_field387 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx386, i32 0, i32 22
  %253 = load i32, i32* %mb_field387, align 4
  %tobool388 = icmp ne i32 %253, 0
  br i1 %tobool388, label %cond.true401, label %lor.lhs.false389

lor.lhs.false389:                                 ; preds = %cond.true382
  %254 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx390 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %254, i32 0, i32 32
  %255 = load i16***, i16**** %ref_idx390, align 8
  %arrayidx391 = getelementptr inbounds i16**, i16*** %255, i64 1
  %256 = load i16**, i16*** %arrayidx391, align 8
  %pos_x392 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %257 = load i32, i32* %pos_x392, align 4
  %idxprom393 = sext i32 %257 to i64
  %arrayidx394 = getelementptr inbounds i16*, i16** %256, i64 %idxprom393
  %258 = load i16*, i16** %arrayidx394, align 8
  %pos_y395 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %259 = load i32, i32* %pos_y395, align 4
  %idxprom396 = sext i32 %259 to i64
  %arrayidx397 = getelementptr inbounds i16, i16* %258, i64 %idxprom396
  %260 = load i16, i16* %arrayidx397, align 2
  %conv398 = sext i16 %260 to i32
  %cmp399 = icmp slt i32 %conv398, 0
  br i1 %cmp399, label %cond.true401, label %cond.false411

cond.true401:                                     ; preds = %lor.lhs.false389, %cond.true382
  %261 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx402 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %261, i32 0, i32 32
  %262 = load i16***, i16**** %ref_idx402, align 8
  %arrayidx403 = getelementptr inbounds i16**, i16*** %262, i64 1
  %263 = load i16**, i16*** %arrayidx403, align 8
  %pos_x404 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %264 = load i32, i32* %pos_x404, align 4
  %idxprom405 = sext i32 %264 to i64
  %arrayidx406 = getelementptr inbounds i16*, i16** %263, i64 %idxprom405
  %265 = load i16*, i16** %arrayidx406, align 8
  %pos_y407 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %266 = load i32, i32* %pos_y407, align 4
  %idxprom408 = sext i32 %266 to i64
  %arrayidx409 = getelementptr inbounds i16, i16* %265, i64 %idxprom408
  %267 = load i16, i16* %arrayidx409, align 2
  %conv410 = sext i16 %267 to i32
  br label %cond.end422

cond.false411:                                    ; preds = %lor.lhs.false389
  %268 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx412 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %268, i32 0, i32 32
  %269 = load i16***, i16**** %ref_idx412, align 8
  %arrayidx413 = getelementptr inbounds i16**, i16*** %269, i64 1
  %270 = load i16**, i16*** %arrayidx413, align 8
  %pos_x414 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %271 = load i32, i32* %pos_x414, align 4
  %idxprom415 = sext i32 %271 to i64
  %arrayidx416 = getelementptr inbounds i16*, i16** %270, i64 %idxprom415
  %272 = load i16*, i16** %arrayidx416, align 8
  %pos_y417 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %273 = load i32, i32* %pos_y417, align 4
  %idxprom418 = sext i32 %273 to i64
  %arrayidx419 = getelementptr inbounds i16, i16* %272, i64 %idxprom418
  %274 = load i16, i16* %arrayidx419, align 2
  %conv420 = sext i16 %274 to i32
  %mul421 = mul nsw i32 %conv420, 2
  br label %cond.end422

cond.end422:                                      ; preds = %cond.false411, %cond.true401
  %cond423 = phi i32 [ %conv410, %cond.true401 ], [ %mul421, %cond.false411 ]
  br label %cond.end425

cond.false424:                                    ; preds = %cond.end377
  br label %cond.end425

cond.end425:                                      ; preds = %cond.false424, %cond.end422
  %cond426 = phi i32 [ %cond423, %cond.end422 ], [ -1, %cond.false424 ]
  %conv427 = trunc i32 %cond426 to i16
  store i16 %conv427, i16* %bw_rFrameU, align 2
  %available428 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %275 = load i32, i32* %available428, align 4
  %tobool429 = icmp ne i32 %275, 0
  br i1 %tobool429, label %cond.true430, label %cond.false472

cond.true430:                                     ; preds = %cond.end425
  %276 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data431 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %276, i32 0, i32 51
  %277 = load %struct.macroblock*, %struct.macroblock** %mb_data431, align 8
  %mb_addr432 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %278 = load i32, i32* %mb_addr432, align 4
  %idxprom433 = sext i32 %278 to i64
  %arrayidx434 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %277, i64 %idxprom433
  %mb_field435 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx434, i32 0, i32 22
  %279 = load i32, i32* %mb_field435, align 4
  %tobool436 = icmp ne i32 %279, 0
  br i1 %tobool436, label %cond.true449, label %lor.lhs.false437

lor.lhs.false437:                                 ; preds = %cond.true430
  %280 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx438 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %280, i32 0, i32 32
  %281 = load i16***, i16**** %ref_idx438, align 8
  %arrayidx439 = getelementptr inbounds i16**, i16*** %281, i64 1
  %282 = load i16**, i16*** %arrayidx439, align 8
  %pos_x440 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %283 = load i32, i32* %pos_x440, align 4
  %idxprom441 = sext i32 %283 to i64
  %arrayidx442 = getelementptr inbounds i16*, i16** %282, i64 %idxprom441
  %284 = load i16*, i16** %arrayidx442, align 8
  %pos_y443 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %285 = load i32, i32* %pos_y443, align 4
  %idxprom444 = sext i32 %285 to i64
  %arrayidx445 = getelementptr inbounds i16, i16* %284, i64 %idxprom444
  %286 = load i16, i16* %arrayidx445, align 2
  %conv446 = sext i16 %286 to i32
  %cmp447 = icmp slt i32 %conv446, 0
  br i1 %cmp447, label %cond.true449, label %cond.false459

cond.true449:                                     ; preds = %lor.lhs.false437, %cond.true430
  %287 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx450 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %287, i32 0, i32 32
  %288 = load i16***, i16**** %ref_idx450, align 8
  %arrayidx451 = getelementptr inbounds i16**, i16*** %288, i64 1
  %289 = load i16**, i16*** %arrayidx451, align 8
  %pos_x452 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %290 = load i32, i32* %pos_x452, align 4
  %idxprom453 = sext i32 %290 to i64
  %arrayidx454 = getelementptr inbounds i16*, i16** %289, i64 %idxprom453
  %291 = load i16*, i16** %arrayidx454, align 8
  %pos_y455 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %292 = load i32, i32* %pos_y455, align 4
  %idxprom456 = sext i32 %292 to i64
  %arrayidx457 = getelementptr inbounds i16, i16* %291, i64 %idxprom456
  %293 = load i16, i16* %arrayidx457, align 2
  %conv458 = sext i16 %293 to i32
  br label %cond.end470

cond.false459:                                    ; preds = %lor.lhs.false437
  %294 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx460 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %294, i32 0, i32 32
  %295 = load i16***, i16**** %ref_idx460, align 8
  %arrayidx461 = getelementptr inbounds i16**, i16*** %295, i64 1
  %296 = load i16**, i16*** %arrayidx461, align 8
  %pos_x462 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %297 = load i32, i32* %pos_x462, align 4
  %idxprom463 = sext i32 %297 to i64
  %arrayidx464 = getelementptr inbounds i16*, i16** %296, i64 %idxprom463
  %298 = load i16*, i16** %arrayidx464, align 8
  %pos_y465 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %299 = load i32, i32* %pos_y465, align 4
  %idxprom466 = sext i32 %299 to i64
  %arrayidx467 = getelementptr inbounds i16, i16* %298, i64 %idxprom466
  %300 = load i16, i16* %arrayidx467, align 2
  %conv468 = sext i16 %300 to i32
  %mul469 = mul nsw i32 %conv468, 2
  br label %cond.end470

cond.end470:                                      ; preds = %cond.false459, %cond.true449
  %cond471 = phi i32 [ %conv458, %cond.true449 ], [ %mul469, %cond.false459 ]
  br label %cond.end473

cond.false472:                                    ; preds = %cond.end425
  br label %cond.end473

cond.end473:                                      ; preds = %cond.false472, %cond.end470
  %cond474 = phi i32 [ %cond471, %cond.end470 ], [ -1, %cond.false472 ]
  %conv475 = trunc i32 %cond474 to i16
  store i16 %conv475, i16* %bw_rFrameUL, align 2
  %available476 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %301 = load i32, i32* %available476, align 4
  %tobool477 = icmp ne i32 %301, 0
  br i1 %tobool477, label %cond.true478, label %cond.false520

cond.true478:                                     ; preds = %cond.end473
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data479 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 51
  %303 = load %struct.macroblock*, %struct.macroblock** %mb_data479, align 8
  %mb_addr480 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %304 = load i32, i32* %mb_addr480, align 4
  %idxprom481 = sext i32 %304 to i64
  %arrayidx482 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %303, i64 %idxprom481
  %mb_field483 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx482, i32 0, i32 22
  %305 = load i32, i32* %mb_field483, align 4
  %tobool484 = icmp ne i32 %305, 0
  br i1 %tobool484, label %cond.true497, label %lor.lhs.false485

lor.lhs.false485:                                 ; preds = %cond.true478
  %306 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx486 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %306, i32 0, i32 32
  %307 = load i16***, i16**** %ref_idx486, align 8
  %arrayidx487 = getelementptr inbounds i16**, i16*** %307, i64 1
  %308 = load i16**, i16*** %arrayidx487, align 8
  %pos_x488 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %309 = load i32, i32* %pos_x488, align 4
  %idxprom489 = sext i32 %309 to i64
  %arrayidx490 = getelementptr inbounds i16*, i16** %308, i64 %idxprom489
  %310 = load i16*, i16** %arrayidx490, align 8
  %pos_y491 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %311 = load i32, i32* %pos_y491, align 4
  %idxprom492 = sext i32 %311 to i64
  %arrayidx493 = getelementptr inbounds i16, i16* %310, i64 %idxprom492
  %312 = load i16, i16* %arrayidx493, align 2
  %conv494 = sext i16 %312 to i32
  %cmp495 = icmp slt i32 %conv494, 0
  br i1 %cmp495, label %cond.true497, label %cond.false507

cond.true497:                                     ; preds = %lor.lhs.false485, %cond.true478
  %313 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx498 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %313, i32 0, i32 32
  %314 = load i16***, i16**** %ref_idx498, align 8
  %arrayidx499 = getelementptr inbounds i16**, i16*** %314, i64 1
  %315 = load i16**, i16*** %arrayidx499, align 8
  %pos_x500 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %316 = load i32, i32* %pos_x500, align 4
  %idxprom501 = sext i32 %316 to i64
  %arrayidx502 = getelementptr inbounds i16*, i16** %315, i64 %idxprom501
  %317 = load i16*, i16** %arrayidx502, align 8
  %pos_y503 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %318 = load i32, i32* %pos_y503, align 4
  %idxprom504 = sext i32 %318 to i64
  %arrayidx505 = getelementptr inbounds i16, i16* %317, i64 %idxprom504
  %319 = load i16, i16* %arrayidx505, align 2
  %conv506 = sext i16 %319 to i32
  br label %cond.end518

cond.false507:                                    ; preds = %lor.lhs.false485
  %320 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx508 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %320, i32 0, i32 32
  %321 = load i16***, i16**** %ref_idx508, align 8
  %arrayidx509 = getelementptr inbounds i16**, i16*** %321, i64 1
  %322 = load i16**, i16*** %arrayidx509, align 8
  %pos_x510 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %323 = load i32, i32* %pos_x510, align 4
  %idxprom511 = sext i32 %323 to i64
  %arrayidx512 = getelementptr inbounds i16*, i16** %322, i64 %idxprom511
  %324 = load i16*, i16** %arrayidx512, align 8
  %pos_y513 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %325 = load i32, i32* %pos_y513, align 4
  %idxprom514 = sext i32 %325 to i64
  %arrayidx515 = getelementptr inbounds i16, i16* %324, i64 %idxprom514
  %326 = load i16, i16* %arrayidx515, align 2
  %conv516 = sext i16 %326 to i32
  %mul517 = mul nsw i32 %conv516, 2
  br label %cond.end518

cond.end518:                                      ; preds = %cond.false507, %cond.true497
  %cond519 = phi i32 [ %conv506, %cond.true497 ], [ %mul517, %cond.false507 ]
  br label %cond.end522

cond.false520:                                    ; preds = %cond.end473
  %327 = load i16, i16* %bw_rFrameUL, align 2
  %conv521 = sext i16 %327 to i32
  br label %cond.end522

cond.end522:                                      ; preds = %cond.false520, %cond.end518
  %cond523 = phi i32 [ %cond519, %cond.end518 ], [ %conv521, %cond.false520 ]
  %conv524 = trunc i32 %cond523 to i16
  store i16 %conv524, i16* %bw_rFrameUR, align 2
  br label %if.end911

if.else525:                                       ; preds = %if.else139
  %available526 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %328 = load i32, i32* %available526, align 4
  %tobool527 = icmp ne i32 %328, 0
  br i1 %tobool527, label %cond.true528, label %cond.false569

cond.true528:                                     ; preds = %if.else525
  %329 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data529 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %329, i32 0, i32 51
  %330 = load %struct.macroblock*, %struct.macroblock** %mb_data529, align 8
  %mb_addr530 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %331 = load i32, i32* %mb_addr530, align 4
  %idxprom531 = sext i32 %331 to i64
  %arrayidx532 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %330, i64 %idxprom531
  %mb_field533 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx532, i32 0, i32 22
  %332 = load i32, i32* %mb_field533, align 4
  %tobool534 = icmp ne i32 %332, 0
  br i1 %tobool534, label %cond.true547, label %lor.lhs.false535

lor.lhs.false535:                                 ; preds = %cond.true528
  %333 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx536 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %333, i32 0, i32 32
  %334 = load i16***, i16**** %ref_idx536, align 8
  %arrayidx537 = getelementptr inbounds i16**, i16*** %334, i64 0
  %335 = load i16**, i16*** %arrayidx537, align 8
  %pos_x538 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %336 = load i32, i32* %pos_x538, align 4
  %idxprom539 = sext i32 %336 to i64
  %arrayidx540 = getelementptr inbounds i16*, i16** %335, i64 %idxprom539
  %337 = load i16*, i16** %arrayidx540, align 8
  %pos_y541 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %338 = load i32, i32* %pos_y541, align 4
  %idxprom542 = sext i32 %338 to i64
  %arrayidx543 = getelementptr inbounds i16, i16* %337, i64 %idxprom542
  %339 = load i16, i16* %arrayidx543, align 2
  %conv544 = sext i16 %339 to i32
  %cmp545 = icmp slt i32 %conv544, 0
  br i1 %cmp545, label %cond.true547, label %cond.false557

cond.true547:                                     ; preds = %lor.lhs.false535, %cond.true528
  %340 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx548 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %340, i32 0, i32 32
  %341 = load i16***, i16**** %ref_idx548, align 8
  %arrayidx549 = getelementptr inbounds i16**, i16*** %341, i64 0
  %342 = load i16**, i16*** %arrayidx549, align 8
  %pos_x550 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %343 = load i32, i32* %pos_x550, align 4
  %idxprom551 = sext i32 %343 to i64
  %arrayidx552 = getelementptr inbounds i16*, i16** %342, i64 %idxprom551
  %344 = load i16*, i16** %arrayidx552, align 8
  %pos_y553 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %345 = load i32, i32* %pos_y553, align 4
  %idxprom554 = sext i32 %345 to i64
  %arrayidx555 = getelementptr inbounds i16, i16* %344, i64 %idxprom554
  %346 = load i16, i16* %arrayidx555, align 2
  %conv556 = sext i16 %346 to i32
  %shr = ashr i32 %conv556, 1
  br label %cond.end567

cond.false557:                                    ; preds = %lor.lhs.false535
  %347 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx558 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %347, i32 0, i32 32
  %348 = load i16***, i16**** %ref_idx558, align 8
  %arrayidx559 = getelementptr inbounds i16**, i16*** %348, i64 0
  %349 = load i16**, i16*** %arrayidx559, align 8
  %pos_x560 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %350 = load i32, i32* %pos_x560, align 4
  %idxprom561 = sext i32 %350 to i64
  %arrayidx562 = getelementptr inbounds i16*, i16** %349, i64 %idxprom561
  %351 = load i16*, i16** %arrayidx562, align 8
  %pos_y563 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %352 = load i32, i32* %pos_y563, align 4
  %idxprom564 = sext i32 %352 to i64
  %arrayidx565 = getelementptr inbounds i16, i16* %351, i64 %idxprom564
  %353 = load i16, i16* %arrayidx565, align 2
  %conv566 = sext i16 %353 to i32
  br label %cond.end567

cond.end567:                                      ; preds = %cond.false557, %cond.true547
  %cond568 = phi i32 [ %shr, %cond.true547 ], [ %conv566, %cond.false557 ]
  br label %cond.end570

cond.false569:                                    ; preds = %if.else525
  br label %cond.end570

cond.end570:                                      ; preds = %cond.false569, %cond.end567
  %cond571 = phi i32 [ %cond568, %cond.end567 ], [ -1, %cond.false569 ]
  %conv572 = trunc i32 %cond571 to i16
  store i16 %conv572, i16* %fw_rFrameL, align 2
  %available573 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %354 = load i32, i32* %available573, align 4
  %tobool574 = icmp ne i32 %354, 0
  br i1 %tobool574, label %cond.true575, label %cond.false617

cond.true575:                                     ; preds = %cond.end570
  %355 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data576 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %355, i32 0, i32 51
  %356 = load %struct.macroblock*, %struct.macroblock** %mb_data576, align 8
  %mb_addr577 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %357 = load i32, i32* %mb_addr577, align 4
  %idxprom578 = sext i32 %357 to i64
  %arrayidx579 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %356, i64 %idxprom578
  %mb_field580 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx579, i32 0, i32 22
  %358 = load i32, i32* %mb_field580, align 4
  %tobool581 = icmp ne i32 %358, 0
  br i1 %tobool581, label %cond.true594, label %lor.lhs.false582

lor.lhs.false582:                                 ; preds = %cond.true575
  %359 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx583 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %359, i32 0, i32 32
  %360 = load i16***, i16**** %ref_idx583, align 8
  %arrayidx584 = getelementptr inbounds i16**, i16*** %360, i64 0
  %361 = load i16**, i16*** %arrayidx584, align 8
  %pos_x585 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %362 = load i32, i32* %pos_x585, align 4
  %idxprom586 = sext i32 %362 to i64
  %arrayidx587 = getelementptr inbounds i16*, i16** %361, i64 %idxprom586
  %363 = load i16*, i16** %arrayidx587, align 8
  %pos_y588 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %364 = load i32, i32* %pos_y588, align 4
  %idxprom589 = sext i32 %364 to i64
  %arrayidx590 = getelementptr inbounds i16, i16* %363, i64 %idxprom589
  %365 = load i16, i16* %arrayidx590, align 2
  %conv591 = sext i16 %365 to i32
  %cmp592 = icmp slt i32 %conv591, 0
  br i1 %cmp592, label %cond.true594, label %cond.false605

cond.true594:                                     ; preds = %lor.lhs.false582, %cond.true575
  %366 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx595 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %366, i32 0, i32 32
  %367 = load i16***, i16**** %ref_idx595, align 8
  %arrayidx596 = getelementptr inbounds i16**, i16*** %367, i64 0
  %368 = load i16**, i16*** %arrayidx596, align 8
  %pos_x597 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %369 = load i32, i32* %pos_x597, align 4
  %idxprom598 = sext i32 %369 to i64
  %arrayidx599 = getelementptr inbounds i16*, i16** %368, i64 %idxprom598
  %370 = load i16*, i16** %arrayidx599, align 8
  %pos_y600 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %371 = load i32, i32* %pos_y600, align 4
  %idxprom601 = sext i32 %371 to i64
  %arrayidx602 = getelementptr inbounds i16, i16* %370, i64 %idxprom601
  %372 = load i16, i16* %arrayidx602, align 2
  %conv603 = sext i16 %372 to i32
  %shr604 = ashr i32 %conv603, 1
  br label %cond.end615

cond.false605:                                    ; preds = %lor.lhs.false582
  %373 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx606 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %373, i32 0, i32 32
  %374 = load i16***, i16**** %ref_idx606, align 8
  %arrayidx607 = getelementptr inbounds i16**, i16*** %374, i64 0
  %375 = load i16**, i16*** %arrayidx607, align 8
  %pos_x608 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %376 = load i32, i32* %pos_x608, align 4
  %idxprom609 = sext i32 %376 to i64
  %arrayidx610 = getelementptr inbounds i16*, i16** %375, i64 %idxprom609
  %377 = load i16*, i16** %arrayidx610, align 8
  %pos_y611 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %378 = load i32, i32* %pos_y611, align 4
  %idxprom612 = sext i32 %378 to i64
  %arrayidx613 = getelementptr inbounds i16, i16* %377, i64 %idxprom612
  %379 = load i16, i16* %arrayidx613, align 2
  %conv614 = sext i16 %379 to i32
  br label %cond.end615

cond.end615:                                      ; preds = %cond.false605, %cond.true594
  %cond616 = phi i32 [ %shr604, %cond.true594 ], [ %conv614, %cond.false605 ]
  br label %cond.end618

cond.false617:                                    ; preds = %cond.end570
  br label %cond.end618

cond.end618:                                      ; preds = %cond.false617, %cond.end615
  %cond619 = phi i32 [ %cond616, %cond.end615 ], [ -1, %cond.false617 ]
  %conv620 = trunc i32 %cond619 to i16
  store i16 %conv620, i16* %fw_rFrameU, align 2
  %available621 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %380 = load i32, i32* %available621, align 4
  %tobool622 = icmp ne i32 %380, 0
  br i1 %tobool622, label %cond.true623, label %cond.false665

cond.true623:                                     ; preds = %cond.end618
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 51
  %382 = load %struct.macroblock*, %struct.macroblock** %mb_data624, align 8
  %mb_addr625 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %383 = load i32, i32* %mb_addr625, align 4
  %idxprom626 = sext i32 %383 to i64
  %arrayidx627 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %382, i64 %idxprom626
  %mb_field628 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx627, i32 0, i32 22
  %384 = load i32, i32* %mb_field628, align 4
  %tobool629 = icmp ne i32 %384, 0
  br i1 %tobool629, label %cond.true642, label %lor.lhs.false630

lor.lhs.false630:                                 ; preds = %cond.true623
  %385 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx631 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %385, i32 0, i32 32
  %386 = load i16***, i16**** %ref_idx631, align 8
  %arrayidx632 = getelementptr inbounds i16**, i16*** %386, i64 0
  %387 = load i16**, i16*** %arrayidx632, align 8
  %pos_x633 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %388 = load i32, i32* %pos_x633, align 4
  %idxprom634 = sext i32 %388 to i64
  %arrayidx635 = getelementptr inbounds i16*, i16** %387, i64 %idxprom634
  %389 = load i16*, i16** %arrayidx635, align 8
  %pos_y636 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %390 = load i32, i32* %pos_y636, align 4
  %idxprom637 = sext i32 %390 to i64
  %arrayidx638 = getelementptr inbounds i16, i16* %389, i64 %idxprom637
  %391 = load i16, i16* %arrayidx638, align 2
  %conv639 = sext i16 %391 to i32
  %cmp640 = icmp slt i32 %conv639, 0
  br i1 %cmp640, label %cond.true642, label %cond.false653

cond.true642:                                     ; preds = %lor.lhs.false630, %cond.true623
  %392 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx643 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %392, i32 0, i32 32
  %393 = load i16***, i16**** %ref_idx643, align 8
  %arrayidx644 = getelementptr inbounds i16**, i16*** %393, i64 0
  %394 = load i16**, i16*** %arrayidx644, align 8
  %pos_x645 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %395 = load i32, i32* %pos_x645, align 4
  %idxprom646 = sext i32 %395 to i64
  %arrayidx647 = getelementptr inbounds i16*, i16** %394, i64 %idxprom646
  %396 = load i16*, i16** %arrayidx647, align 8
  %pos_y648 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %397 = load i32, i32* %pos_y648, align 4
  %idxprom649 = sext i32 %397 to i64
  %arrayidx650 = getelementptr inbounds i16, i16* %396, i64 %idxprom649
  %398 = load i16, i16* %arrayidx650, align 2
  %conv651 = sext i16 %398 to i32
  %shr652 = ashr i32 %conv651, 1
  br label %cond.end663

cond.false653:                                    ; preds = %lor.lhs.false630
  %399 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx654 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %399, i32 0, i32 32
  %400 = load i16***, i16**** %ref_idx654, align 8
  %arrayidx655 = getelementptr inbounds i16**, i16*** %400, i64 0
  %401 = load i16**, i16*** %arrayidx655, align 8
  %pos_x656 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %402 = load i32, i32* %pos_x656, align 4
  %idxprom657 = sext i32 %402 to i64
  %arrayidx658 = getelementptr inbounds i16*, i16** %401, i64 %idxprom657
  %403 = load i16*, i16** %arrayidx658, align 8
  %pos_y659 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %404 = load i32, i32* %pos_y659, align 4
  %idxprom660 = sext i32 %404 to i64
  %arrayidx661 = getelementptr inbounds i16, i16* %403, i64 %idxprom660
  %405 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %405 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false653, %cond.true642
  %cond664 = phi i32 [ %shr652, %cond.true642 ], [ %conv662, %cond.false653 ]
  br label %cond.end666

cond.false665:                                    ; preds = %cond.end618
  br label %cond.end666

cond.end666:                                      ; preds = %cond.false665, %cond.end663
  %cond667 = phi i32 [ %cond664, %cond.end663 ], [ -1, %cond.false665 ]
  %conv668 = trunc i32 %cond667 to i16
  store i16 %conv668, i16* %fw_rFrameUL, align 2
  %available669 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %406 = load i32, i32* %available669, align 4
  %tobool670 = icmp ne i32 %406, 0
  br i1 %tobool670, label %cond.true671, label %cond.false713

cond.true671:                                     ; preds = %cond.end666
  %407 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data672 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %407, i32 0, i32 51
  %408 = load %struct.macroblock*, %struct.macroblock** %mb_data672, align 8
  %mb_addr673 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %409 = load i32, i32* %mb_addr673, align 4
  %idxprom674 = sext i32 %409 to i64
  %arrayidx675 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %408, i64 %idxprom674
  %mb_field676 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx675, i32 0, i32 22
  %410 = load i32, i32* %mb_field676, align 4
  %tobool677 = icmp ne i32 %410, 0
  br i1 %tobool677, label %cond.true690, label %lor.lhs.false678

lor.lhs.false678:                                 ; preds = %cond.true671
  %411 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx679 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %411, i32 0, i32 32
  %412 = load i16***, i16**** %ref_idx679, align 8
  %arrayidx680 = getelementptr inbounds i16**, i16*** %412, i64 0
  %413 = load i16**, i16*** %arrayidx680, align 8
  %pos_x681 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %414 = load i32, i32* %pos_x681, align 4
  %idxprom682 = sext i32 %414 to i64
  %arrayidx683 = getelementptr inbounds i16*, i16** %413, i64 %idxprom682
  %415 = load i16*, i16** %arrayidx683, align 8
  %pos_y684 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %416 = load i32, i32* %pos_y684, align 4
  %idxprom685 = sext i32 %416 to i64
  %arrayidx686 = getelementptr inbounds i16, i16* %415, i64 %idxprom685
  %417 = load i16, i16* %arrayidx686, align 2
  %conv687 = sext i16 %417 to i32
  %cmp688 = icmp slt i32 %conv687, 0
  br i1 %cmp688, label %cond.true690, label %cond.false701

cond.true690:                                     ; preds = %lor.lhs.false678, %cond.true671
  %418 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx691 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %418, i32 0, i32 32
  %419 = load i16***, i16**** %ref_idx691, align 8
  %arrayidx692 = getelementptr inbounds i16**, i16*** %419, i64 0
  %420 = load i16**, i16*** %arrayidx692, align 8
  %pos_x693 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %421 = load i32, i32* %pos_x693, align 4
  %idxprom694 = sext i32 %421 to i64
  %arrayidx695 = getelementptr inbounds i16*, i16** %420, i64 %idxprom694
  %422 = load i16*, i16** %arrayidx695, align 8
  %pos_y696 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %423 = load i32, i32* %pos_y696, align 4
  %idxprom697 = sext i32 %423 to i64
  %arrayidx698 = getelementptr inbounds i16, i16* %422, i64 %idxprom697
  %424 = load i16, i16* %arrayidx698, align 2
  %conv699 = sext i16 %424 to i32
  %shr700 = ashr i32 %conv699, 1
  br label %cond.end711

cond.false701:                                    ; preds = %lor.lhs.false678
  %425 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx702 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %425, i32 0, i32 32
  %426 = load i16***, i16**** %ref_idx702, align 8
  %arrayidx703 = getelementptr inbounds i16**, i16*** %426, i64 0
  %427 = load i16**, i16*** %arrayidx703, align 8
  %pos_x704 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %428 = load i32, i32* %pos_x704, align 4
  %idxprom705 = sext i32 %428 to i64
  %arrayidx706 = getelementptr inbounds i16*, i16** %427, i64 %idxprom705
  %429 = load i16*, i16** %arrayidx706, align 8
  %pos_y707 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %430 = load i32, i32* %pos_y707, align 4
  %idxprom708 = sext i32 %430 to i64
  %arrayidx709 = getelementptr inbounds i16, i16* %429, i64 %idxprom708
  %431 = load i16, i16* %arrayidx709, align 2
  %conv710 = sext i16 %431 to i32
  br label %cond.end711

cond.end711:                                      ; preds = %cond.false701, %cond.true690
  %cond712 = phi i32 [ %shr700, %cond.true690 ], [ %conv710, %cond.false701 ]
  br label %cond.end715

cond.false713:                                    ; preds = %cond.end666
  %432 = load i16, i16* %fw_rFrameUL, align 2
  %conv714 = sext i16 %432 to i32
  br label %cond.end715

cond.end715:                                      ; preds = %cond.false713, %cond.end711
  %cond716 = phi i32 [ %cond712, %cond.end711 ], [ %conv714, %cond.false713 ]
  %conv717 = trunc i32 %cond716 to i16
  store i16 %conv717, i16* %fw_rFrameUR, align 2
  %available718 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 0
  %433 = load i32, i32* %available718, align 4
  %tobool719 = icmp ne i32 %433, 0
  br i1 %tobool719, label %cond.true720, label %cond.false762

cond.true720:                                     ; preds = %cond.end715
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 51
  %435 = load %struct.macroblock*, %struct.macroblock** %mb_data721, align 8
  %mb_addr722 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 1
  %436 = load i32, i32* %mb_addr722, align 4
  %idxprom723 = sext i32 %436 to i64
  %arrayidx724 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %435, i64 %idxprom723
  %mb_field725 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx724, i32 0, i32 22
  %437 = load i32, i32* %mb_field725, align 4
  %tobool726 = icmp ne i32 %437, 0
  br i1 %tobool726, label %cond.true739, label %lor.lhs.false727

lor.lhs.false727:                                 ; preds = %cond.true720
  %438 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx728 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %438, i32 0, i32 32
  %439 = load i16***, i16**** %ref_idx728, align 8
  %arrayidx729 = getelementptr inbounds i16**, i16*** %439, i64 1
  %440 = load i16**, i16*** %arrayidx729, align 8
  %pos_x730 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %441 = load i32, i32* %pos_x730, align 4
  %idxprom731 = sext i32 %441 to i64
  %arrayidx732 = getelementptr inbounds i16*, i16** %440, i64 %idxprom731
  %442 = load i16*, i16** %arrayidx732, align 8
  %pos_y733 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %443 = load i32, i32* %pos_y733, align 4
  %idxprom734 = sext i32 %443 to i64
  %arrayidx735 = getelementptr inbounds i16, i16* %442, i64 %idxprom734
  %444 = load i16, i16* %arrayidx735, align 2
  %conv736 = sext i16 %444 to i32
  %cmp737 = icmp slt i32 %conv736, 0
  br i1 %cmp737, label %cond.true739, label %cond.false750

cond.true739:                                     ; preds = %lor.lhs.false727, %cond.true720
  %445 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx740 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %445, i32 0, i32 32
  %446 = load i16***, i16**** %ref_idx740, align 8
  %arrayidx741 = getelementptr inbounds i16**, i16*** %446, i64 1
  %447 = load i16**, i16*** %arrayidx741, align 8
  %pos_x742 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %448 = load i32, i32* %pos_x742, align 4
  %idxprom743 = sext i32 %448 to i64
  %arrayidx744 = getelementptr inbounds i16*, i16** %447, i64 %idxprom743
  %449 = load i16*, i16** %arrayidx744, align 8
  %pos_y745 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %450 = load i32, i32* %pos_y745, align 4
  %idxprom746 = sext i32 %450 to i64
  %arrayidx747 = getelementptr inbounds i16, i16* %449, i64 %idxprom746
  %451 = load i16, i16* %arrayidx747, align 2
  %conv748 = sext i16 %451 to i32
  %shr749 = ashr i32 %conv748, 1
  br label %cond.end760

cond.false750:                                    ; preds = %lor.lhs.false727
  %452 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx751 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %452, i32 0, i32 32
  %453 = load i16***, i16**** %ref_idx751, align 8
  %arrayidx752 = getelementptr inbounds i16**, i16*** %453, i64 1
  %454 = load i16**, i16*** %arrayidx752, align 8
  %pos_x753 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 4
  %455 = load i32, i32* %pos_x753, align 4
  %idxprom754 = sext i32 %455 to i64
  %arrayidx755 = getelementptr inbounds i16*, i16** %454, i64 %idxprom754
  %456 = load i16*, i16** %arrayidx755, align 8
  %pos_y756 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_left, i32 0, i32 5
  %457 = load i32, i32* %pos_y756, align 4
  %idxprom757 = sext i32 %457 to i64
  %arrayidx758 = getelementptr inbounds i16, i16* %456, i64 %idxprom757
  %458 = load i16, i16* %arrayidx758, align 2
  %conv759 = sext i16 %458 to i32
  br label %cond.end760

cond.end760:                                      ; preds = %cond.false750, %cond.true739
  %cond761 = phi i32 [ %shr749, %cond.true739 ], [ %conv759, %cond.false750 ]
  br label %cond.end763

cond.false762:                                    ; preds = %cond.end715
  br label %cond.end763

cond.end763:                                      ; preds = %cond.false762, %cond.end760
  %cond764 = phi i32 [ %cond761, %cond.end760 ], [ -1, %cond.false762 ]
  %conv765 = trunc i32 %cond764 to i16
  store i16 %conv765, i16* %bw_rFrameL, align 2
  %available766 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 0
  %459 = load i32, i32* %available766, align 4
  %tobool767 = icmp ne i32 %459, 0
  br i1 %tobool767, label %cond.true768, label %cond.false810

cond.true768:                                     ; preds = %cond.end763
  %460 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data769 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %460, i32 0, i32 51
  %461 = load %struct.macroblock*, %struct.macroblock** %mb_data769, align 8
  %mb_addr770 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 1
  %462 = load i32, i32* %mb_addr770, align 4
  %idxprom771 = sext i32 %462 to i64
  %arrayidx772 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %461, i64 %idxprom771
  %mb_field773 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx772, i32 0, i32 22
  %463 = load i32, i32* %mb_field773, align 4
  %tobool774 = icmp ne i32 %463, 0
  br i1 %tobool774, label %cond.true787, label %lor.lhs.false775

lor.lhs.false775:                                 ; preds = %cond.true768
  %464 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx776 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %464, i32 0, i32 32
  %465 = load i16***, i16**** %ref_idx776, align 8
  %arrayidx777 = getelementptr inbounds i16**, i16*** %465, i64 1
  %466 = load i16**, i16*** %arrayidx777, align 8
  %pos_x778 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %467 = load i32, i32* %pos_x778, align 4
  %idxprom779 = sext i32 %467 to i64
  %arrayidx780 = getelementptr inbounds i16*, i16** %466, i64 %idxprom779
  %468 = load i16*, i16** %arrayidx780, align 8
  %pos_y781 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %469 = load i32, i32* %pos_y781, align 4
  %idxprom782 = sext i32 %469 to i64
  %arrayidx783 = getelementptr inbounds i16, i16* %468, i64 %idxprom782
  %470 = load i16, i16* %arrayidx783, align 2
  %conv784 = sext i16 %470 to i32
  %cmp785 = icmp slt i32 %conv784, 0
  br i1 %cmp785, label %cond.true787, label %cond.false798

cond.true787:                                     ; preds = %lor.lhs.false775, %cond.true768
  %471 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx788 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %471, i32 0, i32 32
  %472 = load i16***, i16**** %ref_idx788, align 8
  %arrayidx789 = getelementptr inbounds i16**, i16*** %472, i64 1
  %473 = load i16**, i16*** %arrayidx789, align 8
  %pos_x790 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %474 = load i32, i32* %pos_x790, align 4
  %idxprom791 = sext i32 %474 to i64
  %arrayidx792 = getelementptr inbounds i16*, i16** %473, i64 %idxprom791
  %475 = load i16*, i16** %arrayidx792, align 8
  %pos_y793 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %476 = load i32, i32* %pos_y793, align 4
  %idxprom794 = sext i32 %476 to i64
  %arrayidx795 = getelementptr inbounds i16, i16* %475, i64 %idxprom794
  %477 = load i16, i16* %arrayidx795, align 2
  %conv796 = sext i16 %477 to i32
  %shr797 = ashr i32 %conv796, 1
  br label %cond.end808

cond.false798:                                    ; preds = %lor.lhs.false775
  %478 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx799 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %478, i32 0, i32 32
  %479 = load i16***, i16**** %ref_idx799, align 8
  %arrayidx800 = getelementptr inbounds i16**, i16*** %479, i64 1
  %480 = load i16**, i16*** %arrayidx800, align 8
  %pos_x801 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 4
  %481 = load i32, i32* %pos_x801, align 4
  %idxprom802 = sext i32 %481 to i64
  %arrayidx803 = getelementptr inbounds i16*, i16** %480, i64 %idxprom802
  %482 = load i16*, i16** %arrayidx803, align 8
  %pos_y804 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_up, i32 0, i32 5
  %483 = load i32, i32* %pos_y804, align 4
  %idxprom805 = sext i32 %483 to i64
  %arrayidx806 = getelementptr inbounds i16, i16* %482, i64 %idxprom805
  %484 = load i16, i16* %arrayidx806, align 2
  %conv807 = sext i16 %484 to i32
  br label %cond.end808

cond.end808:                                      ; preds = %cond.false798, %cond.true787
  %cond809 = phi i32 [ %shr797, %cond.true787 ], [ %conv807, %cond.false798 ]
  br label %cond.end811

cond.false810:                                    ; preds = %cond.end763
  br label %cond.end811

cond.end811:                                      ; preds = %cond.false810, %cond.end808
  %cond812 = phi i32 [ %cond809, %cond.end808 ], [ -1, %cond.false810 ]
  %conv813 = trunc i32 %cond812 to i16
  store i16 %conv813, i16* %bw_rFrameU, align 2
  %available814 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 0
  %485 = load i32, i32* %available814, align 4
  %tobool815 = icmp ne i32 %485, 0
  br i1 %tobool815, label %cond.true816, label %cond.false858

cond.true816:                                     ; preds = %cond.end811
  %486 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data817 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %486, i32 0, i32 51
  %487 = load %struct.macroblock*, %struct.macroblock** %mb_data817, align 8
  %mb_addr818 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 1
  %488 = load i32, i32* %mb_addr818, align 4
  %idxprom819 = sext i32 %488 to i64
  %arrayidx820 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %487, i64 %idxprom819
  %mb_field821 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx820, i32 0, i32 22
  %489 = load i32, i32* %mb_field821, align 4
  %tobool822 = icmp ne i32 %489, 0
  br i1 %tobool822, label %cond.true835, label %lor.lhs.false823

lor.lhs.false823:                                 ; preds = %cond.true816
  %490 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx824 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %490, i32 0, i32 32
  %491 = load i16***, i16**** %ref_idx824, align 8
  %arrayidx825 = getelementptr inbounds i16**, i16*** %491, i64 1
  %492 = load i16**, i16*** %arrayidx825, align 8
  %pos_x826 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %493 = load i32, i32* %pos_x826, align 4
  %idxprom827 = sext i32 %493 to i64
  %arrayidx828 = getelementptr inbounds i16*, i16** %492, i64 %idxprom827
  %494 = load i16*, i16** %arrayidx828, align 8
  %pos_y829 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %495 = load i32, i32* %pos_y829, align 4
  %idxprom830 = sext i32 %495 to i64
  %arrayidx831 = getelementptr inbounds i16, i16* %494, i64 %idxprom830
  %496 = load i16, i16* %arrayidx831, align 2
  %conv832 = sext i16 %496 to i32
  %cmp833 = icmp slt i32 %conv832, 0
  br i1 %cmp833, label %cond.true835, label %cond.false846

cond.true835:                                     ; preds = %lor.lhs.false823, %cond.true816
  %497 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx836 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %497, i32 0, i32 32
  %498 = load i16***, i16**** %ref_idx836, align 8
  %arrayidx837 = getelementptr inbounds i16**, i16*** %498, i64 1
  %499 = load i16**, i16*** %arrayidx837, align 8
  %pos_x838 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %500 = load i32, i32* %pos_x838, align 4
  %idxprom839 = sext i32 %500 to i64
  %arrayidx840 = getelementptr inbounds i16*, i16** %499, i64 %idxprom839
  %501 = load i16*, i16** %arrayidx840, align 8
  %pos_y841 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %502 = load i32, i32* %pos_y841, align 4
  %idxprom842 = sext i32 %502 to i64
  %arrayidx843 = getelementptr inbounds i16, i16* %501, i64 %idxprom842
  %503 = load i16, i16* %arrayidx843, align 2
  %conv844 = sext i16 %503 to i32
  %shr845 = ashr i32 %conv844, 1
  br label %cond.end856

cond.false846:                                    ; preds = %lor.lhs.false823
  %504 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx847 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %504, i32 0, i32 32
  %505 = load i16***, i16**** %ref_idx847, align 8
  %arrayidx848 = getelementptr inbounds i16**, i16*** %505, i64 1
  %506 = load i16**, i16*** %arrayidx848, align 8
  %pos_x849 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 4
  %507 = load i32, i32* %pos_x849, align 4
  %idxprom850 = sext i32 %507 to i64
  %arrayidx851 = getelementptr inbounds i16*, i16** %506, i64 %idxprom850
  %508 = load i16*, i16** %arrayidx851, align 8
  %pos_y852 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upleft, i32 0, i32 5
  %509 = load i32, i32* %pos_y852, align 4
  %idxprom853 = sext i32 %509 to i64
  %arrayidx854 = getelementptr inbounds i16, i16* %508, i64 %idxprom853
  %510 = load i16, i16* %arrayidx854, align 2
  %conv855 = sext i16 %510 to i32
  br label %cond.end856

cond.end856:                                      ; preds = %cond.false846, %cond.true835
  %cond857 = phi i32 [ %shr845, %cond.true835 ], [ %conv855, %cond.false846 ]
  br label %cond.end859

cond.false858:                                    ; preds = %cond.end811
  br label %cond.end859

cond.end859:                                      ; preds = %cond.false858, %cond.end856
  %cond860 = phi i32 [ %cond857, %cond.end856 ], [ -1, %cond.false858 ]
  %conv861 = trunc i32 %cond860 to i16
  store i16 %conv861, i16* %bw_rFrameUL, align 2
  %available862 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 0
  %511 = load i32, i32* %available862, align 4
  %tobool863 = icmp ne i32 %511, 0
  br i1 %tobool863, label %cond.true864, label %cond.false906

cond.true864:                                     ; preds = %cond.end859
  %512 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mb_data865 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %512, i32 0, i32 51
  %513 = load %struct.macroblock*, %struct.macroblock** %mb_data865, align 8
  %mb_addr866 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 1
  %514 = load i32, i32* %mb_addr866, align 4
  %idxprom867 = sext i32 %514 to i64
  %arrayidx868 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %513, i64 %idxprom867
  %mb_field869 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %arrayidx868, i32 0, i32 22
  %515 = load i32, i32* %mb_field869, align 4
  %tobool870 = icmp ne i32 %515, 0
  br i1 %tobool870, label %cond.true883, label %lor.lhs.false871

lor.lhs.false871:                                 ; preds = %cond.true864
  %516 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx872 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %516, i32 0, i32 32
  %517 = load i16***, i16**** %ref_idx872, align 8
  %arrayidx873 = getelementptr inbounds i16**, i16*** %517, i64 1
  %518 = load i16**, i16*** %arrayidx873, align 8
  %pos_x874 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %519 = load i32, i32* %pos_x874, align 4
  %idxprom875 = sext i32 %519 to i64
  %arrayidx876 = getelementptr inbounds i16*, i16** %518, i64 %idxprom875
  %520 = load i16*, i16** %arrayidx876, align 8
  %pos_y877 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %521 = load i32, i32* %pos_y877, align 4
  %idxprom878 = sext i32 %521 to i64
  %arrayidx879 = getelementptr inbounds i16, i16* %520, i64 %idxprom878
  %522 = load i16, i16* %arrayidx879, align 2
  %conv880 = sext i16 %522 to i32
  %cmp881 = icmp slt i32 %conv880, 0
  br i1 %cmp881, label %cond.true883, label %cond.false894

cond.true883:                                     ; preds = %lor.lhs.false871, %cond.true864
  %523 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx884 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %523, i32 0, i32 32
  %524 = load i16***, i16**** %ref_idx884, align 8
  %arrayidx885 = getelementptr inbounds i16**, i16*** %524, i64 1
  %525 = load i16**, i16*** %arrayidx885, align 8
  %pos_x886 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %526 = load i32, i32* %pos_x886, align 4
  %idxprom887 = sext i32 %526 to i64
  %arrayidx888 = getelementptr inbounds i16*, i16** %525, i64 %idxprom887
  %527 = load i16*, i16** %arrayidx888, align 8
  %pos_y889 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %528 = load i32, i32* %pos_y889, align 4
  %idxprom890 = sext i32 %528 to i64
  %arrayidx891 = getelementptr inbounds i16, i16* %527, i64 %idxprom890
  %529 = load i16, i16* %arrayidx891, align 2
  %conv892 = sext i16 %529 to i32
  %shr893 = ashr i32 %conv892, 1
  br label %cond.end904

cond.false894:                                    ; preds = %lor.lhs.false871
  %530 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx895 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %530, i32 0, i32 32
  %531 = load i16***, i16**** %ref_idx895, align 8
  %arrayidx896 = getelementptr inbounds i16**, i16*** %531, i64 1
  %532 = load i16**, i16*** %arrayidx896, align 8
  %pos_x897 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 4
  %533 = load i32, i32* %pos_x897, align 4
  %idxprom898 = sext i32 %533 to i64
  %arrayidx899 = getelementptr inbounds i16*, i16** %532, i64 %idxprom898
  %534 = load i16*, i16** %arrayidx899, align 8
  %pos_y900 = getelementptr inbounds %struct.pix_pos, %struct.pix_pos* %mb_upright, i32 0, i32 5
  %535 = load i32, i32* %pos_y900, align 4
  %idxprom901 = sext i32 %535 to i64
  %arrayidx902 = getelementptr inbounds i16, i16* %534, i64 %idxprom901
  %536 = load i16, i16* %arrayidx902, align 2
  %conv903 = sext i16 %536 to i32
  br label %cond.end904

cond.end904:                                      ; preds = %cond.false894, %cond.true883
  %cond905 = phi i32 [ %shr893, %cond.true883 ], [ %conv903, %cond.false894 ]
  br label %cond.end908

cond.false906:                                    ; preds = %cond.end859
  %537 = load i16, i16* %bw_rFrameUL, align 2
  %conv907 = sext i16 %537 to i32
  br label %cond.end908

cond.end908:                                      ; preds = %cond.false906, %cond.end904
  %cond909 = phi i32 [ %cond905, %cond.end904 ], [ %conv907, %cond.false906 ]
  %conv910 = trunc i32 %cond909 to i16
  store i16 %conv910, i16* %bw_rFrameUR, align 2
  br label %if.end911

if.end911:                                        ; preds = %cond.end908, %cond.end522
  br label %if.end912

if.end912:                                        ; preds = %if.end911, %cond.end136
  %538 = load i16, i16* %fw_rFrameL, align 2
  %conv913 = sext i16 %538 to i32
  %cmp914 = icmp sge i32 %conv913, 0
  br i1 %cmp914, label %land.lhs.true916, label %cond.false931

land.lhs.true916:                                 ; preds = %if.end912
  %539 = load i16, i16* %fw_rFrameU, align 2
  %conv917 = sext i16 %539 to i32
  %cmp918 = icmp sge i32 %conv917, 0
  br i1 %cmp918, label %cond.true920, label %cond.false931

cond.true920:                                     ; preds = %land.lhs.true916
  %540 = load i16, i16* %fw_rFrameL, align 2
  %conv921 = sext i16 %540 to i32
  %541 = load i16, i16* %fw_rFrameU, align 2
  %conv922 = sext i16 %541 to i32
  %cmp923 = icmp slt i32 %conv921, %conv922
  br i1 %cmp923, label %cond.true925, label %cond.false927

cond.true925:                                     ; preds = %cond.true920
  %542 = load i16, i16* %fw_rFrameL, align 2
  %conv926 = sext i16 %542 to i32
  br label %cond.end929

cond.false927:                                    ; preds = %cond.true920
  %543 = load i16, i16* %fw_rFrameU, align 2
  %conv928 = sext i16 %543 to i32
  br label %cond.end929

cond.end929:                                      ; preds = %cond.false927, %cond.true925
  %cond930 = phi i32 [ %conv926, %cond.true925 ], [ %conv928, %cond.false927 ]
  br label %cond.end942

cond.false931:                                    ; preds = %land.lhs.true916, %if.end912
  %544 = load i16, i16* %fw_rFrameL, align 2
  %conv932 = sext i16 %544 to i32
  %545 = load i16, i16* %fw_rFrameU, align 2
  %conv933 = sext i16 %545 to i32
  %cmp934 = icmp sgt i32 %conv932, %conv933
  br i1 %cmp934, label %cond.true936, label %cond.false938

cond.true936:                                     ; preds = %cond.false931
  %546 = load i16, i16* %fw_rFrameL, align 2
  %conv937 = sext i16 %546 to i32
  br label %cond.end940

cond.false938:                                    ; preds = %cond.false931
  %547 = load i16, i16* %fw_rFrameU, align 2
  %conv939 = sext i16 %547 to i32
  br label %cond.end940

cond.end940:                                      ; preds = %cond.false938, %cond.true936
  %cond941 = phi i32 [ %conv937, %cond.true936 ], [ %conv939, %cond.false938 ]
  br label %cond.end942

cond.end942:                                      ; preds = %cond.end940, %cond.end929
  %cond943 = phi i32 [ %cond930, %cond.end929 ], [ %cond941, %cond.end940 ]
  %conv944 = trunc i32 %cond943 to i16
  store i16 %conv944, i16* %fw_rFrame, align 2
  %548 = load i16, i16* %fw_rFrame, align 2
  %conv945 = sext i16 %548 to i32
  %cmp946 = icmp sge i32 %conv945, 0
  br i1 %cmp946, label %land.lhs.true948, label %cond.false963

land.lhs.true948:                                 ; preds = %cond.end942
  %549 = load i16, i16* %fw_rFrameUR, align 2
  %conv949 = sext i16 %549 to i32
  %cmp950 = icmp sge i32 %conv949, 0
  br i1 %cmp950, label %cond.true952, label %cond.false963

cond.true952:                                     ; preds = %land.lhs.true948
  %550 = load i16, i16* %fw_rFrame, align 2
  %conv953 = sext i16 %550 to i32
  %551 = load i16, i16* %fw_rFrameUR, align 2
  %conv954 = sext i16 %551 to i32
  %cmp955 = icmp slt i32 %conv953, %conv954
  br i1 %cmp955, label %cond.true957, label %cond.false959

cond.true957:                                     ; preds = %cond.true952
  %552 = load i16, i16* %fw_rFrame, align 2
  %conv958 = sext i16 %552 to i32
  br label %cond.end961

cond.false959:                                    ; preds = %cond.true952
  %553 = load i16, i16* %fw_rFrameUR, align 2
  %conv960 = sext i16 %553 to i32
  br label %cond.end961

cond.end961:                                      ; preds = %cond.false959, %cond.true957
  %cond962 = phi i32 [ %conv958, %cond.true957 ], [ %conv960, %cond.false959 ]
  br label %cond.end974

cond.false963:                                    ; preds = %land.lhs.true948, %cond.end942
  %554 = load i16, i16* %fw_rFrame, align 2
  %conv964 = sext i16 %554 to i32
  %555 = load i16, i16* %fw_rFrameUR, align 2
  %conv965 = sext i16 %555 to i32
  %cmp966 = icmp sgt i32 %conv964, %conv965
  br i1 %cmp966, label %cond.true968, label %cond.false970

cond.true968:                                     ; preds = %cond.false963
  %556 = load i16, i16* %fw_rFrame, align 2
  %conv969 = sext i16 %556 to i32
  br label %cond.end972

cond.false970:                                    ; preds = %cond.false963
  %557 = load i16, i16* %fw_rFrameUR, align 2
  %conv971 = sext i16 %557 to i32
  br label %cond.end972

cond.end972:                                      ; preds = %cond.false970, %cond.true968
  %cond973 = phi i32 [ %conv969, %cond.true968 ], [ %conv971, %cond.false970 ]
  br label %cond.end974

cond.end974:                                      ; preds = %cond.end972, %cond.end961
  %cond975 = phi i32 [ %cond962, %cond.end961 ], [ %cond973, %cond.end972 ]
  %conv976 = trunc i32 %cond975 to i16
  store i16 %conv976, i16* %fw_rFrame, align 2
  %558 = load i16, i16* %bw_rFrameL, align 2
  %conv977 = sext i16 %558 to i32
  %cmp978 = icmp sge i32 %conv977, 0
  br i1 %cmp978, label %land.lhs.true980, label %cond.false995

land.lhs.true980:                                 ; preds = %cond.end974
  %559 = load i16, i16* %bw_rFrameU, align 2
  %conv981 = sext i16 %559 to i32
  %cmp982 = icmp sge i32 %conv981, 0
  br i1 %cmp982, label %cond.true984, label %cond.false995

cond.true984:                                     ; preds = %land.lhs.true980
  %560 = load i16, i16* %bw_rFrameL, align 2
  %conv985 = sext i16 %560 to i32
  %561 = load i16, i16* %bw_rFrameU, align 2
  %conv986 = sext i16 %561 to i32
  %cmp987 = icmp slt i32 %conv985, %conv986
  br i1 %cmp987, label %cond.true989, label %cond.false991

cond.true989:                                     ; preds = %cond.true984
  %562 = load i16, i16* %bw_rFrameL, align 2
  %conv990 = sext i16 %562 to i32
  br label %cond.end993

cond.false991:                                    ; preds = %cond.true984
  %563 = load i16, i16* %bw_rFrameU, align 2
  %conv992 = sext i16 %563 to i32
  br label %cond.end993

cond.end993:                                      ; preds = %cond.false991, %cond.true989
  %cond994 = phi i32 [ %conv990, %cond.true989 ], [ %conv992, %cond.false991 ]
  br label %cond.end1006

cond.false995:                                    ; preds = %land.lhs.true980, %cond.end974
  %564 = load i16, i16* %bw_rFrameL, align 2
  %conv996 = sext i16 %564 to i32
  %565 = load i16, i16* %bw_rFrameU, align 2
  %conv997 = sext i16 %565 to i32
  %cmp998 = icmp sgt i32 %conv996, %conv997
  br i1 %cmp998, label %cond.true1000, label %cond.false1002

cond.true1000:                                    ; preds = %cond.false995
  %566 = load i16, i16* %bw_rFrameL, align 2
  %conv1001 = sext i16 %566 to i32
  br label %cond.end1004

cond.false1002:                                   ; preds = %cond.false995
  %567 = load i16, i16* %bw_rFrameU, align 2
  %conv1003 = sext i16 %567 to i32
  br label %cond.end1004

cond.end1004:                                     ; preds = %cond.false1002, %cond.true1000
  %cond1005 = phi i32 [ %conv1001, %cond.true1000 ], [ %conv1003, %cond.false1002 ]
  br label %cond.end1006

cond.end1006:                                     ; preds = %cond.end1004, %cond.end993
  %cond1007 = phi i32 [ %cond994, %cond.end993 ], [ %cond1005, %cond.end1004 ]
  %conv1008 = trunc i32 %cond1007 to i16
  store i16 %conv1008, i16* %bw_rFrame, align 2
  %568 = load i16, i16* %bw_rFrame, align 2
  %conv1009 = sext i16 %568 to i32
  %cmp1010 = icmp sge i32 %conv1009, 0
  br i1 %cmp1010, label %land.lhs.true1012, label %cond.false1027

land.lhs.true1012:                                ; preds = %cond.end1006
  %569 = load i16, i16* %bw_rFrameUR, align 2
  %conv1013 = sext i16 %569 to i32
  %cmp1014 = icmp sge i32 %conv1013, 0
  br i1 %cmp1014, label %cond.true1016, label %cond.false1027

cond.true1016:                                    ; preds = %land.lhs.true1012
  %570 = load i16, i16* %bw_rFrame, align 2
  %conv1017 = sext i16 %570 to i32
  %571 = load i16, i16* %bw_rFrameUR, align 2
  %conv1018 = sext i16 %571 to i32
  %cmp1019 = icmp slt i32 %conv1017, %conv1018
  br i1 %cmp1019, label %cond.true1021, label %cond.false1023

cond.true1021:                                    ; preds = %cond.true1016
  %572 = load i16, i16* %bw_rFrame, align 2
  %conv1022 = sext i16 %572 to i32
  br label %cond.end1025

cond.false1023:                                   ; preds = %cond.true1016
  %573 = load i16, i16* %bw_rFrameUR, align 2
  %conv1024 = sext i16 %573 to i32
  br label %cond.end1025

cond.end1025:                                     ; preds = %cond.false1023, %cond.true1021
  %cond1026 = phi i32 [ %conv1022, %cond.true1021 ], [ %conv1024, %cond.false1023 ]
  br label %cond.end1038

cond.false1027:                                   ; preds = %land.lhs.true1012, %cond.end1006
  %574 = load i16, i16* %bw_rFrame, align 2
  %conv1028 = sext i16 %574 to i32
  %575 = load i16, i16* %bw_rFrameUR, align 2
  %conv1029 = sext i16 %575 to i32
  %cmp1030 = icmp sgt i32 %conv1028, %conv1029
  br i1 %cmp1030, label %cond.true1032, label %cond.false1034

cond.true1032:                                    ; preds = %cond.false1027
  %576 = load i16, i16* %bw_rFrame, align 2
  %conv1033 = sext i16 %576 to i32
  br label %cond.end1036

cond.false1034:                                   ; preds = %cond.false1027
  %577 = load i16, i16* %bw_rFrameUR, align 2
  %conv1035 = sext i16 %577 to i32
  br label %cond.end1036

cond.end1036:                                     ; preds = %cond.false1034, %cond.true1032
  %cond1037 = phi i32 [ %conv1033, %cond.true1032 ], [ %conv1035, %cond.false1034 ]
  br label %cond.end1038

cond.end1038:                                     ; preds = %cond.end1036, %cond.end1025
  %cond1039 = phi i32 [ %cond1026, %cond.end1025 ], [ %cond1037, %cond.end1036 ]
  %conv1040 = trunc i32 %cond1039 to i16
  store i16 %conv1040, i16* %bw_rFrame, align 2
  %578 = load i16, i16* %fw_rFrame, align 2
  %conv1041 = sext i16 %578 to i32
  %cmp1042 = icmp sge i32 %conv1041, 0
  br i1 %cmp1042, label %if.then1044, label %if.end1047

if.then1044:                                      ; preds = %cond.end1038
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %pmvfw, i64 0, i64 0
  %579 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx1045 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %579, i32 0, i32 32
  %580 = load i16***, i16**** %ref_idx1045, align 8
  %581 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv1046 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %581, i32 0, i32 35
  %582 = load i16****, i16***** %mv1046, align 8
  %583 = load i16, i16* %fw_rFrame, align 2
  call void @SetMotionVectorPredictor(i16* %arraydecay, i16*** %580, i16**** %582, i16 signext %583, i32 0, i32 0, i32 0, i32 16, i32 16)
  br label %if.end1047

if.end1047:                                       ; preds = %if.then1044, %cond.end1038
  %584 = load i16, i16* %bw_rFrame, align 2
  %conv1048 = sext i16 %584 to i32
  %cmp1049 = icmp sge i32 %conv1048, 0
  br i1 %cmp1049, label %if.then1051, label %if.end1055

if.then1051:                                      ; preds = %if.end1047
  %arraydecay1052 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvbw, i64 0, i64 0
  %585 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_idx1053 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %585, i32 0, i32 32
  %586 = load i16***, i16**** %ref_idx1053, align 8
  %587 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %mv1054 = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %587, i32 0, i32 35
  %588 = load i16****, i16***** %mv1054, align 8
  %589 = load i16, i16* %bw_rFrame, align 2
  call void @SetMotionVectorPredictor(i16* %arraydecay1052, i16*** %586, i16**** %588, i16 signext %589, i32 1, i32 0, i32 0, i32 16, i32 16)
  br label %if.end1055

if.end1055:                                       ; preds = %if.then1051, %if.end1047
  store i32 0, i32* %block_y, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc1290, %if.end1055
  %590 = load i32, i32* %block_y, align 4
  %cmp1056 = icmp slt i32 %590, 4
  br i1 %cmp1056, label %for.body, label %for.end1292

for.body:                                         ; preds = %for.cond
  %591 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %591, i32 0, i32 34
  %592 = load i32, i32* %pix_y, align 4
  %shr1058 = ashr i32 %592, 2
  %593 = load i32, i32* %block_y, align 4
  %add = add nsw i32 %shr1058, %593
  store i32 %add, i32* %pic_block_y, align 4
  %594 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %594, i32 0, i32 38
  %595 = load i32, i32* %opix_y, align 4
  %shr1059 = ashr i32 %595, 2
  %596 = load i32, i32* %block_y, align 4
  %add1060 = add nsw i32 %shr1059, %596
  store i32 %add1060, i32* %opic_block_y, align 4
  store i32 0, i32* %block_x, align 4
  br label %for.cond1061

for.cond1061:                                     ; preds = %for.inc, %for.body
  %597 = load i32, i32* %block_x, align 4
  %cmp1062 = icmp slt i32 %597, 4
  br i1 %cmp1062, label %for.body1064, label %for.end

for.body1064:                                     ; preds = %for.cond1061
  %598 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %598, i32 0, i32 33
  %599 = load i32, i32* %pix_x, align 8
  %shr1065 = ashr i32 %599, 2
  %600 = load i32, i32* %block_x, align 4
  %add1066 = add nsw i32 %shr1065, %600
  store i32 %add1066, i32* %pic_block_x, align 4
  %601 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %601, i32 0, i32 37
  %602 = load i32, i32* %opix_x, align 8
  %shr1067 = ashr i32 %602, 2
  %603 = load i32, i32* %block_x, align 4
  %add1068 = add nsw i32 %shr1067, %603
  store i32 %add1068, i32* %opic_block_x, align 4
  %604 = load i16, i16* %fw_rFrame, align 2
  %conv1069 = sext i16 %604 to i32
  %cmp1070 = icmp sge i32 %conv1069, 0
  br i1 %cmp1070, label %if.then1072, label %if.else1129

if.then1072:                                      ; preds = %for.body1064
  %605 = load i16, i16* %fw_rFrame, align 2
  %tobool1073 = icmp ne i16 %605, 0
  br i1 %tobool1073, label %if.else1102, label %land.lhs.true1074

land.lhs.true1074:                                ; preds = %if.then1072
  %606 = load i8**, i8*** %moving_block, align 8
  %607 = load i32, i32* %opic_block_x, align 4
  %idxprom1075 = sext i32 %607 to i64
  %arrayidx1076 = getelementptr inbounds i8*, i8** %606, i64 %idxprom1075
  %608 = load i8*, i8** %arrayidx1076, align 8
  %609 = load i32, i32* %opic_block_y, align 4
  %idxprom1077 = sext i32 %609 to i64
  %arrayidx1078 = getelementptr inbounds i8, i8* %608, i64 %idxprom1077
  %610 = load i8, i8* %arrayidx1078, align 1
  %tobool1079 = icmp ne i8 %610, 0
  br i1 %tobool1079, label %if.else1102, label %if.then1080

if.then1080:                                      ; preds = %land.lhs.true1074
  %611 = load i16******, i16******* %all_mvs, align 8
  %612 = load i32, i32* %block_x, align 4
  %idxprom1081 = sext i32 %612 to i64
  %arrayidx1082 = getelementptr inbounds i16*****, i16****** %611, i64 %idxprom1081
  %613 = load i16*****, i16****** %arrayidx1082, align 8
  %614 = load i32, i32* %block_y, align 4
  %idxprom1083 = sext i32 %614 to i64
  %arrayidx1084 = getelementptr inbounds i16****, i16***** %613, i64 %idxprom1083
  %615 = load i16****, i16***** %arrayidx1084, align 8
  %arrayidx1085 = getelementptr inbounds i16***, i16**** %615, i64 0
  %616 = load i16***, i16**** %arrayidx1085, align 8
  %arrayidx1086 = getelementptr inbounds i16**, i16*** %616, i64 0
  %617 = load i16**, i16*** %arrayidx1086, align 8
  %arrayidx1087 = getelementptr inbounds i16*, i16** %617, i64 0
  %618 = load i16*, i16** %arrayidx1087, align 8
  %arrayidx1088 = getelementptr inbounds i16, i16* %618, i64 0
  store i16 0, i16* %arrayidx1088, align 2
  %619 = load i16******, i16******* %all_mvs, align 8
  %620 = load i32, i32* %block_x, align 4
  %idxprom1089 = sext i32 %620 to i64
  %arrayidx1090 = getelementptr inbounds i16*****, i16****** %619, i64 %idxprom1089
  %621 = load i16*****, i16****** %arrayidx1090, align 8
  %622 = load i32, i32* %block_y, align 4
  %idxprom1091 = sext i32 %622 to i64
  %arrayidx1092 = getelementptr inbounds i16****, i16***** %621, i64 %idxprom1091
  %623 = load i16****, i16***** %arrayidx1092, align 8
  %arrayidx1093 = getelementptr inbounds i16***, i16**** %623, i64 0
  %624 = load i16***, i16**** %arrayidx1093, align 8
  %arrayidx1094 = getelementptr inbounds i16**, i16*** %624, i64 0
  %625 = load i16**, i16*** %arrayidx1094, align 8
  %arrayidx1095 = getelementptr inbounds i16*, i16** %625, i64 0
  %626 = load i16*, i16** %arrayidx1095, align 8
  %arrayidx1096 = getelementptr inbounds i16, i16* %626, i64 1
  store i16 0, i16* %arrayidx1096, align 2
  %627 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1097 = getelementptr inbounds i16**, i16*** %627, i64 0
  %628 = load i16**, i16*** %arrayidx1097, align 8
  %629 = load i32, i32* %pic_block_x, align 4
  %idxprom1098 = sext i32 %629 to i64
  %arrayidx1099 = getelementptr inbounds i16*, i16** %628, i64 %idxprom1098
  %630 = load i16*, i16** %arrayidx1099, align 8
  %631 = load i32, i32* %pic_block_y, align 4
  %idxprom1100 = sext i32 %631 to i64
  %arrayidx1101 = getelementptr inbounds i16, i16* %630, i64 %idxprom1100
  store i16 0, i16* %arrayidx1101, align 2
  br label %if.end1128

if.else1102:                                      ; preds = %land.lhs.true1074, %if.then1072
  %arrayidx1103 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvfw, i64 0, i64 0
  %632 = load i16, i16* %arrayidx1103, align 2
  %633 = load i16******, i16******* %all_mvs, align 8
  %634 = load i32, i32* %block_x, align 4
  %idxprom1104 = sext i32 %634 to i64
  %arrayidx1105 = getelementptr inbounds i16*****, i16****** %633, i64 %idxprom1104
  %635 = load i16*****, i16****** %arrayidx1105, align 8
  %636 = load i32, i32* %block_y, align 4
  %idxprom1106 = sext i32 %636 to i64
  %arrayidx1107 = getelementptr inbounds i16****, i16***** %635, i64 %idxprom1106
  %637 = load i16****, i16***** %arrayidx1107, align 8
  %arrayidx1108 = getelementptr inbounds i16***, i16**** %637, i64 0
  %638 = load i16***, i16**** %arrayidx1108, align 8
  %639 = load i16, i16* %fw_rFrame, align 2
  %idxprom1109 = sext i16 %639 to i64
  %arrayidx1110 = getelementptr inbounds i16**, i16*** %638, i64 %idxprom1109
  %640 = load i16**, i16*** %arrayidx1110, align 8
  %arrayidx1111 = getelementptr inbounds i16*, i16** %640, i64 0
  %641 = load i16*, i16** %arrayidx1111, align 8
  %arrayidx1112 = getelementptr inbounds i16, i16* %641, i64 0
  store i16 %632, i16* %arrayidx1112, align 2
  %arrayidx1113 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvfw, i64 0, i64 1
  %642 = load i16, i16* %arrayidx1113, align 2
  %643 = load i16******, i16******* %all_mvs, align 8
  %644 = load i32, i32* %block_x, align 4
  %idxprom1114 = sext i32 %644 to i64
  %arrayidx1115 = getelementptr inbounds i16*****, i16****** %643, i64 %idxprom1114
  %645 = load i16*****, i16****** %arrayidx1115, align 8
  %646 = load i32, i32* %block_y, align 4
  %idxprom1116 = sext i32 %646 to i64
  %arrayidx1117 = getelementptr inbounds i16****, i16***** %645, i64 %idxprom1116
  %647 = load i16****, i16***** %arrayidx1117, align 8
  %arrayidx1118 = getelementptr inbounds i16***, i16**** %647, i64 0
  %648 = load i16***, i16**** %arrayidx1118, align 8
  %649 = load i16, i16* %fw_rFrame, align 2
  %idxprom1119 = sext i16 %649 to i64
  %arrayidx1120 = getelementptr inbounds i16**, i16*** %648, i64 %idxprom1119
  %650 = load i16**, i16*** %arrayidx1120, align 8
  %arrayidx1121 = getelementptr inbounds i16*, i16** %650, i64 0
  %651 = load i16*, i16** %arrayidx1121, align 8
  %arrayidx1122 = getelementptr inbounds i16, i16* %651, i64 1
  store i16 %642, i16* %arrayidx1122, align 2
  %652 = load i16, i16* %fw_rFrame, align 2
  %653 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1123 = getelementptr inbounds i16**, i16*** %653, i64 0
  %654 = load i16**, i16*** %arrayidx1123, align 8
  %655 = load i32, i32* %pic_block_x, align 4
  %idxprom1124 = sext i32 %655 to i64
  %arrayidx1125 = getelementptr inbounds i16*, i16** %654, i64 %idxprom1124
  %656 = load i16*, i16** %arrayidx1125, align 8
  %657 = load i32, i32* %pic_block_y, align 4
  %idxprom1126 = sext i32 %657 to i64
  %arrayidx1127 = getelementptr inbounds i16, i16* %656, i64 %idxprom1126
  store i16 %652, i16* %arrayidx1127, align 2
  br label %if.end1128

if.end1128:                                       ; preds = %if.else1102, %if.then1080
  br label %if.end1151

if.else1129:                                      ; preds = %for.body1064
  %658 = load i16******, i16******* %all_mvs, align 8
  %659 = load i32, i32* %block_x, align 4
  %idxprom1130 = sext i32 %659 to i64
  %arrayidx1131 = getelementptr inbounds i16*****, i16****** %658, i64 %idxprom1130
  %660 = load i16*****, i16****** %arrayidx1131, align 8
  %661 = load i32, i32* %block_y, align 4
  %idxprom1132 = sext i32 %661 to i64
  %arrayidx1133 = getelementptr inbounds i16****, i16***** %660, i64 %idxprom1132
  %662 = load i16****, i16***** %arrayidx1133, align 8
  %arrayidx1134 = getelementptr inbounds i16***, i16**** %662, i64 0
  %663 = load i16***, i16**** %arrayidx1134, align 8
  %arrayidx1135 = getelementptr inbounds i16**, i16*** %663, i64 0
  %664 = load i16**, i16*** %arrayidx1135, align 8
  %arrayidx1136 = getelementptr inbounds i16*, i16** %664, i64 0
  %665 = load i16*, i16** %arrayidx1136, align 8
  %arrayidx1137 = getelementptr inbounds i16, i16* %665, i64 0
  store i16 0, i16* %arrayidx1137, align 2
  %666 = load i16******, i16******* %all_mvs, align 8
  %667 = load i32, i32* %block_x, align 4
  %idxprom1138 = sext i32 %667 to i64
  %arrayidx1139 = getelementptr inbounds i16*****, i16****** %666, i64 %idxprom1138
  %668 = load i16*****, i16****** %arrayidx1139, align 8
  %669 = load i32, i32* %block_y, align 4
  %idxprom1140 = sext i32 %669 to i64
  %arrayidx1141 = getelementptr inbounds i16****, i16***** %668, i64 %idxprom1140
  %670 = load i16****, i16***** %arrayidx1141, align 8
  %arrayidx1142 = getelementptr inbounds i16***, i16**** %670, i64 0
  %671 = load i16***, i16**** %arrayidx1142, align 8
  %arrayidx1143 = getelementptr inbounds i16**, i16*** %671, i64 0
  %672 = load i16**, i16*** %arrayidx1143, align 8
  %arrayidx1144 = getelementptr inbounds i16*, i16** %672, i64 0
  %673 = load i16*, i16** %arrayidx1144, align 8
  %arrayidx1145 = getelementptr inbounds i16, i16* %673, i64 1
  store i16 0, i16* %arrayidx1145, align 2
  %674 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1146 = getelementptr inbounds i16**, i16*** %674, i64 0
  %675 = load i16**, i16*** %arrayidx1146, align 8
  %676 = load i32, i32* %pic_block_x, align 4
  %idxprom1147 = sext i32 %676 to i64
  %arrayidx1148 = getelementptr inbounds i16*, i16** %675, i64 %idxprom1147
  %677 = load i16*, i16** %arrayidx1148, align 8
  %678 = load i32, i32* %pic_block_y, align 4
  %idxprom1149 = sext i32 %678 to i64
  %arrayidx1150 = getelementptr inbounds i16, i16* %677, i64 %idxprom1149
  store i16 -1, i16* %arrayidx1150, align 2
  br label %if.end1151

if.end1151:                                       ; preds = %if.else1129, %if.end1128
  %679 = load i16, i16* %bw_rFrame, align 2
  %conv1152 = sext i16 %679 to i32
  %cmp1153 = icmp sge i32 %conv1152, 0
  br i1 %cmp1153, label %if.then1155, label %if.else1214

if.then1155:                                      ; preds = %if.end1151
  %680 = load i16, i16* %bw_rFrame, align 2
  %conv1156 = sext i16 %680 to i32
  %cmp1157 = icmp eq i32 %conv1156, 0
  br i1 %cmp1157, label %land.lhs.true1159, label %if.else1187

land.lhs.true1159:                                ; preds = %if.then1155
  %681 = load i8**, i8*** %moving_block, align 8
  %682 = load i32, i32* %opic_block_x, align 4
  %idxprom1160 = sext i32 %682 to i64
  %arrayidx1161 = getelementptr inbounds i8*, i8** %681, i64 %idxprom1160
  %683 = load i8*, i8** %arrayidx1161, align 8
  %684 = load i32, i32* %opic_block_y, align 4
  %idxprom1162 = sext i32 %684 to i64
  %arrayidx1163 = getelementptr inbounds i8, i8* %683, i64 %idxprom1162
  %685 = load i8, i8* %arrayidx1163, align 1
  %tobool1164 = icmp ne i8 %685, 0
  br i1 %tobool1164, label %if.else1187, label %if.then1165

if.then1165:                                      ; preds = %land.lhs.true1159
  %686 = load i16******, i16******* %all_mvs, align 8
  %687 = load i32, i32* %block_x, align 4
  %idxprom1166 = sext i32 %687 to i64
  %arrayidx1167 = getelementptr inbounds i16*****, i16****** %686, i64 %idxprom1166
  %688 = load i16*****, i16****** %arrayidx1167, align 8
  %689 = load i32, i32* %block_y, align 4
  %idxprom1168 = sext i32 %689 to i64
  %arrayidx1169 = getelementptr inbounds i16****, i16***** %688, i64 %idxprom1168
  %690 = load i16****, i16***** %arrayidx1169, align 8
  %arrayidx1170 = getelementptr inbounds i16***, i16**** %690, i64 1
  %691 = load i16***, i16**** %arrayidx1170, align 8
  %arrayidx1171 = getelementptr inbounds i16**, i16*** %691, i64 0
  %692 = load i16**, i16*** %arrayidx1171, align 8
  %arrayidx1172 = getelementptr inbounds i16*, i16** %692, i64 0
  %693 = load i16*, i16** %arrayidx1172, align 8
  %arrayidx1173 = getelementptr inbounds i16, i16* %693, i64 0
  store i16 0, i16* %arrayidx1173, align 2
  %694 = load i16******, i16******* %all_mvs, align 8
  %695 = load i32, i32* %block_x, align 4
  %idxprom1174 = sext i32 %695 to i64
  %arrayidx1175 = getelementptr inbounds i16*****, i16****** %694, i64 %idxprom1174
  %696 = load i16*****, i16****** %arrayidx1175, align 8
  %697 = load i32, i32* %block_y, align 4
  %idxprom1176 = sext i32 %697 to i64
  %arrayidx1177 = getelementptr inbounds i16****, i16***** %696, i64 %idxprom1176
  %698 = load i16****, i16***** %arrayidx1177, align 8
  %arrayidx1178 = getelementptr inbounds i16***, i16**** %698, i64 1
  %699 = load i16***, i16**** %arrayidx1178, align 8
  %arrayidx1179 = getelementptr inbounds i16**, i16*** %699, i64 0
  %700 = load i16**, i16*** %arrayidx1179, align 8
  %arrayidx1180 = getelementptr inbounds i16*, i16** %700, i64 0
  %701 = load i16*, i16** %arrayidx1180, align 8
  %arrayidx1181 = getelementptr inbounds i16, i16* %701, i64 1
  store i16 0, i16* %arrayidx1181, align 2
  %702 = load i16, i16* %bw_rFrame, align 2
  %703 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1182 = getelementptr inbounds i16**, i16*** %703, i64 1
  %704 = load i16**, i16*** %arrayidx1182, align 8
  %705 = load i32, i32* %pic_block_x, align 4
  %idxprom1183 = sext i32 %705 to i64
  %arrayidx1184 = getelementptr inbounds i16*, i16** %704, i64 %idxprom1183
  %706 = load i16*, i16** %arrayidx1184, align 8
  %707 = load i32, i32* %pic_block_y, align 4
  %idxprom1185 = sext i32 %707 to i64
  %arrayidx1186 = getelementptr inbounds i16, i16* %706, i64 %idxprom1185
  store i16 %702, i16* %arrayidx1186, align 2
  br label %if.end1213

if.else1187:                                      ; preds = %land.lhs.true1159, %if.then1155
  %arrayidx1188 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvbw, i64 0, i64 0
  %708 = load i16, i16* %arrayidx1188, align 2
  %709 = load i16******, i16******* %all_mvs, align 8
  %710 = load i32, i32* %block_x, align 4
  %idxprom1189 = sext i32 %710 to i64
  %arrayidx1190 = getelementptr inbounds i16*****, i16****** %709, i64 %idxprom1189
  %711 = load i16*****, i16****** %arrayidx1190, align 8
  %712 = load i32, i32* %block_y, align 4
  %idxprom1191 = sext i32 %712 to i64
  %arrayidx1192 = getelementptr inbounds i16****, i16***** %711, i64 %idxprom1191
  %713 = load i16****, i16***** %arrayidx1192, align 8
  %arrayidx1193 = getelementptr inbounds i16***, i16**** %713, i64 1
  %714 = load i16***, i16**** %arrayidx1193, align 8
  %715 = load i16, i16* %bw_rFrame, align 2
  %idxprom1194 = sext i16 %715 to i64
  %arrayidx1195 = getelementptr inbounds i16**, i16*** %714, i64 %idxprom1194
  %716 = load i16**, i16*** %arrayidx1195, align 8
  %arrayidx1196 = getelementptr inbounds i16*, i16** %716, i64 0
  %717 = load i16*, i16** %arrayidx1196, align 8
  %arrayidx1197 = getelementptr inbounds i16, i16* %717, i64 0
  store i16 %708, i16* %arrayidx1197, align 2
  %arrayidx1198 = getelementptr inbounds [2 x i16], [2 x i16]* %pmvbw, i64 0, i64 1
  %718 = load i16, i16* %arrayidx1198, align 2
  %719 = load i16******, i16******* %all_mvs, align 8
  %720 = load i32, i32* %block_x, align 4
  %idxprom1199 = sext i32 %720 to i64
  %arrayidx1200 = getelementptr inbounds i16*****, i16****** %719, i64 %idxprom1199
  %721 = load i16*****, i16****** %arrayidx1200, align 8
  %722 = load i32, i32* %block_y, align 4
  %idxprom1201 = sext i32 %722 to i64
  %arrayidx1202 = getelementptr inbounds i16****, i16***** %721, i64 %idxprom1201
  %723 = load i16****, i16***** %arrayidx1202, align 8
  %arrayidx1203 = getelementptr inbounds i16***, i16**** %723, i64 1
  %724 = load i16***, i16**** %arrayidx1203, align 8
  %725 = load i16, i16* %bw_rFrame, align 2
  %idxprom1204 = sext i16 %725 to i64
  %arrayidx1205 = getelementptr inbounds i16**, i16*** %724, i64 %idxprom1204
  %726 = load i16**, i16*** %arrayidx1205, align 8
  %arrayidx1206 = getelementptr inbounds i16*, i16** %726, i64 0
  %727 = load i16*, i16** %arrayidx1206, align 8
  %arrayidx1207 = getelementptr inbounds i16, i16* %727, i64 1
  store i16 %718, i16* %arrayidx1207, align 2
  %728 = load i16, i16* %bw_rFrame, align 2
  %729 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1208 = getelementptr inbounds i16**, i16*** %729, i64 1
  %730 = load i16**, i16*** %arrayidx1208, align 8
  %731 = load i32, i32* %pic_block_x, align 4
  %idxprom1209 = sext i32 %731 to i64
  %arrayidx1210 = getelementptr inbounds i16*, i16** %730, i64 %idxprom1209
  %732 = load i16*, i16** %arrayidx1210, align 8
  %733 = load i32, i32* %pic_block_y, align 4
  %idxprom1211 = sext i32 %733 to i64
  %arrayidx1212 = getelementptr inbounds i16, i16* %732, i64 %idxprom1211
  store i16 %728, i16* %arrayidx1212, align 2
  br label %if.end1213

if.end1213:                                       ; preds = %if.else1187, %if.then1165
  br label %if.end1236

if.else1214:                                      ; preds = %if.end1151
  %734 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1215 = getelementptr inbounds i16**, i16*** %734, i64 1
  %735 = load i16**, i16*** %arrayidx1215, align 8
  %736 = load i32, i32* %pic_block_x, align 4
  %idxprom1216 = sext i32 %736 to i64
  %arrayidx1217 = getelementptr inbounds i16*, i16** %735, i64 %idxprom1216
  %737 = load i16*, i16** %arrayidx1217, align 8
  %738 = load i32, i32* %pic_block_y, align 4
  %idxprom1218 = sext i32 %738 to i64
  %arrayidx1219 = getelementptr inbounds i16, i16* %737, i64 %idxprom1218
  store i16 -1, i16* %arrayidx1219, align 2
  %739 = load i16******, i16******* %all_mvs, align 8
  %740 = load i32, i32* %block_x, align 4
  %idxprom1220 = sext i32 %740 to i64
  %arrayidx1221 = getelementptr inbounds i16*****, i16****** %739, i64 %idxprom1220
  %741 = load i16*****, i16****** %arrayidx1221, align 8
  %742 = load i32, i32* %block_y, align 4
  %idxprom1222 = sext i32 %742 to i64
  %arrayidx1223 = getelementptr inbounds i16****, i16***** %741, i64 %idxprom1222
  %743 = load i16****, i16***** %arrayidx1223, align 8
  %arrayidx1224 = getelementptr inbounds i16***, i16**** %743, i64 1
  %744 = load i16***, i16**** %arrayidx1224, align 8
  %arrayidx1225 = getelementptr inbounds i16**, i16*** %744, i64 0
  %745 = load i16**, i16*** %arrayidx1225, align 8
  %arrayidx1226 = getelementptr inbounds i16*, i16** %745, i64 0
  %746 = load i16*, i16** %arrayidx1226, align 8
  %arrayidx1227 = getelementptr inbounds i16, i16* %746, i64 0
  store i16 0, i16* %arrayidx1227, align 2
  %747 = load i16******, i16******* %all_mvs, align 8
  %748 = load i32, i32* %block_x, align 4
  %idxprom1228 = sext i32 %748 to i64
  %arrayidx1229 = getelementptr inbounds i16*****, i16****** %747, i64 %idxprom1228
  %749 = load i16*****, i16****** %arrayidx1229, align 8
  %750 = load i32, i32* %block_y, align 4
  %idxprom1230 = sext i32 %750 to i64
  %arrayidx1231 = getelementptr inbounds i16****, i16***** %749, i64 %idxprom1230
  %751 = load i16****, i16***** %arrayidx1231, align 8
  %arrayidx1232 = getelementptr inbounds i16***, i16**** %751, i64 1
  %752 = load i16***, i16**** %arrayidx1232, align 8
  %arrayidx1233 = getelementptr inbounds i16**, i16*** %752, i64 0
  %753 = load i16**, i16*** %arrayidx1233, align 8
  %arrayidx1234 = getelementptr inbounds i16*, i16** %753, i64 0
  %754 = load i16*, i16** %arrayidx1234, align 8
  %arrayidx1235 = getelementptr inbounds i16, i16* %754, i64 1
  store i16 0, i16* %arrayidx1235, align 2
  br label %if.end1236

if.end1236:                                       ; preds = %if.else1214, %if.end1213
  %755 = load i16, i16* %fw_rFrame, align 2
  %conv1237 = sext i16 %755 to i32
  %cmp1238 = icmp slt i32 %conv1237, 0
  br i1 %cmp1238, label %land.lhs.true1240, label %if.end1255

land.lhs.true1240:                                ; preds = %if.end1236
  %756 = load i16, i16* %bw_rFrame, align 2
  %conv1241 = sext i16 %756 to i32
  %cmp1242 = icmp slt i32 %conv1241, 0
  br i1 %cmp1242, label %if.then1244, label %if.end1255

if.then1244:                                      ; preds = %land.lhs.true1240
  %757 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1245 = getelementptr inbounds i16**, i16*** %757, i64 1
  %758 = load i16**, i16*** %arrayidx1245, align 8
  %759 = load i32, i32* %pic_block_x, align 4
  %idxprom1246 = sext i32 %759 to i64
  %arrayidx1247 = getelementptr inbounds i16*, i16** %758, i64 %idxprom1246
  %760 = load i16*, i16** %arrayidx1247, align 8
  %761 = load i32, i32* %pic_block_y, align 4
  %idxprom1248 = sext i32 %761 to i64
  %arrayidx1249 = getelementptr inbounds i16, i16* %760, i64 %idxprom1248
  store i16 0, i16* %arrayidx1249, align 2
  %762 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1250 = getelementptr inbounds i16**, i16*** %762, i64 0
  %763 = load i16**, i16*** %arrayidx1250, align 8
  %764 = load i32, i32* %pic_block_x, align 4
  %idxprom1251 = sext i32 %764 to i64
  %arrayidx1252 = getelementptr inbounds i16*, i16** %763, i64 %idxprom1251
  %765 = load i16*, i16** %arrayidx1252, align 8
  %766 = load i32, i32* %pic_block_y, align 4
  %idxprom1253 = sext i32 %766 to i64
  %arrayidx1254 = getelementptr inbounds i16, i16* %765, i64 %idxprom1253
  store i16 0, i16* %arrayidx1254, align 2
  br label %if.end1255

if.end1255:                                       ; preds = %if.then1244, %land.lhs.true1240, %if.end1236
  %767 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1256 = getelementptr inbounds i16**, i16*** %767, i64 1
  %768 = load i16**, i16*** %arrayidx1256, align 8
  %769 = load i32, i32* %pic_block_x, align 4
  %idxprom1257 = sext i32 %769 to i64
  %arrayidx1258 = getelementptr inbounds i16*, i16** %768, i64 %idxprom1257
  %770 = load i16*, i16** %arrayidx1258, align 8
  %771 = load i32, i32* %pic_block_y, align 4
  %idxprom1259 = sext i32 %771 to i64
  %arrayidx1260 = getelementptr inbounds i16, i16* %770, i64 %idxprom1259
  %772 = load i16, i16* %arrayidx1260, align 2
  %conv1261 = sext i16 %772 to i32
  %cmp1262 = icmp eq i32 %conv1261, -1
  br i1 %cmp1262, label %if.then1264, label %if.else1269

if.then1264:                                      ; preds = %if.end1255
  %773 = load i16**, i16*** @direct_pdir, align 8
  %774 = load i32, i32* %pic_block_x, align 4
  %idxprom1265 = sext i32 %774 to i64
  %arrayidx1266 = getelementptr inbounds i16*, i16** %773, i64 %idxprom1265
  %775 = load i16*, i16** %arrayidx1266, align 8
  %776 = load i32, i32* %pic_block_y, align 4
  %idxprom1267 = sext i32 %776 to i64
  %arrayidx1268 = getelementptr inbounds i16, i16* %775, i64 %idxprom1267
  store i16 0, i16* %arrayidx1268, align 2
  br label %if.end1289

if.else1269:                                      ; preds = %if.end1255
  %777 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1270 = getelementptr inbounds i16**, i16*** %777, i64 0
  %778 = load i16**, i16*** %arrayidx1270, align 8
  %779 = load i32, i32* %pic_block_x, align 4
  %idxprom1271 = sext i32 %779 to i64
  %arrayidx1272 = getelementptr inbounds i16*, i16** %778, i64 %idxprom1271
  %780 = load i16*, i16** %arrayidx1272, align 8
  %781 = load i32, i32* %pic_block_y, align 4
  %idxprom1273 = sext i32 %781 to i64
  %arrayidx1274 = getelementptr inbounds i16, i16* %780, i64 %idxprom1273
  %782 = load i16, i16* %arrayidx1274, align 2
  %conv1275 = sext i16 %782 to i32
  %cmp1276 = icmp eq i32 %conv1275, -1
  br i1 %cmp1276, label %if.then1278, label %if.else1283

if.then1278:                                      ; preds = %if.else1269
  %783 = load i16**, i16*** @direct_pdir, align 8
  %784 = load i32, i32* %pic_block_x, align 4
  %idxprom1279 = sext i32 %784 to i64
  %arrayidx1280 = getelementptr inbounds i16*, i16** %783, i64 %idxprom1279
  %785 = load i16*, i16** %arrayidx1280, align 8
  %786 = load i32, i32* %pic_block_y, align 4
  %idxprom1281 = sext i32 %786 to i64
  %arrayidx1282 = getelementptr inbounds i16, i16* %785, i64 %idxprom1281
  store i16 1, i16* %arrayidx1282, align 2
  br label %if.end1288

if.else1283:                                      ; preds = %if.else1269
  %787 = load i16**, i16*** @direct_pdir, align 8
  %788 = load i32, i32* %pic_block_x, align 4
  %idxprom1284 = sext i32 %788 to i64
  %arrayidx1285 = getelementptr inbounds i16*, i16** %787, i64 %idxprom1284
  %789 = load i16*, i16** %arrayidx1285, align 8
  %790 = load i32, i32* %pic_block_y, align 4
  %idxprom1286 = sext i32 %790 to i64
  %arrayidx1287 = getelementptr inbounds i16, i16* %789, i64 %idxprom1286
  store i16 2, i16* %arrayidx1287, align 2
  br label %if.end1288

if.end1288:                                       ; preds = %if.else1283, %if.then1278
  br label %if.end1289

if.end1289:                                       ; preds = %if.end1288, %if.then1264
  br label %for.inc

for.inc:                                          ; preds = %if.end1289
  %791 = load i32, i32* %block_x, align 4
  %inc = add nsw i32 %791, 1
  store i32 %inc, i32* %block_x, align 4
  br label %for.cond1061

for.end:                                          ; preds = %for.cond1061
  br label %for.inc1290

for.inc1290:                                      ; preds = %for.end
  %792 = load i32, i32* %block_y, align 4
  %inc1291 = add nsw i32 %792, 1
  store i32 %inc1291, i32* %block_y, align 4
  br label %for.cond

for.end1292:                                      ; preds = %for.cond
  br label %if.end1610

if.else1293:                                      ; preds = %if.end7
  store i32 0, i32* %block_y, align 4
  br label %for.cond1294

for.cond1294:                                     ; preds = %for.inc1607, %if.else1293
  %793 = load i32, i32* %block_y, align 4
  %cmp1295 = icmp slt i32 %793, 4
  br i1 %cmp1295, label %for.body1297, label %for.end1609

for.body1297:                                     ; preds = %for.cond1294
  %794 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_y1298 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %794, i32 0, i32 34
  %795 = load i32, i32* %pix_y1298, align 4
  %shr1299 = ashr i32 %795, 2
  %796 = load i32, i32* %block_y, align 4
  %add1300 = add nsw i32 %shr1299, %796
  store i32 %add1300, i32* %pic_block_y, align 4
  %797 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_y1301 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %797, i32 0, i32 38
  %798 = load i32, i32* %opix_y1301, align 4
  %shr1302 = ashr i32 %798, 2
  %799 = load i32, i32* %block_y, align 4
  %add1303 = add nsw i32 %shr1302, %799
  store i32 %add1303, i32* %opic_block_y, align 4
  store i32 0, i32* %block_x, align 4
  br label %for.cond1304

for.cond1304:                                     ; preds = %for.inc1604, %for.body1297
  %800 = load i32, i32* %block_x, align 4
  %cmp1305 = icmp slt i32 %800, 4
  br i1 %cmp1305, label %for.body1307, label %for.end1606

for.body1307:                                     ; preds = %for.cond1304
  %801 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MbaffFrameFlag1309 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %801, i32 0, i32 90
  %802 = load i32, i32* %MbaffFrameFlag1309, align 8
  %tobool1310 = icmp ne i32 %802, 0
  br i1 %tobool1310, label %land.lhs.true1311, label %cond.false1319

land.lhs.true1311:                                ; preds = %for.body1307
  %803 = load %struct.macroblock*, %struct.macroblock** %currMB, align 8
  %mb_field1312 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %803, i32 0, i32 22
  %804 = load i32, i32* %mb_field1312, align 4
  %tobool1313 = icmp ne i32 %804, 0
  br i1 %tobool1313, label %cond.true1314, label %cond.false1319

cond.true1314:                                    ; preds = %land.lhs.true1311
  %805 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %current_mb_nr1315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %805, i32 0, i32 3
  %806 = load i32, i32* %current_mb_nr1315, align 4
  %rem1316 = srem i32 %806, 2
  %tobool1317 = icmp ne i32 %rem1316, 0
  %807 = zext i1 %tobool1317 to i64
  %cond1318 = select i1 %tobool1317, i32 4, i32 2
  br label %cond.end1320

cond.false1319:                                   ; preds = %land.lhs.true1311, %for.body1307
  br label %cond.end1320

cond.end1320:                                     ; preds = %cond.false1319, %cond.true1314
  %cond1321 = phi i32 [ %cond1318, %cond.true1314 ], [ 0, %cond.false1319 ]
  store i32 %cond1321, i32* %list_offset, align 4
  %808 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %pix_x1322 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %808, i32 0, i32 33
  %809 = load i32, i32* %pix_x1322, align 8
  %shr1323 = ashr i32 %809, 2
  %810 = load i32, i32* %block_x, align 4
  %add1324 = add nsw i32 %shr1323, %810
  store i32 %add1324, i32* %pic_block_x, align 4
  %811 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %opix_x1325 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %811, i32 0, i32 37
  %812 = load i32, i32* %opix_x1325, align 8
  %shr1326 = ashr i32 %812, 2
  %813 = load i32, i32* %block_x, align 4
  %add1327 = add nsw i32 %shr1326, %813
  store i32 %add1327, i32* %opic_block_x, align 4
  %814 = load i16***, i16**** %co_located_ref_idx, align 8
  %arrayidx1328 = getelementptr inbounds i16**, i16*** %814, i64 0
  %815 = load i16**, i16*** %arrayidx1328, align 8
  %816 = load i32, i32* %opic_block_x, align 4
  %idxprom1329 = sext i32 %816 to i64
  %arrayidx1330 = getelementptr inbounds i16*, i16** %815, i64 %idxprom1329
  %817 = load i16*, i16** %arrayidx1330, align 8
  %818 = load i32, i32* %opic_block_y, align 4
  %idxprom1331 = sext i32 %818 to i64
  %arrayidx1332 = getelementptr inbounds i16, i16* %817, i64 %idxprom1331
  %819 = load i16, i16* %arrayidx1332, align 2
  %conv1333 = sext i16 %819 to i32
  %cmp1334 = icmp eq i32 %conv1333, -1
  %820 = zext i1 %cmp1334 to i64
  %cond1336 = select i1 %cmp1334, i32 1, i32 0
  store i32 %cond1336, i32* %refList, align 4
  %821 = load i16***, i16**** %co_located_ref_idx, align 8
  %822 = load i32, i32* %refList, align 4
  %idxprom1337 = sext i32 %822 to i64
  %arrayidx1338 = getelementptr inbounds i16**, i16*** %821, i64 %idxprom1337
  %823 = load i16**, i16*** %arrayidx1338, align 8
  %824 = load i32, i32* %opic_block_x, align 4
  %idxprom1339 = sext i32 %824 to i64
  %arrayidx1340 = getelementptr inbounds i16*, i16** %823, i64 %idxprom1339
  %825 = load i16*, i16** %arrayidx1340, align 8
  %826 = load i32, i32* %opic_block_y, align 4
  %idxprom1341 = sext i32 %826 to i64
  %arrayidx1342 = getelementptr inbounds i16, i16* %825, i64 %idxprom1341
  %827 = load i16, i16* %arrayidx1342, align 2
  %conv1343 = sext i16 %827 to i32
  store i32 %conv1343, i32* %ref_idx1308, align 4
  %828 = load i32, i32* %ref_idx1308, align 4
  %cmp1344 = icmp eq i32 %828, -1
  br i1 %cmp1344, label %if.then1346, label %if.else1393

if.then1346:                                      ; preds = %cond.end1320
  %829 = load i16******, i16******* %all_mvs, align 8
  %830 = load i32, i32* %block_x, align 4
  %idxprom1347 = sext i32 %830 to i64
  %arrayidx1348 = getelementptr inbounds i16*****, i16****** %829, i64 %idxprom1347
  %831 = load i16*****, i16****** %arrayidx1348, align 8
  %832 = load i32, i32* %block_y, align 4
  %idxprom1349 = sext i32 %832 to i64
  %arrayidx1350 = getelementptr inbounds i16****, i16***** %831, i64 %idxprom1349
  %833 = load i16****, i16***** %arrayidx1350, align 8
  %arrayidx1351 = getelementptr inbounds i16***, i16**** %833, i64 0
  %834 = load i16***, i16**** %arrayidx1351, align 8
  %arrayidx1352 = getelementptr inbounds i16**, i16*** %834, i64 0
  %835 = load i16**, i16*** %arrayidx1352, align 8
  %arrayidx1353 = getelementptr inbounds i16*, i16** %835, i64 0
  %836 = load i16*, i16** %arrayidx1353, align 8
  %arrayidx1354 = getelementptr inbounds i16, i16* %836, i64 0
  store i16 0, i16* %arrayidx1354, align 2
  %837 = load i16******, i16******* %all_mvs, align 8
  %838 = load i32, i32* %block_x, align 4
  %idxprom1355 = sext i32 %838 to i64
  %arrayidx1356 = getelementptr inbounds i16*****, i16****** %837, i64 %idxprom1355
  %839 = load i16*****, i16****** %arrayidx1356, align 8
  %840 = load i32, i32* %block_y, align 4
  %idxprom1357 = sext i32 %840 to i64
  %arrayidx1358 = getelementptr inbounds i16****, i16***** %839, i64 %idxprom1357
  %841 = load i16****, i16***** %arrayidx1358, align 8
  %arrayidx1359 = getelementptr inbounds i16***, i16**** %841, i64 0
  %842 = load i16***, i16**** %arrayidx1359, align 8
  %arrayidx1360 = getelementptr inbounds i16**, i16*** %842, i64 0
  %843 = load i16**, i16*** %arrayidx1360, align 8
  %arrayidx1361 = getelementptr inbounds i16*, i16** %843, i64 0
  %844 = load i16*, i16** %arrayidx1361, align 8
  %arrayidx1362 = getelementptr inbounds i16, i16* %844, i64 1
  store i16 0, i16* %arrayidx1362, align 2
  %845 = load i16******, i16******* %all_mvs, align 8
  %846 = load i32, i32* %block_x, align 4
  %idxprom1363 = sext i32 %846 to i64
  %arrayidx1364 = getelementptr inbounds i16*****, i16****** %845, i64 %idxprom1363
  %847 = load i16*****, i16****** %arrayidx1364, align 8
  %848 = load i32, i32* %block_y, align 4
  %idxprom1365 = sext i32 %848 to i64
  %arrayidx1366 = getelementptr inbounds i16****, i16***** %847, i64 %idxprom1365
  %849 = load i16****, i16***** %arrayidx1366, align 8
  %arrayidx1367 = getelementptr inbounds i16***, i16**** %849, i64 1
  %850 = load i16***, i16**** %arrayidx1367, align 8
  %arrayidx1368 = getelementptr inbounds i16**, i16*** %850, i64 0
  %851 = load i16**, i16*** %arrayidx1368, align 8
  %arrayidx1369 = getelementptr inbounds i16*, i16** %851, i64 0
  %852 = load i16*, i16** %arrayidx1369, align 8
  %arrayidx1370 = getelementptr inbounds i16, i16* %852, i64 0
  store i16 0, i16* %arrayidx1370, align 2
  %853 = load i16******, i16******* %all_mvs, align 8
  %854 = load i32, i32* %block_x, align 4
  %idxprom1371 = sext i32 %854 to i64
  %arrayidx1372 = getelementptr inbounds i16*****, i16****** %853, i64 %idxprom1371
  %855 = load i16*****, i16****** %arrayidx1372, align 8
  %856 = load i32, i32* %block_y, align 4
  %idxprom1373 = sext i32 %856 to i64
  %arrayidx1374 = getelementptr inbounds i16****, i16***** %855, i64 %idxprom1373
  %857 = load i16****, i16***** %arrayidx1374, align 8
  %arrayidx1375 = getelementptr inbounds i16***, i16**** %857, i64 1
  %858 = load i16***, i16**** %arrayidx1375, align 8
  %arrayidx1376 = getelementptr inbounds i16**, i16*** %858, i64 0
  %859 = load i16**, i16*** %arrayidx1376, align 8
  %arrayidx1377 = getelementptr inbounds i16*, i16** %859, i64 0
  %860 = load i16*, i16** %arrayidx1377, align 8
  %arrayidx1378 = getelementptr inbounds i16, i16* %860, i64 1
  store i16 0, i16* %arrayidx1378, align 2
  %861 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1379 = getelementptr inbounds i16**, i16*** %861, i64 0
  %862 = load i16**, i16*** %arrayidx1379, align 8
  %863 = load i32, i32* %pic_block_x, align 4
  %idxprom1380 = sext i32 %863 to i64
  %arrayidx1381 = getelementptr inbounds i16*, i16** %862, i64 %idxprom1380
  %864 = load i16*, i16** %arrayidx1381, align 8
  %865 = load i32, i32* %pic_block_y, align 4
  %idxprom1382 = sext i32 %865 to i64
  %arrayidx1383 = getelementptr inbounds i16, i16* %864, i64 %idxprom1382
  store i16 0, i16* %arrayidx1383, align 2
  %866 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1384 = getelementptr inbounds i16**, i16*** %866, i64 1
  %867 = load i16**, i16*** %arrayidx1384, align 8
  %868 = load i32, i32* %pic_block_x, align 4
  %idxprom1385 = sext i32 %868 to i64
  %arrayidx1386 = getelementptr inbounds i16*, i16** %867, i64 %idxprom1385
  %869 = load i16*, i16** %arrayidx1386, align 8
  %870 = load i32, i32* %pic_block_y, align 4
  %idxprom1387 = sext i32 %870 to i64
  %arrayidx1388 = getelementptr inbounds i16, i16* %869, i64 %idxprom1387
  store i16 0, i16* %arrayidx1388, align 2
  %871 = load i16**, i16*** @direct_pdir, align 8
  %872 = load i32, i32* %pic_block_x, align 4
  %idxprom1389 = sext i32 %872 to i64
  %arrayidx1390 = getelementptr inbounds i16*, i16** %871, i64 %idxprom1389
  %873 = load i16*, i16** %arrayidx1390, align 8
  %874 = load i32, i32* %pic_block_y, align 4
  %idxprom1391 = sext i32 %874 to i64
  %arrayidx1392 = getelementptr inbounds i16, i16* %873, i64 %idxprom1391
  store i16 2, i16* %arrayidx1392, align 2
  br label %if.end1603

if.else1393:                                      ; preds = %cond.end1320
  store i32 -135792468, i32* %mapped_idx, align 4
  store i32 0, i32* %iref, align 4
  br label %for.cond1394

for.cond1394:                                     ; preds = %for.inc1427, %if.else1393
  %875 = load i32, i32* %iref, align 4
  %876 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_ref_idx_l0_active = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %876, i32 0, i32 79
  %877 = load i32, i32* %num_ref_idx_l0_active, align 8
  %878 = load i32, i32* %list_offset, align 4
  %add1395 = add nsw i32 0, %878
  %idxprom1396 = sext i32 %add1395 to i64
  %arrayidx1397 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i64 0, i64 %idxprom1396
  %879 = load i32, i32* %arrayidx1397, align 4
  %cmp1398 = icmp slt i32 %877, %879
  br i1 %cmp1398, label %cond.true1400, label %cond.false1402

cond.true1400:                                    ; preds = %for.cond1394
  %880 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %num_ref_idx_l0_active1401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %880, i32 0, i32 79
  %881 = load i32, i32* %num_ref_idx_l0_active1401, align 8
  br label %cond.end1406

cond.false1402:                                   ; preds = %for.cond1394
  %882 = load i32, i32* %list_offset, align 4
  %add1403 = add nsw i32 0, %882
  %idxprom1404 = sext i32 %add1403 to i64
  %arrayidx1405 = getelementptr inbounds [6 x i32], [6 x i32]* @listXsize, i64 0, i64 %idxprom1404
  %883 = load i32, i32* %arrayidx1405, align 4
  br label %cond.end1406

cond.end1406:                                     ; preds = %cond.false1402, %cond.true1400
  %cond1407 = phi i32 [ %881, %cond.true1400 ], [ %883, %cond.false1402 ]
  %cmp1408 = icmp slt i32 %875, %cond1407
  br i1 %cmp1408, label %for.body1410, label %for.end1429

for.body1410:                                     ; preds = %cond.end1406
  %884 = load %struct.storable_picture*, %struct.storable_picture** @enc_picture, align 8
  %ref_pic_num = getelementptr inbounds %struct.storable_picture, %struct.storable_picture* %884, i32 0, i32 6
  %885 = load i32, i32* %list_offset, align 4
  %add1411 = add nsw i32 0, %885
  %idxprom1412 = sext i32 %add1411 to i64
  %arrayidx1413 = getelementptr inbounds [6 x [33 x i64]], [6 x [33 x i64]]* %ref_pic_num, i64 0, i64 %idxprom1412
  %886 = load i32, i32* %iref, align 4
  %idxprom1414 = sext i32 %886 to i64
  %arrayidx1415 = getelementptr inbounds [33 x i64], [33 x i64]* %arrayidx1413, i64 0, i64 %idxprom1414
  %887 = load i64, i64* %arrayidx1415, align 8
  %888 = load i64***, i64**** %co_located_ref_id, align 8
  %889 = load i32, i32* %refList, align 4
  %idxprom1416 = sext i32 %889 to i64
  %arrayidx1417 = getelementptr inbounds i64**, i64*** %888, i64 %idxprom1416
  %890 = load i64**, i64*** %arrayidx1417, align 8
  %891 = load i32, i32* %opic_block_x, align 4
  %idxprom1418 = sext i32 %891 to i64
  %arrayidx1419 = getelementptr inbounds i64*, i64** %890, i64 %idxprom1418
  %892 = load i64*, i64** %arrayidx1419, align 8
  %893 = load i32, i32* %opic_block_y, align 4
  %idxprom1420 = sext i32 %893 to i64
  %arrayidx1421 = getelementptr inbounds i64, i64* %892, i64 %idxprom1420
  %894 = load i64, i64* %arrayidx1421, align 8
  %cmp1422 = icmp eq i64 %887, %894
  br i1 %cmp1422, label %if.then1424, label %if.else1425

if.then1424:                                      ; preds = %for.body1410
  %895 = load i32, i32* %iref, align 4
  store i32 %895, i32* %mapped_idx, align 4
  br label %for.end1429

if.else1425:                                      ; preds = %for.body1410
  store i32 -135792468, i32* %mapped_idx, align 4
  br label %if.end1426

if.end1426:                                       ; preds = %if.else1425
  br label %for.inc1427

for.inc1427:                                      ; preds = %if.end1426
  %896 = load i32, i32* %iref, align 4
  %inc1428 = add nsw i32 %896, 1
  store i32 %inc1428, i32* %iref, align 4
  br label %for.cond1394

for.end1429:                                      ; preds = %if.then1424, %cond.end1406
  %897 = load i32, i32* %mapped_idx, align 4
  %cmp1430 = icmp ne i32 %897, -135792468
  br i1 %cmp1430, label %if.then1432, label %if.else1587

if.then1432:                                      ; preds = %for.end1429
  %898 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %mvscale = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %898, i32 0, i32 83
  %899 = load i32, i32* %list_offset, align 4
  %add1433 = add nsw i32 0, %899
  %idxprom1434 = sext i32 %add1433 to i64
  %arrayidx1435 = getelementptr inbounds [6 x [15 x i32]], [6 x [15 x i32]]* %mvscale, i64 0, i64 %idxprom1434
  %900 = load i32, i32* %mapped_idx, align 4
  %idxprom1436 = sext i32 %900 to i64
  %arrayidx1437 = getelementptr inbounds [15 x i32], [15 x i32]* %arrayidx1435, i64 0, i64 %idxprom1436
  %901 = load i32, i32* %arrayidx1437, align 4
  store i32 %901, i32* %mv_scale, align 4
  %902 = load i32, i32* %mv_scale, align 4
  %cmp1438 = icmp eq i32 %902, 9999
  br i1 %cmp1438, label %if.then1440, label %if.else1487

if.then1440:                                      ; preds = %if.then1432
  %903 = load i16****, i16***** %co_located_mv, align 8
  %904 = load i32, i32* %refList, align 4
  %idxprom1441 = sext i32 %904 to i64
  %arrayidx1442 = getelementptr inbounds i16***, i16**** %903, i64 %idxprom1441
  %905 = load i16***, i16**** %arrayidx1442, align 8
  %906 = load i32, i32* %opic_block_x, align 4
  %idxprom1443 = sext i32 %906 to i64
  %arrayidx1444 = getelementptr inbounds i16**, i16*** %905, i64 %idxprom1443
  %907 = load i16**, i16*** %arrayidx1444, align 8
  %908 = load i32, i32* %opic_block_y, align 4
  %idxprom1445 = sext i32 %908 to i64
  %arrayidx1446 = getelementptr inbounds i16*, i16** %907, i64 %idxprom1445
  %909 = load i16*, i16** %arrayidx1446, align 8
  %arrayidx1447 = getelementptr inbounds i16, i16* %909, i64 0
  %910 = load i16, i16* %arrayidx1447, align 2
  %911 = load i16******, i16******* %all_mvs, align 8
  %912 = load i32, i32* %block_x, align 4
  %idxprom1448 = sext i32 %912 to i64
  %arrayidx1449 = getelementptr inbounds i16*****, i16****** %911, i64 %idxprom1448
  %913 = load i16*****, i16****** %arrayidx1449, align 8
  %914 = load i32, i32* %block_y, align 4
  %idxprom1450 = sext i32 %914 to i64
  %arrayidx1451 = getelementptr inbounds i16****, i16***** %913, i64 %idxprom1450
  %915 = load i16****, i16***** %arrayidx1451, align 8
  %arrayidx1452 = getelementptr inbounds i16***, i16**** %915, i64 0
  %916 = load i16***, i16**** %arrayidx1452, align 8
  %arrayidx1453 = getelementptr inbounds i16**, i16*** %916, i64 0
  %917 = load i16**, i16*** %arrayidx1453, align 8
  %arrayidx1454 = getelementptr inbounds i16*, i16** %917, i64 0
  %918 = load i16*, i16** %arrayidx1454, align 8
  %arrayidx1455 = getelementptr inbounds i16, i16* %918, i64 0
  store i16 %910, i16* %arrayidx1455, align 2
  %919 = load i16****, i16***** %co_located_mv, align 8
  %920 = load i32, i32* %refList, align 4
  %idxprom1456 = sext i32 %920 to i64
  %arrayidx1457 = getelementptr inbounds i16***, i16**** %919, i64 %idxprom1456
  %921 = load i16***, i16**** %arrayidx1457, align 8
  %922 = load i32, i32* %opic_block_x, align 4
  %idxprom1458 = sext i32 %922 to i64
  %arrayidx1459 = getelementptr inbounds i16**, i16*** %921, i64 %idxprom1458
  %923 = load i16**, i16*** %arrayidx1459, align 8
  %924 = load i32, i32* %opic_block_y, align 4
  %idxprom1460 = sext i32 %924 to i64
  %arrayidx1461 = getelementptr inbounds i16*, i16** %923, i64 %idxprom1460
  %925 = load i16*, i16** %arrayidx1461, align 8
  %arrayidx1462 = getelementptr inbounds i16, i16* %925, i64 1
  %926 = load i16, i16* %arrayidx1462, align 2
  %927 = load i16******, i16******* %all_mvs, align 8
  %928 = load i32, i32* %block_x, align 4
  %idxprom1463 = sext i32 %928 to i64
  %arrayidx1464 = getelementptr inbounds i16*****, i16****** %927, i64 %idxprom1463
  %929 = load i16*****, i16****** %arrayidx1464, align 8
  %930 = load i32, i32* %block_y, align 4
  %idxprom1465 = sext i32 %930 to i64
  %arrayidx1466 = getelementptr inbounds i16****, i16***** %929, i64 %idxprom1465
  %931 = load i16****, i16***** %arrayidx1466, align 8
  %arrayidx1467 = getelementptr inbounds i16***, i16**** %931, i64 0
  %932 = load i16***, i16**** %arrayidx1467, align 8
  %arrayidx1468 = getelementptr inbounds i16**, i16*** %932, i64 0
  %933 = load i16**, i16*** %arrayidx1468, align 8
  %arrayidx1469 = getelementptr inbounds i16*, i16** %933, i64 0
  %934 = load i16*, i16** %arrayidx1469, align 8
  %arrayidx1470 = getelementptr inbounds i16, i16* %934, i64 1
  store i16 %926, i16* %arrayidx1470, align 2
  %935 = load i16******, i16******* %all_mvs, align 8
  %936 = load i32, i32* %block_x, align 4
  %idxprom1471 = sext i32 %936 to i64
  %arrayidx1472 = getelementptr inbounds i16*****, i16****** %935, i64 %idxprom1471
  %937 = load i16*****, i16****** %arrayidx1472, align 8
  %938 = load i32, i32* %block_y, align 4
  %idxprom1473 = sext i32 %938 to i64
  %arrayidx1474 = getelementptr inbounds i16****, i16***** %937, i64 %idxprom1473
  %939 = load i16****, i16***** %arrayidx1474, align 8
  %arrayidx1475 = getelementptr inbounds i16***, i16**** %939, i64 1
  %940 = load i16***, i16**** %arrayidx1475, align 8
  %arrayidx1476 = getelementptr inbounds i16**, i16*** %940, i64 0
  %941 = load i16**, i16*** %arrayidx1476, align 8
  %arrayidx1477 = getelementptr inbounds i16*, i16** %941, i64 0
  %942 = load i16*, i16** %arrayidx1477, align 8
  %arrayidx1478 = getelementptr inbounds i16, i16* %942, i64 0
  store i16 0, i16* %arrayidx1478, align 2
  %943 = load i16******, i16******* %all_mvs, align 8
  %944 = load i32, i32* %block_x, align 4
  %idxprom1479 = sext i32 %944 to i64
  %arrayidx1480 = getelementptr inbounds i16*****, i16****** %943, i64 %idxprom1479
  %945 = load i16*****, i16****** %arrayidx1480, align 8
  %946 = load i32, i32* %block_y, align 4
  %idxprom1481 = sext i32 %946 to i64
  %arrayidx1482 = getelementptr inbounds i16****, i16***** %945, i64 %idxprom1481
  %947 = load i16****, i16***** %arrayidx1482, align 8
  %arrayidx1483 = getelementptr inbounds i16***, i16**** %947, i64 1
  %948 = load i16***, i16**** %arrayidx1483, align 8
  %arrayidx1484 = getelementptr inbounds i16**, i16*** %948, i64 0
  %949 = load i16**, i16*** %arrayidx1484, align 8
  %arrayidx1485 = getelementptr inbounds i16*, i16** %949, i64 0
  %950 = load i16*, i16** %arrayidx1485, align 8
  %arrayidx1486 = getelementptr inbounds i16, i16* %950, i64 1
  store i16 0, i16* %arrayidx1486, align 2
  br label %if.end1571

if.else1487:                                      ; preds = %if.then1432
  %951 = load i32, i32* %mv_scale, align 4
  %952 = load i16****, i16***** %co_located_mv, align 8
  %953 = load i32, i32* %refList, align 4
  %idxprom1488 = sext i32 %953 to i64
  %arrayidx1489 = getelementptr inbounds i16***, i16**** %952, i64 %idxprom1488
  %954 = load i16***, i16**** %arrayidx1489, align 8
  %955 = load i32, i32* %opic_block_x, align 4
  %idxprom1490 = sext i32 %955 to i64
  %arrayidx1491 = getelementptr inbounds i16**, i16*** %954, i64 %idxprom1490
  %956 = load i16**, i16*** %arrayidx1491, align 8
  %957 = load i32, i32* %opic_block_y, align 4
  %idxprom1492 = sext i32 %957 to i64
  %arrayidx1493 = getelementptr inbounds i16*, i16** %956, i64 %idxprom1492
  %958 = load i16*, i16** %arrayidx1493, align 8
  %arrayidx1494 = getelementptr inbounds i16, i16* %958, i64 0
  %959 = load i16, i16* %arrayidx1494, align 2
  %conv1495 = sext i16 %959 to i32
  %mul1496 = mul nsw i32 %951, %conv1495
  %add1497 = add nsw i32 %mul1496, 128
  %shr1498 = ashr i32 %add1497, 8
  %conv1499 = trunc i32 %shr1498 to i16
  %960 = load i16******, i16******* %all_mvs, align 8
  %961 = load i32, i32* %block_x, align 4
  %idxprom1500 = sext i32 %961 to i64
  %arrayidx1501 = getelementptr inbounds i16*****, i16****** %960, i64 %idxprom1500
  %962 = load i16*****, i16****** %arrayidx1501, align 8
  %963 = load i32, i32* %block_y, align 4
  %idxprom1502 = sext i32 %963 to i64
  %arrayidx1503 = getelementptr inbounds i16****, i16***** %962, i64 %idxprom1502
  %964 = load i16****, i16***** %arrayidx1503, align 8
  %arrayidx1504 = getelementptr inbounds i16***, i16**** %964, i64 0
  %965 = load i16***, i16**** %arrayidx1504, align 8
  %966 = load i32, i32* %mapped_idx, align 4
  %idxprom1505 = sext i32 %966 to i64
  %arrayidx1506 = getelementptr inbounds i16**, i16*** %965, i64 %idxprom1505
  %967 = load i16**, i16*** %arrayidx1506, align 8
  %arrayidx1507 = getelementptr inbounds i16*, i16** %967, i64 0
  %968 = load i16*, i16** %arrayidx1507, align 8
  %arrayidx1508 = getelementptr inbounds i16, i16* %968, i64 0
  store i16 %conv1499, i16* %arrayidx1508, align 2
  %969 = load i32, i32* %mv_scale, align 4
  %970 = load i16****, i16***** %co_located_mv, align 8
  %971 = load i32, i32* %refList, align 4
  %idxprom1509 = sext i32 %971 to i64
  %arrayidx1510 = getelementptr inbounds i16***, i16**** %970, i64 %idxprom1509
  %972 = load i16***, i16**** %arrayidx1510, align 8
  %973 = load i32, i32* %opic_block_x, align 4
  %idxprom1511 = sext i32 %973 to i64
  %arrayidx1512 = getelementptr inbounds i16**, i16*** %972, i64 %idxprom1511
  %974 = load i16**, i16*** %arrayidx1512, align 8
  %975 = load i32, i32* %opic_block_y, align 4
  %idxprom1513 = sext i32 %975 to i64
  %arrayidx1514 = getelementptr inbounds i16*, i16** %974, i64 %idxprom1513
  %976 = load i16*, i16** %arrayidx1514, align 8
  %arrayidx1515 = getelementptr inbounds i16, i16* %976, i64 1
  %977 = load i16, i16* %arrayidx1515, align 2
  %conv1516 = sext i16 %977 to i32
  %mul1517 = mul nsw i32 %969, %conv1516
  %add1518 = add nsw i32 %mul1517, 128
  %shr1519 = ashr i32 %add1518, 8
  %conv1520 = trunc i32 %shr1519 to i16
  %978 = load i16******, i16******* %all_mvs, align 8
  %979 = load i32, i32* %block_x, align 4
  %idxprom1521 = sext i32 %979 to i64
  %arrayidx1522 = getelementptr inbounds i16*****, i16****** %978, i64 %idxprom1521
  %980 = load i16*****, i16****** %arrayidx1522, align 8
  %981 = load i32, i32* %block_y, align 4
  %idxprom1523 = sext i32 %981 to i64
  %arrayidx1524 = getelementptr inbounds i16****, i16***** %980, i64 %idxprom1523
  %982 = load i16****, i16***** %arrayidx1524, align 8
  %arrayidx1525 = getelementptr inbounds i16***, i16**** %982, i64 0
  %983 = load i16***, i16**** %arrayidx1525, align 8
  %984 = load i32, i32* %mapped_idx, align 4
  %idxprom1526 = sext i32 %984 to i64
  %arrayidx1527 = getelementptr inbounds i16**, i16*** %983, i64 %idxprom1526
  %985 = load i16**, i16*** %arrayidx1527, align 8
  %arrayidx1528 = getelementptr inbounds i16*, i16** %985, i64 0
  %986 = load i16*, i16** %arrayidx1528, align 8
  %arrayidx1529 = getelementptr inbounds i16, i16* %986, i64 1
  store i16 %conv1520, i16* %arrayidx1529, align 2
  %987 = load i32, i32* %mv_scale, align 4
  %sub = sub nsw i32 %987, 256
  %988 = load i16****, i16***** %co_located_mv, align 8
  %989 = load i32, i32* %refList, align 4
  %idxprom1530 = sext i32 %989 to i64
  %arrayidx1531 = getelementptr inbounds i16***, i16**** %988, i64 %idxprom1530
  %990 = load i16***, i16**** %arrayidx1531, align 8
  %991 = load i32, i32* %opic_block_x, align 4
  %idxprom1532 = sext i32 %991 to i64
  %arrayidx1533 = getelementptr inbounds i16**, i16*** %990, i64 %idxprom1532
  %992 = load i16**, i16*** %arrayidx1533, align 8
  %993 = load i32, i32* %opic_block_y, align 4
  %idxprom1534 = sext i32 %993 to i64
  %arrayidx1535 = getelementptr inbounds i16*, i16** %992, i64 %idxprom1534
  %994 = load i16*, i16** %arrayidx1535, align 8
  %arrayidx1536 = getelementptr inbounds i16, i16* %994, i64 0
  %995 = load i16, i16* %arrayidx1536, align 2
  %conv1537 = sext i16 %995 to i32
  %mul1538 = mul nsw i32 %sub, %conv1537
  %add1539 = add nsw i32 %mul1538, 128
  %shr1540 = ashr i32 %add1539, 8
  %conv1541 = trunc i32 %shr1540 to i16
  %996 = load i16******, i16******* %all_mvs, align 8
  %997 = load i32, i32* %block_x, align 4
  %idxprom1542 = sext i32 %997 to i64
  %arrayidx1543 = getelementptr inbounds i16*****, i16****** %996, i64 %idxprom1542
  %998 = load i16*****, i16****** %arrayidx1543, align 8
  %999 = load i32, i32* %block_y, align 4
  %idxprom1544 = sext i32 %999 to i64
  %arrayidx1545 = getelementptr inbounds i16****, i16***** %998, i64 %idxprom1544
  %1000 = load i16****, i16***** %arrayidx1545, align 8
  %arrayidx1546 = getelementptr inbounds i16***, i16**** %1000, i64 1
  %1001 = load i16***, i16**** %arrayidx1546, align 8
  %arrayidx1547 = getelementptr inbounds i16**, i16*** %1001, i64 0
  %1002 = load i16**, i16*** %arrayidx1547, align 8
  %arrayidx1548 = getelementptr inbounds i16*, i16** %1002, i64 0
  %1003 = load i16*, i16** %arrayidx1548, align 8
  %arrayidx1549 = getelementptr inbounds i16, i16* %1003, i64 0
  store i16 %conv1541, i16* %arrayidx1549, align 2
  %1004 = load i32, i32* %mv_scale, align 4
  %sub1550 = sub nsw i32 %1004, 256
  %1005 = load i16****, i16***** %co_located_mv, align 8
  %1006 = load i32, i32* %refList, align 4
  %idxprom1551 = sext i32 %1006 to i64
  %arrayidx1552 = getelementptr inbounds i16***, i16**** %1005, i64 %idxprom1551
  %1007 = load i16***, i16**** %arrayidx1552, align 8
  %1008 = load i32, i32* %opic_block_x, align 4
  %idxprom1553 = sext i32 %1008 to i64
  %arrayidx1554 = getelementptr inbounds i16**, i16*** %1007, i64 %idxprom1553
  %1009 = load i16**, i16*** %arrayidx1554, align 8
  %1010 = load i32, i32* %opic_block_y, align 4
  %idxprom1555 = sext i32 %1010 to i64
  %arrayidx1556 = getelementptr inbounds i16*, i16** %1009, i64 %idxprom1555
  %1011 = load i16*, i16** %arrayidx1556, align 8
  %arrayidx1557 = getelementptr inbounds i16, i16* %1011, i64 1
  %1012 = load i16, i16* %arrayidx1557, align 2
  %conv1558 = sext i16 %1012 to i32
  %mul1559 = mul nsw i32 %sub1550, %conv1558
  %add1560 = add nsw i32 %mul1559, 128
  %shr1561 = ashr i32 %add1560, 8
  %conv1562 = trunc i32 %shr1561 to i16
  %1013 = load i16******, i16******* %all_mvs, align 8
  %1014 = load i32, i32* %block_x, align 4
  %idxprom1563 = sext i32 %1014 to i64
  %arrayidx1564 = getelementptr inbounds i16*****, i16****** %1013, i64 %idxprom1563
  %1015 = load i16*****, i16****** %arrayidx1564, align 8
  %1016 = load i32, i32* %block_y, align 4
  %idxprom1565 = sext i32 %1016 to i64
  %arrayidx1566 = getelementptr inbounds i16****, i16***** %1015, i64 %idxprom1565
  %1017 = load i16****, i16***** %arrayidx1566, align 8
  %arrayidx1567 = getelementptr inbounds i16***, i16**** %1017, i64 1
  %1018 = load i16***, i16**** %arrayidx1567, align 8
  %arrayidx1568 = getelementptr inbounds i16**, i16*** %1018, i64 0
  %1019 = load i16**, i16*** %arrayidx1568, align 8
  %arrayidx1569 = getelementptr inbounds i16*, i16** %1019, i64 0
  %1020 = load i16*, i16** %arrayidx1569, align 8
  %arrayidx1570 = getelementptr inbounds i16, i16* %1020, i64 1
  store i16 %conv1562, i16* %arrayidx1570, align 2
  br label %if.end1571

if.end1571:                                       ; preds = %if.else1487, %if.then1440
  %1021 = load i32, i32* %mapped_idx, align 4
  %conv1572 = trunc i32 %1021 to i16
  %1022 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1573 = getelementptr inbounds i16**, i16*** %1022, i64 0
  %1023 = load i16**, i16*** %arrayidx1573, align 8
  %1024 = load i32, i32* %pic_block_x, align 4
  %idxprom1574 = sext i32 %1024 to i64
  %arrayidx1575 = getelementptr inbounds i16*, i16** %1023, i64 %idxprom1574
  %1025 = load i16*, i16** %arrayidx1575, align 8
  %1026 = load i32, i32* %pic_block_y, align 4
  %idxprom1576 = sext i32 %1026 to i64
  %arrayidx1577 = getelementptr inbounds i16, i16* %1025, i64 %idxprom1576
  store i16 %conv1572, i16* %arrayidx1577, align 2
  %1027 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1578 = getelementptr inbounds i16**, i16*** %1027, i64 1
  %1028 = load i16**, i16*** %arrayidx1578, align 8
  %1029 = load i32, i32* %pic_block_x, align 4
  %idxprom1579 = sext i32 %1029 to i64
  %arrayidx1580 = getelementptr inbounds i16*, i16** %1028, i64 %idxprom1579
  %1030 = load i16*, i16** %arrayidx1580, align 8
  %1031 = load i32, i32* %pic_block_y, align 4
  %idxprom1581 = sext i32 %1031 to i64
  %arrayidx1582 = getelementptr inbounds i16, i16* %1030, i64 %idxprom1581
  store i16 0, i16* %arrayidx1582, align 2
  %1032 = load i16**, i16*** @direct_pdir, align 8
  %1033 = load i32, i32* %pic_block_x, align 4
  %idxprom1583 = sext i32 %1033 to i64
  %arrayidx1584 = getelementptr inbounds i16*, i16** %1032, i64 %idxprom1583
  %1034 = load i16*, i16** %arrayidx1584, align 8
  %1035 = load i32, i32* %pic_block_y, align 4
  %idxprom1585 = sext i32 %1035 to i64
  %arrayidx1586 = getelementptr inbounds i16, i16* %1034, i64 %idxprom1585
  store i16 2, i16* %arrayidx1586, align 2
  br label %if.end1602

if.else1587:                                      ; preds = %for.end1429
  %1036 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1588 = getelementptr inbounds i16**, i16*** %1036, i64 0
  %1037 = load i16**, i16*** %arrayidx1588, align 8
  %1038 = load i32, i32* %pic_block_x, align 4
  %idxprom1589 = sext i32 %1038 to i64
  %arrayidx1590 = getelementptr inbounds i16*, i16** %1037, i64 %idxprom1589
  %1039 = load i16*, i16** %arrayidx1590, align 8
  %1040 = load i32, i32* %pic_block_y, align 4
  %idxprom1591 = sext i32 %1040 to i64
  %arrayidx1592 = getelementptr inbounds i16, i16* %1039, i64 %idxprom1591
  store i16 -1, i16* %arrayidx1592, align 2
  %1041 = load i16***, i16**** @direct_ref_idx, align 8
  %arrayidx1593 = getelementptr inbounds i16**, i16*** %1041, i64 1
  %1042 = load i16**, i16*** %arrayidx1593, align 8
  %1043 = load i32, i32* %pic_block_x, align 4
  %idxprom1594 = sext i32 %1043 to i64
  %arrayidx1595 = getelementptr inbounds i16*, i16** %1042, i64 %idxprom1594
  %1044 = load i16*, i16** %arrayidx1595, align 8
  %1045 = load i32, i32* %pic_block_y, align 4
  %idxprom1596 = sext i32 %1045 to i64
  %arrayidx1597 = getelementptr inbounds i16, i16* %1044, i64 %idxprom1596
  store i16 -1, i16* %arrayidx1597, align 2
  %1046 = load i16**, i16*** @direct_pdir, align 8
  %1047 = load i32, i32* %pic_block_x, align 4
  %idxprom1598 = sext i32 %1047 to i64
  %arrayidx1599 = getelementptr inbounds i16*, i16** %1046, i64 %idxprom1598
  %1048 = load i16*, i16** %arrayidx1599, align 8
  %1049 = load i32, i32* %pic_block_y, align 4
  %idxprom1600 = sext i32 %1049 to i64
  %arrayidx1601 = getelementptr inbounds i16, i16* %1048, i64 %idxprom1600
  store i16 -1, i16* %arrayidx1601, align 2
  br label %if.end1602

if.end1602:                                       ; preds = %if.else1587, %if.end1571
  br label %if.end1603

if.end1603:                                       ; preds = %if.end1602, %if.then1346
  br label %for.inc1604

for.inc1604:                                      ; preds = %if.end1603
  %1050 = load i32, i32* %block_x, align 4
  %inc1605 = add nsw i32 %1050, 1
  store i32 %inc1605, i32* %block_x, align 4
  br label %for.cond1304

for.end1606:                                      ; preds = %for.cond1304
  br label %for.inc1607

for.inc1607:                                      ; preds = %for.end1606
  %1051 = load i32, i32* %block_y, align 4
  %inc1608 = add nsw i32 %1051, 1
  store i32 %inc1608, i32* %block_y, align 4
  br label %for.cond1294

for.end1609:                                      ; preds = %for.cond1294
  br label %if.end1610

if.end1610:                                       ; preds = %for.end1609, %for.end1292
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sign(i32 %a, i32 %b) #0 {
entry:
  %retval = alloca i32, align 4
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  %x = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  store i32 %b, i32* %b.addr, align 4
  %0 = load i32, i32* %a.addr, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32, i32* %a.addr, align 4
  %sub = sub nsw i32 0, %1
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %2, %cond.false ]
  store i32 %cond, i32* %x, align 4
  %3 = load i32, i32* %b.addr, align 4
  %cmp1 = icmp sge i32 %3, 0
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %cond.end
  %4 = load i32, i32* %x, align 4
  store i32 %4, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %cond.end
  %5 = load i32, i32* %x, align 4
  %sub2 = sub nsw i32 0, %5
  store i32 %sub2, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4
  ret i32 %6
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.1 (git@github.com:llvm/llvm-project.git 9b2d207cf4b43cfc1a2b6940b3c06e50a1bd127f)"}
