; ModuleID = 'ratectl.c.rand.8R3.bc'
source_filename = "ratectl.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32**, i32**, i32, i32***, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], i32****, i32***, %struct.Picture*, %struct.Slice*, %struct.macroblock*, [1200 x %struct.syntaxelement], i32*, i32*, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i16******, i16******, i16******, i16******, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [15 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s*, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, double*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.macroblock = type { i32, i32, i32, i32, i32, [8 x i32], %struct.macroblock*, %struct.macroblock*, i32, [2 x [4 x [4 x [2 x i32]]]], [16 x i32], [16 x i32], i32, i64, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DecRefPicMarking_s = type { i32, i32, i32, i32, i32, %struct.DecRefPicMarking_s* }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i32]], [16 x [16 x i32]], [16 x [16 x i32]], i32****, i32***, i32, i32, [4 x i32], [4 x i32], i32**, [16 x i32], i32, i64, i32, i16******, i16******, i16******, i16******, [2 x [4 x [4 x i16]]], i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@THETA = dso_local constant double 1.363600e+00, align 8
@Switch = dso_local constant i32 0, align 4
@OMEGA = dso_local constant double 9.000000e-01, align 8
@img = external dso_local global %struct.ImageParameters*, align 8
@.str = private unnamed_addr constant [23 x i8] c"rc_alloc: img->MADofMB\00", align 1
@input = external dso_local global %struct.InputParameters*, align 8
@BUPFMAD = common dso_local global double* null, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"rc_alloc: img->BUPFMAD\00", align 1
@BUCFMAD = common dso_local global double* null, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"rc_alloc: img->BUCFMAD\00", align 1
@FCBUCFMAD = common dso_local global double* null, align 8
@.str.3 = private unnamed_addr constant [25 x i8] c"rc_alloc: img->FCBUCFMAD\00", align 1
@FCBUPFMAD = common dso_local global double* null, align 8
@.str.4 = private unnamed_addr constant [25 x i8] c"rc_alloc: img->FCBUPFMAD\00", align 1
@Xp = common dso_local global i32 0, align 4
@Xb = common dso_local global i32 0, align 4
@bit_rate = common dso_local global double 0.000000e+00, align 8
@frame_rate = common dso_local global double 0.000000e+00, align 8
@PreviousBit_Rate = common dso_local global double 0.000000e+00, align 8
@TotalNumberofBasicUnit = common dso_local global i32 0, align 4
@MINVALUE = common dso_local global double 0.000000e+00, align 8
@BufferSize = common dso_local global double 0.000000e+00, align 8
@CurrentBufferFullness = common dso_local global double 0.000000e+00, align 8
@GOPTargetBufferLevel = common dso_local global double 0.000000e+00, align 8
@InitialDelayOffset = common dso_local global double 0.000000e+00, align 8
@m_windowSize = common dso_local global i32 0, align 4
@MADm_windowSize = common dso_local global i32 0, align 4
@R = internal global i32 0, align 4
@GAMMAP = common dso_local global double 0.000000e+00, align 8
@BETAP = common dso_local global double 0.000000e+00, align 8
@PPreHeader = common dso_local global i32 0, align 4
@Pm_X1 = common dso_local global double 0.000000e+00, align 8
@Pm_X2 = common dso_local global double 0.000000e+00, align 8
@PMADPictureC1 = common dso_local global double 0.000000e+00, align 8
@PMADPictureC2 = common dso_local global double 0.000000e+00, align 8
@Pm_rgQp = common dso_local global [20 x double] zeroinitializer, align 16
@Pm_rgRp = common dso_local global [20 x double] zeroinitializer, align 16
@PPictureMAD = common dso_local global [21 x double] zeroinitializer, align 16
@PDuantQp = common dso_local global i32 0, align 4
@PAveHeaderBits1 = common dso_local global i32 0, align 4
@PAveHeaderBits3 = common dso_local global i32 0, align 4
@DDquant = common dso_local global i32 0, align 4
@MBPerRow = common dso_local global i32 0, align 4
@RC_MAX_QUANT = common dso_local global i32 0, align 4
@RC_MIN_QUANT = common dso_local global i32 0, align 4
@LowerBound = common dso_local global i64 0, align 8
@UpperBound1 = common dso_local global i64 0, align 8
@Np = internal global i32 0, align 4
@Nb = internal global i32 0, align 4
@GOPOverdue = common dso_local global i32 0, align 4
@TotalPFrame = common dso_local global i32 0, align 4
@MyInitialQp = common dso_local global i32 0, align 4
@PreviousQp2 = common dso_local global i32 0, align 4
@QPLastGOP = common dso_local global i32 0, align 4
@FrameQPBuffer = common dso_local global i32 0, align 4
@QPLastPFrame = common dso_local global i32 0, align 4
@FieldQPBuffer = common dso_local global i32 0, align 4
@PAverageQp = common dso_local global i32 0, align 4
@Pm_Qp = common dso_local global i32 0, align 4
@PAveFrameQP = common dso_local global i32 0, align 4
@PreviousQp1 = common dso_local global i32 0, align 4
@NumberofBFrames = common dso_local global i32 0, align 4
@TargetBufferLevel = common dso_local global double 0.000000e+00, align 8
@DeltaP = common dso_local global double 0.000000e+00, align 8
@Wp = common dso_local global double 0.000000e+00, align 8
@AWp = common dso_local global double 0.000000e+00, align 8
@AWb = common dso_local global double 0.000000e+00, align 8
@Wb = common dso_local global double 0.000000e+00, align 8
@T = common dso_local global i64 0, align 8
@T1 = common dso_local global i64 0, align 8
@UpperBound2 = common dso_local global i64 0, align 8
@T_field = internal global i32 0, align 4
@TotalFrameQP = common dso_local global i32 0, align 4
@NumberofBasicUnit = common dso_local global i32 0, align 4
@bits_topfield = internal global i32 0, align 4
@diffy = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@m_Qc = common dso_local global i32 0, align 4
@Pm_Hp = common dso_local global i32 0, align 4
@active_sps = common dso_local global %struct.seq_parameter_set_rbsp_t* null, align 8
@m_X1 = common dso_local global double 0.000000e+00, align 8
@m_X2 = common dso_local global double 0.000000e+00, align 8
@m_Hp = common dso_local global i32 0, align 4
@m_Qp = common dso_local global i32 0, align 4
@DuantQp = common dso_local global i32 0, align 4
@MADPictureC1 = common dso_local global double 0.000000e+00, align 8
@MADPictureC2 = common dso_local global double 0.000000e+00, align 8
@PreviousPictureMAD = common dso_local global double 0.000000e+00, align 8
@CurrentFrameMAD = common dso_local global double 0.000000e+00, align 8
@m_Qstep = common dso_local global double 0.000000e+00, align 8
@PAveHeaderBits2 = common dso_local global i32 0, align 4
@FrameAveHeaderBits = common dso_local global i32 0, align 4
@FieldAveHeaderBits = common dso_local global i32 0, align 4
@TotalBasicUnitBits = common dso_local global i32 0, align 4
@TotalBUMAD = common dso_local global double 0.000000e+00, align 8
@CurrentBUMAD = common dso_local global double 0.000000e+00, align 8
@CodedBasicUnit = common dso_local global i32 0, align 4
@m_rgQp = common dso_local global [21 x double] zeroinitializer, align 16
@m_rgRp = common dso_local global [21 x double] zeroinitializer, align 16
@PreviousFrameMAD = common dso_local global double 0.000000e+00, align 8
@m_rgRejected = common dso_local global [21 x i32] zeroinitializer, align 16
@PictureMAD = common dso_local global [21 x double] zeroinitializer, align 16
@ReferenceMAD = common dso_local global [21 x double] zeroinitializer, align 16
@PictureRejected = common dso_local global [21 x i32] zeroinitializer, align 16
@QP2Qstep.QP2QSTEP = internal constant [6 x double] [double 6.250000e-01, double 6.875000e-01, double 8.125000e-01, double 8.750000e-01, double 1.000000e+00, double 1.125000e+00], align 16
@top_pic = common dso_local global %struct.Picture* null, align 8
@bottom_pic = common dso_local global %struct.Picture* null, align 8
@frame_pic = common dso_local global %struct.Picture* null, align 8
@frame_pic2 = common dso_local global %struct.Picture* null, align 8
@frame_pic3 = common dso_local global %struct.Picture* null, align 8
@imgY_org = common dso_local global i16** null, align 8
@imgUV_org = common dso_local global i16*** null, align 8
@img4Y_tmp = common dso_local global i32** null, align 8
@log2_max_frame_num_minus4 = common dso_local global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common dso_local global i32 0, align 4
@me_tot_time = common dso_local global i32 0, align 4
@me_time = common dso_local global i32 0, align 4
@active_pps = common dso_local global %struct.pic_parameter_set_rbsp_t* null, align 8
@mb_adaptive = common dso_local global i32 0, align 4
@MBPairIsField = common dso_local global i32 0, align 4
@wp_weight = common dso_local global i32*** null, align 8
@wp_offset = common dso_local global i32*** null, align 8
@wbp_weight = common dso_local global i32**** null, align 8
@luma_log_weight_denom = common dso_local global i32 0, align 4
@chroma_log_weight_denom = common dso_local global i32 0, align 4
@wp_luma_round = common dso_local global i32 0, align 4
@wp_chroma_round = common dso_local global i32 0, align 4
@imgY_org_top = common dso_local global i16** null, align 8
@imgY_org_bot = common dso_local global i16** null, align 8
@imgUV_org_top = common dso_local global i16*** null, align 8
@imgUV_org_bot = common dso_local global i16*** null, align 8
@imgY_org_frm = common dso_local global i16** null, align 8
@imgUV_org_frm = common dso_local global i16*** null, align 8
@imgY_com = common dso_local global i16** null, align 8
@imgUV_com = common dso_local global i16*** null, align 8
@direct_ref_idx = common dso_local global i16*** null, align 8
@direct_pdir = common dso_local global i16** null, align 8
@pixel_map = common dso_local global i8** null, align 8
@refresh_map = common dso_local global i8** null, align 8
@intras = common dso_local global i32 0, align 4
@Iframe_ctr = common dso_local global i32 0, align 4
@Pframe_ctr = common dso_local global i32 0, align 4
@Bframe_ctr = common dso_local global i32 0, align 4
@frame_no = common dso_local global i32 0, align 4
@nextP_tr_fld = common dso_local global i32 0, align 4
@nextP_tr_frm = common dso_local global i32 0, align 4
@tot_time = common dso_local global i32 0, align 4
@errortext = common dso_local global [300 x i8] zeroinitializer, align 16
@resTrans_R = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common dso_local global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@dc_level = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level_temp = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common dso_local global [4 x [4 x i32]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common dso_local global [16 x i32] zeroinitializer, align 16
@gop_structure = common dso_local global %struct.GOP_DATA* null, align 8
@rdopt = common dso_local global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common dso_local global %struct._IO_FILE* null, align 8
@p_log = common dso_local global %struct._IO_FILE* null, align 8
@p_trace = common dso_local global %struct._IO_FILE* null, align 8
@p_in = common dso_local global i32 0, align 4
@p_dec = common dso_local global i32 0, align 4
@glob_remapping_of_pic_nums_idc_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_remapping_of_pic_nums_idc_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@Bytes_After_Header = common dso_local global i32 0, align 4
@rpc_bytes_to_go = common dso_local global i32 0, align 4
@rpc_bits_to_go = common dso_local global i32 0, align 4
@PreAveMBHeader = common dso_local global i32 0, align 4
@CurAveMBHeader = common dso_local global i32 0, align 4
@AverageMADPreviousFrame = common dso_local global double 0.000000e+00, align 8
@diffyy = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@diffy8 = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@BitRate = common dso_local global %struct._IO_FILE* null, align 8
@Iprev_bits = dso_local global i32 0, align 4
@Pprev_bits = dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_alloc() #0 {
entry:
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FrameSizeInMbs = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 111
  %1 = load i32, i32* %FrameSizeInMbs, align 8
  %conv = zext i32 %1 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 8) #5
  %2 = bitcast i8* %call to double*
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 131
  store double* %2, double** %MADofMB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 131
  %5 = load double*, double** %MADofMB1, align 8
  %cmp = icmp eq double* null, %5
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @no_mem_exit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FrameSizeInMbs3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 111
  %7 = load i32, i32* %FrameSizeInMbs3, align 8
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 130
  %9 = load i32, i32* %basicunit, align 8
  %div = udiv i32 %7, %9
  %conv4 = zext i32 %div to i64
  %call5 = call noalias i8* @calloc(i64 %conv4, i64 8) #5
  %10 = bitcast i8* %call5 to double*
  store double* %10, double** @BUPFMAD, align 8
  %11 = load double*, double** @BUPFMAD, align 8
  %cmp6 = icmp eq double* null, %11
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  call void @no_mem_exit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0))
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FrameSizeInMbs10 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 111
  %13 = load i32, i32* %FrameSizeInMbs10, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit11, align 8
  %div12 = udiv i32 %13, %15
  %conv13 = zext i32 %div12 to i64
  %call14 = call noalias i8* @calloc(i64 %conv13, i64 8) #5
  %16 = bitcast i8* %call14 to double*
  store double* %16, double** @BUCFMAD, align 8
  %17 = load double*, double** @BUCFMAD, align 8
  %cmp15 = icmp eq double* null, %17
  br i1 %cmp15, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.end9
  call void @no_mem_exit(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end9
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FrameSizeInMbs19 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 111
  %19 = load i32, i32* %FrameSizeInMbs19, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit20 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  %21 = load i32, i32* %basicunit20, align 8
  %div21 = udiv i32 %19, %21
  %conv22 = zext i32 %div21 to i64
  %call23 = call noalias i8* @calloc(i64 %conv22, i64 8) #5
  %22 = bitcast i8* %call23 to double*
  store double* %22, double** @FCBUCFMAD, align 8
  %23 = load double*, double** @FCBUCFMAD, align 8
  %cmp24 = icmp eq double* null, %23
  br i1 %cmp24, label %if.then26, label %if.end27

if.then26:                                        ; preds = %if.end18
  call void @no_mem_exit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0))
  br label %if.end27

if.end27:                                         ; preds = %if.then26, %if.end18
  %24 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FrameSizeInMbs28 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %24, i32 0, i32 111
  %25 = load i32, i32* %FrameSizeInMbs28, align 8
  %26 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit29 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %26, i32 0, i32 130
  %27 = load i32, i32* %basicunit29, align 8
  %div30 = udiv i32 %25, %27
  %conv31 = zext i32 %div30 to i64
  %call32 = call noalias i8* @calloc(i64 %conv31, i64 8) #5
  %28 = bitcast i8* %call32 to double*
  store double* %28, double** @FCBUPFMAD, align 8
  %29 = load double*, double** @FCBUPFMAD, align 8
  %cmp33 = icmp eq double* null, %29
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end27
  call void @no_mem_exit(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0))
  br label %if.end36

if.end36:                                         ; preds = %if.then35, %if.end27
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #1

declare dso_local void @no_mem_exit(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_free() #0 {
entry:
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 131
  %1 = load double*, double** %MADofMB, align 8
  %cmp = icmp ne double* null, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 131
  %3 = load double*, double** %MADofMB1, align 8
  %4 = bitcast double* %3 to i8*
  call void @free(i8* %4) #5
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB2 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 131
  store double* null, double** %MADofMB2, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load double*, double** @BUPFMAD, align 8
  %cmp3 = icmp ne double* null, %6
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  %7 = load double*, double** @BUPFMAD, align 8
  %8 = bitcast double* %7 to i8*
  call void @free(i8* %8) #5
  store double* null, double** @BUPFMAD, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end
  %9 = load double*, double** @BUCFMAD, align 8
  %cmp6 = icmp ne double* null, %9
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  %10 = load double*, double** @BUCFMAD, align 8
  %11 = bitcast double* %10 to i8*
  call void @free(i8* %11) #5
  store double* null, double** @BUCFMAD, align 8
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5
  %12 = load double*, double** @FCBUCFMAD, align 8
  %cmp9 = icmp ne double* null, %12
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  %13 = load double*, double** @FCBUCFMAD, align 8
  %14 = bitcast double* %13 to i8*
  call void @free(i8* %14) #5
  store double* null, double** @FCBUCFMAD, align 8
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8
  %15 = load double*, double** @FCBUPFMAD, align 8
  %cmp12 = icmp ne double* null, %15
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  %16 = load double*, double** @FCBUPFMAD, align 8
  %17 = bitcast double* %16 to i8*
  call void @free(i8* %17) #5
  store double* null, double** @FCBUPFMAD, align 8
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_rc_init_seq.14, label %ctrl0

func_rc_init_seq.14:                              ; preds = %rand_bb
  call void @rc_init_seq.14()
  ret void

func_rc_init_seq.33:                              ; preds = %ctrl0
  call void @rc_init_seq.33()
  ret void

func_rc_init_seq.54:                              ; preds = %ctrl1
  call void @rc_init_seq.54()
  ret void

func_rc_init_seq.68:                              ; preds = %ctrl2
  call void @rc_init_seq.68()
  ret void

func_rc_init_seq.70:                              ; preds = %ctrl3
  call void @rc_init_seq.70()
  ret void

func_rc_init_seq.81:                              ; preds = %ctrl4
  call void @rc_init_seq.81()
  ret void

func_rc_init_seq.84:                              ; preds = %ctrl5
  call void @rc_init_seq.84()
  ret void

func_rc_init_seq.91:                              ; preds = %ctrl5
  call void @rc_init_seq.91()
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_rc_init_seq.33, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_rc_init_seq.54, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_rc_init_seq.68, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_rc_init_seq.70, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_rc_init_seq.81, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_rc_init_seq.84, label %func_rc_init_seq.91
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP(i32 %np, i32 %nb) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_rc_init_GOP.1, label %ctrl0

func_rc_init_GOP.1:                               ; preds = %rand_bb
  call void @rc_init_GOP.1(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.39:                              ; preds = %ctrl0
  call void @rc_init_GOP.39(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.42:                              ; preds = %ctrl1
  call void @rc_init_GOP.42(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.53:                              ; preds = %ctrl2
  call void @rc_init_GOP.53(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.60:                              ; preds = %ctrl3
  call void @rc_init_GOP.60(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.72:                              ; preds = %ctrl4
  call void @rc_init_GOP.72(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.75:                              ; preds = %ctrl5
  call void @rc_init_GOP.75(i32 %np, i32 %nb)
  ret void

func_rc_init_GOP.76:                              ; preds = %ctrl5
  call void @rc_init_GOP.76(i32 %np, i32 %nb)
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_rc_init_GOP.39, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_rc_init_GOP.42, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_rc_init_GOP.53, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_rc_init_GOP.60, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_rc_init_GOP.72, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_rc_init_GOP.75, label %func_rc_init_GOP.76
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_rc_init_pict.21, label %ctrl0

func_rc_init_pict.21:                             ; preds = %rand_bb
  call void @rc_init_pict.21(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.25:                             ; preds = %ctrl0
  call void @rc_init_pict.25(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.35:                             ; preds = %ctrl1
  call void @rc_init_pict.35(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.48:                             ; preds = %ctrl2
  call void @rc_init_pict.48(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.51:                             ; preds = %ctrl3
  call void @rc_init_pict.51(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.83:                             ; preds = %ctrl4
  call void @rc_init_pict.83(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.88:                             ; preds = %ctrl5
  call void @rc_init_pict.88(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

func_rc_init_pict.94:                             ; preds = %ctrl5
  call void @rc_init_pict.94(i32 %fieldpic, i32 %topfield, i32 %targetcomputation)
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_rc_init_pict.25, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_rc_init_pict.35, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_rc_init_pict.48, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_rc_init_pict.51, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_rc_init_pict.83, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_rc_init_pict.88, label %func_rc_init_pict.94
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_calc_MAD.4, label %ctrl0

func_calc_MAD.4:                                  ; preds = %rand_bb
  %2 = call double @calc_MAD.4()
  ret double %2

func_calc_MAD.13:                                 ; preds = %ctrl0
  %3 = call double @calc_MAD.13()
  ret double %3

func_calc_MAD.23:                                 ; preds = %ctrl1
  %4 = call double @calc_MAD.23()
  ret double %4

func_calc_MAD.29:                                 ; preds = %ctrl2
  %5 = call double @calc_MAD.29()
  ret double %5

func_calc_MAD.45:                                 ; preds = %ctrl3
  %6 = call double @calc_MAD.45()
  ret double %6

func_calc_MAD.52:                                 ; preds = %ctrl4
  %7 = call double @calc_MAD.52()
  ret double %7

func_calc_MAD.66:                                 ; preds = %ctrl5
  %8 = call double @calc_MAD.66()
  ret double %8

func_calc_MAD.67:                                 ; preds = %ctrl5
  %9 = call double @calc_MAD.67()
  ret double %9

ctrl0:                                            ; preds = %rand_bb
  %10 = icmp eq i32 %0, 1
  br i1 %10, label %func_calc_MAD.13, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %11 = icmp eq i32 %0, 2
  br i1 %11, label %func_calc_MAD.23, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %12 = icmp eq i32 %0, 3
  br i1 %12, label %func_calc_MAD.29, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %13 = icmp eq i32 %0, 4
  br i1 %13, label %func_calc_MAD.45, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %14 = icmp eq i32 %0, 5
  br i1 %14, label %func_calc_MAD.52, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %15 = icmp eq i32 %0, 6
  br i1 %15, label %func_calc_MAD.66, label %func_calc_MAD.67
}

; Function Attrs: nounwind readnone
declare dso_local i32 @abs(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict(i32 %nbits) #0 {
entry:
  %nbits.addr = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  %0 = load i32, i32* %nbits.addr, align 4
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 %1, %0
  store i32 %sub, i32* @R, align 4
  %2 = load i32, i32* %nbits.addr, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %sub1 = fsub double %conv, %div
  %5 = load double, double* @CurrentBufferFullness, align 8
  %add = fadd double %5, %sub1
  store double %add, double* @CurrentBufferFullness, align 8
  %6 = load double, double* @bit_rate, align 8
  %7 = load double, double* @frame_rate, align 8
  %div2 = fdiv double %6, %7
  %8 = load i32, i32* %nbits.addr, align 4
  %conv3 = sitofp i32 %8 to double
  %sub4 = fsub double %div2, %conv3
  %conv5 = fptosi double %sub4 to i64
  %9 = load i64, i64* @LowerBound, align 8
  %add6 = add nsw i64 %9, %conv5
  store i64 %add6, i64* @LowerBound, align 8
  %10 = load double, double* @bit_rate, align 8
  %11 = load double, double* @frame_rate, align 8
  %div7 = fdiv double %10, %11
  %12 = load i32, i32* %nbits.addr, align 4
  %conv8 = sitofp i32 %12 to double
  %sub9 = fsub double %div7, %conv8
  %conv10 = fptosi double %sub9 to i64
  %13 = load i64, i64* @UpperBound1, align 8
  %add11 = add nsw i64 %13, %conv10
  store i64 %add11, i64* @UpperBound1, align 8
  %14 = load i64, i64* @UpperBound1, align 8
  %conv12 = sitofp i64 %14 to double
  %mul = fmul double 9.000000e-01, %conv12
  %conv13 = fptosi double %mul to i64
  store i64 %conv13, i64* @UpperBound2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame(i32 %nbits) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_rc_update_pict_frame.10, label %ctrl0

func_rc_update_pict_frame.10:                     ; preds = %rand_bb
  call void @rc_update_pict_frame.10(i32 %nbits)
  ret void

func_rc_update_pict_frame.30:                     ; preds = %ctrl0
  call void @rc_update_pict_frame.30(i32 %nbits)
  ret void

func_rc_update_pict_frame.31:                     ; preds = %ctrl1
  call void @rc_update_pict_frame.31(i32 %nbits)
  ret void

func_rc_update_pict_frame.32:                     ; preds = %ctrl2
  call void @rc_update_pict_frame.32(i32 %nbits)
  ret void

func_rc_update_pict_frame.36:                     ; preds = %ctrl3
  call void @rc_update_pict_frame.36(i32 %nbits)
  ret void

func_rc_update_pict_frame.47:                     ; preds = %ctrl3
  call void @rc_update_pict_frame.47(i32 %nbits)
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_rc_update_pict_frame.30, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_rc_update_pict_frame.31, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_rc_update_pict_frame.32, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_rc_update_pict_frame.36, label %func_rc_update_pict_frame.47
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @setbitscount(i32 %nbits) #0 {
entry:
  %nbits.addr = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  %0 = load i32, i32* %nbits.addr, align 4
  store i32 %0, i32* @bits_topfield, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter(i32 %topfield) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_updateQuantizationParameter.7, label %ctrl0

func_updateQuantizationParameter.7:               ; preds = %rand_bb
  %2 = call i32 @updateQuantizationParameter.7(i32 %topfield)
  ret i32 %2

func_updateQuantizationParameter.15:              ; preds = %ctrl0
  %3 = call i32 @updateQuantizationParameter.15(i32 %topfield)
  ret i32 %3

func_updateQuantizationParameter.16:              ; preds = %ctrl1
  %4 = call i32 @updateQuantizationParameter.16(i32 %topfield)
  ret i32 %4

func_updateQuantizationParameter.44:              ; preds = %ctrl2
  %5 = call i32 @updateQuantizationParameter.44(i32 %topfield)
  ret i32 %5

func_updateQuantizationParameter.56:              ; preds = %ctrl3
  %6 = call i32 @updateQuantizationParameter.56(i32 %topfield)
  ret i32 %6

func_updateQuantizationParameter.59:              ; preds = %ctrl4
  %7 = call i32 @updateQuantizationParameter.59(i32 %topfield)
  ret i32 %7

func_updateQuantizationParameter.64:              ; preds = %ctrl5
  %8 = call i32 @updateQuantizationParameter.64(i32 %topfield)
  ret i32 %8

func_updateQuantizationParameter.71:              ; preds = %ctrl5
  %9 = call i32 @updateQuantizationParameter.71(i32 %topfield)
  ret i32 %9

ctrl0:                                            ; preds = %rand_bb
  %10 = icmp eq i32 %0, 1
  br i1 %10, label %func_updateQuantizationParameter.15, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %11 = icmp eq i32 %0, 2
  br i1 %11, label %func_updateQuantizationParameter.16, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %12 = icmp eq i32 %0, 3
  br i1 %12, label %func_updateQuantizationParameter.44, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %13 = icmp eq i32 %0, 4
  br i1 %13, label %func_updateQuantizationParameter.56, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %14 = icmp eq i32 %0, 5
  br i1 %14, label %func_updateQuantizationParameter.59, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %15 = icmp eq i32 %0, 6
  br i1 %15, label %func_updateQuantizationParameter.64, label %func_updateQuantizationParameter.71
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP(double %Qstep) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_Qstep2QP.3, label %ctrl0

func_Qstep2QP.3:                                  ; preds = %rand_bb
  %2 = call i32 @Qstep2QP.3(double %Qstep)
  ret i32 %2

func_Qstep2QP.22:                                 ; preds = %ctrl0
  %3 = call i32 @Qstep2QP.22(double %Qstep)
  ret i32 %3

func_Qstep2QP.24:                                 ; preds = %ctrl1
  %4 = call i32 @Qstep2QP.24(double %Qstep)
  ret i32 %4

func_Qstep2QP.38:                                 ; preds = %ctrl2
  %5 = call i32 @Qstep2QP.38(double %Qstep)
  ret i32 %5

func_Qstep2QP.40:                                 ; preds = %ctrl3
  %6 = call i32 @Qstep2QP.40(double %Qstep)
  ret i32 %6

func_Qstep2QP.69:                                 ; preds = %ctrl4
  %7 = call i32 @Qstep2QP.69(double %Qstep)
  ret i32 %7

func_Qstep2QP.78:                                 ; preds = %ctrl5
  %8 = call i32 @Qstep2QP.78(double %Qstep)
  ret i32 %8

func_Qstep2QP.80:                                 ; preds = %ctrl5
  %9 = call i32 @Qstep2QP.80(double %Qstep)
  ret i32 %9

ctrl0:                                            ; preds = %rand_bb
  %10 = icmp eq i32 %0, 1
  br i1 %10, label %func_Qstep2QP.22, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %11 = icmp eq i32 %0, 2
  br i1 %11, label %func_Qstep2QP.24, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %12 = icmp eq i32 %0, 3
  br i1 %12, label %func_Qstep2QP.38, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %13 = icmp eq i32 %0, 4
  br i1 %13, label %func_Qstep2QP.40, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %14 = icmp eq i32 %0, 5
  br i1 %14, label %func_Qstep2QP.69, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %15 = icmp eq i32 %0, 6
  br i1 %15, label %func_Qstep2QP.78, label %func_Qstep2QP.80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_updateRCModel.2, label %ctrl0

func_updateRCModel.2:                             ; preds = %rand_bb
  call void @updateRCModel.2()
  ret void

func_updateRCModel.5:                             ; preds = %ctrl0
  call void @updateRCModel.5()
  ret void

func_updateRCModel.8:                             ; preds = %ctrl1
  call void @updateRCModel.8()
  ret void

func_updateRCModel.11:                            ; preds = %ctrl2
  call void @updateRCModel.11()
  ret void

func_updateRCModel.18:                            ; preds = %ctrl3
  call void @updateRCModel.18()
  ret void

func_updateRCModel.27:                            ; preds = %ctrl4
  call void @updateRCModel.27()
  ret void

func_updateRCModel.46:                            ; preds = %ctrl5
  call void @updateRCModel.46()
  ret void

func_updateRCModel.50:                            ; preds = %ctrl5
  call void @updateRCModel.50()
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_updateRCModel.5, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_updateRCModel.8, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_updateRCModel.11, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_updateRCModel.18, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_updateRCModel.27, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_updateRCModel.46, label %func_updateRCModel.50
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep(i32 %QP) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_QP2Qstep.12, label %ctrl0

func_QP2Qstep.12:                                 ; preds = %rand_bb
  %2 = call double @QP2Qstep.12(i32 %QP)
  ret double %2

func_QP2Qstep.26:                                 ; preds = %ctrl0
  %3 = call double @QP2Qstep.26(i32 %QP)
  ret double %3

func_QP2Qstep.37:                                 ; preds = %ctrl1
  %4 = call double @QP2Qstep.37(i32 %QP)
  ret double %4

func_QP2Qstep.55:                                 ; preds = %ctrl2
  %5 = call double @QP2Qstep.55(i32 %QP)
  ret double %5

func_QP2Qstep.58:                                 ; preds = %ctrl3
  %6 = call double @QP2Qstep.58(i32 %QP)
  ret double %6

func_QP2Qstep.65:                                 ; preds = %ctrl3
  %7 = call double @QP2Qstep.65(i32 %QP)
  ret double %7

ctrl0:                                            ; preds = %rand_bb
  %8 = icmp eq i32 %0, 1
  br i1 %8, label %func_QP2Qstep.26, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %9 = icmp eq i32 %0, 2
  br i1 %9, label %func_QP2Qstep.37, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %10 = icmp eq i32 %0, 3
  br i1 %10, label %func_QP2Qstep.55, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %11 = icmp eq i32 %0, 4
  br i1 %11, label %func_QP2Qstep.58, label %func_QP2Qstep.65
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator(i32 %n_windowSize) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_RCModelEstimator.9, label %ctrl0

func_RCModelEstimator.9:                          ; preds = %rand_bb
  call void @RCModelEstimator.9(i32 %n_windowSize)
  ret void

func_RCModelEstimator.28:                         ; preds = %ctrl0
  call void @RCModelEstimator.28(i32 %n_windowSize)
  ret void

func_RCModelEstimator.34:                         ; preds = %ctrl1
  call void @RCModelEstimator.34(i32 %n_windowSize)
  ret void

func_RCModelEstimator.73:                         ; preds = %ctrl2
  call void @RCModelEstimator.73(i32 %n_windowSize)
  ret void

func_RCModelEstimator.74:                         ; preds = %ctrl3
  call void @RCModelEstimator.74(i32 %n_windowSize)
  ret void

func_RCModelEstimator.77:                         ; preds = %ctrl4
  call void @RCModelEstimator.77(i32 %n_windowSize)
  ret void

func_RCModelEstimator.87:                         ; preds = %ctrl5
  call void @RCModelEstimator.87(i32 %n_windowSize)
  ret void

func_RCModelEstimator.92:                         ; preds = %ctrl5
  call void @RCModelEstimator.92(i32 %n_windowSize)
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_RCModelEstimator.28, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_RCModelEstimator.34, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_RCModelEstimator.73, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_RCModelEstimator.74, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_RCModelEstimator.77, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_RCModelEstimator.87, label %func_RCModelEstimator.92
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @ComputeFrameMAD() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_ComputeFrameMAD.6, label %func_ComputeFrameMAD.19

func_ComputeFrameMAD.6:                           ; preds = %rand_bb
  %2 = call double @ComputeFrameMAD.6()
  ret double %2

func_ComputeFrameMAD.19:                          ; preds = %rand_bb
  %3 = call double @ComputeFrameMAD.19()
  ret double %3
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_updateMADModel.41, label %ctrl0

func_updateMADModel.41:                           ; preds = %rand_bb
  call void @updateMADModel.41()
  ret void

func_updateMADModel.43:                           ; preds = %ctrl0
  call void @updateMADModel.43()
  ret void

func_updateMADModel.62:                           ; preds = %ctrl1
  call void @updateMADModel.62()
  ret void

func_updateMADModel.82:                           ; preds = %ctrl2
  call void @updateMADModel.82()
  ret void

func_updateMADModel.85:                           ; preds = %ctrl3
  call void @updateMADModel.85()
  ret void

func_updateMADModel.89:                           ; preds = %ctrl4
  call void @updateMADModel.89()
  ret void

func_updateMADModel.90:                           ; preds = %ctrl5
  call void @updateMADModel.90()
  ret void

func_updateMADModel.93:                           ; preds = %ctrl5
  call void @updateMADModel.93()
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_updateMADModel.43, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_updateMADModel.62, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_updateMADModel.82, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_updateMADModel.85, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_updateMADModel.89, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_updateMADModel.90, label %func_updateMADModel.93
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator(i32 %n_windowSize) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_MADModelEstimator.17, label %ctrl0

func_MADModelEstimator.17:                        ; preds = %rand_bb
  call void @MADModelEstimator.17(i32 %n_windowSize)
  ret void

func_MADModelEstimator.20:                        ; preds = %ctrl0
  call void @MADModelEstimator.20(i32 %n_windowSize)
  ret void

func_MADModelEstimator.49:                        ; preds = %ctrl1
  call void @MADModelEstimator.49(i32 %n_windowSize)
  ret void

func_MADModelEstimator.57:                        ; preds = %ctrl2
  call void @MADModelEstimator.57(i32 %n_windowSize)
  ret void

func_MADModelEstimator.61:                        ; preds = %ctrl3
  call void @MADModelEstimator.61(i32 %n_windowSize)
  ret void

func_MADModelEstimator.63:                        ; preds = %ctrl4
  call void @MADModelEstimator.63(i32 %n_windowSize)
  ret void

func_MADModelEstimator.79:                        ; preds = %ctrl5
  call void @MADModelEstimator.79(i32 %n_windowSize)
  ret void

func_MADModelEstimator.86:                        ; preds = %ctrl5
  call void @MADModelEstimator.86(i32 %n_windowSize)
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_MADModelEstimator.20, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_MADModelEstimator.49, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_MADModelEstimator.57, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_MADModelEstimator.61, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_MADModelEstimator.63, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_MADModelEstimator.79, label %func_MADModelEstimator.86
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.1(i32 %np, i32 %nb) #0 {
entry:
  %np.addr = alloca i32, align 4
  %GOPDquant = alloca i32, align 4
  %OverBits = alloca i32, align 4
  %Overum = alloca i32, align 4
  %AllocatedBits = alloca i32, align 4
  %canary = alloca i32
  store i32 1176894738, i32* %canary
  %OverDuantQp = alloca i32, align 4
  %nb.addr = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 1176894738
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.2() #0 {
entry:
  %threshold = alloca double, align 8
  %n_windowSize = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %std = alloca double, align 8
  %MADModelFlag = alloca i32, align 4
  %canary = alloca i32
  store i32 631158749, i32* %canary
  %i = alloca i32, align 4
  %error = alloca [20 x double], align 16
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 631158749
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.3(double %Qstep) #0 {
entry:
  %canary = alloca i32
  store i32 1289698867, i32* %canary
  %Qstep.addr = alloca double, align 8
  %q_rem = alloca i32, align 4
  %retval = alloca i32, align 4
  %q_per = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 1289698867
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.4() #0 {
entry:
  %canary = alloca i32
  store i32 1577706821, i32* %canary
  %l = alloca i32, align 4
  %MAD = alloca double, align 8
  %s = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 1577706821
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.5() #0 {
entry:
  %MADModelFlag = alloca i32, align 4
  %canary = alloca i32
  store i32 285797134, i32* %canary
  %m_Nc = alloca i32, align 4
  %std = alloca double, align 8
  %n_windowSize = alloca i32, align 4
  %i = alloca i32, align 4
  %threshold = alloca double, align 8
  %error = alloca [20 x double], align 16
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 285797134
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @ComputeFrameMAD.6() #0 {
entry:
  %canary = alloca i32
  store i32 330324666, i32* %canary
  %i = alloca i32, align 4
  %TotalMAD = alloca double, align 8
  store double 0.000000e+00, double* %TotalMAD, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1, i32 0, i32 136
  %2 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 131
  %4 = load double*, double** %MADofMB, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds double, double* %4, i64 %idxprom
  %6 = load double, double* %arrayidx, align 8
  %7 = load double, double* %TotalMAD, align 8
  %add = fadd double %7, %6
  store double %add, double* %TotalMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 136
  %10 = load i32, i32* %Frame_Total_Number_MB1, align 8
  %conv = sitofp i32 %10 to double
  %11 = load double, double* %TotalMAD, align 8
  %div = fdiv double %11, %conv
  store double %div, double* %TotalMAD, align 8
  %12 = load double, double* %TotalMAD, align 8
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 330324666
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %for.end, %func_exit
  ret double %12

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.7(i32 %topfield) #0 {
entry:
  %retval = alloca i32, align 4
  %StepSize = alloca i32, align 4
  %i = alloca i32, align 4
  %dtmp = alloca double, align 8
  %m_Bits = alloca i32, align 4
  %SumofBasicUnit = alloca i32, align 4
  %BFrameNumber = alloca i32, align 4
  %canary = alloca i32
  store i32 1147680002, i32* %canary
  %topfield.addr = alloca i32, align 4
  %PAverageQP = alloca i32, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 1147680002
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.8() #0 {
entry:
  %n_windowSize = alloca i32, align 4
  %i = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %canary = alloca i32
  store i32 659575753, i32* %canary
  %MADModelFlag = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %std = alloca double, align 8
  %threshold = alloca double, align 8
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 659575753
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.9(i32 %n_windowSize) #0 {
entry:
  %canary = alloca i32
  store i32 699300925, i32* %canary
  %a01 = alloca double, align 8
  %b1 = alloca double, align 8
  %i = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  %a11 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %a00 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %a10 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %n_windowSize.addr = alloca i32, align 4
  %b0 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 699300925
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame.10(i32 %nbits) #0 {
entry:
  %X = alloca i32, align 4
  %canary = alloca i32
  store i32 1255867799, i32* %canary
  %nbits.addr = alloca i32, align 4
  %Avem_Qc = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  store i32 0, i32* %X, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %nbits.addr, align 4
  %5 = load i32, i32* @m_Qc, align 4
  %mul = mul nsw i32 %4, %5
  %conv = sitofp i32 %mul to double
  %add = fadd double %conv, 5.000000e-01
  %6 = call double @llvm.floor.f64(double %add)
  %conv1 = fptosi double %6 to i32
  store i32 %conv1, i32* %X, align 4
  br label %if.end28

if.else:                                          ; preds = %entry
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp2 = icmp eq i32 %8, 0
  br i1 %cmp2, label %if.then4, label %if.else17

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 137
  %10 = load i32, i32* %IFLAG, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 134
  %12 = load i32, i32* %FieldControl, align 8
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 134
  %14 = load i32, i32* %FieldControl9, align 8
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32, i32* @TotalFrameQP, align 4
  %16 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div = sdiv i32 %15, %16
  store i32 %div, i32* %Avem_Qc, align 4
  %17 = load i32, i32* %nbits.addr, align 4
  %18 = load i32, i32* %Avem_Qc, align 4
  %mul13 = mul nsw i32 %17, %18
  %conv14 = sitofp i32 %mul13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %19 = call double @llvm.floor.f64(double %add15)
  %conv16 = fptosi double %19 to i32
  store i32 %conv16, i32* %X, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %lor.lhs.false
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type18, align 8
  %cmp19 = icmp eq i32 %21, 1
  br i1 %cmp19, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.else17
  %22 = load i32, i32* %nbits.addr, align 4
  %23 = load i32, i32* @m_Qc, align 4
  %mul22 = mul nsw i32 %22, %23
  %conv23 = sitofp i32 %mul22 to double
  %add24 = fadd double %conv23, 5.000000e-01
  %24 = call double @llvm.floor.f64(double %add24)
  %conv25 = fptosi double %24 to i32
  store i32 %conv25, i32* %X, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type29, align 8
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.end28
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 137
  %28 = load i32, i32* %IFLAG30, align 4
  %cmp31 = icmp eq i32 %28, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false37

land.lhs.true33:                                  ; preds = %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 134
  %30 = load i32, i32* %FieldControl34, align 8
  %cmp35 = icmp eq i32 %30, 1
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %sw.bb
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 134
  %32 = load i32, i32* %FieldControl38, align 8
  %cmp39 = icmp eq i32 %32, 0
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %lor.lhs.false37, %land.lhs.true33
  %33 = load i32, i32* %X, align 4
  store i32 %33, i32* @Xp, align 4
  %34 = load i32, i32* @Np, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @Np, align 4
  %35 = load i32, i32* @Xp, align 4
  %conv42 = sitofp i32 %35 to double
  store double %conv42, double* @Wp, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 119
  %37 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %37, i32* @Pm_Hp, align 4
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 127
  %39 = load i32, i32* %NumberofCodedPFrame, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %NumberofCodedPFrame, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 130
  %41 = load i32, i32* %NumberofPPicture, align 8
  %inc43 = add nsw i32 %41, 1
  store i32 %inc43, i32* %NumberofPPicture, align 8
  br label %if.end55

if.else44:                                        ; preds = %lor.lhs.false37
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 137
  %43 = load i32, i32* %IFLAG45, align 4
  %cmp46 = icmp ne i32 %43, 0
  br i1 %cmp46, label %land.lhs.true48, label %if.end54

land.lhs.true48:                                  ; preds = %if.else44
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 134
  %45 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %45, 1
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 137
  store i32 0, i32* %IFLAG53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then41
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.end28
  %47 = load i32, i32* %X, align 4
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @Nb, align 4
  %dec57 = add nsw i32 %48, -1
  store i32 %dec57, i32* @Nb, align 4
  %49 = load i32, i32* @Xb, align 4
  %conv58 = sitofp i32 %49 to double
  %div59 = fdiv double %conv58, 1.363600e+00
  store double %div59, double* @Wb, align 8
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 126
  %51 = load i32, i32* %NumberofCodedBFrame, align 8
  %inc60 = add nsw i32 %51, 1
  store i32 %inc60, i32* %NumberofCodedBFrame, align 8
  %52 = load i32, i32* @NumberofBFrames, align 4
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* @NumberofBFrames, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb56, %if.end55, %if.end28
  %53 = load i32, i32* %canary
  %54 = icmp eq i32 %53, 1255867799
  br i1 %54, label %55, label %func_exit

55:                                               ; preds = %sw.epilog, %func_exit
  ret void

func_exit:                                        ; preds = %sw.epilog
  call void @detect_breach()
  br label %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.11() #0 {
entry:
  %i = alloca i32, align 4
  %n_windowSize = alloca i32, align 4
  %threshold = alloca double, align 8
  %std = alloca double, align 8
  %canary = alloca i32
  store i32 1306599854, i32* %canary
  %MADModelFlag = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %m_Nc = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 1306599854
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep.12(i32 %QP) #0 {
entry:
  %canary = alloca i32
  store i32 22026044, i32* %canary
  %QP.addr = alloca i32, align 4
  %Qstep = alloca double, align 8
  %i = alloca i32, align 4
  store i32 %QP, i32* %QP.addr, align 4
  %0 = load i32, i32* %QP.addr, align 4
  %rem = srem i32 %0, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8
  store double %1, double* %Qstep, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %QP.addr, align 4
  %div = sdiv i32 %3, 6
  %cmp = icmp slt i32 %2, %div
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %Qstep, align 8
  %mul = fmul double %4, 2.000000e+00
  store double %mul, double* %Qstep, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load double, double* %Qstep, align 8
  %7 = load i32, i32* %canary
  %8 = icmp eq i32 %7, 22026044
  br i1 %8, label %9, label %func_exit

9:                                                ; preds = %for.end, %func_exit
  ret double %6

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.13() #0 {
entry:
  %l = alloca i32, align 4
  %k = alloca i32, align 4
  %canary = alloca i32
  store i32 1475031366, i32* %canary
  %MAD = alloca double, align 8
  %s = alloca i32, align 4
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 1475031366
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.14() #0 {
entry:
  %L2 = alloca double, align 8
  %L3 = alloca double, align 8
  %qp = alloca i32, align 4
  %canary = alloca i32
  store i32 699536216, i32* %canary
  %L1 = alloca double, align 8
  %i = alloca i32, align 4
  %bpp = alloca double, align 8
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 699536216
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.15(i32 %topfield) #0 {
entry:
  %topfield.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 1929905507, i32* %canary
  %i = alloca i32, align 4
  %PAverageQP = alloca i32, align 4
  %BFrameNumber = alloca i32, align 4
  %retval = alloca i32, align 4
  %m_Bits = alloca i32, align 4
  %StepSize = alloca i32, align 4
  %SumofBasicUnit = alloca i32, align 4
  %dtmp = alloca double, align 8
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 1929905507
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.16(i32 %topfield) #0 {
entry:
  %topfield.addr = alloca i32, align 4
  %SumofBasicUnit = alloca i32, align 4
  %retval = alloca i32, align 4
  %StepSize = alloca i32, align 4
  %canary = alloca i32
  store i32 316209675, i32* %canary
  %BFrameNumber = alloca i32, align 4
  %m_Bits = alloca i32, align 4
  %PAverageQP = alloca i32, align 4
  %i = alloca i32, align 4
  %dtmp = alloca double, align 8
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 316209675
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.17(i32 %n_windowSize) #0 {
entry:
  %a00 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %i = alloca i32, align 4
  %b0 = alloca double, align 8
  %a11 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %a01 = alloca double, align 8
  %b1 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %a10 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 737193378, i32* %canary
  %estimateX2 = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 737193378
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.18() #0 {
entry:
  %std = alloca double, align 8
  %m_Nc = alloca i32, align 4
  %n_windowSize = alloca i32, align 4
  %threshold = alloca double, align 8
  %MADModelFlag = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %canary = alloca i32
  store i32 550138836, i32* %canary
  %i = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 550138836
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @ComputeFrameMAD.19() #0 {
entry:
  %TotalMAD = alloca double, align 8
  %canary = alloca i32
  store i32 1335861133, i32* %canary
  %i = alloca i32, align 4
  store double 0.000000e+00, double* %TotalMAD, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4
  %1 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %1, i32 0, i32 136
  %2 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp slt i32 %0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %MADofMB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %3, i32 0, i32 131
  %4 = load double*, double** %MADofMB, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds double, double* %4, i64 %idxprom
  %6 = load double, double* %arrayidx, align 8
  %7 = load double, double* %TotalMAD, align 8
  %add = fadd double %7, %6
  store double %add, double* %TotalMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB1 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 136
  %10 = load i32, i32* %Frame_Total_Number_MB1, align 8
  %conv = sitofp i32 %10 to double
  %11 = load double, double* %TotalMAD, align 8
  %div = fdiv double %11, %conv
  store double %div, double* %TotalMAD, align 8
  %12 = load double, double* %TotalMAD, align 8
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 1335861133
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %for.end, %func_exit
  ret double %12

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.20(i32 %n_windowSize) #0 {
entry:
  %a10 = alloca double, align 8
  %b0 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %oneSampleQ = alloca double, align 8
  %a11 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %canary = alloca i32
  store i32 1740504896, i32* %canary
  %b1 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %a01 = alloca double, align 8
  %a00 = alloca double, align 8
  %i = alloca i32, align 4
  %n_realSize = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 1740504896
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.21(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %targetcomputation.addr = alloca i32, align 4
  %topfield.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 245289743, i32* %canary
  %fieldpic.addr = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 245289743
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.22(double %Qstep) #0 {
entry:
  %Qstep.addr = alloca double, align 8
  %q_rem = alloca i32, align 4
  %q_per = alloca i32, align 4
  %canary = alloca i32
  store i32 1260346065, i32* %canary
  %retval = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 1260346065
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.23() #0 {
entry:
  %canary = alloca i32
  store i32 66426688, i32* %canary
  %k = alloca i32, align 4
  %l = alloca i32, align 4
  %MAD = alloca double, align 8
  %s = alloca i32, align 4
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 66426688
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.24(double %Qstep) #0 {
entry:
  %q_rem = alloca i32, align 4
  %q_per = alloca i32, align 4
  %canary = alloca i32
  store i32 303714592, i32* %canary
  %retval = alloca i32, align 4
  %Qstep.addr = alloca double, align 8
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 303714592
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.25(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %targetcomputation.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 689256539, i32* %canary
  %i = alloca i32, align 4
  %topfield.addr = alloca i32, align 4
  %fieldpic.addr = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 689256539
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep.26(i32 %QP) #0 {
entry:
  %Qstep = alloca double, align 8
  %canary = alloca i32
  store i32 1572960369, i32* %canary
  %QP.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %QP, i32* %QP.addr, align 4
  %0 = load i32, i32* %QP.addr, align 4
  %rem = srem i32 %0, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8
  store double %1, double* %Qstep, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %QP.addr, align 4
  %div = sdiv i32 %3, 6
  %cmp = icmp slt i32 %2, %div
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %Qstep, align 8
  %mul = fmul double %4, 2.000000e+00
  store double %mul, double* %Qstep, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load double, double* %Qstep, align 8
  %7 = load i32, i32* %canary
  %8 = icmp eq i32 %7, 1572960369
  br i1 %8, label %9, label %func_exit

9:                                                ; preds = %for.end, %func_exit
  ret double %6

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.27() #0 {
entry:
  %canary = alloca i32
  store i32 1012084199, i32* %canary
  %MADModelFlag = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %threshold = alloca double, align 8
  %m_Nc = alloca i32, align 4
  %i = alloca i32, align 4
  %std = alloca double, align 8
  %n_windowSize = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 1012084199
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.28(i32 %n_windowSize) #0 {
entry:
  %MatrixValue = alloca double, align 8
  %a00 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %a10 = alloca double, align 8
  %b1 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %b0 = alloca double, align 8
  %a01 = alloca double, align 8
  %a11 = alloca double, align 8
  %canary = alloca i32
  store i32 66381475, i32* %canary
  %n_windowSize.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %estimateX2 = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 66381475
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.29() #0 {
entry:
  %MAD = alloca double, align 8
  %k = alloca i32, align 4
  %s = alloca i32, align 4
  %canary = alloca i32
  store i32 1558070068, i32* %canary
  %l = alloca i32, align 4
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 1558070068
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame.30(i32 %nbits) #0 {
entry:
  %canary = alloca i32
  store i32 983727382, i32* %canary
  %Avem_Qc = alloca i32, align 4
  %nbits.addr = alloca i32, align 4
  %X = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  store i32 0, i32* %X, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %nbits.addr, align 4
  %5 = load i32, i32* @m_Qc, align 4
  %mul = mul nsw i32 %4, %5
  %conv = sitofp i32 %mul to double
  %add = fadd double %conv, 5.000000e-01
  %6 = call double @llvm.floor.f64(double %add)
  %conv1 = fptosi double %6 to i32
  store i32 %conv1, i32* %X, align 4
  br label %if.end28

if.else:                                          ; preds = %entry
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp2 = icmp eq i32 %8, 0
  br i1 %cmp2, label %if.then4, label %if.else17

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 137
  %10 = load i32, i32* %IFLAG, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 134
  %12 = load i32, i32* %FieldControl, align 8
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 134
  %14 = load i32, i32* %FieldControl9, align 8
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32, i32* @TotalFrameQP, align 4
  %16 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div = sdiv i32 %15, %16
  store i32 %div, i32* %Avem_Qc, align 4
  %17 = load i32, i32* %nbits.addr, align 4
  %18 = load i32, i32* %Avem_Qc, align 4
  %mul13 = mul nsw i32 %17, %18
  %conv14 = sitofp i32 %mul13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %19 = call double @llvm.floor.f64(double %add15)
  %conv16 = fptosi double %19 to i32
  store i32 %conv16, i32* %X, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %lor.lhs.false
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type18, align 8
  %cmp19 = icmp eq i32 %21, 1
  br i1 %cmp19, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.else17
  %22 = load i32, i32* %nbits.addr, align 4
  %23 = load i32, i32* @m_Qc, align 4
  %mul22 = mul nsw i32 %22, %23
  %conv23 = sitofp i32 %mul22 to double
  %add24 = fadd double %conv23, 5.000000e-01
  %24 = call double @llvm.floor.f64(double %add24)
  %conv25 = fptosi double %24 to i32
  store i32 %conv25, i32* %X, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type29, align 8
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.end28
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 137
  %28 = load i32, i32* %IFLAG30, align 4
  %cmp31 = icmp eq i32 %28, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false37

land.lhs.true33:                                  ; preds = %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 134
  %30 = load i32, i32* %FieldControl34, align 8
  %cmp35 = icmp eq i32 %30, 1
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %sw.bb
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 134
  %32 = load i32, i32* %FieldControl38, align 8
  %cmp39 = icmp eq i32 %32, 0
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %lor.lhs.false37, %land.lhs.true33
  %33 = load i32, i32* %X, align 4
  store i32 %33, i32* @Xp, align 4
  %34 = load i32, i32* @Np, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @Np, align 4
  %35 = load i32, i32* @Xp, align 4
  %conv42 = sitofp i32 %35 to double
  store double %conv42, double* @Wp, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 119
  %37 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %37, i32* @Pm_Hp, align 4
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 127
  %39 = load i32, i32* %NumberofCodedPFrame, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %NumberofCodedPFrame, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 130
  %41 = load i32, i32* %NumberofPPicture, align 8
  %inc43 = add nsw i32 %41, 1
  store i32 %inc43, i32* %NumberofPPicture, align 8
  br label %if.end55

if.else44:                                        ; preds = %lor.lhs.false37
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 137
  %43 = load i32, i32* %IFLAG45, align 4
  %cmp46 = icmp ne i32 %43, 0
  br i1 %cmp46, label %land.lhs.true48, label %if.end54

land.lhs.true48:                                  ; preds = %if.else44
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 134
  %45 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %45, 1
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 137
  store i32 0, i32* %IFLAG53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then41
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.end28
  %47 = load i32, i32* %X, align 4
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @Nb, align 4
  %dec57 = add nsw i32 %48, -1
  store i32 %dec57, i32* @Nb, align 4
  %49 = load i32, i32* @Xb, align 4
  %conv58 = sitofp i32 %49 to double
  %div59 = fdiv double %conv58, 1.363600e+00
  store double %div59, double* @Wb, align 8
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 126
  %51 = load i32, i32* %NumberofCodedBFrame, align 8
  %inc60 = add nsw i32 %51, 1
  store i32 %inc60, i32* %NumberofCodedBFrame, align 8
  %52 = load i32, i32* @NumberofBFrames, align 4
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* @NumberofBFrames, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb56, %if.end55, %if.end28
  %53 = load i32, i32* %canary
  %54 = icmp eq i32 %53, 983727382
  br i1 %54, label %55, label %func_exit

55:                                               ; preds = %sw.epilog, %func_exit
  ret void

func_exit:                                        ; preds = %sw.epilog
  call void @detect_breach()
  br label %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame.31(i32 %nbits) #0 {
entry:
  %Avem_Qc = alloca i32, align 4
  %X = alloca i32, align 4
  %canary = alloca i32
  store i32 27515196, i32* %canary
  %nbits.addr = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  store i32 0, i32* %X, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %nbits.addr, align 4
  %5 = load i32, i32* @m_Qc, align 4
  %mul = mul nsw i32 %4, %5
  %conv = sitofp i32 %mul to double
  %add = fadd double %conv, 5.000000e-01
  %6 = call double @llvm.floor.f64(double %add)
  %conv1 = fptosi double %6 to i32
  store i32 %conv1, i32* %X, align 4
  br label %if.end28

if.else:                                          ; preds = %entry
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp2 = icmp eq i32 %8, 0
  br i1 %cmp2, label %if.then4, label %if.else17

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 137
  %10 = load i32, i32* %IFLAG, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 134
  %12 = load i32, i32* %FieldControl, align 8
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 134
  %14 = load i32, i32* %FieldControl9, align 8
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32, i32* @TotalFrameQP, align 4
  %16 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div = sdiv i32 %15, %16
  store i32 %div, i32* %Avem_Qc, align 4
  %17 = load i32, i32* %nbits.addr, align 4
  %18 = load i32, i32* %Avem_Qc, align 4
  %mul13 = mul nsw i32 %17, %18
  %conv14 = sitofp i32 %mul13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %19 = call double @llvm.floor.f64(double %add15)
  %conv16 = fptosi double %19 to i32
  store i32 %conv16, i32* %X, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %lor.lhs.false
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type18, align 8
  %cmp19 = icmp eq i32 %21, 1
  br i1 %cmp19, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.else17
  %22 = load i32, i32* %nbits.addr, align 4
  %23 = load i32, i32* @m_Qc, align 4
  %mul22 = mul nsw i32 %22, %23
  %conv23 = sitofp i32 %mul22 to double
  %add24 = fadd double %conv23, 5.000000e-01
  %24 = call double @llvm.floor.f64(double %add24)
  %conv25 = fptosi double %24 to i32
  store i32 %conv25, i32* %X, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type29, align 8
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.end28
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 137
  %28 = load i32, i32* %IFLAG30, align 4
  %cmp31 = icmp eq i32 %28, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false37

land.lhs.true33:                                  ; preds = %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 134
  %30 = load i32, i32* %FieldControl34, align 8
  %cmp35 = icmp eq i32 %30, 1
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %sw.bb
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 134
  %32 = load i32, i32* %FieldControl38, align 8
  %cmp39 = icmp eq i32 %32, 0
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %lor.lhs.false37, %land.lhs.true33
  %33 = load i32, i32* %X, align 4
  store i32 %33, i32* @Xp, align 4
  %34 = load i32, i32* @Np, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @Np, align 4
  %35 = load i32, i32* @Xp, align 4
  %conv42 = sitofp i32 %35 to double
  store double %conv42, double* @Wp, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 119
  %37 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %37, i32* @Pm_Hp, align 4
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 127
  %39 = load i32, i32* %NumberofCodedPFrame, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %NumberofCodedPFrame, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 130
  %41 = load i32, i32* %NumberofPPicture, align 8
  %inc43 = add nsw i32 %41, 1
  store i32 %inc43, i32* %NumberofPPicture, align 8
  br label %if.end55

if.else44:                                        ; preds = %lor.lhs.false37
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 137
  %43 = load i32, i32* %IFLAG45, align 4
  %cmp46 = icmp ne i32 %43, 0
  br i1 %cmp46, label %land.lhs.true48, label %if.end54

land.lhs.true48:                                  ; preds = %if.else44
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 134
  %45 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %45, 1
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 137
  store i32 0, i32* %IFLAG53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then41
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.end28
  %47 = load i32, i32* %X, align 4
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @Nb, align 4
  %dec57 = add nsw i32 %48, -1
  store i32 %dec57, i32* @Nb, align 4
  %49 = load i32, i32* @Xb, align 4
  %conv58 = sitofp i32 %49 to double
  %div59 = fdiv double %conv58, 1.363600e+00
  store double %div59, double* @Wb, align 8
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 126
  %51 = load i32, i32* %NumberofCodedBFrame, align 8
  %inc60 = add nsw i32 %51, 1
  store i32 %inc60, i32* %NumberofCodedBFrame, align 8
  %52 = load i32, i32* @NumberofBFrames, align 4
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* @NumberofBFrames, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb56, %if.end55, %if.end28
  %53 = load i32, i32* %canary
  %54 = icmp eq i32 %53, 27515196
  br i1 %54, label %55, label %func_exit

55:                                               ; preds = %sw.epilog, %func_exit
  ret void

func_exit:                                        ; preds = %sw.epilog
  call void @detect_breach()
  br label %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame.32(i32 %nbits) #0 {
entry:
  %nbits.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 467204058, i32* %canary
  %X = alloca i32, align 4
  %Avem_Qc = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  store i32 0, i32* %X, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %nbits.addr, align 4
  %5 = load i32, i32* @m_Qc, align 4
  %mul = mul nsw i32 %4, %5
  %conv = sitofp i32 %mul to double
  %add = fadd double %conv, 5.000000e-01
  %6 = call double @llvm.floor.f64(double %add)
  %conv1 = fptosi double %6 to i32
  store i32 %conv1, i32* %X, align 4
  br label %if.end28

if.else:                                          ; preds = %entry
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp2 = icmp eq i32 %8, 0
  br i1 %cmp2, label %if.then4, label %if.else17

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 137
  %10 = load i32, i32* %IFLAG, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 134
  %12 = load i32, i32* %FieldControl, align 8
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 134
  %14 = load i32, i32* %FieldControl9, align 8
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32, i32* @TotalFrameQP, align 4
  %16 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div = sdiv i32 %15, %16
  store i32 %div, i32* %Avem_Qc, align 4
  %17 = load i32, i32* %nbits.addr, align 4
  %18 = load i32, i32* %Avem_Qc, align 4
  %mul13 = mul nsw i32 %17, %18
  %conv14 = sitofp i32 %mul13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %19 = call double @llvm.floor.f64(double %add15)
  %conv16 = fptosi double %19 to i32
  store i32 %conv16, i32* %X, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %lor.lhs.false
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type18, align 8
  %cmp19 = icmp eq i32 %21, 1
  br i1 %cmp19, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.else17
  %22 = load i32, i32* %nbits.addr, align 4
  %23 = load i32, i32* @m_Qc, align 4
  %mul22 = mul nsw i32 %22, %23
  %conv23 = sitofp i32 %mul22 to double
  %add24 = fadd double %conv23, 5.000000e-01
  %24 = call double @llvm.floor.f64(double %add24)
  %conv25 = fptosi double %24 to i32
  store i32 %conv25, i32* %X, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type29, align 8
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.end28
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 137
  %28 = load i32, i32* %IFLAG30, align 4
  %cmp31 = icmp eq i32 %28, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false37

land.lhs.true33:                                  ; preds = %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 134
  %30 = load i32, i32* %FieldControl34, align 8
  %cmp35 = icmp eq i32 %30, 1
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %sw.bb
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 134
  %32 = load i32, i32* %FieldControl38, align 8
  %cmp39 = icmp eq i32 %32, 0
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %lor.lhs.false37, %land.lhs.true33
  %33 = load i32, i32* %X, align 4
  store i32 %33, i32* @Xp, align 4
  %34 = load i32, i32* @Np, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @Np, align 4
  %35 = load i32, i32* @Xp, align 4
  %conv42 = sitofp i32 %35 to double
  store double %conv42, double* @Wp, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 119
  %37 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %37, i32* @Pm_Hp, align 4
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 127
  %39 = load i32, i32* %NumberofCodedPFrame, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %NumberofCodedPFrame, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 130
  %41 = load i32, i32* %NumberofPPicture, align 8
  %inc43 = add nsw i32 %41, 1
  store i32 %inc43, i32* %NumberofPPicture, align 8
  br label %if.end55

if.else44:                                        ; preds = %lor.lhs.false37
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 137
  %43 = load i32, i32* %IFLAG45, align 4
  %cmp46 = icmp ne i32 %43, 0
  br i1 %cmp46, label %land.lhs.true48, label %if.end54

land.lhs.true48:                                  ; preds = %if.else44
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 134
  %45 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %45, 1
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 137
  store i32 0, i32* %IFLAG53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then41
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.end28
  %47 = load i32, i32* %X, align 4
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @Nb, align 4
  %dec57 = add nsw i32 %48, -1
  store i32 %dec57, i32* @Nb, align 4
  %49 = load i32, i32* @Xb, align 4
  %conv58 = sitofp i32 %49 to double
  %div59 = fdiv double %conv58, 1.363600e+00
  store double %div59, double* @Wb, align 8
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 126
  %51 = load i32, i32* %NumberofCodedBFrame, align 8
  %inc60 = add nsw i32 %51, 1
  store i32 %inc60, i32* %NumberofCodedBFrame, align 8
  %52 = load i32, i32* @NumberofBFrames, align 4
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* @NumberofBFrames, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb56, %if.end55, %if.end28
  %53 = load i32, i32* %canary
  %54 = icmp eq i32 %53, 467204058
  br i1 %54, label %55, label %func_exit

55:                                               ; preds = %sw.epilog, %func_exit
  ret void

func_exit:                                        ; preds = %sw.epilog
  call void @detect_breach()
  br label %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.33() #0 {
entry:
  %canary = alloca i32
  store i32 1406944977, i32* %canary
  %L3 = alloca double, align 8
  %i = alloca i32, align 4
  %L2 = alloca double, align 8
  %qp = alloca i32, align 4
  %bpp = alloca double, align 8
  %L1 = alloca double, align 8
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 1406944977
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.34(i32 %n_windowSize) #0 {
entry:
  %canary = alloca i32
  store i32 1549749302, i32* %canary
  %estimateX2 = alloca i32, align 4
  %a11 = alloca double, align 8
  %b1 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %a01 = alloca double, align 8
  %i = alloca i32, align 4
  %a10 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %a00 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %oneSampleQ = alloca double, align 8
  %b0 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 1549749302
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.35(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %targetcomputation.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 663787871, i32* %canary
  %topfield.addr = alloca i32, align 4
  %fieldpic.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 663787871
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame.36(i32 %nbits) #0 {
entry:
  %X = alloca i32, align 4
  %Avem_Qc = alloca i32, align 4
  %canary = alloca i32
  store i32 11898828, i32* %canary
  %nbits.addr = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  store i32 0, i32* %X, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %nbits.addr, align 4
  %5 = load i32, i32* @m_Qc, align 4
  %mul = mul nsw i32 %4, %5
  %conv = sitofp i32 %mul to double
  %add = fadd double %conv, 5.000000e-01
  %6 = call double @llvm.floor.f64(double %add)
  %conv1 = fptosi double %6 to i32
  store i32 %conv1, i32* %X, align 4
  br label %if.end28

if.else:                                          ; preds = %entry
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp2 = icmp eq i32 %8, 0
  br i1 %cmp2, label %if.then4, label %if.else17

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 137
  %10 = load i32, i32* %IFLAG, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 134
  %12 = load i32, i32* %FieldControl, align 8
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 134
  %14 = load i32, i32* %FieldControl9, align 8
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32, i32* @TotalFrameQP, align 4
  %16 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div = sdiv i32 %15, %16
  store i32 %div, i32* %Avem_Qc, align 4
  %17 = load i32, i32* %nbits.addr, align 4
  %18 = load i32, i32* %Avem_Qc, align 4
  %mul13 = mul nsw i32 %17, %18
  %conv14 = sitofp i32 %mul13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %19 = call double @llvm.floor.f64(double %add15)
  %conv16 = fptosi double %19 to i32
  store i32 %conv16, i32* %X, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %lor.lhs.false
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type18, align 8
  %cmp19 = icmp eq i32 %21, 1
  br i1 %cmp19, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.else17
  %22 = load i32, i32* %nbits.addr, align 4
  %23 = load i32, i32* @m_Qc, align 4
  %mul22 = mul nsw i32 %22, %23
  %conv23 = sitofp i32 %mul22 to double
  %add24 = fadd double %conv23, 5.000000e-01
  %24 = call double @llvm.floor.f64(double %add24)
  %conv25 = fptosi double %24 to i32
  store i32 %conv25, i32* %X, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type29, align 8
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.end28
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 137
  %28 = load i32, i32* %IFLAG30, align 4
  %cmp31 = icmp eq i32 %28, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false37

land.lhs.true33:                                  ; preds = %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 134
  %30 = load i32, i32* %FieldControl34, align 8
  %cmp35 = icmp eq i32 %30, 1
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %sw.bb
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 134
  %32 = load i32, i32* %FieldControl38, align 8
  %cmp39 = icmp eq i32 %32, 0
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %lor.lhs.false37, %land.lhs.true33
  %33 = load i32, i32* %X, align 4
  store i32 %33, i32* @Xp, align 4
  %34 = load i32, i32* @Np, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @Np, align 4
  %35 = load i32, i32* @Xp, align 4
  %conv42 = sitofp i32 %35 to double
  store double %conv42, double* @Wp, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 119
  %37 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %37, i32* @Pm_Hp, align 4
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 127
  %39 = load i32, i32* %NumberofCodedPFrame, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %NumberofCodedPFrame, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 130
  %41 = load i32, i32* %NumberofPPicture, align 8
  %inc43 = add nsw i32 %41, 1
  store i32 %inc43, i32* %NumberofPPicture, align 8
  br label %if.end55

if.else44:                                        ; preds = %lor.lhs.false37
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 137
  %43 = load i32, i32* %IFLAG45, align 4
  %cmp46 = icmp ne i32 %43, 0
  br i1 %cmp46, label %land.lhs.true48, label %if.end54

land.lhs.true48:                                  ; preds = %if.else44
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 134
  %45 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %45, 1
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 137
  store i32 0, i32* %IFLAG53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then41
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.end28
  %47 = load i32, i32* %X, align 4
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @Nb, align 4
  %dec57 = add nsw i32 %48, -1
  store i32 %dec57, i32* @Nb, align 4
  %49 = load i32, i32* @Xb, align 4
  %conv58 = sitofp i32 %49 to double
  %div59 = fdiv double %conv58, 1.363600e+00
  store double %div59, double* @Wb, align 8
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 126
  %51 = load i32, i32* %NumberofCodedBFrame, align 8
  %inc60 = add nsw i32 %51, 1
  store i32 %inc60, i32* %NumberofCodedBFrame, align 8
  %52 = load i32, i32* @NumberofBFrames, align 4
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* @NumberofBFrames, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb56, %if.end55, %if.end28
  %53 = load i32, i32* %canary
  %54 = icmp eq i32 %53, 11898828
  br i1 %54, label %55, label %func_exit

55:                                               ; preds = %sw.epilog, %func_exit
  ret void

func_exit:                                        ; preds = %sw.epilog
  call void @detect_breach()
  br label %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep.37(i32 %QP) #0 {
entry:
  %canary = alloca i32
  store i32 1796094886, i32* %canary
  %Qstep = alloca double, align 8
  %i = alloca i32, align 4
  %QP.addr = alloca i32, align 4
  store i32 %QP, i32* %QP.addr, align 4
  %0 = load i32, i32* %QP.addr, align 4
  %rem = srem i32 %0, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8
  store double %1, double* %Qstep, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %QP.addr, align 4
  %div = sdiv i32 %3, 6
  %cmp = icmp slt i32 %2, %div
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %Qstep, align 8
  %mul = fmul double %4, 2.000000e+00
  store double %mul, double* %Qstep, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load double, double* %Qstep, align 8
  %7 = load i32, i32* %canary
  %8 = icmp eq i32 %7, 1796094886
  br i1 %8, label %9, label %func_exit

9:                                                ; preds = %for.end, %func_exit
  ret double %6

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.38(double %Qstep) #0 {
entry:
  %q_rem = alloca i32, align 4
  %canary = alloca i32
  store i32 1143243411, i32* %canary
  %retval = alloca i32, align 4
  %Qstep.addr = alloca double, align 8
  %q_per = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 1143243411
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.39(i32 %np, i32 %nb) #0 {
entry:
  %np.addr = alloca i32, align 4
  %nb.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 2090457872, i32* %canary
  %GOPDquant = alloca i32, align 4
  %Overum = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %OverBits = alloca i32, align 4
  %AllocatedBits = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 2090457872
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.40(double %Qstep) #0 {
entry:
  %Qstep.addr = alloca double, align 8
  %q_per = alloca i32, align 4
  %canary = alloca i32
  store i32 1076857656, i32* %canary
  %q_rem = alloca i32, align 4
  %retval = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 1076857656
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.41() #0 {
entry:
  %i = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %threshold = alloca double, align 8
  %std = alloca double, align 8
  %canary = alloca i32
  store i32 465407800, i32* %canary
  %error = alloca [20 x double], align 16
  %n_windowSize = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 465407800
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.42(i32 %np, i32 %nb) #0 {
entry:
  %nb.addr = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %AllocatedBits = alloca i32, align 4
  %np.addr = alloca i32, align 4
  %OverBits = alloca i32, align 4
  %canary = alloca i32
  store i32 288230454, i32* %canary
  %Overum = alloca i32, align 4
  %GOPDquant = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 288230454
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.43() #0 {
entry:
  %canary = alloca i32
  store i32 1371378941, i32* %canary
  %threshold = alloca double, align 8
  %i = alloca i32, align 4
  %std = alloca double, align 8
  %n_windowSize = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %m_Nc = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 1371378941
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.44(i32 %topfield) #0 {
entry:
  %SumofBasicUnit = alloca i32, align 4
  %i = alloca i32, align 4
  %BFrameNumber = alloca i32, align 4
  %PAverageQP = alloca i32, align 4
  %canary = alloca i32
  store i32 1281544223, i32* %canary
  %m_Bits = alloca i32, align 4
  %retval = alloca i32, align 4
  %dtmp = alloca double, align 8
  %topfield.addr = alloca i32, align 4
  %StepSize = alloca i32, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 1281544223
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.45() #0 {
entry:
  %canary = alloca i32
  store i32 453905235, i32* %canary
  %k = alloca i32, align 4
  %MAD = alloca double, align 8
  %l = alloca i32, align 4
  %s = alloca i32, align 4
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 453905235
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.46() #0 {
entry:
  %MADModelFlag = alloca i32, align 4
  %std = alloca double, align 8
  %n_windowSize = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %canary = alloca i32
  store i32 930272808, i32* %canary
  %i = alloca i32, align 4
  %threshold = alloca double, align 8
  %error = alloca [20 x double], align 16
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 930272808
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_update_pict_frame.47(i32 %nbits) #0 {
entry:
  %canary = alloca i32
  store i32 1768168240, i32* %canary
  %nbits.addr = alloca i32, align 4
  %Avem_Qc = alloca i32, align 4
  %X = alloca i32, align 4
  store i32 %nbits, i32* %nbits.addr, align 4
  store i32 0, i32* %X, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %nbits.addr, align 4
  %5 = load i32, i32* @m_Qc, align 4
  %mul = mul nsw i32 %4, %5
  %conv = sitofp i32 %mul to double
  %add = fadd double %conv, 5.000000e-01
  %6 = call double @llvm.floor.f64(double %add)
  %conv1 = fptosi double %6 to i32
  store i32 %conv1, i32* %X, align 4
  br label %if.end28

if.else:                                          ; preds = %entry
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp2 = icmp eq i32 %8, 0
  br i1 %cmp2, label %if.then4, label %if.else17

if.then4:                                         ; preds = %if.else
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 137
  %10 = load i32, i32* %IFLAG, align 4
  %cmp5 = icmp eq i32 %10, 0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 134
  %12 = load i32, i32* %FieldControl, align 8
  %cmp7 = icmp eq i32 %12, 1
  br i1 %cmp7, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then4
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 134
  %14 = load i32, i32* %FieldControl9, align 8
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32, i32* @TotalFrameQP, align 4
  %16 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div = sdiv i32 %15, %16
  store i32 %div, i32* %Avem_Qc, align 4
  %17 = load i32, i32* %nbits.addr, align 4
  %18 = load i32, i32* %Avem_Qc, align 4
  %mul13 = mul nsw i32 %17, %18
  %conv14 = sitofp i32 %mul13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %19 = call double @llvm.floor.f64(double %add15)
  %conv16 = fptosi double %19 to i32
  store i32 %conv16, i32* %X, align 4
  br label %if.end

if.end:                                           ; preds = %if.then12, %lor.lhs.false
  br label %if.end27

if.else17:                                        ; preds = %if.else
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 6
  %21 = load i32, i32* %type18, align 8
  %cmp19 = icmp eq i32 %21, 1
  br i1 %cmp19, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.else17
  %22 = load i32, i32* %nbits.addr, align 4
  %23 = load i32, i32* @m_Qc, align 4
  %mul22 = mul nsw i32 %22, %23
  %conv23 = sitofp i32 %mul22 to double
  %add24 = fadd double %conv23, 5.000000e-01
  %24 = call double @llvm.floor.f64(double %add24)
  %conv25 = fptosi double %24 to i32
  store i32 %conv25, i32* %X, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.else17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type29 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 6
  %26 = load i32, i32* %type29, align 8
  switch i32 %26, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb56
  ]

sw.bb:                                            ; preds = %if.end28
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 137
  %28 = load i32, i32* %IFLAG30, align 4
  %cmp31 = icmp eq i32 %28, 0
  br i1 %cmp31, label %land.lhs.true33, label %lor.lhs.false37

land.lhs.true33:                                  ; preds = %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 134
  %30 = load i32, i32* %FieldControl34, align 8
  %cmp35 = icmp eq i32 %30, 1
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %sw.bb
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl38 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 134
  %32 = load i32, i32* %FieldControl38, align 8
  %cmp39 = icmp eq i32 %32, 0
  br i1 %cmp39, label %if.then41, label %if.else44

if.then41:                                        ; preds = %lor.lhs.false37, %land.lhs.true33
  %33 = load i32, i32* %X, align 4
  store i32 %33, i32* @Xp, align 4
  %34 = load i32, i32* @Np, align 4
  %dec = add nsw i32 %34, -1
  store i32 %dec, i32* @Np, align 4
  %35 = load i32, i32* @Xp, align 4
  %conv42 = sitofp i32 %35 to double
  store double %conv42, double* @Wp, align 8
  %36 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %36, i32 0, i32 119
  %37 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %37, i32* @Pm_Hp, align 4
  %38 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %38, i32 0, i32 127
  %39 = load i32, i32* %NumberofCodedPFrame, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %NumberofCodedPFrame, align 4
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 130
  %41 = load i32, i32* %NumberofPPicture, align 8
  %inc43 = add nsw i32 %41, 1
  store i32 %inc43, i32* %NumberofPPicture, align 8
  br label %if.end55

if.else44:                                        ; preds = %lor.lhs.false37
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 137
  %43 = load i32, i32* %IFLAG45, align 4
  %cmp46 = icmp ne i32 %43, 0
  br i1 %cmp46, label %land.lhs.true48, label %if.end54

land.lhs.true48:                                  ; preds = %if.else44
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 134
  %45 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %45, 1
  br i1 %cmp50, label %if.then52, label %if.end54

if.then52:                                        ; preds = %land.lhs.true48
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG53 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 137
  store i32 0, i32* %IFLAG53, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then41
  br label %sw.epilog

sw.bb56:                                          ; preds = %if.end28
  %47 = load i32, i32* %X, align 4
  store i32 %47, i32* @Xb, align 4
  %48 = load i32, i32* @Nb, align 4
  %dec57 = add nsw i32 %48, -1
  store i32 %dec57, i32* @Nb, align 4
  %49 = load i32, i32* @Xb, align 4
  %conv58 = sitofp i32 %49 to double
  %div59 = fdiv double %conv58, 1.363600e+00
  store double %div59, double* @Wb, align 8
  %50 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %50, i32 0, i32 126
  %51 = load i32, i32* %NumberofCodedBFrame, align 8
  %inc60 = add nsw i32 %51, 1
  store i32 %inc60, i32* %NumberofCodedBFrame, align 8
  %52 = load i32, i32* @NumberofBFrames, align 4
  %inc61 = add nsw i32 %52, 1
  store i32 %inc61, i32* @NumberofBFrames, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb56, %if.end55, %if.end28
  %53 = load i32, i32* %canary
  %54 = icmp eq i32 %53, 1768168240
  br i1 %54, label %55, label %func_exit

55:                                               ; preds = %sw.epilog, %func_exit
  ret void

func_exit:                                        ; preds = %sw.epilog
  call void @detect_breach()
  br label %55
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.48(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %canary = alloca i32
  store i32 1987273067, i32* %canary
  %topfield.addr = alloca i32, align 4
  %targetcomputation.addr = alloca i32, align 4
  %fieldpic.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 1987273067
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.49(i32 %n_windowSize) #0 {
entry:
  %a10 = alloca double, align 8
  %a00 = alloca double, align 8
  %b0 = alloca double, align 8
  %canary = alloca i32
  store i32 2002722561, i32* %canary
  %n_realSize = alloca i32, align 4
  %a11 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  %b1 = alloca double, align 8
  %i = alloca i32, align 4
  %oneSampleQ = alloca double, align 8
  %a01 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 2002722561
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateRCModel.50() #0 {
entry:
  %MADModelFlag = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %threshold = alloca double, align 8
  %std = alloca double, align 8
  %canary = alloca i32
  store i32 1241952308, i32* %canary
  %i = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %n_windowSize = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  store i32 0, i32* %MADModelFlag, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 6
  %1 = load i32, i32* %type, align 8
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end209

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %call = call double @ComputeFrameMAD()
  store double %call, double* @CurrentFrameMAD, align 8
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end67

if.else:                                          ; preds = %if.then
  %8 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %8, i32 0, i32 92
  %9 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %land.lhs.true, label %if.else7

land.lhs.true:                                    ; preds = %if.else
  %10 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %10, i32 0, i32 134
  %11 = load i32, i32* %FieldControl, align 8
  %cmp3 = icmp eq i32 %11, 0
  br i1 %cmp3, label %if.then4, label %if.else7

if.then4:                                         ; preds = %land.lhs.true
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 123
  %13 = load double, double* %TotalMADBasicUnit, align 8
  %14 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %14, i32 0, i32 139
  %15 = load i32, i32* %BasicUnit5, align 4
  %conv = sitofp i32 %15 to double
  %div = fdiv double %13, %conv
  %div6 = fdiv double %div, 2.000000e+00
  store double %div6, double* @CurrentFrameMAD, align 8
  br label %if.end

if.else7:                                         ; preds = %land.lhs.true, %if.else
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit8 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 123
  %17 = load double, double* %TotalMADBasicUnit8, align 8
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 139
  %19 = load i32, i32* %BasicUnit9, align 4
  %conv10 = sitofp i32 %19 to double
  %div11 = fdiv double %17, %conv10
  store double %div11, double* @CurrentFrameMAD, align 8
  br label %if.end

if.end:                                           ; preds = %if.else7, %if.then4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit12, align 8
  %21 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %22 = load i32, i32* @NumberofBasicUnit, align 4
  %sub = sub nsw i32 %21, %22
  store i32 %sub, i32* @CodedBasicUnit, align 4
  %23 = load i32, i32* @CodedBasicUnit, align 4
  %cmp13 = icmp sgt i32 %23, 0
  br i1 %cmp13, label %if.then15, label %if.end37

if.then15:                                        ; preds = %if.end
  %24 = load i32, i32* @PAveHeaderBits1, align 4
  %25 = load i32, i32* @CodedBasicUnit, align 4
  %sub16 = sub nsw i32 %25, 1
  %mul = mul nsw i32 %24, %sub16
  %26 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %26, i32 0, i32 121
  %27 = load i32, i32* %NumberofBasicUnitHeaderBits, align 4
  %add = add nsw i32 %mul, %27
  %conv17 = sitofp i32 %add to double
  %mul18 = fmul double 1.000000e+00, %conv17
  %28 = load i32, i32* @CodedBasicUnit, align 4
  %conv19 = sitofp i32 %28 to double
  %div20 = fdiv double %mul18, %conv19
  %add21 = fadd double %div20, 5.000000e-01
  %conv22 = fptosi double %add21 to i32
  store i32 %conv22, i32* @PAveHeaderBits1, align 4
  %29 = load i32, i32* @PAveHeaderBits3, align 4
  %cmp23 = icmp eq i32 %29, 0
  br i1 %cmp23, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.then15
  %30 = load i32, i32* @PAveHeaderBits1, align 4
  store i32 %30, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.else26:                                        ; preds = %if.then15
  %31 = load i32, i32* @PAveHeaderBits1, align 4
  %32 = load i32, i32* @CodedBasicUnit, align 4
  %mul27 = mul nsw i32 %31, %32
  %33 = load i32, i32* @PAveHeaderBits3, align 4
  %34 = load i32, i32* @NumberofBasicUnit, align 4
  %mul28 = mul nsw i32 %33, %34
  %add29 = add nsw i32 %mul27, %mul28
  %conv30 = sitofp i32 %add29 to double
  %mul31 = fmul double 1.000000e+00, %conv30
  %35 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv32 = sitofp i32 %35 to double
  %div33 = fdiv double %mul31, %conv32
  %add34 = fadd double %div33, 5.000000e-01
  %conv35 = fptosi double %add34 to i32
  store i32 %conv35, i32* @PAveHeaderBits2, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else26, %if.then25
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %36 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %36, i32 0, i32 91
  %37 = load i32, i32* %PicInterlace, align 8
  %cmp38 = icmp eq i32 %37, 2
  br i1 %cmp38, label %land.lhs.true42, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end37
  %38 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace40 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %38, i32 0, i32 92
  %39 = load i32, i32* %MbInterlace40, align 4
  %tobool41 = icmp ne i32 %39, 0
  br i1 %tobool41, label %land.lhs.true42, label %if.else49

land.lhs.true42:                                  ; preds = %lor.lhs.false, %if.end37
  %40 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl43 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %40, i32 0, i32 134
  %41 = load i32, i32* %FieldControl43, align 8
  %cmp44 = icmp eq i32 %41, 1
  br i1 %cmp44, label %if.then46, label %if.else49

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load double, double* @CurrentFrameMAD, align 8
  %43 = load double*, double** @FCBUCFMAD, align 8
  %44 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub47 = sub nsw i32 %44, 1
  %45 = load i32, i32* @NumberofBasicUnit, align 4
  %sub48 = sub nsw i32 %sub47, %45
  %idxprom = sext i32 %sub48 to i64
  %arrayidx = getelementptr inbounds double, double* %43, i64 %idxprom
  store double %42, double* %arrayidx, align 8
  br label %if.end54

if.else49:                                        ; preds = %land.lhs.true42, %lor.lhs.false
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double*, double** @BUCFMAD, align 8
  %48 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub50 = sub nsw i32 %48, 1
  %49 = load i32, i32* @NumberofBasicUnit, align 4
  %sub51 = sub nsw i32 %sub50, %49
  %idxprom52 = sext i32 %sub51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %47, i64 %idxprom52
  store double %46, double* %arrayidx53, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else49, %if.then46
  %50 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp55 = icmp ne i32 %50, 0
  br i1 %cmp55, label %if.then57, label %if.else61

if.then57:                                        ; preds = %if.end54
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame58 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 127
  %52 = load i32, i32* %NumberofCodedPFrame58, align 4
  %53 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul59 = mul nsw i32 %52, %53
  %54 = load i32, i32* @CodedBasicUnit, align 4
  %add60 = add nsw i32 %mul59, %54
  store i32 %add60, i32* %m_Nc, align 4
  br label %if.end66

if.else61:                                        ; preds = %if.end54
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame62 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 127
  %56 = load i32, i32* %NumberofCodedPFrame62, align 4
  %sub63 = sub nsw i32 %56, 1
  %57 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul64 = mul nsw i32 %sub63, %57
  %58 = load i32, i32* @CodedBasicUnit, align 4
  %add65 = add nsw i32 %mul64, %58
  store i32 %add65, i32* %m_Nc, align 4
  br label %if.end66

if.end66:                                         ; preds = %if.else61, %if.then57
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then2
  %59 = load i32, i32* %m_Nc, align 4
  %cmp68 = icmp sgt i32 %59, 1
  br i1 %cmp68, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end67
  store i32 1, i32* %MADModelFlag, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end67
  %60 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %60, i32 0, i32 119
  %61 = load i32, i32* %NumberofHeaderBits, align 4
  store i32 %61, i32* @PPreHeader, align 4
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end71
  %62 = load i32, i32* %i, align 4
  %cmp72 = icmp sgt i32 %62, 0
  br i1 %cmp72, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %63 = load i32, i32* %i, align 4
  %sub74 = sub nsw i32 %63, 1
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom75
  %64 = load double, double* %arrayidx76, align 8
  %65 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %65 to i64
  %arrayidx78 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom77
  store double %64, double* %arrayidx78, align 8
  %66 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %66 to i64
  %arrayidx80 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom79
  %67 = load double, double* %arrayidx80, align 8
  %68 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %68 to i64
  %arrayidx82 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom81
  store double %67, double* %arrayidx82, align 8
  %69 = load i32, i32* %i, align 4
  %sub83 = sub nsw i32 %69, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom84
  %70 = load double, double* %arrayidx85, align 8
  %71 = load i32, i32* %i, align 4
  %idxprom86 = sext i32 %71 to i64
  %arrayidx87 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom86
  store double %70, double* %arrayidx87, align 8
  %72 = load i32, i32* %i, align 4
  %idxprom88 = sext i32 %72 to i64
  %arrayidx89 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom88
  %73 = load double, double* %arrayidx89, align 8
  %74 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %74 to i64
  %arrayidx91 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom90
  store double %73, double* %arrayidx91, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %75 = load i32, i32* %i, align 4
  %dec = add nsw i32 %75, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %76 = load i32, i32* @m_Qc, align 4
  %call92 = call double @QP2Qstep(i32 %76)
  store double %call92, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit93 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 139
  %78 = load i32, i32* %BasicUnit93, align 4
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB94 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 136
  %80 = load i32, i32* %Frame_Total_Number_MB94, align 8
  %cmp95 = icmp eq i32 %78, %80
  br i1 %cmp95, label %if.then97, label %if.else101

if.then97:                                        ; preds = %for.end
  %81 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %81, i32 0, i32 120
  %82 = load i32, i32* %NumberofTextureBits, align 8
  %conv98 = sitofp i32 %82 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %83 = load double, double* @CurrentFrameMAD, align 8
  %div100 = fdiv double %mul99, %83
  store double %div100, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.else101:                                       ; preds = %for.end
  %84 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %84, i32 0, i32 122
  %85 = load i32, i32* %NumberofBasicUnitTextureBits, align 8
  %conv102 = sitofp i32 %85 to double
  %mul103 = fmul double %conv102, 1.000000e+00
  %86 = load double, double* @CurrentFrameMAD, align 8
  %div104 = fdiv double %mul103, %86
  store double %div104, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  br label %if.end105

if.end105:                                        ; preds = %if.else101, %if.then97
  %87 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 0), align 16
  store double %87, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgQp, i64 0, i64 0), align 16
  %88 = load double, double* getelementptr inbounds ([20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 0), align 16
  store double %88, double* getelementptr inbounds ([21 x double], [21 x double]* @m_rgRp, i64 0, i64 0), align 16
  %89 = load double, double* @Pm_X1, align 8
  store double %89, double* @m_X1, align 8
  %90 = load double, double* @Pm_X2, align 8
  store double %90, double* @m_X2, align 8
  %91 = load double, double* @CurrentFrameMAD, align 8
  %92 = load double, double* @PreviousFrameMAD, align 8
  %cmp106 = fcmp ogt double %91, %92
  br i1 %cmp106, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end105
  %93 = load double, double* @PreviousFrameMAD, align 8
  %94 = load double, double* @CurrentFrameMAD, align 8
  %div108 = fdiv double %93, %94
  %mul109 = fmul double %div108, 2.000000e+01
  %conv110 = fptosi double %mul109 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end105
  %95 = load double, double* @CurrentFrameMAD, align 8
  %96 = load double, double* @PreviousFrameMAD, align 8
  %div111 = fdiv double %95, %96
  %mul112 = fmul double %div111, 2.000000e+01
  %conv113 = fptosi double %mul112 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv110, %cond.true ], [ %conv113, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %97 = load i32, i32* %n_windowSize, align 4
  %cmp114 = icmp slt i32 %97, 1
  br i1 %cmp114, label %cond.true116, label %cond.false117

cond.true116:                                     ; preds = %cond.end
  br label %cond.end118

cond.false117:                                    ; preds = %cond.end
  %98 = load i32, i32* %n_windowSize, align 4
  br label %cond.end118

cond.end118:                                      ; preds = %cond.false117, %cond.true116
  %cond119 = phi i32 [ 1, %cond.true116 ], [ %98, %cond.false117 ]
  store i32 %cond119, i32* %n_windowSize, align 4
  %99 = load i32, i32* %n_windowSize, align 4
  %100 = load i32, i32* %m_Nc, align 4
  %cmp120 = icmp slt i32 %99, %100
  br i1 %cmp120, label %cond.true122, label %cond.false123

cond.true122:                                     ; preds = %cond.end118
  %101 = load i32, i32* %n_windowSize, align 4
  br label %cond.end124

cond.false123:                                    ; preds = %cond.end118
  %102 = load i32, i32* %m_Nc, align 4
  br label %cond.end124

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ %101, %cond.true122 ], [ %102, %cond.false123 ]
  store i32 %cond125, i32* %n_windowSize, align 4
  %103 = load i32, i32* %n_windowSize, align 4
  %104 = load i32, i32* @m_windowSize, align 4
  %add126 = add nsw i32 %104, 1
  %cmp127 = icmp slt i32 %103, %add126
  br i1 %cmp127, label %cond.true129, label %cond.false130

cond.true129:                                     ; preds = %cond.end124
  %105 = load i32, i32* %n_windowSize, align 4
  br label %cond.end132

cond.false130:                                    ; preds = %cond.end124
  %106 = load i32, i32* @m_windowSize, align 4
  %add131 = add nsw i32 %106, 1
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false130, %cond.true129
  %cond133 = phi i32 [ %105, %cond.true129 ], [ %add131, %cond.false130 ]
  store i32 %cond133, i32* %n_windowSize, align 4
  %107 = load i32, i32* %n_windowSize, align 4
  %cmp134 = icmp slt i32 %107, 20
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %108 = load i32, i32* %n_windowSize, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %108, %cond.true136 ], [ 20, %cond.false137 ]
  store i32 %cond139, i32* %n_windowSize, align 4
  %109 = load i32, i32* %n_windowSize, align 4
  store i32 %109, i32* @m_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc146, %cond.end138
  %110 = load i32, i32* %i, align 4
  %cmp141 = icmp slt i32 %110, 20
  br i1 %cmp141, label %for.body143, label %for.end147

for.body143:                                      ; preds = %for.cond140
  %111 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %111 to i64
  %arrayidx145 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom144
  store i32 0, i32* %arrayidx145, align 4
  br label %for.inc146

for.inc146:                                       ; preds = %for.body143
  %112 = load i32, i32* %i, align 4
  %inc = add nsw i32 %112, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond140

for.end147:                                       ; preds = %for.cond140
  %113 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %113)
  %114 = load i32, i32* @m_windowSize, align 4
  store i32 %114, i32* %n_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc173, %for.end147
  %115 = load i32, i32* %i, align 4
  %116 = load i32, i32* %n_windowSize, align 4
  %cmp149 = icmp slt i32 %115, %116
  br i1 %cmp149, label %for.body151, label %for.end175

for.body151:                                      ; preds = %for.cond148
  %117 = load double, double* @m_X1, align 8
  %118 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %118 to i64
  %arrayidx153 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom152
  %119 = load double, double* %arrayidx153, align 8
  %div154 = fdiv double %117, %119
  %120 = load double, double* @m_X2, align 8
  %121 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %121 to i64
  %arrayidx156 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom155
  %122 = load double, double* %arrayidx156, align 8
  %123 = load i32, i32* %i, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom157
  %124 = load double, double* %arrayidx158, align 8
  %mul159 = fmul double %122, %124
  %div160 = fdiv double %120, %mul159
  %add161 = fadd double %div154, %div160
  %125 = load i32, i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %arrayidx163 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom162
  %126 = load double, double* %arrayidx163, align 8
  %sub164 = fsub double %add161, %126
  %127 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %127 to i64
  %arrayidx166 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom165
  store double %sub164, double* %arrayidx166, align 8
  %128 = load i32, i32* %i, align 4
  %idxprom167 = sext i32 %128 to i64
  %arrayidx168 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom167
  %129 = load double, double* %arrayidx168, align 8
  %130 = load i32, i32* %i, align 4
  %idxprom169 = sext i32 %130 to i64
  %arrayidx170 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom169
  %131 = load double, double* %arrayidx170, align 8
  %mul171 = fmul double %129, %131
  %132 = load double, double* %std, align 8
  %add172 = fadd double %132, %mul171
  store double %add172, double* %std, align 8
  br label %for.inc173

for.inc173:                                       ; preds = %for.body151
  %133 = load i32, i32* %i, align 4
  %inc174 = add nsw i32 %133, 1
  store i32 %inc174, i32* %i, align 4
  br label %for.cond148

for.end175:                                       ; preds = %for.cond148
  %134 = load i32, i32* %n_windowSize, align 4
  %cmp176 = icmp eq i32 %134, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %for.end175
  br label %cond.end183

cond.false179:                                    ; preds = %for.end175
  %135 = load double, double* %std, align 8
  %136 = load i32, i32* %n_windowSize, align 4
  %conv180 = sitofp i32 %136 to double
  %div181 = fdiv double %135, %conv180
  %call182 = call double @sqrt(double %div181) #5
  br label %cond.end183

cond.end183:                                      ; preds = %cond.false179, %cond.true178
  %cond184 = phi double [ 0.000000e+00, %cond.true178 ], [ %call182, %cond.false179 ]
  store double %cond184, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond185

for.cond185:                                      ; preds = %for.inc197, %cond.end183
  %137 = load i32, i32* %i, align 4
  %138 = load i32, i32* %n_windowSize, align 4
  %cmp186 = icmp slt i32 %137, %138
  br i1 %cmp186, label %for.body188, label %for.end199

for.body188:                                      ; preds = %for.cond185
  %139 = load i32, i32* %i, align 4
  %idxprom189 = sext i32 %139 to i64
  %arrayidx190 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom189
  %140 = load double, double* %arrayidx190, align 8
  %141 = call double @llvm.fabs.f64(double %140)
  %142 = load double, double* %threshold, align 8
  %cmp191 = fcmp ogt double %141, %142
  br i1 %cmp191, label %if.then193, label %if.end196

if.then193:                                       ; preds = %for.body188
  %143 = load i32, i32* %i, align 4
  %idxprom194 = sext i32 %143 to i64
  %arrayidx195 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom194
  store i32 1, i32* %arrayidx195, align 4
  br label %if.end196

if.end196:                                        ; preds = %if.then193, %for.body188
  br label %for.inc197

for.inc197:                                       ; preds = %if.end196
  %144 = load i32, i32* %i, align 4
  %inc198 = add nsw i32 %144, 1
  store i32 %inc198, i32* %i, align 4
  br label %for.cond185

for.end199:                                       ; preds = %for.cond185
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 0), align 16
  %145 = load i32, i32* %n_windowSize, align 4
  call void @RCModelEstimator(i32 %145)
  %146 = load i32, i32* %MADModelFlag, align 4
  %tobool200 = icmp ne i32 %146, 0
  br i1 %tobool200, label %if.then201, label %if.else202

if.then201:                                       ; preds = %for.end199
  call void @updateMADModel()
  br label %if.end208

if.else202:                                       ; preds = %for.end199
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type203 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 6
  %148 = load i32, i32* %type203, align 8
  %cmp204 = icmp eq i32 %148, 0
  br i1 %cmp204, label %if.then206, label %if.end207

if.then206:                                       ; preds = %if.else202
  %149 = load double, double* @CurrentFrameMAD, align 8
  store double %149, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  br label %if.end207

if.end207:                                        ; preds = %if.then206, %if.else202
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then201
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %entry
  %150 = load i32, i32* %canary
  %151 = icmp eq i32 %150, 1241952308
  br i1 %151, label %152, label %func_exit

152:                                              ; preds = %if.end209, %func_exit
  ret void

func_exit:                                        ; preds = %if.end209
  call void @detect_breach()
  br label %152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.51(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %topfield.addr = alloca i32, align 4
  %targetcomputation.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 230589451, i32* %canary
  %fieldpic.addr = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 230589451
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.52() #0 {
entry:
  %canary = alloca i32
  store i32 2082397223, i32* %canary
  %l = alloca i32, align 4
  %k = alloca i32, align 4
  %s = alloca i32, align 4
  %MAD = alloca double, align 8
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 2082397223
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.53(i32 %np, i32 %nb) #0 {
entry:
  %nb.addr = alloca i32, align 4
  %Overum = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %OverBits = alloca i32, align 4
  %np.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 1094612138, i32* %canary
  %AllocatedBits = alloca i32, align 4
  %GOPDquant = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 1094612138
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.54() #0 {
entry:
  %canary = alloca i32
  store i32 315460320, i32* %canary
  %L3 = alloca double, align 8
  %bpp = alloca double, align 8
  %L2 = alloca double, align 8
  %qp = alloca i32, align 4
  %i = alloca i32, align 4
  %L1 = alloca double, align 8
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 315460320
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep.55(i32 %QP) #0 {
entry:
  %QP.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 486470252, i32* %canary
  %i = alloca i32, align 4
  %Qstep = alloca double, align 8
  store i32 %QP, i32* %QP.addr, align 4
  %0 = load i32, i32* %QP.addr, align 4
  %rem = srem i32 %0, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8
  store double %1, double* %Qstep, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %QP.addr, align 4
  %div = sdiv i32 %3, 6
  %cmp = icmp slt i32 %2, %div
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %Qstep, align 8
  %mul = fmul double %4, 2.000000e+00
  store double %mul, double* %Qstep, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load double, double* %Qstep, align 8
  %7 = load i32, i32* %canary
  %8 = icmp eq i32 %7, 486470252
  br i1 %8, label %9, label %func_exit

9:                                                ; preds = %for.end, %func_exit
  ret double %6

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.56(i32 %topfield) #0 {
entry:
  %i = alloca i32, align 4
  %BFrameNumber = alloca i32, align 4
  %canary = alloca i32
  store i32 24684149, i32* %canary
  %m_Bits = alloca i32, align 4
  %topfield.addr = alloca i32, align 4
  %SumofBasicUnit = alloca i32, align 4
  %StepSize = alloca i32, align 4
  %PAverageQP = alloca i32, align 4
  %retval = alloca i32, align 4
  %dtmp = alloca double, align 8
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 24684149
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.57(i32 %n_windowSize) #0 {
entry:
  %estimateX2 = alloca i32, align 4
  %a00 = alloca double, align 8
  %b1 = alloca double, align 8
  %i = alloca i32, align 4
  %a01 = alloca double, align 8
  %a11 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %a10 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 185911151, i32* %canary
  %oneSampleQ = alloca double, align 8
  %b0 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 185911151
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep.58(i32 %QP) #0 {
entry:
  %canary = alloca i32
  store i32 1263329427, i32* %canary
  %i = alloca i32, align 4
  %QP.addr = alloca i32, align 4
  %Qstep = alloca double, align 8
  store i32 %QP, i32* %QP.addr, align 4
  %0 = load i32, i32* %QP.addr, align 4
  %rem = srem i32 %0, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8
  store double %1, double* %Qstep, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %QP.addr, align 4
  %div = sdiv i32 %3, 6
  %cmp = icmp slt i32 %2, %div
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %Qstep, align 8
  %mul = fmul double %4, 2.000000e+00
  store double %mul, double* %Qstep, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load double, double* %Qstep, align 8
  %7 = load i32, i32* %canary
  %8 = icmp eq i32 %7, 1263329427
  br i1 %8, label %9, label %func_exit

9:                                                ; preds = %for.end, %func_exit
  ret double %6

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.59(i32 %topfield) #0 {
entry:
  %StepSize = alloca i32, align 4
  %canary = alloca i32
  store i32 168440802, i32* %canary
  %topfield.addr = alloca i32, align 4
  %BFrameNumber = alloca i32, align 4
  %dtmp = alloca double, align 8
  %PAverageQP = alloca i32, align 4
  %m_Bits = alloca i32, align 4
  %SumofBasicUnit = alloca i32, align 4
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 168440802
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.60(i32 %np, i32 %nb) #0 {
entry:
  %canary = alloca i32
  store i32 619826316, i32* %canary
  %AllocatedBits = alloca i32, align 4
  %GOPDquant = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %np.addr = alloca i32, align 4
  %nb.addr = alloca i32, align 4
  %Overum = alloca i32, align 4
  %OverBits = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 619826316
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.61(i32 %n_windowSize) #0 {
entry:
  %a10 = alloca double, align 8
  %a01 = alloca double, align 8
  %b0 = alloca double, align 8
  %canary = alloca i32
  store i32 91194510, i32* %canary
  %b1 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %a00 = alloca double, align 8
  %a11 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %i = alloca i32, align 4
  %n_realSize = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 91194510
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.62() #0 {
entry:
  %i = alloca i32, align 4
  %std = alloca double, align 8
  %canary = alloca i32
  store i32 666182552, i32* %canary
  %m_Nc = alloca i32, align 4
  %n_windowSize = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %threshold = alloca double, align 8
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 666182552
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.63(i32 %n_windowSize) #0 {
entry:
  %MatrixValue = alloca double, align 8
  %canary = alloca i32
  store i32 1544038822, i32* %canary
  %b0 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %a11 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %b1 = alloca double, align 8
  %a00 = alloca double, align 8
  %a10 = alloca double, align 8
  %i = alloca i32, align 4
  %a01 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 1544038822
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.64(i32 %topfield) #0 {
entry:
  %m_Bits = alloca i32, align 4
  %BFrameNumber = alloca i32, align 4
  %topfield.addr = alloca i32, align 4
  %retval = alloca i32, align 4
  %canary = alloca i32
  store i32 1248500235, i32* %canary
  %SumofBasicUnit = alloca i32, align 4
  %i = alloca i32, align 4
  %StepSize = alloca i32, align 4
  %dtmp = alloca double, align 8
  %PAverageQP = alloca i32, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 1248500235
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @QP2Qstep.65(i32 %QP) #0 {
entry:
  %i = alloca i32, align 4
  %Qstep = alloca double, align 8
  %canary = alloca i32
  store i32 759584274, i32* %canary
  %QP.addr = alloca i32, align 4
  store i32 %QP, i32* %QP.addr, align 4
  %0 = load i32, i32* %QP.addr, align 4
  %rem = srem i32 %0, 6
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [6 x double], [6 x double]* @QP2Qstep.QP2QSTEP, i64 0, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8
  store double %1, double* %Qstep, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4
  %3 = load i32, i32* %QP.addr, align 4
  %div = sdiv i32 %3, 6
  %cmp = icmp slt i32 %2, %div
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double, double* %Qstep, align 8
  %mul = fmul double %4, 2.000000e+00
  store double %mul, double* %Qstep, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load double, double* %Qstep, align 8
  %7 = load i32, i32* %canary
  %8 = icmp eq i32 %7, 759584274
  br i1 %8, label %9, label %func_exit

9:                                                ; preds = %for.end, %func_exit
  ret double %6

func_exit:                                        ; preds = %for.end
  call void @detect_breach()
  br label %9
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.66() #0 {
entry:
  %k = alloca i32, align 4
  %canary = alloca i32
  store i32 1862522816, i32* %canary
  %l = alloca i32, align 4
  %s = alloca i32, align 4
  %MAD = alloca double, align 8
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 1862522816
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @calc_MAD.67() #0 {
entry:
  %k = alloca i32, align 4
  %s = alloca i32, align 4
  %canary = alloca i32
  store i32 2009470965, i32* %canary
  %MAD = alloca double, align 8
  %l = alloca i32, align 4
  store i32 0, i32* %s, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32, i32* %k, align 4
  %cmp = icmp slt i32 %0, 16
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32, i32* %l, align 4
  %cmp2 = icmp slt i32 %1, 16
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32, i32* %k, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]* @diffy, i64 0, i64 %idxprom
  %3 = load i32, i32* %l, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %arrayidx, i64 0, i64 %idxprom4
  %4 = load i32, i32* %arrayidx5, align 4
  %call = call i32 @abs(i32 %4) #6
  %5 = load i32, i32* %s, align 4
  %add = add nsw i32 %5, %call
  store i32 %add, i32* %s, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %6 = load i32, i32* %l, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %7 = load i32, i32* %k, align 4
  %inc7 = add nsw i32 %7, 1
  store i32 %inc7, i32* %k, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  %8 = load i32, i32* %s, align 4
  %conv = sitofp i32 %8 to double
  %mul = fmul double %conv, 1.000000e+00
  %div = fdiv double %mul, 2.560000e+02
  store double %div, double* %MAD, align 8
  %9 = load double, double* %MAD, align 8
  %10 = load i32, i32* %canary
  %11 = icmp eq i32 %10, 2009470965
  br i1 %11, label %12, label %func_exit

12:                                               ; preds = %for.end8, %func_exit
  ret double %9

func_exit:                                        ; preds = %for.end8
  call void @detect_breach()
  br label %12
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.68() #0 {
entry:
  %L1 = alloca double, align 8
  %canary = alloca i32
  store i32 1138356762, i32* %canary
  %L3 = alloca double, align 8
  %i = alloca i32, align 4
  %L2 = alloca double, align 8
  %qp = alloca i32, align 4
  %bpp = alloca double, align 8
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 1138356762
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.69(double %Qstep) #0 {
entry:
  %q_rem = alloca i32, align 4
  %canary = alloca i32
  store i32 893047104, i32* %canary
  %Qstep.addr = alloca double, align 8
  %q_per = alloca i32, align 4
  %retval = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 893047104
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.70() #0 {
entry:
  %bpp = alloca double, align 8
  %L1 = alloca double, align 8
  %L2 = alloca double, align 8
  %L3 = alloca double, align 8
  %qp = alloca i32, align 4
  %canary = alloca i32
  store i32 1545605927, i32* %canary
  %i = alloca i32, align 4
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 1545605927
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @updateQuantizationParameter.71(i32 %topfield) #0 {
entry:
  %PAverageQP = alloca i32, align 4
  %dtmp = alloca double, align 8
  %BFrameNumber = alloca i32, align 4
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %SumofBasicUnit = alloca i32, align 4
  %StepSize = alloca i32, align 4
  %canary = alloca i32
  store i32 14845895, i32* %canary
  %topfield.addr = alloca i32, align 4
  %m_Bits = alloca i32, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 139
  %1 = load i32, i32* %BasicUnit, align 4
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp = icmp eq i32 %1, %3
  br i1 %cmp, label %if.then, label %if.else314

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %topfield.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then2, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %5 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %5, i32 0, i32 134
  %6 = load i32, i32* %FieldControl, align 8
  %cmp1 = icmp eq i32 %6, 0
  br i1 %cmp1, label %if.then2, label %if.else296

if.then2:                                         ; preds = %lor.lhs.false, %if.then
  %7 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %7, i32 0, i32 6
  %8 = load i32, i32* %type, align 8
  %cmp3 = icmp eq i32 %8, 2
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* @MyInitialQp, align 4
  store i32 %9, i32* @m_Qc, align 4
  %10 = load i32, i32* @m_Qc, align 4
  store i32 %10, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %if.then2
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type5 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 6
  %12 = load i32, i32* %type5, align 8
  %cmp6 = icmp eq i32 %12, 1
  br i1 %cmp6, label %if.then7, label %if.else161

if.then7:                                         ; preds = %if.else
  %13 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %13, i32 0, i32 34
  %14 = load i32, i32* %successive_Bframe, align 4
  %cmp8 = icmp eq i32 %14, 1
  br i1 %cmp8, label %if.then9, label %if.else34

if.then9:                                         ; preds = %if.then7
  %15 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %15, i32 0, i32 91
  %16 = load i32, i32* %PicInterlace, align 8
  %cmp10 = icmp eq i32 %16, 2
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.then9
  %17 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %17, i32 0, i32 92
  %18 = load i32, i32* %MbInterlace, align 4
  %tobool12 = icmp ne i32 %18, 0
  br i1 %tobool12, label %if.then13, label %if.end21

if.then13:                                        ; preds = %lor.lhs.false11, %if.then9
  %19 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl14 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %19, i32 0, i32 134
  %20 = load i32, i32* %FieldControl14, align 8
  %cmp15 = icmp eq i32 %20, 0
  br i1 %cmp15, label %if.then16, label %if.end20

if.then16:                                        ; preds = %if.then13
  %21 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %21, i32 0, i32 135
  %22 = load i32, i32* %FieldFrame, align 4
  %cmp17 = icmp eq i32 %22, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %if.then16
  %23 = load i32, i32* @PreviousQp2, align 4
  store i32 %23, i32* @PreviousQp1, align 4
  %24 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %24, i32* @PreviousQp2, align 4
  br label %if.end

if.else19:                                        ; preds = %if.then16
  %25 = load i32, i32* @PreviousQp2, align 4
  store i32 %25, i32* @PreviousQp1, align 4
  %26 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %26, i32* @PreviousQp2, align 4
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end, %if.then13
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %lor.lhs.false11
  %27 = load i32, i32* @PreviousQp1, align 4
  %28 = load i32, i32* @PreviousQp2, align 4
  %cmp22 = icmp eq i32 %27, %28
  br i1 %cmp22, label %if.then23, label %if.else24

if.then23:                                        ; preds = %if.end21
  %29 = load i32, i32* @PreviousQp1, align 4
  %add = add nsw i32 %29, 2
  store i32 %add, i32* @m_Qc, align 4
  br label %if.end27

if.else24:                                        ; preds = %if.end21
  %30 = load i32, i32* @PreviousQp1, align 4
  %31 = load i32, i32* @PreviousQp2, align 4
  %add25 = add nsw i32 %30, %31
  %div = sdiv i32 %add25, 2
  %add26 = add nsw i32 %div, 1
  store i32 %add26, i32* @m_Qc, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then23
  %32 = load i32, i32* @m_Qc, align 4
  %33 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp28 = icmp slt i32 %32, %33
  br i1 %cmp28, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end27
  %34 = load i32, i32* @m_Qc, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end27
  %35 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %34, %cond.true ], [ %35, %cond.false ]
  store i32 %cond, i32* @m_Qc, align 4
  %36 = load i32, i32* @RC_MIN_QUANT, align 4
  %37 = load i32, i32* @m_Qc, align 4
  %cmp29 = icmp slt i32 %36, %37
  br i1 %cmp29, label %cond.true30, label %cond.false31

cond.true30:                                      ; preds = %cond.end
  %38 = load i32, i32* @m_Qc, align 4
  br label %cond.end32

cond.false31:                                     ; preds = %cond.end
  %39 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end32

cond.end32:                                       ; preds = %cond.false31, %cond.true30
  %cond33 = phi i32 [ %38, %cond.true30 ], [ %39, %cond.false31 ]
  store i32 %cond33, i32* @m_Qc, align 4
  br label %if.end160

if.else34:                                        ; preds = %if.then7
  %40 = load i32, i32* @NumberofBFrames, align 4
  %add35 = add nsw i32 %40, 1
  %41 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe36 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %41, i32 0, i32 34
  %42 = load i32, i32* %successive_Bframe36, align 4
  %rem = srem i32 %add35, %42
  store i32 %rem, i32* %BFrameNumber, align 4
  %43 = load i32, i32* %BFrameNumber, align 4
  %cmp37 = icmp eq i32 %43, 0
  br i1 %cmp37, label %if.then38, label %if.end40

if.then38:                                        ; preds = %if.else34
  %44 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe39 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %44, i32 0, i32 34
  %45 = load i32, i32* %successive_Bframe39, align 4
  store i32 %45, i32* %BFrameNumber, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then38, %if.else34
  %46 = load i32, i32* %BFrameNumber, align 4
  %cmp41 = icmp eq i32 %46, 1
  br i1 %cmp41, label %if.then42, label %if.end59

if.then42:                                        ; preds = %if.end40
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace43 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace43, align 8
  %cmp44 = icmp eq i32 %48, 2
  br i1 %cmp44, label %if.then48, label %lor.lhs.false45

lor.lhs.false45:                                  ; preds = %if.then42
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace46 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace46, align 4
  %tobool47 = icmp ne i32 %50, 0
  br i1 %tobool47, label %if.then48, label %if.end58

if.then48:                                        ; preds = %lor.lhs.false45, %if.then42
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl49, align 8
  %cmp50 = icmp eq i32 %52, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.then48
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame52 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 135
  %54 = load i32, i32* %FieldFrame52, align 4
  %cmp53 = icmp eq i32 %54, 1
  br i1 %cmp53, label %if.then54, label %if.else55

if.then54:                                        ; preds = %if.then51
  %55 = load i32, i32* @PreviousQp2, align 4
  store i32 %55, i32* @PreviousQp1, align 4
  %56 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %56, i32* @PreviousQp2, align 4
  br label %if.end56

if.else55:                                        ; preds = %if.then51
  %57 = load i32, i32* @PreviousQp2, align 4
  store i32 %57, i32* @PreviousQp1, align 4
  %58 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %58, i32* @PreviousQp2, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.else55, %if.then54
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end40
  %59 = load i32, i32* @PreviousQp2, align 4
  %60 = load i32, i32* @PreviousQp1, align 4
  %sub = sub nsw i32 %59, %60
  %61 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe60 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %61, i32 0, i32 34
  %62 = load i32, i32* %successive_Bframe60, align 4
  %mul = mul nsw i32 -2, %62
  %sub61 = sub nsw i32 %mul, 3
  %cmp62 = icmp sle i32 %sub, %sub61
  br i1 %cmp62, label %if.then63, label %if.else64

if.then63:                                        ; preds = %if.end59
  store i32 -3, i32* %StepSize, align 4
  br label %if.end96

if.else64:                                        ; preds = %if.end59
  %63 = load i32, i32* @PreviousQp2, align 4
  %64 = load i32, i32* @PreviousQp1, align 4
  %sub65 = sub nsw i32 %63, %64
  %65 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe66 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %65, i32 0, i32 34
  %66 = load i32, i32* %successive_Bframe66, align 4
  %mul67 = mul nsw i32 -2, %66
  %sub68 = sub nsw i32 %mul67, 2
  %cmp69 = icmp eq i32 %sub65, %sub68
  br i1 %cmp69, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else64
  store i32 -2, i32* %StepSize, align 4
  br label %if.end95

if.else71:                                        ; preds = %if.else64
  %67 = load i32, i32* @PreviousQp2, align 4
  %68 = load i32, i32* @PreviousQp1, align 4
  %sub72 = sub nsw i32 %67, %68
  %69 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe73 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %69, i32 0, i32 34
  %70 = load i32, i32* %successive_Bframe73, align 4
  %mul74 = mul nsw i32 -2, %70
  %sub75 = sub nsw i32 %mul74, 1
  %cmp76 = icmp eq i32 %sub72, %sub75
  br i1 %cmp76, label %if.then77, label %if.else78

if.then77:                                        ; preds = %if.else71
  store i32 -1, i32* %StepSize, align 4
  br label %if.end94

if.else78:                                        ; preds = %if.else71
  %71 = load i32, i32* @PreviousQp2, align 4
  %72 = load i32, i32* @PreviousQp1, align 4
  %sub79 = sub nsw i32 %71, %72
  %73 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe80 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %73, i32 0, i32 34
  %74 = load i32, i32* %successive_Bframe80, align 4
  %mul81 = mul nsw i32 -2, %74
  %cmp82 = icmp eq i32 %sub79, %mul81
  br i1 %cmp82, label %if.then83, label %if.else84

if.then83:                                        ; preds = %if.else78
  store i32 0, i32* %StepSize, align 4
  br label %if.end93

if.else84:                                        ; preds = %if.else78
  %75 = load i32, i32* @PreviousQp2, align 4
  %76 = load i32, i32* @PreviousQp1, align 4
  %sub85 = sub nsw i32 %75, %76
  %77 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe86 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %77, i32 0, i32 34
  %78 = load i32, i32* %successive_Bframe86, align 4
  %mul87 = mul nsw i32 -2, %78
  %add88 = add nsw i32 %mul87, 1
  %cmp89 = icmp eq i32 %sub85, %add88
  br i1 %cmp89, label %if.then90, label %if.else91

if.then90:                                        ; preds = %if.else84
  store i32 1, i32* %StepSize, align 4
  br label %if.end92

if.else91:                                        ; preds = %if.else84
  store i32 2, i32* %StepSize, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else91, %if.then90
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then83
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then77
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then70
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then63
  %79 = load i32, i32* @PreviousQp1, align 4
  %80 = load i32, i32* %StepSize, align 4
  %add97 = add nsw i32 %79, %80
  store i32 %add97, i32* @m_Qc, align 4
  %81 = load i32, i32* %BFrameNumber, align 4
  %sub98 = sub nsw i32 %81, 1
  %mul99 = mul nsw i32 2, %sub98
  %82 = load i32, i32* %BFrameNumber, align 4
  %sub100 = sub nsw i32 %82, 1
  %mul101 = mul nsw i32 -2, %sub100
  %83 = load i32, i32* %BFrameNumber, align 4
  %sub102 = sub nsw i32 %83, 1
  %84 = load i32, i32* @PreviousQp2, align 4
  %85 = load i32, i32* @PreviousQp1, align 4
  %sub103 = sub nsw i32 %84, %85
  %mul104 = mul nsw i32 %sub102, %sub103
  %86 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe105 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %86, i32 0, i32 34
  %87 = load i32, i32* %successive_Bframe105, align 4
  %sub106 = sub nsw i32 %87, 1
  %div107 = sdiv i32 %mul104, %sub106
  %cmp108 = icmp slt i32 %mul101, %div107
  br i1 %cmp108, label %cond.true109, label %cond.false116

cond.true109:                                     ; preds = %if.end96
  %88 = load i32, i32* %BFrameNumber, align 4
  %sub110 = sub nsw i32 %88, 1
  %89 = load i32, i32* @PreviousQp2, align 4
  %90 = load i32, i32* @PreviousQp1, align 4
  %sub111 = sub nsw i32 %89, %90
  %mul112 = mul nsw i32 %sub110, %sub111
  %91 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe113 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %91, i32 0, i32 34
  %92 = load i32, i32* %successive_Bframe113, align 4
  %sub114 = sub nsw i32 %92, 1
  %div115 = sdiv i32 %mul112, %sub114
  br label %cond.end119

cond.false116:                                    ; preds = %if.end96
  %93 = load i32, i32* %BFrameNumber, align 4
  %sub117 = sub nsw i32 %93, 1
  %mul118 = mul nsw i32 -2, %sub117
  br label %cond.end119

cond.end119:                                      ; preds = %cond.false116, %cond.true109
  %cond120 = phi i32 [ %div115, %cond.true109 ], [ %mul118, %cond.false116 ]
  %cmp121 = icmp slt i32 %mul99, %cond120
  br i1 %cmp121, label %cond.true122, label %cond.false125

cond.true122:                                     ; preds = %cond.end119
  %94 = load i32, i32* %BFrameNumber, align 4
  %sub123 = sub nsw i32 %94, 1
  %mul124 = mul nsw i32 2, %sub123
  br label %cond.end147

cond.false125:                                    ; preds = %cond.end119
  %95 = load i32, i32* %BFrameNumber, align 4
  %sub126 = sub nsw i32 %95, 1
  %mul127 = mul nsw i32 -2, %sub126
  %96 = load i32, i32* %BFrameNumber, align 4
  %sub128 = sub nsw i32 %96, 1
  %97 = load i32, i32* @PreviousQp2, align 4
  %98 = load i32, i32* @PreviousQp1, align 4
  %sub129 = sub nsw i32 %97, %98
  %mul130 = mul nsw i32 %sub128, %sub129
  %99 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe131 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %99, i32 0, i32 34
  %100 = load i32, i32* %successive_Bframe131, align 4
  %sub132 = sub nsw i32 %100, 1
  %div133 = sdiv i32 %mul130, %sub132
  %cmp134 = icmp slt i32 %mul127, %div133
  br i1 %cmp134, label %cond.true135, label %cond.false142

cond.true135:                                     ; preds = %cond.false125
  %101 = load i32, i32* %BFrameNumber, align 4
  %sub136 = sub nsw i32 %101, 1
  %102 = load i32, i32* @PreviousQp2, align 4
  %103 = load i32, i32* @PreviousQp1, align 4
  %sub137 = sub nsw i32 %102, %103
  %mul138 = mul nsw i32 %sub136, %sub137
  %104 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe139 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %104, i32 0, i32 34
  %105 = load i32, i32* %successive_Bframe139, align 4
  %sub140 = sub nsw i32 %105, 1
  %div141 = sdiv i32 %mul138, %sub140
  br label %cond.end145

cond.false142:                                    ; preds = %cond.false125
  %106 = load i32, i32* %BFrameNumber, align 4
  %sub143 = sub nsw i32 %106, 1
  %mul144 = mul nsw i32 -2, %sub143
  br label %cond.end145

cond.end145:                                      ; preds = %cond.false142, %cond.true135
  %cond146 = phi i32 [ %div141, %cond.true135 ], [ %mul144, %cond.false142 ]
  br label %cond.end147

cond.end147:                                      ; preds = %cond.end145, %cond.true122
  %cond148 = phi i32 [ %mul124, %cond.true122 ], [ %cond146, %cond.end145 ]
  %107 = load i32, i32* @m_Qc, align 4
  %add149 = add nsw i32 %107, %cond148
  store i32 %add149, i32* @m_Qc, align 4
  %108 = load i32, i32* @m_Qc, align 4
  %109 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp150 = icmp slt i32 %108, %109
  br i1 %cmp150, label %cond.true151, label %cond.false152

cond.true151:                                     ; preds = %cond.end147
  %110 = load i32, i32* @m_Qc, align 4
  br label %cond.end153

cond.false152:                                    ; preds = %cond.end147
  %111 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end153

cond.end153:                                      ; preds = %cond.false152, %cond.true151
  %cond154 = phi i32 [ %110, %cond.true151 ], [ %111, %cond.false152 ]
  store i32 %cond154, i32* @m_Qc, align 4
  %112 = load i32, i32* @RC_MIN_QUANT, align 4
  %113 = load i32, i32* @m_Qc, align 4
  %cmp155 = icmp slt i32 %112, %113
  br i1 %cmp155, label %cond.true156, label %cond.false157

cond.true156:                                     ; preds = %cond.end153
  %114 = load i32, i32* @m_Qc, align 4
  br label %cond.end158

cond.false157:                                    ; preds = %cond.end153
  %115 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end158

cond.end158:                                      ; preds = %cond.false157, %cond.true156
  %cond159 = phi i32 [ %114, %cond.true156 ], [ %115, %cond.false157 ]
  store i32 %cond159, i32* @m_Qc, align 4
  br label %if.end160

if.end160:                                        ; preds = %cond.end158, %cond.end32
  %116 = load i32, i32* @m_Qc, align 4
  store i32 %116, i32* %retval, align 4
  br label %return

if.else161:                                       ; preds = %if.else
  %117 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type162 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %117, i32 0, i32 6
  %118 = load i32, i32* %type162, align 8
  %cmp163 = icmp eq i32 %118, 0
  br i1 %cmp163, label %land.lhs.true, label %if.else175

land.lhs.true:                                    ; preds = %if.else161
  %119 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %119, i32 0, i32 130
  %120 = load i32, i32* %NumberofPPicture, align 8
  %cmp164 = icmp eq i32 %120, 0
  br i1 %cmp164, label %if.then165, label %if.else175

if.then165:                                       ; preds = %land.lhs.true
  %121 = load i32, i32* @MyInitialQp, align 4
  store i32 %121, i32* @m_Qc, align 4
  %122 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl166 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %122, i32 0, i32 134
  %123 = load i32, i32* %FieldControl166, align 8
  %cmp167 = icmp eq i32 %123, 0
  br i1 %cmp167, label %if.then168, label %if.end174

if.then168:                                       ; preds = %if.then165
  %124 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %124, i32 0, i32 25
  %125 = load i32, i32* %frame_mbs_only_flag, align 4
  %tobool169 = icmp ne i32 %125, 0
  br i1 %tobool169, label %if.then170, label %if.else172

if.then170:                                       ; preds = %if.then168
  %126 = load i32, i32* @m_Qc, align 4
  %127 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %127, i32 0, i32 129
  %128 = load i32, i32* %TotalQpforPPicture, align 4
  %add171 = add nsw i32 %128, %126
  store i32 %add171, i32* %TotalQpforPPicture, align 4
  %129 = load i32, i32* @PreviousQp2, align 4
  store i32 %129, i32* @PreviousQp1, align 4
  %130 = load i32, i32* @m_Qc, align 4
  store i32 %130, i32* @PreviousQp2, align 4
  %131 = load i32, i32* @m_Qc, align 4
  store i32 %131, i32* @Pm_Qp, align 4
  br label %if.end173

if.else172:                                       ; preds = %if.then168
  %132 = load i32, i32* @m_Qc, align 4
  store i32 %132, i32* @FrameQPBuffer, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else172, %if.then170
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then165
  %133 = load i32, i32* @m_Qc, align 4
  store i32 %133, i32* %retval, align 4
  br label %return

if.else175:                                       ; preds = %land.lhs.true, %if.else161
  %134 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace176 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %134, i32 0, i32 91
  %135 = load i32, i32* %PicInterlace176, align 8
  %cmp177 = icmp eq i32 %135, 2
  br i1 %cmp177, label %land.lhs.true181, label %lor.lhs.false178

lor.lhs.false178:                                 ; preds = %if.else175
  %136 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace179 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %136, i32 0, i32 92
  %137 = load i32, i32* %MbInterlace179, align 4
  %tobool180 = icmp ne i32 %137, 0
  br i1 %tobool180, label %land.lhs.true181, label %if.end194

land.lhs.true181:                                 ; preds = %lor.lhs.false178, %if.else175
  %138 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl182 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %138, i32 0, i32 134
  %139 = load i32, i32* %FieldControl182, align 8
  %cmp183 = icmp eq i32 %139, 0
  br i1 %cmp183, label %if.then184, label %if.end194

if.then184:                                       ; preds = %land.lhs.true181
  %140 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %140, i32 0, i32 135
  %141 = load i32, i32* %FieldFrame185, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %if.then187, label %if.else190

if.then187:                                       ; preds = %if.then184
  %142 = load i32, i32* @FrameQPBuffer, align 4
  %143 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture188 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %143, i32 0, i32 129
  %144 = load i32, i32* %TotalQpforPPicture188, align 4
  %add189 = add nsw i32 %144, %142
  store i32 %add189, i32* %TotalQpforPPicture188, align 4
  %145 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %145, i32* @Pm_Qp, align 4
  br label %if.end193

if.else190:                                       ; preds = %if.then184
  %146 = load i32, i32* @FieldQPBuffer, align 4
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture191 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 129
  %148 = load i32, i32* %TotalQpforPPicture191, align 4
  %add192 = add nsw i32 %148, %146
  store i32 %add192, i32* %TotalQpforPPicture191, align 4
  %149 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %149, i32* @Pm_Qp, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.else190, %if.then187
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %land.lhs.true181, %lor.lhs.false178
  %150 = load double, double* @Pm_X1, align 8
  store double %150, double* @m_X1, align 8
  %151 = load double, double* @Pm_X2, align 8
  store double %151, double* @m_X2, align 8
  %152 = load i32, i32* @PPreHeader, align 4
  store i32 %152, i32* @m_Hp, align 4
  %153 = load i32, i32* @Pm_Qp, align 4
  store i32 %153, i32* @m_Qp, align 4
  %154 = load i32, i32* @PDuantQp, align 4
  store i32 %154, i32* @DuantQp, align 4
  %155 = load double, double* @PMADPictureC1, align 8
  store double %155, double* @MADPictureC1, align 8
  %156 = load double, double* @PMADPictureC2, align 8
  store double %156, double* @MADPictureC2, align 8
  %157 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %157, double* @PreviousPictureMAD, align 8
  %158 = load double, double* @MADPictureC1, align 8
  %159 = load double, double* @PreviousPictureMAD, align 8
  %mul195 = fmul double %158, %159
  %160 = load double, double* @MADPictureC2, align 8
  %add196 = fadd double %mul195, %160
  store double %add196, double* @CurrentFrameMAD, align 8
  %161 = load i64, i64* @T, align 8
  %cmp197 = icmp slt i64 %161, 0
  br i1 %cmp197, label %if.then198, label %if.else205

if.then198:                                       ; preds = %if.end194
  %162 = load i32, i32* @m_Qp, align 4
  %163 = load i32, i32* @DuantQp, align 4
  %add199 = add nsw i32 %162, %163
  store i32 %add199, i32* @m_Qc, align 4
  %164 = load i32, i32* @m_Qc, align 4
  %165 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp200 = icmp slt i32 %164, %165
  br i1 %cmp200, label %cond.true201, label %cond.false202

cond.true201:                                     ; preds = %if.then198
  %166 = load i32, i32* @m_Qc, align 4
  br label %cond.end203

cond.false202:                                    ; preds = %if.then198
  %167 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end203

cond.end203:                                      ; preds = %cond.false202, %cond.true201
  %cond204 = phi i32 [ %166, %cond.true201 ], [ %167, %cond.false202 ]
  store i32 %cond204, i32* @m_Qc, align 4
  br label %if.end283

if.else205:                                       ; preds = %if.end194
  %168 = load i64, i64* @T, align 8
  %169 = load i32, i32* @m_Hp, align 4
  %conv = sext i32 %169 to i64
  %sub206 = sub nsw i64 %168, %conv
  %conv207 = trunc i64 %sub206 to i32
  store i32 %conv207, i32* %m_Bits, align 4
  %170 = load i32, i32* %m_Bits, align 4
  %171 = load double, double* @bit_rate, align 8
  %172 = load double, double* @MINVALUE, align 8
  %173 = load double, double* @frame_rate, align 8
  %mul208 = fmul double %172, %173
  %div209 = fdiv double %171, %mul208
  %conv210 = fptosi double %div209 to i32
  %cmp211 = icmp slt i32 %170, %conv210
  br i1 %cmp211, label %cond.true213, label %cond.false217

cond.true213:                                     ; preds = %if.else205
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @MINVALUE, align 8
  %176 = load double, double* @frame_rate, align 8
  %mul214 = fmul double %175, %176
  %div215 = fdiv double %174, %mul214
  %conv216 = fptosi double %div215 to i32
  br label %cond.end218

cond.false217:                                    ; preds = %if.else205
  %177 = load i32, i32* %m_Bits, align 4
  br label %cond.end218

cond.end218:                                      ; preds = %cond.false217, %cond.true213
  %cond219 = phi i32 [ %conv216, %cond.true213 ], [ %177, %cond.false217 ]
  store i32 %cond219, i32* %m_Bits, align 4
  %178 = load double, double* @CurrentFrameMAD, align 8
  %179 = load double, double* @m_X1, align 8
  %mul220 = fmul double %178, %179
  %180 = load double, double* @CurrentFrameMAD, align 8
  %mul221 = fmul double %mul220, %180
  %181 = load double, double* @m_X1, align 8
  %mul222 = fmul double %mul221, %181
  %182 = load double, double* @m_X2, align 8
  %mul223 = fmul double 4.000000e+00, %182
  %183 = load double, double* @CurrentFrameMAD, align 8
  %mul224 = fmul double %mul223, %183
  %184 = load i32, i32* %m_Bits, align 4
  %conv225 = sitofp i32 %184 to double
  %mul226 = fmul double %mul224, %conv225
  %add227 = fadd double %mul222, %mul226
  store double %add227, double* %dtmp, align 8
  %185 = load double, double* @m_X2, align 8
  %cmp228 = fcmp oeq double %185, 0.000000e+00
  br i1 %cmp228, label %if.then238, label %lor.lhs.false230

lor.lhs.false230:                                 ; preds = %cond.end218
  %186 = load double, double* %dtmp, align 8
  %cmp231 = fcmp olt double %186, 0.000000e+00
  br i1 %cmp231, label %if.then238, label %lor.lhs.false233

lor.lhs.false233:                                 ; preds = %lor.lhs.false230
  %187 = load double, double* %dtmp, align 8
  %call = call double @sqrt(double %187) #5
  %188 = load double, double* @m_X1, align 8
  %189 = load double, double* @CurrentFrameMAD, align 8
  %mul234 = fmul double %188, %189
  %sub235 = fsub double %call, %mul234
  %cmp236 = fcmp ole double %sub235, 0.000000e+00
  br i1 %cmp236, label %if.then238, label %if.else244

if.then238:                                       ; preds = %lor.lhs.false233, %lor.lhs.false230, %cond.end218
  %190 = load double, double* @m_X1, align 8
  %191 = load double, double* @CurrentFrameMAD, align 8
  %mul239 = fmul double %190, %191
  %192 = load i32, i32* %m_Bits, align 4
  %conv240 = sitofp i32 %192 to double
  %div241 = fdiv double %mul239, %conv240
  %conv242 = fptrunc double %div241 to float
  %conv243 = fpext float %conv242 to double
  store double %conv243, double* @m_Qstep, align 8
  br label %if.end253

if.else244:                                       ; preds = %lor.lhs.false233
  %193 = load double, double* @m_X2, align 8
  %mul245 = fmul double 2.000000e+00, %193
  %194 = load double, double* @CurrentFrameMAD, align 8
  %mul246 = fmul double %mul245, %194
  %195 = load double, double* %dtmp, align 8
  %call247 = call double @sqrt(double %195) #5
  %196 = load double, double* @m_X1, align 8
  %197 = load double, double* @CurrentFrameMAD, align 8
  %mul248 = fmul double %196, %197
  %sub249 = fsub double %call247, %mul248
  %div250 = fdiv double %mul246, %sub249
  %conv251 = fptrunc double %div250 to float
  %conv252 = fpext float %conv251 to double
  store double %conv252, double* @m_Qstep, align 8
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.then238
  %198 = load double, double* @m_Qstep, align 8
  %call254 = call i32 @Qstep2QP(double %198)
  store i32 %call254, i32* @m_Qc, align 4
  %199 = load i32, i32* @m_Qp, align 4
  %200 = load i32, i32* @DuantQp, align 4
  %add255 = add nsw i32 %199, %200
  %201 = load i32, i32* @m_Qc, align 4
  %cmp256 = icmp slt i32 %add255, %201
  br i1 %cmp256, label %cond.true258, label %cond.false260

cond.true258:                                     ; preds = %if.end253
  %202 = load i32, i32* @m_Qp, align 4
  %203 = load i32, i32* @DuantQp, align 4
  %add259 = add nsw i32 %202, %203
  br label %cond.end261

cond.false260:                                    ; preds = %if.end253
  %204 = load i32, i32* @m_Qc, align 4
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true258
  %cond262 = phi i32 [ %add259, %cond.true258 ], [ %204, %cond.false260 ]
  store i32 %cond262, i32* @m_Qc, align 4
  %205 = load i32, i32* @m_Qc, align 4
  %206 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp263 = icmp slt i32 %205, %206
  br i1 %cmp263, label %cond.true265, label %cond.false266

cond.true265:                                     ; preds = %cond.end261
  %207 = load i32, i32* @m_Qc, align 4
  br label %cond.end267

cond.false266:                                    ; preds = %cond.end261
  %208 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end267

cond.end267:                                      ; preds = %cond.false266, %cond.true265
  %cond268 = phi i32 [ %207, %cond.true265 ], [ %208, %cond.false266 ]
  store i32 %cond268, i32* @m_Qc, align 4
  %209 = load i32, i32* @m_Qp, align 4
  %210 = load i32, i32* @DuantQp, align 4
  %sub269 = sub nsw i32 %209, %210
  %211 = load i32, i32* @m_Qc, align 4
  %cmp270 = icmp slt i32 %sub269, %211
  br i1 %cmp270, label %cond.true272, label %cond.false273

cond.true272:                                     ; preds = %cond.end267
  %212 = load i32, i32* @m_Qc, align 4
  br label %cond.end275

cond.false273:                                    ; preds = %cond.end267
  %213 = load i32, i32* @m_Qp, align 4
  %214 = load i32, i32* @DuantQp, align 4
  %sub274 = sub nsw i32 %213, %214
  br label %cond.end275

cond.end275:                                      ; preds = %cond.false273, %cond.true272
  %cond276 = phi i32 [ %212, %cond.true272 ], [ %sub274, %cond.false273 ]
  store i32 %cond276, i32* @m_Qc, align 4
  %215 = load i32, i32* @RC_MIN_QUANT, align 4
  %216 = load i32, i32* @m_Qc, align 4
  %cmp277 = icmp slt i32 %215, %216
  br i1 %cmp277, label %cond.true279, label %cond.false280

cond.true279:                                     ; preds = %cond.end275
  %217 = load i32, i32* @m_Qc, align 4
  br label %cond.end281

cond.false280:                                    ; preds = %cond.end275
  %218 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end281

cond.end281:                                      ; preds = %cond.false280, %cond.true279
  %cond282 = phi i32 [ %217, %cond.true279 ], [ %218, %cond.false280 ]
  store i32 %cond282, i32* @m_Qc, align 4
  br label %if.end283

if.end283:                                        ; preds = %cond.end281, %cond.end203
  %219 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl284 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %219, i32 0, i32 134
  %220 = load i32, i32* %FieldControl284, align 8
  %cmp285 = icmp eq i32 %220, 0
  br i1 %cmp285, label %if.then287, label %if.end295

if.then287:                                       ; preds = %if.end283
  %221 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag288 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %221, i32 0, i32 25
  %222 = load i32, i32* %frame_mbs_only_flag288, align 4
  %tobool289 = icmp ne i32 %222, 0
  br i1 %tobool289, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.then287
  %223 = load i32, i32* @m_Qc, align 4
  %224 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture291 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %224, i32 0, i32 129
  %225 = load i32, i32* %TotalQpforPPicture291, align 4
  %add292 = add nsw i32 %225, %223
  store i32 %add292, i32* %TotalQpforPPicture291, align 4
  %226 = load i32, i32* @PreviousQp2, align 4
  store i32 %226, i32* @PreviousQp1, align 4
  %227 = load i32, i32* @m_Qc, align 4
  store i32 %227, i32* @PreviousQp2, align 4
  %228 = load i32, i32* @m_Qc, align 4
  store i32 %228, i32* @Pm_Qp, align 4
  br label %if.end294

if.else293:                                       ; preds = %if.then287
  %229 = load i32, i32* @m_Qc, align 4
  store i32 %229, i32* @FrameQPBuffer, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.else293, %if.then290
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.end283
  %230 = load i32, i32* @m_Qc, align 4
  store i32 %230, i32* %retval, align 4
  br label %return

if.else296:                                       ; preds = %lor.lhs.false
  %231 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type297 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %231, i32 0, i32 6
  %232 = load i32, i32* %type297, align 8
  %cmp298 = icmp eq i32 %232, 0
  br i1 %cmp298, label %land.lhs.true300, label %if.end313

land.lhs.true300:                                 ; preds = %if.else296
  %233 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %233, i32 0, i32 137
  %234 = load i32, i32* %IFLAG, align 4
  %cmp301 = icmp eq i32 %234, 0
  br i1 %cmp301, label %if.then303, label %if.end313

if.then303:                                       ; preds = %land.lhs.true300
  %235 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace304 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %235, i32 0, i32 91
  %236 = load i32, i32* %PicInterlace304, align 8
  %cmp305 = icmp eq i32 %236, 1
  br i1 %cmp305, label %if.then307, label %if.else311

if.then307:                                       ; preds = %if.then303
  %237 = load i32, i32* @m_Qc, align 4
  %238 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture308 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %238, i32 0, i32 129
  %239 = load i32, i32* %TotalQpforPPicture308, align 4
  %add309 = add nsw i32 %239, %237
  store i32 %add309, i32* %TotalQpforPPicture308, align 4
  %240 = load i32, i32* @PreviousQp2, align 4
  %add310 = add nsw i32 %240, 1
  store i32 %add310, i32* @PreviousQp1, align 4
  %241 = load i32, i32* @m_Qc, align 4
  store i32 %241, i32* @PreviousQp2, align 4
  %242 = load i32, i32* @m_Qc, align 4
  store i32 %242, i32* @Pm_Qp, align 4
  br label %if.end312

if.else311:                                       ; preds = %if.then303
  %243 = load i32, i32* @m_Qc, align 4
  store i32 %243, i32* @FieldQPBuffer, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.else311, %if.then307
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %land.lhs.true300, %if.else296
  %244 = load i32, i32* @m_Qc, align 4
  store i32 %244, i32* %retval, align 4
  br label %return

if.else314:                                       ; preds = %entry
  %245 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type315 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %245, i32 0, i32 6
  %246 = load i32, i32* %type315, align 8
  %cmp316 = icmp eq i32 %246, 2
  br i1 %cmp316, label %if.then318, label %if.else319

if.then318:                                       ; preds = %if.else314
  %247 = load i32, i32* @MyInitialQp, align 4
  store i32 %247, i32* @m_Qc, align 4
  %248 = load i32, i32* @m_Qc, align 4
  store i32 %248, i32* %retval, align 4
  br label %return

if.else319:                                       ; preds = %if.else314
  %249 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type320 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %249, i32 0, i32 6
  %250 = load i32, i32* %type320, align 8
  %cmp321 = icmp eq i32 %250, 0
  br i1 %cmp321, label %land.lhs.true323, label %if.else332

land.lhs.true323:                                 ; preds = %if.else319
  %251 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG324 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %251, i32 0, i32 137
  %252 = load i32, i32* %IFLAG324, align 4
  %cmp325 = icmp eq i32 %252, 1
  br i1 %cmp325, label %land.lhs.true327, label %if.else332

land.lhs.true327:                                 ; preds = %land.lhs.true323
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl328 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 134
  %254 = load i32, i32* %FieldControl328, align 8
  %cmp329 = icmp eq i32 %254, 1
  br i1 %cmp329, label %if.then331, label %if.else332

if.then331:                                       ; preds = %land.lhs.true327
  %255 = load i32, i32* @MyInitialQp, align 4
  store i32 %255, i32* @m_Qc, align 4
  %256 = load i32, i32* @m_Qc, align 4
  store i32 %256, i32* %retval, align 4
  br label %return

if.else332:                                       ; preds = %land.lhs.true327, %land.lhs.true323, %if.else319
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type333 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 6
  %258 = load i32, i32* %type333, align 8
  %cmp334 = icmp eq i32 %258, 1
  br i1 %cmp334, label %if.then336, label %if.else533

if.then336:                                       ; preds = %if.else332
  %259 = load i32, i32* %topfield.addr, align 4
  %tobool337 = icmp ne i32 %259, 0
  br i1 %tobool337, label %if.then342, label %lor.lhs.false338

lor.lhs.false338:                                 ; preds = %if.then336
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl339 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 134
  %261 = load i32, i32* %FieldControl339, align 8
  %cmp340 = icmp eq i32 %261, 0
  br i1 %cmp340, label %if.then342, label %if.else532

if.then342:                                       ; preds = %lor.lhs.false338, %if.then336
  %262 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe343 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %262, i32 0, i32 34
  %263 = load i32, i32* %successive_Bframe343, align 4
  %cmp344 = icmp eq i32 %263, 1
  br i1 %cmp344, label %if.then346, label %if.else387

if.then346:                                       ; preds = %if.then342
  %264 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace347 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %264, i32 0, i32 91
  %265 = load i32, i32* %PicInterlace347, align 8
  %cmp348 = icmp eq i32 %265, 2
  br i1 %cmp348, label %if.then353, label %lor.lhs.false350

lor.lhs.false350:                                 ; preds = %if.then346
  %266 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace351 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %266, i32 0, i32 92
  %267 = load i32, i32* %MbInterlace351, align 4
  %tobool352 = icmp ne i32 %267, 0
  br i1 %tobool352, label %if.then353, label %if.end365

if.then353:                                       ; preds = %lor.lhs.false350, %if.then346
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl354 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 134
  %269 = load i32, i32* %FieldControl354, align 8
  %cmp355 = icmp eq i32 %269, 0
  br i1 %cmp355, label %if.then357, label %if.end364

if.then357:                                       ; preds = %if.then353
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame358 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 135
  %271 = load i32, i32* %FieldFrame358, align 4
  %cmp359 = icmp eq i32 %271, 1
  br i1 %cmp359, label %if.then361, label %if.else362

if.then361:                                       ; preds = %if.then357
  %272 = load i32, i32* @PreviousQp2, align 4
  store i32 %272, i32* @PreviousQp1, align 4
  %273 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %273, i32* @PreviousQp2, align 4
  br label %if.end363

if.else362:                                       ; preds = %if.then357
  %274 = load i32, i32* @PreviousQp2, align 4
  store i32 %274, i32* @PreviousQp1, align 4
  %275 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %275, i32* @PreviousQp2, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.else362, %if.then361
  br label %if.end364

if.end364:                                        ; preds = %if.end363, %if.then353
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %lor.lhs.false350
  %276 = load i32, i32* @PreviousQp1, align 4
  %277 = load i32, i32* @PreviousQp2, align 4
  %cmp366 = icmp eq i32 %276, %277
  br i1 %cmp366, label %if.then368, label %if.else370

if.then368:                                       ; preds = %if.end365
  %278 = load i32, i32* @PreviousQp1, align 4
  %add369 = add nsw i32 %278, 2
  store i32 %add369, i32* @m_Qc, align 4
  br label %if.end374

if.else370:                                       ; preds = %if.end365
  %279 = load i32, i32* @PreviousQp1, align 4
  %280 = load i32, i32* @PreviousQp2, align 4
  %add371 = add nsw i32 %279, %280
  %div372 = sdiv i32 %add371, 2
  %add373 = add nsw i32 %div372, 1
  store i32 %add373, i32* @m_Qc, align 4
  br label %if.end374

if.end374:                                        ; preds = %if.else370, %if.then368
  %281 = load i32, i32* @m_Qc, align 4
  %282 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp375 = icmp slt i32 %281, %282
  br i1 %cmp375, label %cond.true377, label %cond.false378

cond.true377:                                     ; preds = %if.end374
  %283 = load i32, i32* @m_Qc, align 4
  br label %cond.end379

cond.false378:                                    ; preds = %if.end374
  %284 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end379

cond.end379:                                      ; preds = %cond.false378, %cond.true377
  %cond380 = phi i32 [ %283, %cond.true377 ], [ %284, %cond.false378 ]
  store i32 %cond380, i32* @m_Qc, align 4
  %285 = load i32, i32* @RC_MIN_QUANT, align 4
  %286 = load i32, i32* @m_Qc, align 4
  %cmp381 = icmp slt i32 %285, %286
  br i1 %cmp381, label %cond.true383, label %cond.false384

cond.true383:                                     ; preds = %cond.end379
  %287 = load i32, i32* @m_Qc, align 4
  br label %cond.end385

cond.false384:                                    ; preds = %cond.end379
  %288 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end385

cond.end385:                                      ; preds = %cond.false384, %cond.true383
  %cond386 = phi i32 [ %287, %cond.true383 ], [ %288, %cond.false384 ]
  store i32 %cond386, i32* @m_Qc, align 4
  br label %if.end531

if.else387:                                       ; preds = %if.then342
  %289 = load i32, i32* @NumberofBFrames, align 4
  %add388 = add nsw i32 %289, 1
  %290 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe389 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %290, i32 0, i32 34
  %291 = load i32, i32* %successive_Bframe389, align 4
  %rem390 = srem i32 %add388, %291
  store i32 %rem390, i32* %BFrameNumber, align 4
  %292 = load i32, i32* %BFrameNumber, align 4
  %cmp391 = icmp eq i32 %292, 0
  br i1 %cmp391, label %if.then393, label %if.end395

if.then393:                                       ; preds = %if.else387
  %293 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe394 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %293, i32 0, i32 34
  %294 = load i32, i32* %successive_Bframe394, align 4
  store i32 %294, i32* %BFrameNumber, align 4
  br label %if.end395

if.end395:                                        ; preds = %if.then393, %if.else387
  %295 = load i32, i32* %BFrameNumber, align 4
  %cmp396 = icmp eq i32 %295, 1
  br i1 %cmp396, label %if.then398, label %if.end418

if.then398:                                       ; preds = %if.end395
  %296 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace399 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %296, i32 0, i32 91
  %297 = load i32, i32* %PicInterlace399, align 8
  %cmp400 = icmp eq i32 %297, 2
  br i1 %cmp400, label %if.then405, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %if.then398
  %298 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace403 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %298, i32 0, i32 92
  %299 = load i32, i32* %MbInterlace403, align 4
  %tobool404 = icmp ne i32 %299, 0
  br i1 %tobool404, label %if.then405, label %if.end417

if.then405:                                       ; preds = %lor.lhs.false402, %if.then398
  %300 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl406 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %300, i32 0, i32 134
  %301 = load i32, i32* %FieldControl406, align 8
  %cmp407 = icmp eq i32 %301, 0
  br i1 %cmp407, label %if.then409, label %if.end416

if.then409:                                       ; preds = %if.then405
  %302 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame410 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %302, i32 0, i32 135
  %303 = load i32, i32* %FieldFrame410, align 4
  %cmp411 = icmp eq i32 %303, 1
  br i1 %cmp411, label %if.then413, label %if.else414

if.then413:                                       ; preds = %if.then409
  %304 = load i32, i32* @PreviousQp2, align 4
  store i32 %304, i32* @PreviousQp1, align 4
  %305 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %305, i32* @PreviousQp2, align 4
  br label %if.end415

if.else414:                                       ; preds = %if.then409
  %306 = load i32, i32* @PreviousQp2, align 4
  store i32 %306, i32* @PreviousQp1, align 4
  %307 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %307, i32* @PreviousQp2, align 4
  br label %if.end415

if.end415:                                        ; preds = %if.else414, %if.then413
  br label %if.end416

if.end416:                                        ; preds = %if.end415, %if.then405
  br label %if.end417

if.end417:                                        ; preds = %if.end416, %lor.lhs.false402
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %if.end395
  %308 = load i32, i32* @PreviousQp2, align 4
  %309 = load i32, i32* @PreviousQp1, align 4
  %sub419 = sub nsw i32 %308, %309
  %310 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe420 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %310, i32 0, i32 34
  %311 = load i32, i32* %successive_Bframe420, align 4
  %mul421 = mul nsw i32 -2, %311
  %sub422 = sub nsw i32 %mul421, 3
  %cmp423 = icmp sle i32 %sub419, %sub422
  br i1 %cmp423, label %if.then425, label %if.else426

if.then425:                                       ; preds = %if.end418
  store i32 -3, i32* %StepSize, align 4
  br label %if.end462

if.else426:                                       ; preds = %if.end418
  %312 = load i32, i32* @PreviousQp2, align 4
  %313 = load i32, i32* @PreviousQp1, align 4
  %sub427 = sub nsw i32 %312, %313
  %314 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe428 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %314, i32 0, i32 34
  %315 = load i32, i32* %successive_Bframe428, align 4
  %mul429 = mul nsw i32 -2, %315
  %sub430 = sub nsw i32 %mul429, 2
  %cmp431 = icmp eq i32 %sub427, %sub430
  br i1 %cmp431, label %if.then433, label %if.else434

if.then433:                                       ; preds = %if.else426
  store i32 -2, i32* %StepSize, align 4
  br label %if.end461

if.else434:                                       ; preds = %if.else426
  %316 = load i32, i32* @PreviousQp2, align 4
  %317 = load i32, i32* @PreviousQp1, align 4
  %sub435 = sub nsw i32 %316, %317
  %318 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe436 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %318, i32 0, i32 34
  %319 = load i32, i32* %successive_Bframe436, align 4
  %mul437 = mul nsw i32 -2, %319
  %sub438 = sub nsw i32 %mul437, 1
  %cmp439 = icmp eq i32 %sub435, %sub438
  br i1 %cmp439, label %if.then441, label %if.else442

if.then441:                                       ; preds = %if.else434
  store i32 -1, i32* %StepSize, align 4
  br label %if.end460

if.else442:                                       ; preds = %if.else434
  %320 = load i32, i32* @PreviousQp2, align 4
  %321 = load i32, i32* @PreviousQp1, align 4
  %sub443 = sub nsw i32 %320, %321
  %322 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe444 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %322, i32 0, i32 34
  %323 = load i32, i32* %successive_Bframe444, align 4
  %mul445 = mul nsw i32 -2, %323
  %cmp446 = icmp eq i32 %sub443, %mul445
  br i1 %cmp446, label %if.then448, label %if.else449

if.then448:                                       ; preds = %if.else442
  store i32 0, i32* %StepSize, align 4
  br label %if.end459

if.else449:                                       ; preds = %if.else442
  %324 = load i32, i32* @PreviousQp2, align 4
  %325 = load i32, i32* @PreviousQp1, align 4
  %sub450 = sub nsw i32 %324, %325
  %326 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe451 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %326, i32 0, i32 34
  %327 = load i32, i32* %successive_Bframe451, align 4
  %mul452 = mul nsw i32 -2, %327
  %add453 = add nsw i32 %mul452, 1
  %cmp454 = icmp eq i32 %sub450, %add453
  br i1 %cmp454, label %if.then456, label %if.else457

if.then456:                                       ; preds = %if.else449
  store i32 1, i32* %StepSize, align 4
  br label %if.end458

if.else457:                                       ; preds = %if.else449
  store i32 2, i32* %StepSize, align 4
  br label %if.end458

if.end458:                                        ; preds = %if.else457, %if.then456
  br label %if.end459

if.end459:                                        ; preds = %if.end458, %if.then448
  br label %if.end460

if.end460:                                        ; preds = %if.end459, %if.then441
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.then433
  br label %if.end462

if.end462:                                        ; preds = %if.end461, %if.then425
  %328 = load i32, i32* @PreviousQp1, align 4
  %329 = load i32, i32* %StepSize, align 4
  %add463 = add nsw i32 %328, %329
  store i32 %add463, i32* @m_Qc, align 4
  %330 = load i32, i32* %BFrameNumber, align 4
  %sub464 = sub nsw i32 %330, 1
  %mul465 = mul nsw i32 2, %sub464
  %331 = load i32, i32* %BFrameNumber, align 4
  %sub466 = sub nsw i32 %331, 1
  %mul467 = mul nsw i32 -2, %sub466
  %332 = load i32, i32* %BFrameNumber, align 4
  %sub468 = sub nsw i32 %332, 1
  %333 = load i32, i32* @PreviousQp2, align 4
  %334 = load i32, i32* @PreviousQp1, align 4
  %sub469 = sub nsw i32 %333, %334
  %mul470 = mul nsw i32 %sub468, %sub469
  %335 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe471 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %335, i32 0, i32 34
  %336 = load i32, i32* %successive_Bframe471, align 4
  %sub472 = sub nsw i32 %336, 1
  %div473 = sdiv i32 %mul470, %sub472
  %cmp474 = icmp slt i32 %mul467, %div473
  br i1 %cmp474, label %cond.true476, label %cond.false483

cond.true476:                                     ; preds = %if.end462
  %337 = load i32, i32* %BFrameNumber, align 4
  %sub477 = sub nsw i32 %337, 1
  %338 = load i32, i32* @PreviousQp2, align 4
  %339 = load i32, i32* @PreviousQp1, align 4
  %sub478 = sub nsw i32 %338, %339
  %mul479 = mul nsw i32 %sub477, %sub478
  %340 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe480 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %340, i32 0, i32 34
  %341 = load i32, i32* %successive_Bframe480, align 4
  %sub481 = sub nsw i32 %341, 1
  %div482 = sdiv i32 %mul479, %sub481
  br label %cond.end486

cond.false483:                                    ; preds = %if.end462
  %342 = load i32, i32* %BFrameNumber, align 4
  %sub484 = sub nsw i32 %342, 1
  %mul485 = mul nsw i32 -2, %sub484
  br label %cond.end486

cond.end486:                                      ; preds = %cond.false483, %cond.true476
  %cond487 = phi i32 [ %div482, %cond.true476 ], [ %mul485, %cond.false483 ]
  %cmp488 = icmp slt i32 %mul465, %cond487
  br i1 %cmp488, label %cond.true490, label %cond.false493

cond.true490:                                     ; preds = %cond.end486
  %343 = load i32, i32* %BFrameNumber, align 4
  %sub491 = sub nsw i32 %343, 1
  %mul492 = mul nsw i32 2, %sub491
  br label %cond.end516

cond.false493:                                    ; preds = %cond.end486
  %344 = load i32, i32* %BFrameNumber, align 4
  %sub494 = sub nsw i32 %344, 1
  %mul495 = mul nsw i32 -2, %sub494
  %345 = load i32, i32* %BFrameNumber, align 4
  %sub496 = sub nsw i32 %345, 1
  %346 = load i32, i32* @PreviousQp2, align 4
  %347 = load i32, i32* @PreviousQp1, align 4
  %sub497 = sub nsw i32 %346, %347
  %mul498 = mul nsw i32 %sub496, %sub497
  %348 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe499 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %348, i32 0, i32 34
  %349 = load i32, i32* %successive_Bframe499, align 4
  %sub500 = sub nsw i32 %349, 1
  %div501 = sdiv i32 %mul498, %sub500
  %cmp502 = icmp slt i32 %mul495, %div501
  br i1 %cmp502, label %cond.true504, label %cond.false511

cond.true504:                                     ; preds = %cond.false493
  %350 = load i32, i32* %BFrameNumber, align 4
  %sub505 = sub nsw i32 %350, 1
  %351 = load i32, i32* @PreviousQp2, align 4
  %352 = load i32, i32* @PreviousQp1, align 4
  %sub506 = sub nsw i32 %351, %352
  %mul507 = mul nsw i32 %sub505, %sub506
  %353 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe508 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %353, i32 0, i32 34
  %354 = load i32, i32* %successive_Bframe508, align 4
  %sub509 = sub nsw i32 %354, 1
  %div510 = sdiv i32 %mul507, %sub509
  br label %cond.end514

cond.false511:                                    ; preds = %cond.false493
  %355 = load i32, i32* %BFrameNumber, align 4
  %sub512 = sub nsw i32 %355, 1
  %mul513 = mul nsw i32 -2, %sub512
  br label %cond.end514

cond.end514:                                      ; preds = %cond.false511, %cond.true504
  %cond515 = phi i32 [ %div510, %cond.true504 ], [ %mul513, %cond.false511 ]
  br label %cond.end516

cond.end516:                                      ; preds = %cond.end514, %cond.true490
  %cond517 = phi i32 [ %mul492, %cond.true490 ], [ %cond515, %cond.end514 ]
  %356 = load i32, i32* @m_Qc, align 4
  %add518 = add nsw i32 %356, %cond517
  store i32 %add518, i32* @m_Qc, align 4
  %357 = load i32, i32* @m_Qc, align 4
  %358 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp519 = icmp slt i32 %357, %358
  br i1 %cmp519, label %cond.true521, label %cond.false522

cond.true521:                                     ; preds = %cond.end516
  %359 = load i32, i32* @m_Qc, align 4
  br label %cond.end523

cond.false522:                                    ; preds = %cond.end516
  %360 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end523

cond.end523:                                      ; preds = %cond.false522, %cond.true521
  %cond524 = phi i32 [ %359, %cond.true521 ], [ %360, %cond.false522 ]
  store i32 %cond524, i32* @m_Qc, align 4
  %361 = load i32, i32* @RC_MIN_QUANT, align 4
  %362 = load i32, i32* @m_Qc, align 4
  %cmp525 = icmp slt i32 %361, %362
  br i1 %cmp525, label %cond.true527, label %cond.false528

cond.true527:                                     ; preds = %cond.end523
  %363 = load i32, i32* @m_Qc, align 4
  br label %cond.end529

cond.false528:                                    ; preds = %cond.end523
  %364 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end529

cond.end529:                                      ; preds = %cond.false528, %cond.true527
  %cond530 = phi i32 [ %363, %cond.true527 ], [ %364, %cond.false528 ]
  store i32 %cond530, i32* @m_Qc, align 4
  br label %if.end531

if.end531:                                        ; preds = %cond.end529, %cond.end385
  %365 = load i32, i32* @m_Qc, align 4
  store i32 %365, i32* %retval, align 4
  br label %return

if.else532:                                       ; preds = %lor.lhs.false338
  %366 = load i32, i32* @m_Qc, align 4
  store i32 %366, i32* %retval, align 4
  br label %return

if.else533:                                       ; preds = %if.else332
  %367 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type534 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %367, i32 0, i32 6
  %368 = load i32, i32* %type534, align 8
  %cmp535 = icmp eq i32 %368, 0
  br i1 %cmp535, label %if.then537, label %if.end1032

if.then537:                                       ; preds = %if.else533
  %369 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %369, i32 0, i32 128
  %370 = load i32, i32* %NumberofGOP, align 8
  %cmp538 = icmp eq i32 %370, 1
  br i1 %cmp538, label %land.lhs.true540, label %if.else590

land.lhs.true540:                                 ; preds = %if.then537
  %371 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture541 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %371, i32 0, i32 130
  %372 = load i32, i32* %NumberofPPicture541, align 8
  %cmp542 = icmp eq i32 %372, 0
  br i1 %cmp542, label %if.then544, label %if.else590

if.then544:                                       ; preds = %land.lhs.true540
  %373 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl545 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %373, i32 0, i32 134
  %374 = load i32, i32* %FieldControl545, align 8
  %cmp546 = icmp eq i32 %374, 0
  br i1 %cmp546, label %if.then556, label %lor.lhs.false548

lor.lhs.false548:                                 ; preds = %if.then544
  %375 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl549 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %375, i32 0, i32 134
  %376 = load i32, i32* %FieldControl549, align 8
  %cmp550 = icmp eq i32 %376, 1
  br i1 %cmp550, label %land.lhs.true552, label %if.end589

land.lhs.true552:                                 ; preds = %lor.lhs.false548
  %377 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG553 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %377, i32 0, i32 137
  %378 = load i32, i32* %IFLAG553, align 4
  %cmp554 = icmp eq i32 %378, 0
  br i1 %cmp554, label %if.then556, label %if.end589

if.then556:                                       ; preds = %land.lhs.true552, %if.then544
  %379 = load i32, i32* @MyInitialQp, align 4
  store i32 %379, i32* @m_Qc, align 4
  %380 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %380, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %381 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %381, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %382 = load i32, i32* @NumberofBasicUnit, align 4
  %dec = add nsw i32 %382, -1
  store i32 %dec, i32* @NumberofBasicUnit, align 4
  %383 = load i32, i32* %topfield.addr, align 4
  %tobool557 = icmp ne i32 %383, 0
  br i1 %tobool557, label %if.end587, label %land.lhs.true558

land.lhs.true558:                                 ; preds = %if.then556
  %384 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp559 = icmp eq i32 %384, 0
  br i1 %cmp559, label %if.then561, label %if.end587

if.then561:                                       ; preds = %land.lhs.true558
  %385 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag562 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %385, i32 0, i32 25
  %386 = load i32, i32* %frame_mbs_only_flag562, align 4
  %tobool563 = icmp ne i32 %386, 0
  br i1 %tobool563, label %if.then568, label %lor.lhs.false564

lor.lhs.false564:                                 ; preds = %if.then561
  %387 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace565 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %387, i32 0, i32 91
  %388 = load i32, i32* %PicInterlace565, align 8
  %cmp566 = icmp eq i32 %388, 1
  br i1 %cmp566, label %if.then568, label %if.else571

if.then568:                                       ; preds = %lor.lhs.false564, %if.then561
  %389 = load i32, i32* @m_Qc, align 4
  %390 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture569 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %390, i32 0, i32 129
  %391 = load i32, i32* %TotalQpforPPicture569, align 4
  %add570 = add nsw i32 %391, %389
  store i32 %add570, i32* %TotalQpforPPicture569, align 4
  %392 = load i32, i32* @PreviousQp2, align 4
  store i32 %392, i32* @PreviousQp1, align 4
  %393 = load i32, i32* @m_Qc, align 4
  store i32 %393, i32* @PreviousQp2, align 4
  %394 = load i32, i32* @m_Qc, align 4
  store i32 %394, i32* @PAveFrameQP, align 4
  %395 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %395, i32* @PAveHeaderBits3, align 4
  br label %if.end586

if.else571:                                       ; preds = %lor.lhs.false564
  %396 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace572 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %396, i32 0, i32 91
  %397 = load i32, i32* %PicInterlace572, align 8
  %cmp573 = icmp eq i32 %397, 2
  br i1 %cmp573, label %if.then578, label %lor.lhs.false575

lor.lhs.false575:                                 ; preds = %if.else571
  %398 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace576 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %398, i32 0, i32 92
  %399 = load i32, i32* %MbInterlace576, align 4
  %tobool577 = icmp ne i32 %399, 0
  br i1 %tobool577, label %if.then578, label %if.end585

if.then578:                                       ; preds = %lor.lhs.false575, %if.else571
  %400 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl579 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %400, i32 0, i32 134
  %401 = load i32, i32* %FieldControl579, align 8
  %cmp580 = icmp eq i32 %401, 0
  br i1 %cmp580, label %if.then582, label %if.else583

if.then582:                                       ; preds = %if.then578
  %402 = load i32, i32* @m_Qc, align 4
  store i32 %402, i32* @FrameQPBuffer, align 4
  %403 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %403, i32* @FrameAveHeaderBits, align 4
  br label %if.end584

if.else583:                                       ; preds = %if.then578
  %404 = load i32, i32* @m_Qc, align 4
  store i32 %404, i32* @FieldQPBuffer, align 4
  %405 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %405, i32* @FieldAveHeaderBits, align 4
  br label %if.end584

if.end584:                                        ; preds = %if.else583, %if.then582
  br label %if.end585

if.end585:                                        ; preds = %if.end584, %lor.lhs.false575
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then568
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %land.lhs.true558, %if.then556
  %406 = load i32, i32* @m_Qc, align 4
  store i32 %406, i32* @Pm_Qp, align 4
  %407 = load i32, i32* @m_Qc, align 4
  %408 = load i32, i32* @TotalFrameQP, align 4
  %add588 = add nsw i32 %408, %407
  store i32 %add588, i32* @TotalFrameQP, align 4
  %409 = load i32, i32* @m_Qc, align 4
  store i32 %409, i32* %retval, align 4
  br label %return

if.end589:                                        ; preds = %land.lhs.true552, %lor.lhs.false548
  br label %if.end1031

if.else590:                                       ; preds = %land.lhs.true540, %if.then537
  %410 = load double, double* @Pm_X1, align 8
  store double %410, double* @m_X1, align 8
  %411 = load double, double* @Pm_X2, align 8
  store double %411, double* @m_X2, align 8
  %412 = load i32, i32* @PPreHeader, align 4
  store i32 %412, i32* @m_Hp, align 4
  %413 = load i32, i32* @Pm_Qp, align 4
  store i32 %413, i32* @m_Qp, align 4
  %414 = load i32, i32* @PDuantQp, align 4
  store i32 %414, i32* @DuantQp, align 4
  %415 = load double, double* @PMADPictureC1, align 8
  store double %415, double* @MADPictureC1, align 8
  %416 = load double, double* @PMADPictureC2, align 8
  store double %416, double* @MADPictureC2, align 8
  %417 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl591 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %417, i32 0, i32 134
  %418 = load i32, i32* %FieldControl591, align 8
  %cmp592 = icmp eq i32 %418, 0
  br i1 %cmp592, label %if.then594, label %if.else595

if.then594:                                       ; preds = %if.else590
  %419 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %419, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.else595:                                       ; preds = %if.else590
  %420 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div596 = sdiv i32 %420, 2
  store i32 %div596, i32* %SumofBasicUnit, align 4
  br label %if.end597

if.end597:                                        ; preds = %if.else595, %if.then594
  %421 = load i32, i32* @NumberofBasicUnit, align 4
  %422 = load i32, i32* %SumofBasicUnit, align 4
  %cmp598 = icmp eq i32 %421, %422
  br i1 %cmp598, label %if.then600, label %if.else652

if.then600:                                       ; preds = %if.end597
  %423 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace601 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %423, i32 0, i32 91
  %424 = load i32, i32* %PicInterlace601, align 8
  %cmp602 = icmp eq i32 %424, 2
  br i1 %cmp602, label %land.lhs.true607, label %lor.lhs.false604

lor.lhs.false604:                                 ; preds = %if.then600
  %425 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace605 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %425, i32 0, i32 92
  %426 = load i32, i32* %MbInterlace605, align 4
  %tobool606 = icmp ne i32 %426, 0
  br i1 %tobool606, label %land.lhs.true607, label %if.end632

land.lhs.true607:                                 ; preds = %lor.lhs.false604, %if.then600
  %427 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl608 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %427, i32 0, i32 134
  %428 = load i32, i32* %FieldControl608, align 8
  %cmp609 = icmp eq i32 %428, 0
  br i1 %cmp609, label %if.then611, label %if.end632

if.then611:                                       ; preds = %land.lhs.true607
  %429 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame612 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %429, i32 0, i32 135
  %430 = load i32, i32* %FieldFrame612, align 4
  %cmp613 = icmp eq i32 %430, 1
  br i1 %cmp613, label %if.then615, label %if.else623

if.then615:                                       ; preds = %if.then611
  %431 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture616 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %431, i32 0, i32 130
  %432 = load i32, i32* %NumberofPPicture616, align 8
  %cmp617 = icmp sgt i32 %432, 0
  br i1 %cmp617, label %if.then619, label %if.end622

if.then619:                                       ; preds = %if.then615
  %433 = load i32, i32* @FrameQPBuffer, align 4
  %434 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture620 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %434, i32 0, i32 129
  %435 = load i32, i32* %TotalQpforPPicture620, align 4
  %add621 = add nsw i32 %435, %433
  store i32 %add621, i32* %TotalQpforPPicture620, align 4
  br label %if.end622

if.end622:                                        ; preds = %if.then619, %if.then615
  %436 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %436, i32* @PAveFrameQP, align 4
  %437 = load i32, i32* @FrameAveHeaderBits, align 4
  store i32 %437, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.else623:                                       ; preds = %if.then611
  %438 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture624 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %438, i32 0, i32 130
  %439 = load i32, i32* %NumberofPPicture624, align 8
  %cmp625 = icmp sgt i32 %439, 0
  br i1 %cmp625, label %if.then627, label %if.end630

if.then627:                                       ; preds = %if.else623
  %440 = load i32, i32* @FieldQPBuffer, align 4
  %441 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture628 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %441, i32 0, i32 129
  %442 = load i32, i32* %TotalQpforPPicture628, align 4
  %add629 = add nsw i32 %442, %440
  store i32 %add629, i32* %TotalQpforPPicture628, align 4
  br label %if.end630

if.end630:                                        ; preds = %if.then627, %if.else623
  %443 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %443, i32* @PAveFrameQP, align 4
  %444 = load i32, i32* @FieldAveHeaderBits, align 4
  store i32 %444, i32* @PAveHeaderBits3, align 4
  br label %if.end631

if.end631:                                        ; preds = %if.end630, %if.end622
  br label %if.end632

if.end632:                                        ; preds = %if.end631, %land.lhs.true607, %lor.lhs.false604
  %445 = load i64, i64* @T, align 8
  %cmp633 = icmp sle i64 %445, 0
  br i1 %cmp633, label %if.then635, label %if.else648

if.then635:                                       ; preds = %if.end632
  %446 = load i32, i32* @PAveFrameQP, align 4
  %add636 = add nsw i32 %446, 2
  store i32 %add636, i32* @m_Qc, align 4
  %447 = load i32, i32* @m_Qc, align 4
  %448 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp637 = icmp sgt i32 %447, %448
  br i1 %cmp637, label %if.then639, label %if.end640

if.then639:                                       ; preds = %if.then635
  %449 = load i32, i32* @RC_MAX_QUANT, align 4
  store i32 %449, i32* @m_Qc, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.then639, %if.then635
  %450 = load i32, i32* %topfield.addr, align 4
  %tobool641 = icmp ne i32 %450, 0
  br i1 %tobool641, label %if.then646, label %lor.lhs.false642

lor.lhs.false642:                                 ; preds = %if.end640
  %451 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl643 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %451, i32 0, i32 134
  %452 = load i32, i32* %FieldControl643, align 8
  %cmp644 = icmp eq i32 %452, 0
  br i1 %cmp644, label %if.then646, label %if.end647

if.then646:                                       ; preds = %lor.lhs.false642, %if.end640
  store i32 1, i32* @GOPOverdue, align 4
  br label %if.end647

if.end647:                                        ; preds = %if.then646, %lor.lhs.false642
  br label %if.end649

if.else648:                                       ; preds = %if.end632
  %453 = load i32, i32* @PAveFrameQP, align 4
  store i32 %453, i32* @m_Qc, align 4
  br label %if.end649

if.end649:                                        ; preds = %if.else648, %if.end647
  %454 = load i32, i32* @m_Qc, align 4
  %455 = load i32, i32* @TotalFrameQP, align 4
  %add650 = add nsw i32 %455, %454
  store i32 %add650, i32* @TotalFrameQP, align 4
  %456 = load i32, i32* @NumberofBasicUnit, align 4
  %dec651 = add nsw i32 %456, -1
  store i32 %dec651, i32* @NumberofBasicUnit, align 4
  %457 = load i32, i32* @PAveFrameQP, align 4
  store i32 %457, i32* @Pm_Qp, align 4
  %458 = load i32, i32* @m_Qc, align 4
  store i32 %458, i32* %retval, align 4
  br label %return

if.else652:                                       ; preds = %if.end597
  %459 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits653 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %459, i32 0, i32 121
  %460 = load i32, i32* %NumberofBasicUnitHeaderBits653, align 4
  %461 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits654 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %461, i32 0, i32 122
  %462 = load i32, i32* %NumberofBasicUnitTextureBits654, align 8
  %add655 = add nsw i32 %460, %462
  store i32 %add655, i32* @TotalBasicUnitBits, align 4
  %463 = load i32, i32* @TotalBasicUnitBits, align 4
  %conv656 = sext i32 %463 to i64
  %464 = load i64, i64* @T, align 8
  %sub657 = sub nsw i64 %464, %conv656
  store i64 %sub657, i64* @T, align 8
  %465 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits658 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %465, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits658, align 4
  %466 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits659 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %466, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits659, align 8
  %467 = load i64, i64* @T, align 8
  %cmp660 = icmp slt i64 %467, 0
  br i1 %cmp660, label %if.then662, label %if.else786

if.then662:                                       ; preds = %if.else652
  %468 = load i32, i32* @GOPOverdue, align 4
  %cmp663 = icmp eq i32 %468, 1
  br i1 %cmp663, label %if.then665, label %if.else667

if.then665:                                       ; preds = %if.then662
  %469 = load i32, i32* @m_Qp, align 4
  %add666 = add nsw i32 %469, 2
  store i32 %add666, i32* @m_Qc, align 4
  br label %if.end669

if.else667:                                       ; preds = %if.then662
  %470 = load i32, i32* @m_Qp, align 4
  %471 = load i32, i32* @DDquant, align 4
  %add668 = add nsw i32 %470, %471
  store i32 %add668, i32* @m_Qc, align 4
  br label %if.end669

if.end669:                                        ; preds = %if.else667, %if.then665
  %472 = load i32, i32* @m_Qc, align 4
  %473 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp670 = icmp slt i32 %472, %473
  br i1 %cmp670, label %cond.true672, label %cond.false673

cond.true672:                                     ; preds = %if.end669
  %474 = load i32, i32* @m_Qc, align 4
  br label %cond.end674

cond.false673:                                    ; preds = %if.end669
  %475 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false673, %cond.true672
  %cond675 = phi i32 [ %474, %cond.true672 ], [ %475, %cond.false673 ]
  store i32 %cond675, i32* @m_Qc, align 4
  %476 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %476, i32 0, i32 130
  %477 = load i32, i32* %basicunit, align 8
  %478 = load i32, i32* @MBPerRow, align 4
  %cmp676 = icmp sge i32 %477, %478
  br i1 %cmp676, label %if.then678, label %if.else687

if.then678:                                       ; preds = %cond.end674
  %479 = load i32, i32* @m_Qc, align 4
  %480 = load i32, i32* @PAveFrameQP, align 4
  %add679 = add nsw i32 %480, 6
  %cmp680 = icmp slt i32 %479, %add679
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %if.then678
  %481 = load i32, i32* @m_Qc, align 4
  br label %cond.end685

cond.false683:                                    ; preds = %if.then678
  %482 = load i32, i32* @PAveFrameQP, align 4
  %add684 = add nsw i32 %482, 6
  br label %cond.end685

cond.end685:                                      ; preds = %cond.false683, %cond.true682
  %cond686 = phi i32 [ %481, %cond.true682 ], [ %add684, %cond.false683 ]
  store i32 %cond686, i32* @m_Qc, align 4
  br label %if.end696

if.else687:                                       ; preds = %cond.end674
  %483 = load i32, i32* @m_Qc, align 4
  %484 = load i32, i32* @PAveFrameQP, align 4
  %add688 = add nsw i32 %484, 3
  %cmp689 = icmp slt i32 %483, %add688
  br i1 %cmp689, label %cond.true691, label %cond.false692

cond.true691:                                     ; preds = %if.else687
  %485 = load i32, i32* @m_Qc, align 4
  br label %cond.end694

cond.false692:                                    ; preds = %if.else687
  %486 = load i32, i32* @PAveFrameQP, align 4
  %add693 = add nsw i32 %486, 3
  br label %cond.end694

cond.end694:                                      ; preds = %cond.false692, %cond.true691
  %cond695 = phi i32 [ %485, %cond.true691 ], [ %add693, %cond.false692 ]
  store i32 %cond695, i32* @m_Qc, align 4
  br label %if.end696

if.end696:                                        ; preds = %cond.end694, %cond.end685
  %487 = load i32, i32* @m_Qc, align 4
  %488 = load i32, i32* @TotalFrameQP, align 4
  %add697 = add nsw i32 %488, %487
  store i32 %add697, i32* @TotalFrameQP, align 4
  %489 = load i32, i32* @NumberofBasicUnit, align 4
  %dec698 = add nsw i32 %489, -1
  store i32 %dec698, i32* @NumberofBasicUnit, align 4
  %490 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp699 = icmp eq i32 %490, 0
  br i1 %cmp699, label %if.then701, label %if.end780

if.then701:                                       ; preds = %if.end696
  %491 = load i32, i32* %topfield.addr, align 4
  %tobool702 = icmp ne i32 %491, 0
  br i1 %tobool702, label %lor.lhs.false703, label %if.then707

lor.lhs.false703:                                 ; preds = %if.then701
  %492 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl704 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %492, i32 0, i32 134
  %493 = load i32, i32* %FieldControl704, align 8
  %cmp705 = icmp eq i32 %493, 0
  br i1 %cmp705, label %if.then707, label %if.end779

if.then707:                                       ; preds = %lor.lhs.false703, %if.then701
  %494 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag708 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %494, i32 0, i32 25
  %495 = load i32, i32* %frame_mbs_only_flag708, align 4
  %tobool709 = icmp ne i32 %495, 0
  br i1 %tobool709, label %if.then714, label %lor.lhs.false710

lor.lhs.false710:                                 ; preds = %if.then707
  %496 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace711 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %496, i32 0, i32 91
  %497 = load i32, i32* %PicInterlace711, align 8
  %cmp712 = icmp eq i32 %497, 1
  br i1 %cmp712, label %if.then714, label %if.else751

if.then714:                                       ; preds = %lor.lhs.false710, %if.then707
  %498 = load i32, i32* @TotalFrameQP, align 4
  %conv715 = sitofp i32 %498 to double
  %mul716 = fmul double 1.000000e+00, %conv715
  %499 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv717 = sitofp i32 %499 to double
  %div718 = fdiv double %mul716, %conv717
  %add719 = fadd double %div718, 5.000000e-01
  %conv720 = fptosi double %add719 to i32
  store i32 %conv720, i32* %PAverageQP, align 4
  %500 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture721 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %500, i32 0, i32 130
  %501 = load i32, i32* %NumberofPPicture721, align 8
  %502 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %502, i32 0, i32 31
  %503 = load i32, i32* %intra_period, align 8
  %sub722 = sub nsw i32 %503, 2
  %cmp723 = icmp eq i32 %501, %sub722
  br i1 %cmp723, label %if.then725, label %if.end726

if.then725:                                       ; preds = %if.then714
  %504 = load i32, i32* %PAverageQP, align 4
  store i32 %504, i32* @QPLastPFrame, align 4
  br label %if.end726

if.end726:                                        ; preds = %if.then725, %if.then714
  %505 = load i32, i32* %PAverageQP, align 4
  %506 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture727 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %506, i32 0, i32 129
  %507 = load i32, i32* %TotalQpforPPicture727, align 4
  %add728 = add nsw i32 %507, %505
  store i32 %add728, i32* %TotalQpforPPicture727, align 4
  %508 = load i32, i32* @GOPOverdue, align 4
  %cmp729 = icmp eq i32 %508, 1
  br i1 %cmp729, label %if.then731, label %if.else733

if.then731:                                       ; preds = %if.end726
  %509 = load i32, i32* @PreviousQp2, align 4
  %add732 = add nsw i32 %509, 1
  store i32 %add732, i32* @PreviousQp1, align 4
  %510 = load i32, i32* %PAverageQP, align 4
  store i32 %510, i32* @PreviousQp2, align 4
  br label %if.end750

if.else733:                                       ; preds = %if.end726
  %511 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture734 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %511, i32 0, i32 130
  %512 = load i32, i32* %NumberofPPicture734, align 8
  %cmp735 = icmp eq i32 %512, 0
  br i1 %cmp735, label %land.lhs.true737, label %if.else742

land.lhs.true737:                                 ; preds = %if.else733
  %513 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP738 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %513, i32 0, i32 128
  %514 = load i32, i32* %NumberofGOP738, align 8
  %cmp739 = icmp sgt i32 %514, 1
  br i1 %cmp739, label %if.then741, label %if.else742

if.then741:                                       ; preds = %land.lhs.true737
  %515 = load i32, i32* @PreviousQp2, align 4
  store i32 %515, i32* @PreviousQp1, align 4
  %516 = load i32, i32* %PAverageQP, align 4
  store i32 %516, i32* @PreviousQp2, align 4
  br label %if.end749

if.else742:                                       ; preds = %land.lhs.true737, %if.else733
  %517 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture743 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %517, i32 0, i32 130
  %518 = load i32, i32* %NumberofPPicture743, align 8
  %cmp744 = icmp sgt i32 %518, 0
  br i1 %cmp744, label %if.then746, label %if.end748

if.then746:                                       ; preds = %if.else742
  %519 = load i32, i32* @PreviousQp2, align 4
  %add747 = add nsw i32 %519, 1
  store i32 %add747, i32* @PreviousQp1, align 4
  %520 = load i32, i32* %PAverageQP, align 4
  store i32 %520, i32* @PreviousQp2, align 4
  br label %if.end748

if.end748:                                        ; preds = %if.then746, %if.else742
  br label %if.end749

if.end749:                                        ; preds = %if.end748, %if.then741
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.then731
  %521 = load i32, i32* %PAverageQP, align 4
  store i32 %521, i32* @PAveFrameQP, align 4
  %522 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %522, i32* @PAveHeaderBits3, align 4
  br label %if.end778

if.else751:                                       ; preds = %lor.lhs.false710
  %523 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace752 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %523, i32 0, i32 91
  %524 = load i32, i32* %PicInterlace752, align 8
  %cmp753 = icmp eq i32 %524, 2
  br i1 %cmp753, label %if.then758, label %lor.lhs.false755

lor.lhs.false755:                                 ; preds = %if.else751
  %525 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace756 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %525, i32 0, i32 92
  %526 = load i32, i32* %MbInterlace756, align 4
  %tobool757 = icmp ne i32 %526, 0
  br i1 %tobool757, label %if.then758, label %if.end777

if.then758:                                       ; preds = %lor.lhs.false755, %if.else751
  %527 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl759 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %527, i32 0, i32 134
  %528 = load i32, i32* %FieldControl759, align 8
  %cmp760 = icmp eq i32 %528, 0
  br i1 %cmp760, label %if.then762, label %if.else769

if.then762:                                       ; preds = %if.then758
  %529 = load i32, i32* @TotalFrameQP, align 4
  %conv763 = sitofp i32 %529 to double
  %mul764 = fmul double 1.000000e+00, %conv763
  %530 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv765 = sitofp i32 %530 to double
  %div766 = fdiv double %mul764, %conv765
  %add767 = fadd double %div766, 5.000000e-01
  %conv768 = fptosi double %add767 to i32
  store i32 %conv768, i32* %PAverageQP, align 4
  %531 = load i32, i32* %PAverageQP, align 4
  store i32 %531, i32* @FrameQPBuffer, align 4
  %532 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %532, i32* @FrameAveHeaderBits, align 4
  br label %if.end776

if.else769:                                       ; preds = %if.then758
  %533 = load i32, i32* @TotalFrameQP, align 4
  %conv770 = sitofp i32 %533 to double
  %mul771 = fmul double 1.000000e+00, %conv770
  %534 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv772 = sitofp i32 %534 to double
  %div773 = fdiv double %mul771, %conv772
  %add774 = fadd double %div773, 5.000000e-01
  %conv775 = fptosi double %add774 to i32
  store i32 %conv775, i32* %PAverageQP, align 4
  %535 = load i32, i32* %PAverageQP, align 4
  store i32 %535, i32* @FieldQPBuffer, align 4
  %536 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %536, i32* @FieldAveHeaderBits, align 4
  br label %if.end776

if.end776:                                        ; preds = %if.else769, %if.then762
  br label %if.end777

if.end777:                                        ; preds = %if.end776, %lor.lhs.false755
  br label %if.end778

if.end778:                                        ; preds = %if.end777, %if.end750
  br label %if.end779

if.end779:                                        ; preds = %if.end778, %lor.lhs.false703
  br label %if.end780

if.end780:                                        ; preds = %if.end779, %if.end696
  %537 = load i32, i32* @GOPOverdue, align 4
  %cmp781 = icmp eq i32 %537, 1
  br i1 %cmp781, label %if.then783, label %if.else784

if.then783:                                       ; preds = %if.end780
  %538 = load i32, i32* @PAveFrameQP, align 4
  store i32 %538, i32* @Pm_Qp, align 4
  br label %if.end785

if.else784:                                       ; preds = %if.end780
  %539 = load i32, i32* @m_Qc, align 4
  store i32 %539, i32* @Pm_Qp, align 4
  br label %if.end785

if.end785:                                        ; preds = %if.else784, %if.then783
  %540 = load i32, i32* @m_Qc, align 4
  store i32 %540, i32* %retval, align 4
  br label %return

if.else786:                                       ; preds = %if.else652
  %541 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace787 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %541, i32 0, i32 91
  %542 = load i32, i32* %PicInterlace787, align 8
  %cmp788 = icmp eq i32 %542, 2
  br i1 %cmp788, label %land.lhs.true793, label %lor.lhs.false790

lor.lhs.false790:                                 ; preds = %if.else786
  %543 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace791 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %543, i32 0, i32 92
  %544 = load i32, i32* %MbInterlace791, align 4
  %tobool792 = icmp ne i32 %544, 0
  br i1 %tobool792, label %land.lhs.true793, label %if.else812

land.lhs.true793:                                 ; preds = %lor.lhs.false790, %if.else786
  %545 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl794 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %545, i32 0, i32 134
  %546 = load i32, i32* %FieldControl794, align 8
  %cmp795 = icmp eq i32 %546, 1
  br i1 %cmp795, label %if.then797, label %if.else812

if.then797:                                       ; preds = %land.lhs.true793
  %547 = load double, double* @MADPictureC1, align 8
  %548 = load double*, double** @FCBUPFMAD, align 8
  %549 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %550 = load i32, i32* @NumberofBasicUnit, align 4
  %sub798 = sub nsw i32 %549, %550
  %idxprom = sext i32 %sub798 to i64
  %arrayidx = getelementptr inbounds double, double* %548, i64 %idxprom
  %551 = load double, double* %arrayidx, align 8
  %mul799 = fmul double %547, %551
  %552 = load double, double* @MADPictureC2, align 8
  %add800 = fadd double %mul799, %552
  store double %add800, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %553 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub801 = sub nsw i32 %553, 1
  store i32 %sub801, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then797
  %554 = load i32, i32* %i, align 4
  %555 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %556 = load i32, i32* @NumberofBasicUnit, align 4
  %sub802 = sub nsw i32 %555, %556
  %cmp803 = icmp sge i32 %554, %sub802
  br i1 %cmp803, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %557 = load double, double* @MADPictureC1, align 8
  %558 = load double*, double** @FCBUPFMAD, align 8
  %559 = load i32, i32* %i, align 4
  %idxprom805 = sext i32 %559 to i64
  %arrayidx806 = getelementptr inbounds double, double* %558, i64 %idxprom805
  %560 = load double, double* %arrayidx806, align 8
  %mul807 = fmul double %557, %560
  %561 = load double, double* @MADPictureC2, align 8
  %add808 = fadd double %mul807, %561
  store double %add808, double* @CurrentBUMAD, align 8
  %562 = load double, double* @CurrentBUMAD, align 8
  %563 = load double, double* @CurrentBUMAD, align 8
  %mul809 = fmul double %562, %563
  %564 = load double, double* @TotalBUMAD, align 8
  %add810 = fadd double %564, %mul809
  store double %add810, double* @TotalBUMAD, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %565 = load i32, i32* %i, align 4
  %dec811 = add nsw i32 %565, -1
  store i32 %dec811, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end833

if.else812:                                       ; preds = %land.lhs.true793, %lor.lhs.false790
  %566 = load double, double* @MADPictureC1, align 8
  %567 = load double*, double** @BUPFMAD, align 8
  %568 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %569 = load i32, i32* @NumberofBasicUnit, align 4
  %sub813 = sub nsw i32 %568, %569
  %idxprom814 = sext i32 %sub813 to i64
  %arrayidx815 = getelementptr inbounds double, double* %567, i64 %idxprom814
  %570 = load double, double* %arrayidx815, align 8
  %mul816 = fmul double %566, %570
  %571 = load double, double* @MADPictureC2, align 8
  %add817 = fadd double %mul816, %571
  store double %add817, double* @CurrentFrameMAD, align 8
  store double 0.000000e+00, double* @TotalBUMAD, align 8
  %572 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub818 = sub nsw i32 %572, 1
  store i32 %sub818, i32* %i, align 4
  br label %for.cond819

for.cond819:                                      ; preds = %for.inc830, %if.else812
  %573 = load i32, i32* %i, align 4
  %574 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %575 = load i32, i32* @NumberofBasicUnit, align 4
  %sub820 = sub nsw i32 %574, %575
  %cmp821 = icmp sge i32 %573, %sub820
  br i1 %cmp821, label %for.body823, label %for.end832

for.body823:                                      ; preds = %for.cond819
  %576 = load double, double* @MADPictureC1, align 8
  %577 = load double*, double** @BUPFMAD, align 8
  %578 = load i32, i32* %i, align 4
  %idxprom824 = sext i32 %578 to i64
  %arrayidx825 = getelementptr inbounds double, double* %577, i64 %idxprom824
  %579 = load double, double* %arrayidx825, align 8
  %mul826 = fmul double %576, %579
  %580 = load double, double* @MADPictureC2, align 8
  %add827 = fadd double %mul826, %580
  store double %add827, double* @CurrentBUMAD, align 8
  %581 = load double, double* @CurrentBUMAD, align 8
  %582 = load double, double* @CurrentBUMAD, align 8
  %mul828 = fmul double %581, %582
  %583 = load double, double* @TotalBUMAD, align 8
  %add829 = fadd double %583, %mul828
  store double %add829, double* @TotalBUMAD, align 8
  br label %for.inc830

for.inc830:                                       ; preds = %for.body823
  %584 = load i32, i32* %i, align 4
  %dec831 = add nsw i32 %584, -1
  store i32 %dec831, i32* %i, align 4
  br label %for.cond819

for.end832:                                       ; preds = %for.cond819
  br label %if.end833

if.end833:                                        ; preds = %for.end832, %for.end
  %585 = load i64, i64* @T, align 8
  %conv834 = sitofp i64 %585 to double
  %586 = load double, double* @CurrentFrameMAD, align 8
  %mul835 = fmul double %conv834, %586
  %587 = load double, double* @CurrentFrameMAD, align 8
  %mul836 = fmul double %mul835, %587
  %588 = load double, double* @TotalBUMAD, align 8
  %div837 = fdiv double %mul836, %588
  %conv838 = fptosi double %div837 to i32
  store i32 %conv838, i32* %m_Bits, align 4
  %589 = load i32, i32* @PAveHeaderBits2, align 4
  %590 = load i32, i32* %m_Bits, align 4
  %sub839 = sub nsw i32 %590, %589
  store i32 %sub839, i32* %m_Bits, align 4
  %591 = load i32, i32* %m_Bits, align 4
  %592 = load double, double* @bit_rate, align 8
  %593 = load double, double* @MINVALUE, align 8
  %594 = load double, double* @frame_rate, align 8
  %mul840 = fmul double %593, %594
  %595 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv841 = sitofp i32 %595 to double
  %mul842 = fmul double %mul840, %conv841
  %div843 = fdiv double %592, %mul842
  %conv844 = fptosi double %div843 to i32
  %cmp845 = icmp slt i32 %591, %conv844
  br i1 %cmp845, label %cond.true847, label %cond.false853

cond.true847:                                     ; preds = %if.end833
  %596 = load double, double* @bit_rate, align 8
  %597 = load double, double* @MINVALUE, align 8
  %598 = load double, double* @frame_rate, align 8
  %mul848 = fmul double %597, %598
  %599 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv849 = sitofp i32 %599 to double
  %mul850 = fmul double %mul848, %conv849
  %div851 = fdiv double %596, %mul850
  %conv852 = fptosi double %div851 to i32
  br label %cond.end854

cond.false853:                                    ; preds = %if.end833
  %600 = load i32, i32* %m_Bits, align 4
  br label %cond.end854

cond.end854:                                      ; preds = %cond.false853, %cond.true847
  %cond855 = phi i32 [ %conv852, %cond.true847 ], [ %600, %cond.false853 ]
  store i32 %cond855, i32* %m_Bits, align 4
  %601 = load double, double* @CurrentFrameMAD, align 8
  %602 = load double, double* @m_X1, align 8
  %mul856 = fmul double %601, %602
  %603 = load double, double* @CurrentFrameMAD, align 8
  %mul857 = fmul double %mul856, %603
  %604 = load double, double* @m_X1, align 8
  %mul858 = fmul double %mul857, %604
  %605 = load double, double* @m_X2, align 8
  %mul859 = fmul double 4.000000e+00, %605
  %606 = load double, double* @CurrentFrameMAD, align 8
  %mul860 = fmul double %mul859, %606
  %607 = load i32, i32* %m_Bits, align 4
  %conv861 = sitofp i32 %607 to double
  %mul862 = fmul double %mul860, %conv861
  %add863 = fadd double %mul858, %mul862
  store double %add863, double* %dtmp, align 8
  %608 = load double, double* @m_X2, align 8
  %cmp864 = fcmp oeq double %608, 0.000000e+00
  br i1 %cmp864, label %if.then875, label %lor.lhs.false866

lor.lhs.false866:                                 ; preds = %cond.end854
  %609 = load double, double* %dtmp, align 8
  %cmp867 = fcmp olt double %609, 0.000000e+00
  br i1 %cmp867, label %if.then875, label %lor.lhs.false869

lor.lhs.false869:                                 ; preds = %lor.lhs.false866
  %610 = load double, double* %dtmp, align 8
  %call870 = call double @sqrt(double %610) #5
  %611 = load double, double* @m_X1, align 8
  %612 = load double, double* @CurrentFrameMAD, align 8
  %mul871 = fmul double %611, %612
  %sub872 = fsub double %call870, %mul871
  %cmp873 = fcmp ole double %sub872, 0.000000e+00
  br i1 %cmp873, label %if.then875, label %if.else881

if.then875:                                       ; preds = %lor.lhs.false869, %lor.lhs.false866, %cond.end854
  %613 = load double, double* @m_X1, align 8
  %614 = load double, double* @CurrentFrameMAD, align 8
  %mul876 = fmul double %613, %614
  %615 = load i32, i32* %m_Bits, align 4
  %conv877 = sitofp i32 %615 to double
  %div878 = fdiv double %mul876, %conv877
  %conv879 = fptrunc double %div878 to float
  %conv880 = fpext float %conv879 to double
  store double %conv880, double* @m_Qstep, align 8
  br label %if.end890

if.else881:                                       ; preds = %lor.lhs.false869
  %616 = load double, double* @m_X2, align 8
  %mul882 = fmul double 2.000000e+00, %616
  %617 = load double, double* @CurrentFrameMAD, align 8
  %mul883 = fmul double %mul882, %617
  %618 = load double, double* %dtmp, align 8
  %call884 = call double @sqrt(double %618) #5
  %619 = load double, double* @m_X1, align 8
  %620 = load double, double* @CurrentFrameMAD, align 8
  %mul885 = fmul double %619, %620
  %sub886 = fsub double %call884, %mul885
  %div887 = fdiv double %mul883, %sub886
  %conv888 = fptrunc double %div887 to float
  %conv889 = fpext float %conv888 to double
  store double %conv889, double* @m_Qstep, align 8
  br label %if.end890

if.end890:                                        ; preds = %if.else881, %if.then875
  %621 = load double, double* @m_Qstep, align 8
  %call891 = call i32 @Qstep2QP(double %621)
  store i32 %call891, i32* @m_Qc, align 4
  %622 = load i32, i32* @m_Qp, align 4
  %623 = load i32, i32* @DDquant, align 4
  %add892 = add nsw i32 %622, %623
  %624 = load i32, i32* @m_Qc, align 4
  %cmp893 = icmp slt i32 %add892, %624
  br i1 %cmp893, label %cond.true895, label %cond.false897

cond.true895:                                     ; preds = %if.end890
  %625 = load i32, i32* @m_Qp, align 4
  %626 = load i32, i32* @DDquant, align 4
  %add896 = add nsw i32 %625, %626
  br label %cond.end898

cond.false897:                                    ; preds = %if.end890
  %627 = load i32, i32* @m_Qc, align 4
  br label %cond.end898

cond.end898:                                      ; preds = %cond.false897, %cond.true895
  %cond899 = phi i32 [ %add896, %cond.true895 ], [ %627, %cond.false897 ]
  store i32 %cond899, i32* @m_Qc, align 4
  %628 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit900 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %628, i32 0, i32 130
  %629 = load i32, i32* %basicunit900, align 8
  %630 = load i32, i32* @MBPerRow, align 4
  %cmp901 = icmp sge i32 %629, %630
  br i1 %cmp901, label %if.then903, label %if.else912

if.then903:                                       ; preds = %cond.end898
  %631 = load i32, i32* @PAveFrameQP, align 4
  %add904 = add nsw i32 %631, 6
  %632 = load i32, i32* @m_Qc, align 4
  %cmp905 = icmp slt i32 %add904, %632
  br i1 %cmp905, label %cond.true907, label %cond.false909

cond.true907:                                     ; preds = %if.then903
  %633 = load i32, i32* @PAveFrameQP, align 4
  %add908 = add nsw i32 %633, 6
  br label %cond.end910

cond.false909:                                    ; preds = %if.then903
  %634 = load i32, i32* @m_Qc, align 4
  br label %cond.end910

cond.end910:                                      ; preds = %cond.false909, %cond.true907
  %cond911 = phi i32 [ %add908, %cond.true907 ], [ %634, %cond.false909 ]
  store i32 %cond911, i32* @m_Qc, align 4
  br label %if.end921

if.else912:                                       ; preds = %cond.end898
  %635 = load i32, i32* @PAveFrameQP, align 4
  %add913 = add nsw i32 %635, 3
  %636 = load i32, i32* @m_Qc, align 4
  %cmp914 = icmp slt i32 %add913, %636
  br i1 %cmp914, label %cond.true916, label %cond.false918

cond.true916:                                     ; preds = %if.else912
  %637 = load i32, i32* @PAveFrameQP, align 4
  %add917 = add nsw i32 %637, 3
  br label %cond.end919

cond.false918:                                    ; preds = %if.else912
  %638 = load i32, i32* @m_Qc, align 4
  br label %cond.end919

cond.end919:                                      ; preds = %cond.false918, %cond.true916
  %cond920 = phi i32 [ %add917, %cond.true916 ], [ %638, %cond.false918 ]
  store i32 %cond920, i32* @m_Qc, align 4
  br label %if.end921

if.end921:                                        ; preds = %cond.end919, %cond.end910
  %639 = load i32, i32* @m_Qc, align 4
  %640 = load i32, i32* @RC_MAX_QUANT, align 4
  %cmp922 = icmp slt i32 %639, %640
  br i1 %cmp922, label %cond.true924, label %cond.false925

cond.true924:                                     ; preds = %if.end921
  %641 = load i32, i32* @m_Qc, align 4
  br label %cond.end926

cond.false925:                                    ; preds = %if.end921
  %642 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end926

cond.end926:                                      ; preds = %cond.false925, %cond.true924
  %cond927 = phi i32 [ %641, %cond.true924 ], [ %642, %cond.false925 ]
  store i32 %cond927, i32* @m_Qc, align 4
  %643 = load i32, i32* @m_Qp, align 4
  %644 = load i32, i32* @DDquant, align 4
  %sub928 = sub nsw i32 %643, %644
  %645 = load i32, i32* @m_Qc, align 4
  %cmp929 = icmp slt i32 %sub928, %645
  br i1 %cmp929, label %cond.true931, label %cond.false932

cond.true931:                                     ; preds = %cond.end926
  %646 = load i32, i32* @m_Qc, align 4
  br label %cond.end934

cond.false932:                                    ; preds = %cond.end926
  %647 = load i32, i32* @m_Qp, align 4
  %648 = load i32, i32* @DDquant, align 4
  %sub933 = sub nsw i32 %647, %648
  br label %cond.end934

cond.end934:                                      ; preds = %cond.false932, %cond.true931
  %cond935 = phi i32 [ %646, %cond.true931 ], [ %sub933, %cond.false932 ]
  store i32 %cond935, i32* @m_Qc, align 4
  %649 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit936 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %649, i32 0, i32 130
  %650 = load i32, i32* %basicunit936, align 8
  %651 = load i32, i32* @MBPerRow, align 4
  %cmp937 = icmp sge i32 %650, %651
  br i1 %cmp937, label %if.then939, label %if.else948

if.then939:                                       ; preds = %cond.end934
  %652 = load i32, i32* @PAveFrameQP, align 4
  %sub940 = sub nsw i32 %652, 6
  %653 = load i32, i32* @m_Qc, align 4
  %cmp941 = icmp slt i32 %sub940, %653
  br i1 %cmp941, label %cond.true943, label %cond.false944

cond.true943:                                     ; preds = %if.then939
  %654 = load i32, i32* @m_Qc, align 4
  br label %cond.end946

cond.false944:                                    ; preds = %if.then939
  %655 = load i32, i32* @PAveFrameQP, align 4
  %sub945 = sub nsw i32 %655, 6
  br label %cond.end946

cond.end946:                                      ; preds = %cond.false944, %cond.true943
  %cond947 = phi i32 [ %654, %cond.true943 ], [ %sub945, %cond.false944 ]
  store i32 %cond947, i32* @m_Qc, align 4
  br label %if.end957

if.else948:                                       ; preds = %cond.end934
  %656 = load i32, i32* @PAveFrameQP, align 4
  %sub949 = sub nsw i32 %656, 3
  %657 = load i32, i32* @m_Qc, align 4
  %cmp950 = icmp slt i32 %sub949, %657
  br i1 %cmp950, label %cond.true952, label %cond.false953

cond.true952:                                     ; preds = %if.else948
  %658 = load i32, i32* @m_Qc, align 4
  br label %cond.end955

cond.false953:                                    ; preds = %if.else948
  %659 = load i32, i32* @PAveFrameQP, align 4
  %sub954 = sub nsw i32 %659, 3
  br label %cond.end955

cond.end955:                                      ; preds = %cond.false953, %cond.true952
  %cond956 = phi i32 [ %658, %cond.true952 ], [ %sub954, %cond.false953 ]
  store i32 %cond956, i32* @m_Qc, align 4
  br label %if.end957

if.end957:                                        ; preds = %cond.end955, %cond.end946
  %660 = load i32, i32* @RC_MIN_QUANT, align 4
  %661 = load i32, i32* @m_Qc, align 4
  %cmp958 = icmp slt i32 %660, %661
  br i1 %cmp958, label %cond.true960, label %cond.false961

cond.true960:                                     ; preds = %if.end957
  %662 = load i32, i32* @m_Qc, align 4
  br label %cond.end962

cond.false961:                                    ; preds = %if.end957
  %663 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end962

cond.end962:                                      ; preds = %cond.false961, %cond.true960
  %cond963 = phi i32 [ %662, %cond.true960 ], [ %663, %cond.false961 ]
  store i32 %cond963, i32* @m_Qc, align 4
  %664 = load i32, i32* @m_Qc, align 4
  %665 = load i32, i32* @TotalFrameQP, align 4
  %add964 = add nsw i32 %665, %664
  store i32 %add964, i32* @TotalFrameQP, align 4
  %666 = load i32, i32* @m_Qc, align 4
  store i32 %666, i32* @Pm_Qp, align 4
  %667 = load i32, i32* @NumberofBasicUnit, align 4
  %dec965 = add nsw i32 %667, -1
  store i32 %dec965, i32* @NumberofBasicUnit, align 4
  %668 = load i32, i32* @NumberofBasicUnit, align 4
  %cmp966 = icmp eq i32 %668, 0
  br i1 %cmp966, label %land.lhs.true968, label %if.end1030

land.lhs.true968:                                 ; preds = %cond.end962
  %669 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type969 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %669, i32 0, i32 6
  %670 = load i32, i32* %type969, align 8
  %cmp970 = icmp eq i32 %670, 0
  br i1 %cmp970, label %if.then972, label %if.end1030

if.then972:                                       ; preds = %land.lhs.true968
  %671 = load i32, i32* %topfield.addr, align 4
  %tobool973 = icmp ne i32 %671, 0
  br i1 %tobool973, label %lor.lhs.false974, label %if.then978

lor.lhs.false974:                                 ; preds = %if.then972
  %672 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl975 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %672, i32 0, i32 134
  %673 = load i32, i32* %FieldControl975, align 8
  %cmp976 = icmp eq i32 %673, 0
  br i1 %cmp976, label %if.then978, label %if.end1029

if.then978:                                       ; preds = %lor.lhs.false974, %if.then972
  %674 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %frame_mbs_only_flag979 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %674, i32 0, i32 25
  %675 = load i32, i32* %frame_mbs_only_flag979, align 4
  %tobool980 = icmp ne i32 %675, 0
  br i1 %tobool980, label %if.then985, label %lor.lhs.false981

lor.lhs.false981:                                 ; preds = %if.then978
  %676 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace982 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %676, i32 0, i32 91
  %677 = load i32, i32* %PicInterlace982, align 8
  %cmp983 = icmp eq i32 %677, 1
  br i1 %cmp983, label %if.then985, label %if.else1001

if.then985:                                       ; preds = %lor.lhs.false981, %if.then978
  %678 = load i32, i32* @TotalFrameQP, align 4
  %conv986 = sitofp i32 %678 to double
  %mul987 = fmul double 1.000000e+00, %conv986
  %679 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv988 = sitofp i32 %679 to double
  %div989 = fdiv double %mul987, %conv988
  %add990 = fadd double %div989, 5.000000e-01
  %conv991 = fptosi double %add990 to i32
  store i32 %conv991, i32* %PAverageQP, align 4
  %680 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture992 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %680, i32 0, i32 130
  %681 = load i32, i32* %NumberofPPicture992, align 8
  %682 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %intra_period993 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %682, i32 0, i32 31
  %683 = load i32, i32* %intra_period993, align 8
  %sub994 = sub nsw i32 %683, 2
  %cmp995 = icmp eq i32 %681, %sub994
  br i1 %cmp995, label %if.then997, label %if.end998

if.then997:                                       ; preds = %if.then985
  %684 = load i32, i32* %PAverageQP, align 4
  store i32 %684, i32* @QPLastPFrame, align 4
  br label %if.end998

if.end998:                                        ; preds = %if.then997, %if.then985
  %685 = load i32, i32* %PAverageQP, align 4
  %686 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture999 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %686, i32 0, i32 129
  %687 = load i32, i32* %TotalQpforPPicture999, align 4
  %add1000 = add nsw i32 %687, %685
  store i32 %add1000, i32* %TotalQpforPPicture999, align 4
  %688 = load i32, i32* @PreviousQp2, align 4
  store i32 %688, i32* @PreviousQp1, align 4
  %689 = load i32, i32* %PAverageQP, align 4
  store i32 %689, i32* @PreviousQp2, align 4
  %690 = load i32, i32* %PAverageQP, align 4
  store i32 %690, i32* @PAveFrameQP, align 4
  %691 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %691, i32* @PAveHeaderBits3, align 4
  br label %if.end1028

if.else1001:                                      ; preds = %lor.lhs.false981
  %692 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace1002 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %692, i32 0, i32 91
  %693 = load i32, i32* %PicInterlace1002, align 8
  %cmp1003 = icmp eq i32 %693, 2
  br i1 %cmp1003, label %if.then1008, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %if.else1001
  %694 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace1006 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %694, i32 0, i32 92
  %695 = load i32, i32* %MbInterlace1006, align 4
  %tobool1007 = icmp ne i32 %695, 0
  br i1 %tobool1007, label %if.then1008, label %if.end1027

if.then1008:                                      ; preds = %lor.lhs.false1005, %if.else1001
  %696 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl1009 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %696, i32 0, i32 134
  %697 = load i32, i32* %FieldControl1009, align 8
  %cmp1010 = icmp eq i32 %697, 0
  br i1 %cmp1010, label %if.then1012, label %if.else1019

if.then1012:                                      ; preds = %if.then1008
  %698 = load i32, i32* @TotalFrameQP, align 4
  %conv1013 = sitofp i32 %698 to double
  %mul1014 = fmul double 1.000000e+00, %conv1013
  %699 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1015 = sitofp i32 %699 to double
  %div1016 = fdiv double %mul1014, %conv1015
  %add1017 = fadd double %div1016, 5.000000e-01
  %conv1018 = fptosi double %add1017 to i32
  store i32 %conv1018, i32* %PAverageQP, align 4
  %700 = load i32, i32* %PAverageQP, align 4
  store i32 %700, i32* @FrameQPBuffer, align 4
  %701 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %701, i32* @FrameAveHeaderBits, align 4
  br label %if.end1026

if.else1019:                                      ; preds = %if.then1008
  %702 = load i32, i32* @TotalFrameQP, align 4
  %conv1020 = sitofp i32 %702 to double
  %mul1021 = fmul double 1.000000e+00, %conv1020
  %703 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %conv1022 = sitofp i32 %703 to double
  %div1023 = fdiv double %mul1021, %conv1022
  %add1024 = fadd double %div1023, 5.000000e-01
  %conv1025 = fptosi double %add1024 to i32
  store i32 %conv1025, i32* %PAverageQP, align 4
  %704 = load i32, i32* %PAverageQP, align 4
  store i32 %704, i32* @FieldQPBuffer, align 4
  %705 = load i32, i32* @PAveHeaderBits2, align 4
  store i32 %705, i32* @FieldAveHeaderBits, align 4
  br label %if.end1026

if.end1026:                                       ; preds = %if.else1019, %if.then1012
  br label %if.end1027

if.end1027:                                       ; preds = %if.end1026, %lor.lhs.false1005
  br label %if.end1028

if.end1028:                                       ; preds = %if.end1027, %if.end998
  br label %if.end1029

if.end1029:                                       ; preds = %if.end1028, %lor.lhs.false974
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %land.lhs.true968, %cond.end962
  %706 = load i32, i32* @m_Qc, align 4
  store i32 %706, i32* %retval, align 4
  br label %return

if.end1031:                                       ; preds = %if.end589
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.else533
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033
  br label %if.end1035

if.end1035:                                       ; preds = %if.end1034
  br label %if.end1036

if.end1036:                                       ; preds = %if.end1035
  %707 = load i32, i32* @m_Qc, align 4
  store i32 %707, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end1036, %if.end1030, %if.end785, %if.end649, %if.end587, %if.else532, %if.end531, %if.then331, %if.then318, %if.end313, %if.end295, %if.end174, %if.end160, %if.then4
  %708 = load i32, i32* %retval, align 4
  %709 = load i32, i32* %canary
  %710 = icmp eq i32 %709, 14845895
  br i1 %710, label %711, label %func_exit

711:                                              ; preds = %return, %func_exit
  ret i32 %708

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %711
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.72(i32 %np, i32 %nb) #0 {
entry:
  %nb.addr = alloca i32, align 4
  %AllocatedBits = alloca i32, align 4
  %GOPDquant = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %canary = alloca i32
  store i32 1133813726, i32* %canary
  %OverBits = alloca i32, align 4
  %np.addr = alloca i32, align 4
  %Overum = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 1133813726
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.73(i32 %n_windowSize) #0 {
entry:
  %b0 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %a00 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  %b1 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %canary = alloca i32
  store i32 2059223373, i32* %canary
  %estimateX2 = alloca i32, align 4
  %a10 = alloca double, align 8
  %i = alloca i32, align 4
  %a01 = alloca double, align 8
  %a11 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 2059223373
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.74(i32 %n_windowSize) #0 {
entry:
  %a10 = alloca double, align 8
  %a00 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %canary = alloca i32
  store i32 1104114187, i32* %canary
  %a01 = alloca double, align 8
  %b1 = alloca double, align 8
  %b0 = alloca double, align 8
  %i = alloca i32, align 4
  %n_windowSize.addr = alloca i32, align 4
  %oneSampleQ = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %estimateX2 = alloca i32, align 4
  %a11 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 1104114187
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.75(i32 %np, i32 %nb) #0 {
entry:
  %AllocatedBits = alloca i32, align 4
  %nb.addr = alloca i32, align 4
  %GOPDquant = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %np.addr = alloca i32, align 4
  %Overum = alloca i32, align 4
  %canary = alloca i32
  store i32 961170406, i32* %canary
  %OverBits = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 961170406
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_GOP.76(i32 %np, i32 %nb) #0 {
entry:
  %np.addr = alloca i32, align 4
  %OverBits = alloca i32, align 4
  %Overum = alloca i32, align 4
  %OverDuantQp = alloca i32, align 4
  %canary = alloca i32
  store i32 1828140233, i32* %canary
  %GOPDquant = alloca i32, align 4
  %AllocatedBits = alloca i32, align 4
  %nb.addr = alloca i32, align 4
  store i32 %np, i32* %np.addr, align 4
  store i32 %nb, i32* %nb.addr, align 4
  store i32 0, i32* %Overum, align 4
  %0 = load i32, i32* @R, align 4
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %Overum, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* @R, align 4
  %sub = sub nsw i32 0, %1
  store i32 %sub, i32* %OverBits, align 4
  %2 = load i32, i32* @R, align 4
  %conv = sitofp i32 %2 to double
  %3 = load double, double* @bit_rate, align 8
  %4 = load double, double* @frame_rate, align 8
  %div = fdiv double %3, %4
  %add = fadd double %conv, %div
  %conv1 = fptosi double %add to i64
  store i64 %conv1, i64* @LowerBound, align 8
  %5 = load i32, i32* @R, align 4
  %conv2 = sitofp i32 %5 to double
  %6 = load double, double* @InitialDelayOffset, align 8
  %add3 = fadd double %conv2, %6
  %conv4 = fptosi double %add3 to i64
  store i64 %conv4, i64* @UpperBound1, align 8
  %7 = load i32, i32* %np.addr, align 4
  %add5 = add nsw i32 1, %7
  %8 = load i32, i32* %nb.addr, align 4
  %add6 = add nsw i32 %add5, %8
  %conv7 = sitofp i32 %add6 to double
  %9 = load double, double* @bit_rate, align 8
  %mul = fmul double %conv7, %9
  %10 = load double, double* @frame_rate, align 8
  %div8 = fdiv double %mul, %10
  %add9 = fadd double %div8, 5.000000e-01
  %11 = call double @llvm.floor.f64(double %add9)
  %conv10 = fptosi double %11 to i32
  store i32 %conv10, i32* %AllocatedBits, align 4
  %12 = load i32, i32* %AllocatedBits, align 4
  %13 = load i32, i32* @R, align 4
  %add11 = add nsw i32 %13, %12
  store i32 %add11, i32* @R, align 4
  %14 = load i32, i32* %np.addr, align 4
  store i32 %14, i32* @Np, align 4
  %15 = load i32, i32* %nb.addr, align 4
  store i32 %15, i32* @Nb, align 4
  %16 = load i32, i32* %OverBits, align 4
  %mul12 = mul nsw i32 8, %16
  %17 = load i32, i32* %AllocatedBits, align 4
  %div13 = sdiv i32 %mul12, %17
  %conv14 = sitofp i32 %div13 to double
  %add15 = fadd double %conv14, 5.000000e-01
  %conv16 = fptosi double %add15 to i32
  store i32 %conv16, i32* %OverDuantQp, align 4
  store i32 0, i32* @GOPOverdue, align 4
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %IFLAG = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 137
  store i32 1, i32* %IFLAG, align 4
  %19 = load i32, i32* %np.addr, align 4
  store i32 %19, i32* @TotalPFrame, align 4
  %20 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %20, i32 0, i32 128
  %21 = load i32, i32* %NumberofGOP, align 8
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %NumberofGOP, align 8
  %22 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %22, i32 0, i32 128
  %23 = load i32, i32* %NumberofGOP17, align 8
  %cmp18 = icmp eq i32 %23, 1
  br i1 %cmp18, label %if.then20, label %if.else

if.then20:                                        ; preds = %if.end
  %24 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %24, i32 0, i32 129
  %25 = load i32, i32* %SeinitialQP, align 4
  store i32 %25, i32* @MyInitialQp, align 4
  %26 = load i32, i32* @MyInitialQp, align 4
  %sub21 = sub nsw i32 %26, 1
  store i32 %sub21, i32* @PreviousQp2, align 4
  %27 = load i32, i32* @MyInitialQp, align 4
  store i32 %27, i32* @QPLastGOP, align 4
  br label %if.end83

if.else:                                          ; preds = %if.end
  %28 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %28, i32 0, i32 91
  %29 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %29, 2
  br i1 %cmp22, label %if.then24, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 92
  %31 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %31, 0
  br i1 %tobool, label %if.then24, label %if.end33

if.then24:                                        ; preds = %lor.lhs.false, %if.else
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 135
  %33 = load i32, i32* %FieldFrame, align 4
  %cmp25 = icmp eq i32 %33, 1
  br i1 %cmp25, label %if.then27, label %if.else29

if.then27:                                        ; preds = %if.then24
  %34 = load i32, i32* @FrameQPBuffer, align 4
  %35 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %35, i32 0, i32 129
  %36 = load i32, i32* %TotalQpforPPicture, align 4
  %add28 = add nsw i32 %36, %34
  store i32 %add28, i32* %TotalQpforPPicture, align 4
  %37 = load i32, i32* @FrameQPBuffer, align 4
  store i32 %37, i32* @QPLastPFrame, align 4
  br label %if.end32

if.else29:                                        ; preds = %if.then24
  %38 = load i32, i32* @FieldQPBuffer, align 4
  %39 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture30 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %39, i32 0, i32 129
  %40 = load i32, i32* %TotalQpforPPicture30, align 4
  %add31 = add nsw i32 %40, %38
  store i32 %add31, i32* %TotalQpforPPicture30, align 4
  %41 = load i32, i32* @FieldQPBuffer, align 4
  store i32 %41, i32* @QPLastPFrame, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %lor.lhs.false
  %42 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture34 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %42, i32 0, i32 129
  %43 = load i32, i32* %TotalQpforPPicture34, align 4
  %conv35 = sitofp i32 %43 to double
  %mul36 = fmul double 1.000000e+00, %conv35
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 130
  %45 = load i32, i32* %NumberofPPicture, align 8
  %conv37 = sitofp i32 %45 to double
  %div38 = fdiv double %mul36, %conv37
  %add39 = fadd double %div38, 5.000000e-01
  %conv40 = fptosi double %add39 to i32
  store i32 %conv40, i32* @PAverageQp, align 4
  %46 = load i32, i32* %np.addr, align 4
  %47 = load i32, i32* %nb.addr, align 4
  %add41 = add nsw i32 %46, %47
  %add42 = add nsw i32 %add41, 1
  %conv43 = sitofp i32 %add42 to double
  %mul44 = fmul double 1.000000e+00, %conv43
  %div45 = fdiv double %mul44, 1.500000e+01
  %add46 = fadd double 5.000000e-01, %div45
  %conv47 = fptosi double %add46 to i32
  store i32 %conv47, i32* %GOPDquant, align 4
  %48 = load i32, i32* %GOPDquant, align 4
  %cmp48 = icmp sgt i32 %48, 2
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end33
  store i32 2, i32* %GOPDquant, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end33
  %49 = load i32, i32* %GOPDquant, align 4
  %50 = load i32, i32* @PAverageQp, align 4
  %sub52 = sub nsw i32 %50, %49
  store i32 %sub52, i32* @PAverageQp, align 4
  %51 = load i32, i32* @PAverageQp, align 4
  %52 = load i32, i32* @QPLastPFrame, align 4
  %sub53 = sub nsw i32 %52, 2
  %cmp54 = icmp sgt i32 %51, %sub53
  br i1 %cmp54, label %if.then56, label %if.end57

if.then56:                                        ; preds = %if.end51
  %53 = load i32, i32* @PAverageQp, align 4
  %dec = add nsw i32 %53, -1
  store i32 %dec, i32* @PAverageQp, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then56, %if.end51
  %54 = load i32, i32* @QPLastGOP, align 4
  %sub58 = sub nsw i32 %54, 2
  %55 = load i32, i32* @PAverageQp, align 4
  %cmp59 = icmp slt i32 %sub58, %55
  br i1 %cmp59, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end57
  %56 = load i32, i32* @PAverageQp, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end57
  %57 = load i32, i32* @QPLastGOP, align 4
  %sub61 = sub nsw i32 %57, 2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %56, %cond.true ], [ %sub61, %cond.false ]
  store i32 %cond, i32* @PAverageQp, align 4
  %58 = load i32, i32* @QPLastGOP, align 4
  %add62 = add nsw i32 %58, 2
  %59 = load i32, i32* @PAverageQp, align 4
  %cmp63 = icmp slt i32 %add62, %59
  br i1 %cmp63, label %cond.true65, label %cond.false67

cond.true65:                                      ; preds = %cond.end
  %60 = load i32, i32* @QPLastGOP, align 4
  %add66 = add nsw i32 %60, 2
  br label %cond.end68

cond.false67:                                     ; preds = %cond.end
  %61 = load i32, i32* @PAverageQp, align 4
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %add66, %cond.true65 ], [ %61, %cond.false67 ]
  store i32 %cond69, i32* @PAverageQp, align 4
  %62 = load i32, i32* @RC_MAX_QUANT, align 4
  %63 = load i32, i32* @PAverageQp, align 4
  %cmp70 = icmp slt i32 %62, %63
  br i1 %cmp70, label %cond.true72, label %cond.false73

cond.true72:                                      ; preds = %cond.end68
  %64 = load i32, i32* @RC_MAX_QUANT, align 4
  br label %cond.end74

cond.false73:                                     ; preds = %cond.end68
  %65 = load i32, i32* @PAverageQp, align 4
  br label %cond.end74

cond.end74:                                       ; preds = %cond.false73, %cond.true72
  %cond75 = phi i32 [ %64, %cond.true72 ], [ %65, %cond.false73 ]
  store i32 %cond75, i32* @PAverageQp, align 4
  %66 = load i32, i32* @RC_MIN_QUANT, align 4
  %67 = load i32, i32* @PAverageQp, align 4
  %cmp76 = icmp slt i32 %66, %67
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %cond.end74
  %68 = load i32, i32* @PAverageQp, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %cond.end74
  %69 = load i32, i32* @RC_MIN_QUANT, align 4
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %68, %cond.true78 ], [ %69, %cond.false79 ]
  store i32 %cond81, i32* @PAverageQp, align 4
  %70 = load i32, i32* @PAverageQp, align 4
  store i32 %70, i32* @MyInitialQp, align 4
  %71 = load i32, i32* @MyInitialQp, align 4
  store i32 %71, i32* @QPLastGOP, align 4
  %72 = load i32, i32* @PAverageQp, align 4
  store i32 %72, i32* @Pm_Qp, align 4
  %73 = load i32, i32* @PAverageQp, align 4
  store i32 %73, i32* @PAveFrameQP, align 4
  %74 = load i32, i32* @PreviousQp2, align 4
  store i32 %74, i32* @PreviousQp1, align 4
  %75 = load i32, i32* @MyInitialQp, align 4
  %sub82 = sub nsw i32 %75, 1
  store i32 %sub82, i32* @PreviousQp2, align 4
  br label %if.end83

if.end83:                                         ; preds = %cond.end80, %if.then20
  %76 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalQpforPPicture84 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %76, i32 0, i32 129
  store i32 0, i32* %TotalQpforPPicture84, align 4
  %77 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture85 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %77, i32 0, i32 130
  store i32 0, i32* %NumberofPPicture85, align 8
  store i32 0, i32* @NumberofBFrames, align 4
  %78 = load i32, i32* %canary
  %79 = icmp eq i32 %78, 1828140233
  br i1 %79, label %80, label %func_exit

80:                                               ; preds = %if.end83, %func_exit
  ret void

func_exit:                                        ; preds = %if.end83
  call void @detect_breach()
  br label %80
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.77(i32 %n_windowSize) #0 {
entry:
  %b1 = alloca double, align 8
  %a01 = alloca double, align 8
  %a10 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %n_windowSize.addr = alloca i32, align 4
  %n_realSize = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  %canary = alloca i32
  store i32 1476023863, i32* %canary
  %b0 = alloca double, align 8
  %i = alloca i32, align 4
  %a00 = alloca double, align 8
  %a11 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 1476023863
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.78(double %Qstep) #0 {
entry:
  %Qstep.addr = alloca double, align 8
  %canary = alloca i32
  store i32 501927522, i32* %canary
  %retval = alloca i32, align 4
  %q_rem = alloca i32, align 4
  %q_per = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 501927522
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.79(i32 %n_windowSize) #0 {
entry:
  %b0 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %canary = alloca i32
  store i32 188535665, i32* %canary
  %a11 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %a10 = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %a01 = alloca double, align 8
  %a00 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %i = alloca i32, align 4
  %b1 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 188535665
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Qstep2QP.80(double %Qstep) #0 {
entry:
  %retval = alloca i32, align 4
  %canary = alloca i32
  store i32 404137435, i32* %canary
  %q_rem = alloca i32, align 4
  %Qstep.addr = alloca double, align 8
  %q_per = alloca i32, align 4
  store double %Qstep, double* %Qstep.addr, align 8
  store i32 0, i32* %q_per, align 4
  store i32 0, i32* %q_rem, align 4
  %0 = load double, double* %Qstep.addr, align 8
  %call = call double @QP2Qstep(i32 0)
  %cmp = fcmp olt double %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %entry
  %1 = load double, double* %Qstep.addr, align 8
  %call1 = call double @QP2Qstep(i32 51)
  %cmp2 = fcmp ogt double %1, %call1
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.else
  store i32 51, i32* %retval, align 4
  br label %return

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end4
  %2 = load double, double* %Qstep.addr, align 8
  %call5 = call double @QP2Qstep(i32 5)
  %cmp6 = fcmp ogt double %2, %call5
  br i1 %cmp6, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %3 = load double, double* %Qstep.addr, align 8
  %div = fdiv double %3, 2.000000e+00
  store double %div, double* %Qstep.addr, align 8
  %4 = load i32, i32* %q_per, align 4
  %add = add nsw i32 %4, 1
  store i32 %add, i32* %q_per, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %5 = load double, double* %Qstep.addr, align 8
  %cmp7 = fcmp ole double %5, 6.562500e-01
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %while.end
  store double 6.250000e-01, double* %Qstep.addr, align 8
  store i32 0, i32* %q_rem, align 4
  br label %if.end26

if.else9:                                         ; preds = %while.end
  %6 = load double, double* %Qstep.addr, align 8
  %cmp10 = fcmp ole double %6, 7.500000e-01
  br i1 %cmp10, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  store double 6.875000e-01, double* %Qstep.addr, align 8
  store i32 1, i32* %q_rem, align 4
  br label %if.end25

if.else12:                                        ; preds = %if.else9
  %7 = load double, double* %Qstep.addr, align 8
  %cmp13 = fcmp ole double %7, 8.437500e-01
  br i1 %cmp13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.else12
  store double 8.125000e-01, double* %Qstep.addr, align 8
  store i32 2, i32* %q_rem, align 4
  br label %if.end24

if.else15:                                        ; preds = %if.else12
  %8 = load double, double* %Qstep.addr, align 8
  %cmp16 = fcmp ole double %8, 9.375000e-01
  br i1 %cmp16, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else15
  store double 8.750000e-01, double* %Qstep.addr, align 8
  store i32 3, i32* %q_rem, align 4
  br label %if.end23

if.else18:                                        ; preds = %if.else15
  %9 = load double, double* %Qstep.addr, align 8
  %cmp19 = fcmp ole double %9, 1.062500e+00
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else18
  store double 1.000000e+00, double* %Qstep.addr, align 8
  store i32 4, i32* %q_rem, align 4
  br label %if.end22

if.else21:                                        ; preds = %if.else18
  store double 1.125000e+00, double* %Qstep.addr, align 8
  store i32 5, i32* %q_rem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then20
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then14
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then11
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then8
  %10 = load i32, i32* %q_per, align 4
  %mul = mul nsw i32 %10, 6
  %11 = load i32, i32* %q_rem, align 4
  %add27 = add nsw i32 %mul, %11
  store i32 %add27, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end26, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4
  %13 = load i32, i32* %canary
  %14 = icmp eq i32 %13, 404137435
  br i1 %14, label %15, label %func_exit

15:                                               ; preds = %return, %func_exit
  ret i32 %12

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %15
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.81() #0 {
entry:
  %L1 = alloca double, align 8
  %i = alloca i32, align 4
  %bpp = alloca double, align 8
  %L2 = alloca double, align 8
  %L3 = alloca double, align 8
  %canary = alloca i32
  store i32 1434457298, i32* %canary
  %qp = alloca i32, align 4
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 1434457298
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.82() #0 {
entry:
  %n_windowSize = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %canary = alloca i32
  store i32 2061616679, i32* %canary
  %i = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %std = alloca double, align 8
  %threshold = alloca double, align 8
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 2061616679
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.83(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %canary = alloca i32
  store i32 218858309, i32* %canary
  %targetcomputation.addr = alloca i32, align 4
  %fieldpic.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %topfield.addr = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 218858309
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.84() #0 {
entry:
  %i = alloca i32, align 4
  %L1 = alloca double, align 8
  %bpp = alloca double, align 8
  %L2 = alloca double, align 8
  %L3 = alloca double, align 8
  %canary = alloca i32
  store i32 937308373, i32* %canary
  %qp = alloca i32, align 4
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 937308373
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.85() #0 {
entry:
  %i = alloca i32, align 4
  %error = alloca [20 x double], align 16
  %m_Nc = alloca i32, align 4
  %std = alloca double, align 8
  %n_windowSize = alloca i32, align 4
  %canary = alloca i32
  store i32 1647048345, i32* %canary
  %threshold = alloca double, align 8
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 1647048345
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MADModelEstimator.86(i32 %n_windowSize) #0 {
entry:
  %estimateX2 = alloca i32, align 4
  %a10 = alloca double, align 8
  %MatrixValue = alloca double, align 8
  %b0 = alloca double, align 8
  %a00 = alloca double, align 8
  %b1 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  %a11 = alloca double, align 8
  %a01 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 1034369922, i32* %canary
  %oneSampleQ = alloca double, align 8
  %i = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @MADPictureC2, align 8
  store double 0.000000e+00, double* @MADPictureC1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %mul = fmul double %26, %conv
  %div = fdiv double %24, %mul
  %28 = load double, double* @MADPictureC1, align 8
  %add = fadd double %28, %div
  store double %add, double* @MADPictureC1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end88

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end88

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc70, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end72

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end69, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %39 = load double, double* %a01, align 8
  %add53 = fadd double %39, %38
  store double %add53, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom54 = sext i32 %41 to i64
  %arrayidx55 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom54
  %42 = load double, double* %arrayidx55, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %43 to i64
  %arrayidx57 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom56
  %44 = load double, double* %arrayidx57, align 8
  %mul58 = fmul double %42, %44
  %45 = load double, double* %a11, align 8
  %add59 = fadd double %45, %mul58
  store double %add59, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom60 = sext i32 %46 to i64
  %arrayidx61 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom60
  %47 = load double, double* %arrayidx61, align 8
  %48 = load double, double* %b0, align 8
  %add62 = fadd double %48, %47
  store double %add62, double* %b0, align 8
  %49 = load i32, i32* %i, align 4
  %idxprom63 = sext i32 %49 to i64
  %arrayidx64 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom63
  %50 = load double, double* %arrayidx64, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %51 to i64
  %arrayidx66 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom65
  %52 = load double, double* %arrayidx66, align 8
  %mul67 = fmul double %50, %52
  %53 = load double, double* %b1, align 8
  %add68 = fadd double %53, %mul67
  store double %add68, double* %b1, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then49, %for.body45
  br label %for.inc70

for.inc70:                                        ; preds = %if.end69
  %54 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond42

for.end72:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul73 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul74 = fmul double %57, %58
  %sub = fsub double %mul73, %mul74
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp75 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp75, label %if.then77, label %if.else

if.then77:                                        ; preds = %for.end72
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul78 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul79 = fmul double %63, %64
  %sub80 = fsub double %mul78, %mul79
  %65 = load double, double* %MatrixValue, align 8
  %div81 = fdiv double %sub80, %65
  store double %div81, double* @MADPictureC2, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul82 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul83 = fmul double %68, %69
  %sub84 = fsub double %mul82, %mul83
  %70 = load double, double* %MatrixValue, align 8
  %div85 = fdiv double %sub84, %70
  store double %div85, double* @MADPictureC1, align 8
  br label %if.end87

if.else:                                          ; preds = %for.end72
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a01, align 8
  %div86 = fdiv double %71, %72
  store double %div86, double* @MADPictureC1, align 8
  store double 0.000000e+00, double* @MADPictureC2, align 8
  br label %if.end87

if.end87:                                         ; preds = %if.else, %if.then77
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp89 = icmp eq i32 %74, 0
  br i1 %cmp89, label %if.then91, label %if.end92

if.then91:                                        ; preds = %if.end88
  %75 = load double, double* @MADPictureC1, align 8
  store double %75, double* @PMADPictureC1, align 8
  %76 = load double, double* @MADPictureC2, align 8
  store double %76, double* @PMADPictureC2, align 8
  br label %if.end92

if.end92:                                         ; preds = %if.then91, %if.end88
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 1034369922
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end92, %func_exit
  ret void

func_exit:                                        ; preds = %if.end92
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.87(i32 %n_windowSize) #0 {
entry:
  %b0 = alloca double, align 8
  %a10 = alloca double, align 8
  %estimateX2 = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  %a00 = alloca double, align 8
  %i = alloca i32, align 4
  %oneSampleQ = alloca double, align 8
  %a11 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 2053965984, i32* %canary
  %a01 = alloca double, align 8
  %b1 = alloca double, align 8
  %n_realSize = alloca i32, align 4
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 2053965984
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.88(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 2107292260, i32* %canary
  %targetcomputation.addr = alloca i32, align 4
  %fieldpic.addr = alloca i32, align 4
  %topfield.addr = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 2107292260
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.89() #0 {
entry:
  %n_windowSize = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %canary = alloca i32
  store i32 1212212423, i32* %canary
  %std = alloca double, align 8
  %threshold = alloca double, align 8
  %i = alloca i32, align 4
  %error = alloca [20 x double], align 16
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 1212212423
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.90() #0 {
entry:
  %error = alloca [20 x double], align 16
  %threshold = alloca double, align 8
  %canary = alloca i32
  store i32 336259616, i32* %canary
  %n_windowSize = alloca i32, align 4
  %m_Nc = alloca i32, align 4
  %i = alloca i32, align 4
  %std = alloca double, align 8
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 336259616
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_seq.91() #0 {
entry:
  %i = alloca i32, align 4
  %bpp = alloca double, align 8
  %canary = alloca i32
  store i32 317623906, i32* %canary
  %qp = alloca i32, align 4
  %L1 = alloca double, align 8
  %L2 = alloca double, align 8
  %L3 = alloca double, align 8
  store i32 0, i32* @Xp, align 4
  store i32 0, i32* @Xb, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %bit_rate = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 128
  %1 = load i32, i32* %bit_rate, align 8
  %conv = sitofp i32 %1 to double
  store double %conv, double* @bit_rate, align 8
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %framerate = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 12
  %3 = load float, float* %framerate, align 8
  %4 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %4, i32 0, i32 34
  %5 = load i32, i32* %successive_Bframe, align 4
  %add = add nsw i32 %5, 1
  %conv1 = sitofp i32 %add to float
  %mul = fmul float %3, %conv1
  %6 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %jumpd = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %6, i32 0, i32 5
  %7 = load i32, i32* %jumpd, align 4
  %add2 = add nsw i32 %7, 1
  %conv3 = sitofp i32 %add2 to float
  %div = fdiv float %mul, %conv3
  %conv4 = fpext float %div to double
  store double %conv4, double* @frame_rate, align 8
  %8 = load double, double* @bit_rate, align 8
  store double %8, double* @PreviousBit_Rate, align 8
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 15
  %10 = load i32, i32* %height, align 4
  %11 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %11, i32 0, i32 13
  %12 = load i32, i32* %width, align 4
  %mul5 = mul nsw i32 %10, %12
  %div6 = sdiv i32 %mul5, 256
  %13 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %13, i32 0, i32 136
  store i32 %div6, i32* %Frame_Total_Number_MB, align 8
  %14 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %14, i32 0, i32 130
  %15 = load i32, i32* %basicunit, align 8
  %16 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB7 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %16, i32 0, i32 136
  %17 = load i32, i32* %Frame_Total_Number_MB7, align 8
  %cmp = icmp sgt i32 %15, %17
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB9 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 136
  %19 = load i32, i32* %Frame_Total_Number_MB9, align 8
  %20 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit10 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %20, i32 0, i32 130
  store i32 %19, i32* %basicunit10, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %21 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit11 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %21, i32 0, i32 130
  %22 = load i32, i32* %basicunit11, align 8
  %23 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB12 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %23, i32 0, i32 136
  %24 = load i32, i32* %Frame_Total_Number_MB12, align 8
  %cmp13 = icmp slt i32 %22, %24
  br i1 %cmp13, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB16 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 136
  %26 = load i32, i32* %Frame_Total_Number_MB16, align 8
  %27 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %basicunit17 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %27, i32 0, i32 130
  %28 = load i32, i32* %basicunit17, align 8
  %div18 = sdiv i32 %26, %28
  store i32 %div18, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.end
  store double 4.000000e+00, double* @MINVALUE, align 8
  %29 = load double, double* @bit_rate, align 8
  %mul20 = fmul double %29, 2.560000e+00
  store double %mul20, double* @BufferSize, align 8
  store double 0.000000e+00, double* @CurrentBufferFullness, align 8
  %30 = load double, double* @CurrentBufferFullness, align 8
  store double %30, double* @GOPTargetBufferLevel, align 8
  %31 = load double, double* @BufferSize, align 8
  %mul21 = fmul double %31, 8.000000e-01
  store double %mul21, double* @InitialDelayOffset, align 8
  store i32 0, i32* @m_windowSize, align 4
  store i32 0, i32* @MADm_windowSize, align 4
  %32 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %32, i32 0, i32 126
  store i32 0, i32* %NumberofCodedBFrame, align 8
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 127
  store i32 0, i32* %NumberofCodedPFrame, align 4
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 128
  store i32 0, i32* %NumberofGOP, align 8
  store i32 0, i32* @R, align 4
  %35 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe22 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %35, i32 0, i32 34
  %36 = load i32, i32* %successive_Bframe22, align 4
  %cmp23 = icmp sgt i32 %36, 0
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.end19
  store double 2.500000e-01, double* @GAMMAP, align 8
  store double 9.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.else:                                          ; preds = %if.end19
  store double 5.000000e-01, double* @GAMMAP, align 8
  store double 5.000000e-01, double* @BETAP, align 8
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then25
  store i32 0, i32* @PPreHeader, align 4
  %37 = load double, double* @bit_rate, align 8
  %mul27 = fmul double %37, 1.000000e+00
  store double %mul27, double* @Pm_X1, align 8
  store double 0.000000e+00, double* @Pm_X2, align 8
  store double 1.000000e+00, double* @PMADPictureC1, align 8
  store double 0.000000e+00, double* @PMADPictureC2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %38 = load i32, i32* %i, align 4
  %cmp28 = icmp slt i32 %38, 20
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32, i32* %i, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgQp, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8
  %40 = load i32, i32* %i, align 4
  %idxprom30 = sext i32 %40 to i64
  %arrayidx31 = getelementptr inbounds [20 x double], [20 x double]* @Pm_rgRp, i64 0, i64 %idxprom30
  store double 0.000000e+00, double* %arrayidx31, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %41 to i64
  %arrayidx33 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32, i32* %i, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 20), align 16
  store i32 2, i32* @PDuantQp, align 4
  store i32 0, i32* @PAveHeaderBits1, align 4
  store i32 0, i32* @PAveHeaderBits3, align 4
  %43 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp34 = icmp sge i32 %43, 9
  br i1 %cmp34, label %if.then36, label %if.else37

if.then36:                                        ; preds = %for.end
  store i32 1, i32* @DDquant, align 4
  br label %if.end38

if.else37:                                        ; preds = %for.end
  store i32 2, i32* @DDquant, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  %44 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width39 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %44, i32 0, i32 13
  %45 = load i32, i32* %width39, align 4
  %div40 = sdiv i32 %45, 16
  store i32 %div40, i32* @MBPerRow, align 4
  %46 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %46, i32 0, i32 134
  store i32 0, i32* %FieldControl, align 8
  store i32 51, i32* @RC_MAX_QUANT, align 4
  store i32 0, i32* @RC_MIN_QUANT, align 4
  %47 = load double, double* @bit_rate, align 8
  %mul41 = fmul double 1.000000e+00, %47
  %48 = load double, double* @frame_rate, align 8
  %49 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width42 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %49, i32 0, i32 13
  %50 = load i32, i32* %width42, align 4
  %conv43 = sitofp i32 %50 to double
  %mul44 = fmul double %48, %conv43
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %height45 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 15
  %52 = load i32, i32* %height45, align 4
  %conv46 = sitofp i32 %52 to double
  %mul47 = fmul double %mul44, %conv46
  %div48 = fdiv double %mul41, %mul47
  store double %div48, double* %bpp, align 8
  %53 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width49 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %53, i32 0, i32 13
  %54 = load i32, i32* %width49, align 4
  %cmp50 = icmp eq i32 %54, 176
  br i1 %cmp50, label %if.then52, label %if.else53

if.then52:                                        ; preds = %if.end38
  store double 1.000000e-01, double* %L1, align 8
  store double 3.000000e-01, double* %L2, align 8
  store double 6.000000e-01, double* %L3, align 8
  br label %if.end60

if.else53:                                        ; preds = %if.end38
  %55 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %width54 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %55, i32 0, i32 13
  %56 = load i32, i32* %width54, align 4
  %cmp55 = icmp eq i32 %56, 352
  br i1 %cmp55, label %if.then57, label %if.else58

if.then57:                                        ; preds = %if.else53
  store double 2.000000e-01, double* %L1, align 8
  store double 6.000000e-01, double* %L2, align 8
  store double 1.200000e+00, double* %L3, align 8
  br label %if.end59

if.else58:                                        ; preds = %if.else53
  store double 6.000000e-01, double* %L1, align 8
  store double 1.400000e+00, double* %L2, align 8
  store double 2.400000e+00, double* %L3, align 8
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then52
  %57 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %57, i32 0, i32 129
  %58 = load i32, i32* %SeinitialQP, align 4
  %cmp61 = icmp eq i32 %58, 0
  br i1 %cmp61, label %if.then63, label %if.end80

if.then63:                                        ; preds = %if.end60
  %59 = load double, double* %bpp, align 8
  %60 = load double, double* %L1, align 8
  %cmp64 = fcmp ole double %59, %60
  br i1 %cmp64, label %if.then66, label %if.else67

if.then66:                                        ; preds = %if.then63
  store i32 35, i32* %qp, align 4
  br label %if.end78

if.else67:                                        ; preds = %if.then63
  %61 = load double, double* %bpp, align 8
  %62 = load double, double* %L2, align 8
  %cmp68 = fcmp ole double %61, %62
  br i1 %cmp68, label %if.then70, label %if.else71

if.then70:                                        ; preds = %if.else67
  store i32 25, i32* %qp, align 4
  br label %if.end77

if.else71:                                        ; preds = %if.else67
  %63 = load double, double* %bpp, align 8
  %64 = load double, double* %L3, align 8
  %cmp72 = fcmp ole double %63, %64
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %if.else71
  store i32 20, i32* %qp, align 4
  br label %if.end76

if.else75:                                        ; preds = %if.else71
  store i32 10, i32* %qp, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then66
  %65 = load i32, i32* %qp, align 4
  %66 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %SeinitialQP79 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %66, i32 0, i32 129
  store i32 %65, i32* %SeinitialQP79, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.end78, %if.end60
  %67 = load i32, i32* %canary
  %68 = icmp eq i32 %67, 317623906
  br i1 %68, label %69, label %func_exit

69:                                               ; preds = %if.end80, %func_exit
  ret void

func_exit:                                        ; preds = %if.end80
  call void @detect_breach()
  br label %69
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @RCModelEstimator.92(i32 %n_windowSize) #0 {
entry:
  %i = alloca i32, align 4
  %estimateX2 = alloca i32, align 4
  %b0 = alloca double, align 8
  %b1 = alloca double, align 8
  %canary = alloca i32
  store i32 613655871, i32* %canary
  %n_realSize = alloca i32, align 4
  %MatrixValue = alloca double, align 8
  %oneSampleQ = alloca double, align 8
  %a01 = alloca double, align 8
  %a10 = alloca double, align 8
  %a00 = alloca double, align 8
  %n_windowSize.addr = alloca i32, align 4
  %a11 = alloca double, align 8
  store i32 %n_windowSize, i32* %n_windowSize.addr, align 4
  %0 = load i32, i32* %n_windowSize.addr, align 4
  store i32 %0, i32* %n_realSize, align 4
  store double 0.000000e+00, double* %a00, align 8
  store double 0.000000e+00, double* %a01, align 8
  store double 0.000000e+00, double* %a10, align 8
  store double 0.000000e+00, double* %a11, align 8
  store double 0.000000e+00, double* %b0, align 8
  store double 0.000000e+00, double* %b1, align 8
  store i32 0, i32* %estimateX2, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %n_windowSize.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %n_realSize, align 4
  %dec = add nsw i32 %5, -1
  store i32 %dec, i32* %n_realSize, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* @m_X2, align 8
  store double 0.000000e+00, double* @m_X1, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc11, %for.end
  %7 = load i32, i32* %i, align 4
  %8 = load i32, i32* %n_windowSize.addr, align 4
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end13

for.body3:                                        ; preds = %for.cond1
  %9 = load i32, i32* %i, align 4
  %idxprom4 = sext i32 %9 to i64
  %arrayidx5 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom4
  %10 = load i32, i32* %arrayidx5, align 4
  %tobool6 = icmp ne i32 %10, 0
  br i1 %tobool6, label %if.end10, label %if.then7

if.then7:                                         ; preds = %for.body3
  %11 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %11 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom8
  %12 = load double, double* %arrayidx9, align 8
  store double %12, double* %oneSampleQ, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %for.body3
  br label %for.inc11

for.inc11:                                        ; preds = %if.end10
  %13 = load i32, i32* %i, align 4
  %inc12 = add nsw i32 %13, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond1

for.end13:                                        ; preds = %for.cond1
  store i32 0, i32* %i, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc34, %for.end13
  %14 = load i32, i32* %i, align 4
  %15 = load i32, i32* %n_windowSize.addr, align 4
  %cmp15 = icmp slt i32 %14, %15
  br i1 %cmp15, label %for.body16, label %for.end36

for.body16:                                       ; preds = %for.cond14
  %16 = load i32, i32* %i, align 4
  %idxprom17 = sext i32 %16 to i64
  %arrayidx18 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom17
  %17 = load double, double* %arrayidx18, align 8
  %18 = load double, double* %oneSampleQ, align 8
  %cmp19 = fcmp une double %17, %18
  br i1 %cmp19, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %for.body16
  %19 = load i32, i32* %i, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom20
  %20 = load i32, i32* %arrayidx21, align 4
  %tobool22 = icmp ne i32 %20, 0
  br i1 %tobool22, label %if.end24, label %if.then23

if.then23:                                        ; preds = %land.lhs.true
  store i32 1, i32* %estimateX2, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %land.lhs.true, %for.body16
  %21 = load i32, i32* %i, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom25
  %22 = load i32, i32* %arrayidx26, align 4
  %tobool27 = icmp ne i32 %22, 0
  br i1 %tobool27, label %if.end33, label %if.then28

if.then28:                                        ; preds = %if.end24
  %23 = load i32, i32* %i, align 4
  %idxprom29 = sext i32 %23 to i64
  %arrayidx30 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom29
  %24 = load double, double* %arrayidx30, align 8
  %25 = load i32, i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom31
  %26 = load double, double* %arrayidx32, align 8
  %mul = fmul double %24, %26
  %27 = load i32, i32* %n_realSize, align 4
  %conv = sitofp i32 %27 to double
  %div = fdiv double %mul, %conv
  %28 = load double, double* @m_X1, align 8
  %add = fadd double %28, %div
  store double %add, double* @m_X1, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.then28, %if.end24
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %29 = load i32, i32* %i, align 4
  %inc35 = add nsw i32 %29, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond14

for.end36:                                        ; preds = %for.cond14
  %30 = load i32, i32* %n_realSize, align 4
  %cmp37 = icmp sge i32 %30, 1
  br i1 %cmp37, label %land.lhs.true39, label %if.end90

land.lhs.true39:                                  ; preds = %for.end36
  %31 = load i32, i32* %estimateX2, align 4
  %tobool40 = icmp ne i32 %31, 0
  br i1 %tobool40, label %if.then41, label %if.end90

if.then41:                                        ; preds = %land.lhs.true39
  store i32 0, i32* %i, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc72, %if.then41
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %n_windowSize.addr, align 4
  %cmp43 = icmp slt i32 %32, %33
  br i1 %cmp43, label %for.body45, label %for.end74

for.body45:                                       ; preds = %for.cond42
  %34 = load i32, i32* %i, align 4
  %idxprom46 = sext i32 %34 to i64
  %arrayidx47 = getelementptr inbounds [21 x i32], [21 x i32]* @m_rgRejected, i64 0, i64 %idxprom46
  %35 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %35, 0
  br i1 %tobool48, label %if.end71, label %if.then49

if.then49:                                        ; preds = %for.body45
  %36 = load double, double* %a00, align 8
  %add50 = fadd double %36, 1.000000e+00
  store double %add50, double* %a00, align 8
  %37 = load i32, i32* %i, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom51
  %38 = load double, double* %arrayidx52, align 8
  %div53 = fdiv double 1.000000e+00, %38
  %39 = load double, double* %a01, align 8
  %add54 = fadd double %39, %div53
  store double %add54, double* %a01, align 8
  %40 = load double, double* %a01, align 8
  store double %40, double* %a10, align 8
  %41 = load i32, i32* %i, align 4
  %idxprom55 = sext i32 %41 to i64
  %arrayidx56 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom55
  %42 = load double, double* %arrayidx56, align 8
  %43 = load i32, i32* %i, align 4
  %idxprom57 = sext i32 %43 to i64
  %arrayidx58 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom57
  %44 = load double, double* %arrayidx58, align 8
  %mul59 = fmul double %42, %44
  %div60 = fdiv double 1.000000e+00, %mul59
  %45 = load double, double* %a11, align 8
  %add61 = fadd double %45, %div60
  store double %add61, double* %a11, align 8
  %46 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %46 to i64
  %arrayidx63 = getelementptr inbounds [21 x double], [21 x double]* @m_rgQp, i64 0, i64 %idxprom62
  %47 = load double, double* %arrayidx63, align 8
  %48 = load i32, i32* %i, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom64
  %49 = load double, double* %arrayidx65, align 8
  %mul66 = fmul double %47, %49
  %50 = load double, double* %b0, align 8
  %add67 = fadd double %50, %mul66
  store double %add67, double* %b0, align 8
  %51 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %51 to i64
  %arrayidx69 = getelementptr inbounds [21 x double], [21 x double]* @m_rgRp, i64 0, i64 %idxprom68
  %52 = load double, double* %arrayidx69, align 8
  %53 = load double, double* %b1, align 8
  %add70 = fadd double %53, %52
  store double %add70, double* %b1, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then49, %for.body45
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %54 = load i32, i32* %i, align 4
  %inc73 = add nsw i32 %54, 1
  store i32 %inc73, i32* %i, align 4
  br label %for.cond42

for.end74:                                        ; preds = %for.cond42
  %55 = load double, double* %a00, align 8
  %56 = load double, double* %a11, align 8
  %mul75 = fmul double %55, %56
  %57 = load double, double* %a01, align 8
  %58 = load double, double* %a10, align 8
  %mul76 = fmul double %57, %58
  %sub = fsub double %mul75, %mul76
  store double %sub, double* %MatrixValue, align 8
  %59 = load double, double* %MatrixValue, align 8
  %60 = call double @llvm.fabs.f64(double %59)
  %cmp77 = fcmp ogt double %60, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp77, label %if.then79, label %if.else

if.then79:                                        ; preds = %for.end74
  %61 = load double, double* %b0, align 8
  %62 = load double, double* %a11, align 8
  %mul80 = fmul double %61, %62
  %63 = load double, double* %b1, align 8
  %64 = load double, double* %a01, align 8
  %mul81 = fmul double %63, %64
  %sub82 = fsub double %mul80, %mul81
  %65 = load double, double* %MatrixValue, align 8
  %div83 = fdiv double %sub82, %65
  store double %div83, double* @m_X1, align 8
  %66 = load double, double* %b1, align 8
  %67 = load double, double* %a00, align 8
  %mul84 = fmul double %66, %67
  %68 = load double, double* %b0, align 8
  %69 = load double, double* %a10, align 8
  %mul85 = fmul double %68, %69
  %sub86 = fsub double %mul84, %mul85
  %70 = load double, double* %MatrixValue, align 8
  %div87 = fdiv double %sub86, %70
  store double %div87, double* @m_X2, align 8
  br label %if.end89

if.else:                                          ; preds = %for.end74
  %71 = load double, double* %b0, align 8
  %72 = load double, double* %a00, align 8
  %div88 = fdiv double %71, %72
  store double %div88, double* @m_X1, align 8
  store double 0.000000e+00, double* @m_X2, align 8
  br label %if.end89

if.end89:                                         ; preds = %if.else, %if.then79
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %land.lhs.true39, %for.end36
  %73 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %73, i32 0, i32 6
  %74 = load i32, i32* %type, align 8
  %cmp91 = icmp eq i32 %74, 0
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %if.end90
  %75 = load double, double* @m_X1, align 8
  store double %75, double* @Pm_X1, align 8
  %76 = load double, double* @m_X2, align 8
  store double %76, double* @Pm_X2, align 8
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %if.end90
  %77 = load i32, i32* %canary
  %78 = icmp eq i32 %77, 613655871
  br i1 %78, label %79, label %func_exit

79:                                               ; preds = %if.end94, %func_exit
  ret void

func_exit:                                        ; preds = %if.end94
  call void @detect_breach()
  br label %79
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @updateMADModel.93() #0 {
entry:
  %canary = alloca i32
  store i32 1896887355, i32* %canary
  %error = alloca [20 x double], align 16
  %m_Nc = alloca i32, align 4
  %n_windowSize = alloca i32, align 4
  %std = alloca double, align 8
  %threshold = alloca double, align 8
  %i = alloca i32, align 4
  store double 0.000000e+00, double* %std, align 8
  %0 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %0, i32 0, i32 127
  %1 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end126

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 139
  %3 = load i32, i32* %BasicUnit, align 4
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 136
  %5 = load i32, i32* %Frame_Total_Number_MB, align 8
  %cmp1 = icmp eq i32 %3, %5
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame3 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 127
  %7 = load i32, i32* %NumberofCodedPFrame3, align 4
  store i32 %7, i32* %m_Nc, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %8, i32 0, i32 127
  %9 = load i32, i32* %NumberofCodedPFrame4, align 4
  %10 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %mul = mul nsw i32 %9, %10
  %11 = load i32, i32* @CodedBasicUnit, align 4
  %add = add nsw i32 %mul, %11
  store i32 %add, i32* %m_Nc, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  store i32 19, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4
  %cmp5 = icmp sgt i32 %12, 0
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %i, align 4
  %sub = sub nsw i32 %13, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8
  %15 = load i32, i32* %i, align 4
  %idxprom6 = sext i32 %15 to i64
  %arrayidx7 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom6
  store double %14, double* %arrayidx7, align 8
  %16 = load i32, i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %arrayidx9 = getelementptr inbounds [21 x double], [21 x double]* @PPictureMAD, i64 0, i64 %idxprom8
  %17 = load double, double* %arrayidx9, align 8
  %18 = load i32, i32* %i, align 4
  %idxprom10 = sext i32 %18 to i64
  %arrayidx11 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom10
  store double %17, double* %arrayidx11, align 8
  %19 = load i32, i32* %i, align 4
  %sub12 = sub nsw i32 %19, 1
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom13
  %20 = load double, double* %arrayidx14, align 8
  %21 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %21 to i64
  %arrayidx16 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom15
  store double %20, double* %arrayidx16, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4
  %dec = add nsw i32 %22, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %23 = load double, double* @CurrentFrameMAD, align 8
  store double %23, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  %24 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PPictureMAD, i64 0, i64 0), align 16
  store double %24, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 0), align 16
  %25 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit17 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %25, i32 0, i32 139
  %26 = load i32, i32* %BasicUnit17, align 4
  %27 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB18 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %27, i32 0, i32 136
  %28 = load i32, i32* %Frame_Total_Number_MB18, align 8
  %cmp19 = icmp eq i32 %26, %28
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %for.end
  %29 = load double, double* getelementptr inbounds ([21 x double], [21 x double]* @PictureMAD, i64 0, i64 1), align 8
  store double %29, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end35

if.else21:                                        ; preds = %for.end
  %30 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %30, i32 0, i32 91
  %31 = load i32, i32* %PicInterlace, align 8
  %cmp22 = icmp eq i32 %31, 2
  br i1 %cmp22, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else21
  %32 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %32, i32 0, i32 92
  %33 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %33, 0
  br i1 %tobool, label %land.lhs.true, label %if.else29

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.else21
  %34 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %34, i32 0, i32 134
  %35 = load i32, i32* %FieldControl, align 8
  %cmp23 = icmp eq i32 %35, 1
  br i1 %cmp23, label %if.then24, label %if.else29

if.then24:                                        ; preds = %land.lhs.true
  %36 = load double*, double** @FCBUPFMAD, align 8
  %37 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub25 = sub nsw i32 %37, 1
  %38 = load i32, i32* @NumberofBasicUnit, align 4
  %sub26 = sub nsw i32 %sub25, %38
  %idxprom27 = sext i32 %sub26 to i64
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8
  store double %39, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.else29:                                        ; preds = %land.lhs.true, %lor.lhs.false
  %40 = load double*, double** @BUPFMAD, align 8
  %41 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %sub30 = sub nsw i32 %41, 1
  %42 = load i32, i32* @NumberofBasicUnit, align 4
  %sub31 = sub nsw i32 %sub30, %42
  %idxprom32 = sext i32 %sub31 to i64
  %arrayidx33 = getelementptr inbounds double, double* %40, i64 %idxprom32
  %43 = load double, double* %arrayidx33, align 8
  store double %43, double* getelementptr inbounds ([21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 0), align 16
  br label %if.end34

if.end34:                                         ; preds = %if.else29, %if.then24
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then20
  %44 = load double, double* @PMADPictureC1, align 8
  store double %44, double* @MADPictureC1, align 8
  %45 = load double, double* @PMADPictureC2, align 8
  store double %45, double* @MADPictureC2, align 8
  %46 = load double, double* @CurrentFrameMAD, align 8
  %47 = load double, double* @PreviousFrameMAD, align 8
  %cmp36 = fcmp ogt double %46, %47
  br i1 %cmp36, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end35
  %48 = load double, double* @PreviousFrameMAD, align 8
  %49 = load double, double* @CurrentFrameMAD, align 8
  %div = fdiv double %48, %49
  %mul37 = fmul double %div, 2.000000e+01
  %conv = fptosi double %mul37 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.end35
  %50 = load double, double* @CurrentFrameMAD, align 8
  %51 = load double, double* @PreviousFrameMAD, align 8
  %div38 = fdiv double %50, %51
  %mul39 = fmul double %div38, 2.000000e+01
  %conv40 = fptosi double %mul39 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv40, %cond.false ]
  store i32 %cond, i32* %n_windowSize, align 4
  %52 = load i32, i32* %n_windowSize, align 4
  %53 = load i32, i32* %m_Nc, align 4
  %sub41 = sub nsw i32 %53, 1
  %cmp42 = icmp slt i32 %52, %sub41
  br i1 %cmp42, label %cond.true44, label %cond.false45

cond.true44:                                      ; preds = %cond.end
  %54 = load i32, i32* %n_windowSize, align 4
  br label %cond.end47

cond.false45:                                     ; preds = %cond.end
  %55 = load i32, i32* %m_Nc, align 4
  %sub46 = sub nsw i32 %55, 1
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false45, %cond.true44
  %cond48 = phi i32 [ %54, %cond.true44 ], [ %sub46, %cond.false45 ]
  store i32 %cond48, i32* %n_windowSize, align 4
  %56 = load i32, i32* %n_windowSize, align 4
  %cmp49 = icmp slt i32 %56, 1
  br i1 %cmp49, label %cond.true51, label %cond.false52

cond.true51:                                      ; preds = %cond.end47
  br label %cond.end53

cond.false52:                                     ; preds = %cond.end47
  %57 = load i32, i32* %n_windowSize, align 4
  br label %cond.end53

cond.end53:                                       ; preds = %cond.false52, %cond.true51
  %cond54 = phi i32 [ 1, %cond.true51 ], [ %57, %cond.false52 ]
  store i32 %cond54, i32* %n_windowSize, align 4
  %58 = load i32, i32* %n_windowSize, align 4
  %59 = load i32, i32* @MADm_windowSize, align 4
  %add55 = add nsw i32 %59, 1
  %cmp56 = icmp slt i32 %58, %add55
  br i1 %cmp56, label %cond.true58, label %cond.false59

cond.true58:                                      ; preds = %cond.end53
  %60 = load i32, i32* %n_windowSize, align 4
  br label %cond.end61

cond.false59:                                     ; preds = %cond.end53
  %61 = load i32, i32* @MADm_windowSize, align 4
  %add60 = add nsw i32 %61, 1
  br label %cond.end61

cond.end61:                                       ; preds = %cond.false59, %cond.true58
  %cond62 = phi i32 [ %60, %cond.true58 ], [ %add60, %cond.false59 ]
  store i32 %cond62, i32* %n_windowSize, align 4
  %62 = load i32, i32* %n_windowSize, align 4
  %cmp63 = icmp slt i32 20, %62
  br i1 %cmp63, label %cond.true65, label %cond.false66

cond.true65:                                      ; preds = %cond.end61
  br label %cond.end67

cond.false66:                                     ; preds = %cond.end61
  %63 = load i32, i32* %n_windowSize, align 4
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 20, %cond.true65 ], [ %63, %cond.false66 ]
  store i32 %cond68, i32* %n_windowSize, align 4
  %64 = load i32, i32* %n_windowSize, align 4
  store i32 %64, i32* @MADm_windowSize, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %cond.end67
  %65 = load i32, i32* %i, align 4
  %cmp70 = icmp slt i32 %65, 20
  br i1 %cmp70, label %for.body72, label %for.end76

for.body72:                                       ; preds = %for.cond69
  %66 = load i32, i32* %i, align 4
  %idxprom73 = sext i32 %66 to i64
  %arrayidx74 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom73
  store i32 0, i32* %arrayidx74, align 4
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %67 = load i32, i32* %i, align 4
  %inc = add nsw i32 %67, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond69

for.end76:                                        ; preds = %for.cond69
  %68 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %68, i32 0, i32 6
  %69 = load i32, i32* %type, align 8
  %cmp77 = icmp eq i32 %69, 0
  br i1 %cmp77, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end76
  %70 = load double, double* @CurrentFrameMAD, align 8
  store double %70, double* @PreviousFrameMAD, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %for.end76
  %71 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %71)
  store i32 0, i32* %i, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc100, %if.end80
  %72 = load i32, i32* %i, align 4
  %73 = load i32, i32* %n_windowSize, align 4
  %cmp82 = icmp slt i32 %72, %73
  br i1 %cmp82, label %for.body84, label %for.end102

for.body84:                                       ; preds = %for.cond81
  %74 = load double, double* @MADPictureC1, align 8
  %75 = load i32, i32* %i, align 4
  %idxprom85 = sext i32 %75 to i64
  %arrayidx86 = getelementptr inbounds [21 x double], [21 x double]* @ReferenceMAD, i64 0, i64 %idxprom85
  %76 = load double, double* %arrayidx86, align 8
  %mul87 = fmul double %74, %76
  %77 = load double, double* @MADPictureC2, align 8
  %add88 = fadd double %mul87, %77
  %78 = load i32, i32* %i, align 4
  %idxprom89 = sext i32 %78 to i64
  %arrayidx90 = getelementptr inbounds [21 x double], [21 x double]* @PictureMAD, i64 0, i64 %idxprom89
  %79 = load double, double* %arrayidx90, align 8
  %sub91 = fsub double %add88, %79
  %80 = load i32, i32* %i, align 4
  %idxprom92 = sext i32 %80 to i64
  %arrayidx93 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom92
  store double %sub91, double* %arrayidx93, align 8
  %81 = load i32, i32* %i, align 4
  %idxprom94 = sext i32 %81 to i64
  %arrayidx95 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom94
  %82 = load double, double* %arrayidx95, align 8
  %83 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %83 to i64
  %arrayidx97 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom96
  %84 = load double, double* %arrayidx97, align 8
  %mul98 = fmul double %82, %84
  %85 = load double, double* %std, align 8
  %add99 = fadd double %85, %mul98
  store double %add99, double* %std, align 8
  br label %for.inc100

for.inc100:                                       ; preds = %for.body84
  %86 = load i32, i32* %i, align 4
  %inc101 = add nsw i32 %86, 1
  store i32 %inc101, i32* %i, align 4
  br label %for.cond81

for.end102:                                       ; preds = %for.cond81
  %87 = load i32, i32* %n_windowSize, align 4
  %cmp103 = icmp eq i32 %87, 2
  br i1 %cmp103, label %cond.true105, label %cond.false106

cond.true105:                                     ; preds = %for.end102
  br label %cond.end109

cond.false106:                                    ; preds = %for.end102
  %88 = load double, double* %std, align 8
  %89 = load i32, i32* %n_windowSize, align 4
  %conv107 = sitofp i32 %89 to double
  %div108 = fdiv double %88, %conv107
  %call = call double @sqrt(double %div108) #5
  br label %cond.end109

cond.end109:                                      ; preds = %cond.false106, %cond.true105
  %cond110 = phi double [ 0.000000e+00, %cond.true105 ], [ %call, %cond.false106 ]
  store double %cond110, double* %threshold, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc123, %cond.end109
  %90 = load i32, i32* %i, align 4
  %91 = load i32, i32* %n_windowSize, align 4
  %cmp112 = icmp slt i32 %90, %91
  br i1 %cmp112, label %for.body114, label %for.end125

for.body114:                                      ; preds = %for.cond111
  %92 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [20 x double], [20 x double]* %error, i64 0, i64 %idxprom115
  %93 = load double, double* %arrayidx116, align 8
  %94 = call double @llvm.fabs.f64(double %93)
  %95 = load double, double* %threshold, align 8
  %cmp117 = fcmp ogt double %94, %95
  br i1 %cmp117, label %if.then119, label %if.end122

if.then119:                                       ; preds = %for.body114
  %96 = load i32, i32* %i, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 %idxprom120
  store i32 1, i32* %arrayidx121, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then119, %for.body114
  br label %for.inc123

for.inc123:                                       ; preds = %if.end122
  %97 = load i32, i32* %i, align 4
  %inc124 = add nsw i32 %97, 1
  store i32 %inc124, i32* %i, align 4
  br label %for.cond111

for.end125:                                       ; preds = %for.cond111
  store i32 0, i32* getelementptr inbounds ([21 x i32], [21 x i32]* @PictureRejected, i64 0, i64 0), align 16
  %98 = load i32, i32* %n_windowSize, align 4
  call void @MADModelEstimator(i32 %98)
  br label %if.end126

if.end126:                                        ; preds = %for.end125, %entry
  %99 = load i32, i32* %canary
  %100 = icmp eq i32 %99, 1896887355
  br i1 %100, label %101, label %func_exit

101:                                              ; preds = %if.end126, %func_exit
  ret void

func_exit:                                        ; preds = %if.end126
  call void @detect_breach()
  br label %101
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rc_init_pict.94(i32 %fieldpic, i32 %topfield, i32 %targetcomputation) #0 {
entry:
  %canary = alloca i32
  store i32 1538334387, i32* %canary
  %topfield.addr = alloca i32, align 4
  %fieldpic.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %targetcomputation.addr = alloca i32, align 4
  store i32 %fieldpic, i32* %fieldpic.addr, align 4
  store i32 %topfield, i32* %topfield.addr, align 4
  store i32 %targetcomputation, i32* %targetcomputation.addr, align 4
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 92
  %1 = load i32, i32* %MbInterlace, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %2, i32 0, i32 136
  %3 = load i32, i32* %Frame_Total_Number_MB, align 8
  %4 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %4, i32 0, i32 139
  %5 = load i32, i32* %BasicUnit, align 4
  %div = sdiv i32 %3, %5
  store i32 %div, i32* @TotalNumberofBasicUnit, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedMacroBlocks = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %6, i32 0, i32 138
  store i32 0, i32* %NumberofCodedMacroBlocks, align 8
  %7 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %channel_type = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %7, i32 0, i32 131
  %8 = load i32, i32* %channel_type, align 4
  %cmp = icmp eq i32 %8, 1
  br i1 %cmp, label %if.then1, label %if.end9

if.then1:                                         ; preds = %if.end
  %9 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %9, i32 0, i32 127
  %10 = load i32, i32* %NumberofCodedPFrame, align 4
  %cmp2 = icmp eq i32 %10, 58
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then1
  %11 = load double, double* @bit_rate, align 8
  %mul = fmul double %11, 1.500000e+00
  store double %mul, double* @bit_rate, align 8
  br label %if.end8

if.else:                                          ; preds = %if.then1
  %12 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame4 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %12, i32 0, i32 127
  %13 = load i32, i32* %NumberofCodedPFrame4, align 4
  %cmp5 = icmp eq i32 %13, 59
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.else
  %14 = load double, double* @bit_rate, align 8
  store double %14, double* @PreviousBit_Rate, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end7, %if.then3
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %fieldpic.addr, align 4
  %tobool10 = icmp ne i32 %15, 0
  br i1 %tobool10, label %land.lhs.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end9
  %16 = load i32, i32* %topfield.addr, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %land.lhs.true, label %if.end373

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end9
  %17 = load i32, i32* %targetcomputation.addr, align 4
  %tobool12 = icmp ne i32 %17, 0
  br i1 %tobool12, label %if.then13, label %if.end373

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %18, i32 0, i32 6
  %19 = load i32, i32* %type, align 8
  switch i32 %19, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb172
  ]

sw.bb:                                            ; preds = %if.then13
  %20 = load double, double* @PreviousBit_Rate, align 8
  %21 = load double, double* @bit_rate, align 8
  %cmp14 = fcmp une double %20, %21
  br i1 %cmp14, label %if.then15, label %if.end21

if.then15:                                        ; preds = %sw.bb
  %22 = load double, double* @bit_rate, align 8
  %23 = load double, double* @PreviousBit_Rate, align 8
  %sub = fsub double %22, %23
  %24 = load i32, i32* @Np, align 4
  %25 = load i32, i32* @Nb, align 4
  %add = add nsw i32 %24, %25
  %conv = sitofp i32 %add to double
  %mul16 = fmul double %sub, %conv
  %26 = load double, double* @frame_rate, align 8
  %div17 = fdiv double %mul16, %26
  %add18 = fadd double %div17, 5.000000e-01
  %27 = call double @llvm.floor.f64(double %add18)
  %conv19 = fptosi double %27 to i32
  %28 = load i32, i32* @R, align 4
  %add20 = add nsw i32 %28, %conv19
  store i32 %add20, i32* @R, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then15, %sw.bb
  %29 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit22 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %29, i32 0, i32 139
  %30 = load i32, i32* %BasicUnit22, align 4
  %31 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB23 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %31, i32 0, i32 136
  %32 = load i32, i32* %Frame_Total_Number_MB23, align 8
  %cmp24 = icmp eq i32 %30, %32
  br i1 %cmp24, label %if.then26, label %if.else43

if.then26:                                        ; preds = %if.end21
  %33 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %33, i32 0, i32 130
  %34 = load i32, i32* %NumberofPPicture, align 8
  %cmp27 = icmp eq i32 %34, 1
  br i1 %cmp27, label %if.then29, label %if.else35

if.then29:                                        ; preds = %if.then26
  %35 = load double, double* @CurrentBufferFullness, align 8
  store double %35, double* @TargetBufferLevel, align 8
  %36 = load double, double* @CurrentBufferFullness, align 8
  %37 = load double, double* @GOPTargetBufferLevel, align 8
  %sub30 = fsub double %36, %37
  %38 = load i32, i32* @TotalPFrame, align 4
  %sub31 = sub nsw i32 %38, 1
  %conv32 = sitofp i32 %sub31 to double
  %div33 = fdiv double %sub30, %conv32
  store double %div33, double* @DeltaP, align 8
  %39 = load double, double* @DeltaP, align 8
  %40 = load double, double* @TargetBufferLevel, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* @TargetBufferLevel, align 8
  br label %if.end42

if.else35:                                        ; preds = %if.then26
  %41 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture36 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %41, i32 0, i32 130
  %42 = load i32, i32* %NumberofPPicture36, align 8
  %cmp37 = icmp sgt i32 %42, 1
  br i1 %cmp37, label %if.then39, label %if.end41

if.then39:                                        ; preds = %if.else35
  %43 = load double, double* @DeltaP, align 8
  %44 = load double, double* @TargetBufferLevel, align 8
  %sub40 = fsub double %44, %43
  store double %sub40, double* @TargetBufferLevel, align 8
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else35
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end118

if.else43:                                        ; preds = %if.end21
  %45 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame44 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %45, i32 0, i32 127
  %46 = load i32, i32* %NumberofCodedPFrame44, align 4
  %cmp45 = icmp sgt i32 %46, 0
  br i1 %cmp45, label %if.then47, label %if.end74

if.then47:                                        ; preds = %if.else43
  %47 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %47, i32 0, i32 91
  %48 = load i32, i32* %PicInterlace, align 8
  %cmp48 = icmp eq i32 %48, 2
  br i1 %cmp48, label %land.lhs.true53, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %if.then47
  %49 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace51 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %49, i32 0, i32 92
  %50 = load i32, i32* %MbInterlace51, align 4
  %tobool52 = icmp ne i32 %50, 0
  br i1 %tobool52, label %land.lhs.true53, label %if.else61

land.lhs.true53:                                  ; preds = %lor.lhs.false50, %if.then47
  %51 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %51, i32 0, i32 134
  %52 = load i32, i32* %FieldControl, align 8
  %cmp54 = icmp eq i32 %52, 1
  br i1 %cmp54, label %if.then56, label %if.else61

if.then56:                                        ; preds = %land.lhs.true53
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then56
  %53 = load i32, i32* %i, align 4
  %54 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp57 = icmp slt i32 %53, %54
  br i1 %cmp57, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %55 = load double*, double** @FCBUCFMAD, align 8
  %56 = load i32, i32* %i, align 4
  %idxprom = sext i32 %56 to i64
  %arrayidx = getelementptr inbounds double, double* %55, i64 %idxprom
  %57 = load double, double* %arrayidx, align 8
  %58 = load double*, double** @FCBUPFMAD, align 8
  %59 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %59 to i64
  %arrayidx60 = getelementptr inbounds double, double* %58, i64 %idxprom59
  store double %57, double* %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %60 = load i32, i32* %i, align 4
  %inc = add nsw i32 %60, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end73

if.else61:                                        ; preds = %land.lhs.true53, %lor.lhs.false50
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc70, %if.else61
  %61 = load i32, i32* %i, align 4
  %62 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %cmp63 = icmp slt i32 %61, %62
  br i1 %cmp63, label %for.body65, label %for.end72

for.body65:                                       ; preds = %for.cond62
  %63 = load double*, double** @BUCFMAD, align 8
  %64 = load i32, i32* %i, align 4
  %idxprom66 = sext i32 %64 to i64
  %arrayidx67 = getelementptr inbounds double, double* %63, i64 %idxprom66
  %65 = load double, double* %arrayidx67, align 8
  %66 = load double*, double** @BUPFMAD, align 8
  %67 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %67 to i64
  %arrayidx69 = getelementptr inbounds double, double* %66, i64 %idxprom68
  store double %65, double* %arrayidx69, align 8
  br label %for.inc70

for.inc70:                                        ; preds = %for.body65
  %68 = load i32, i32* %i, align 4
  %inc71 = add nsw i32 %68, 1
  store i32 %inc71, i32* %i, align 4
  br label %for.cond62

for.end72:                                        ; preds = %for.cond62
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.else43
  %69 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %69, i32 0, i32 128
  %70 = load i32, i32* %NumberofGOP, align 8
  %cmp75 = icmp eq i32 %70, 1
  br i1 %cmp75, label %if.then77, label %if.else95

if.then77:                                        ; preds = %if.end74
  %71 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture78 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %71, i32 0, i32 130
  %72 = load i32, i32* %NumberofPPicture78, align 8
  %cmp79 = icmp eq i32 %72, 1
  br i1 %cmp79, label %if.then81, label %if.else87

if.then81:                                        ; preds = %if.then77
  %73 = load double, double* @CurrentBufferFullness, align 8
  store double %73, double* @TargetBufferLevel, align 8
  %74 = load double, double* @CurrentBufferFullness, align 8
  %75 = load double, double* @GOPTargetBufferLevel, align 8
  %sub82 = fsub double %74, %75
  %76 = load i32, i32* @TotalPFrame, align 4
  %sub83 = sub nsw i32 %76, 1
  %conv84 = sitofp i32 %sub83 to double
  %div85 = fdiv double %sub82, %conv84
  store double %div85, double* @DeltaP, align 8
  %77 = load double, double* @DeltaP, align 8
  %78 = load double, double* @TargetBufferLevel, align 8
  %sub86 = fsub double %78, %77
  store double %sub86, double* @TargetBufferLevel, align 8
  br label %if.end94

if.else87:                                        ; preds = %if.then77
  %79 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture88 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %79, i32 0, i32 130
  %80 = load i32, i32* %NumberofPPicture88, align 8
  %cmp89 = icmp sgt i32 %80, 1
  br i1 %cmp89, label %if.then91, label %if.end93

if.then91:                                        ; preds = %if.else87
  %81 = load double, double* @DeltaP, align 8
  %82 = load double, double* @TargetBufferLevel, align 8
  %sub92 = fsub double %82, %81
  store double %sub92, double* @TargetBufferLevel, align 8
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %if.else87
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then81
  br label %if.end117

if.else95:                                        ; preds = %if.end74
  %83 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP96 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %83, i32 0, i32 128
  %84 = load i32, i32* %NumberofGOP96, align 8
  %cmp97 = icmp sgt i32 %84, 1
  br i1 %cmp97, label %if.then99, label %if.end116

if.then99:                                        ; preds = %if.else95
  %85 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture100 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %85, i32 0, i32 130
  %86 = load i32, i32* %NumberofPPicture100, align 8
  %cmp101 = icmp eq i32 %86, 0
  br i1 %cmp101, label %if.then103, label %if.else108

if.then103:                                       ; preds = %if.then99
  %87 = load double, double* @CurrentBufferFullness, align 8
  store double %87, double* @TargetBufferLevel, align 8
  %88 = load double, double* @CurrentBufferFullness, align 8
  %89 = load double, double* @GOPTargetBufferLevel, align 8
  %sub104 = fsub double %88, %89
  %90 = load i32, i32* @TotalPFrame, align 4
  %conv105 = sitofp i32 %90 to double
  %div106 = fdiv double %sub104, %conv105
  store double %div106, double* @DeltaP, align 8
  %91 = load double, double* @DeltaP, align 8
  %92 = load double, double* @TargetBufferLevel, align 8
  %sub107 = fsub double %92, %91
  store double %sub107, double* @TargetBufferLevel, align 8
  br label %if.end115

if.else108:                                       ; preds = %if.then99
  %93 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofPPicture109 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %93, i32 0, i32 130
  %94 = load i32, i32* %NumberofPPicture109, align 8
  %cmp110 = icmp sgt i32 %94, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.else108
  %95 = load double, double* @DeltaP, align 8
  %96 = load double, double* @TargetBufferLevel, align 8
  %sub113 = fsub double %96, %95
  store double %sub113, double* @TargetBufferLevel, align 8
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.else108
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.else95
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end94
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end42
  %97 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame119 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %97, i32 0, i32 127
  %98 = load i32, i32* %NumberofCodedPFrame119, align 4
  %cmp120 = icmp eq i32 %98, 1
  br i1 %cmp120, label %if.then122, label %if.end123

if.then122:                                       ; preds = %if.end118
  %99 = load double, double* @Wp, align 8
  store double %99, double* @AWp, align 8
  br label %if.end123

if.end123:                                        ; preds = %if.then122, %if.end118
  %100 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame124 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %100, i32 0, i32 127
  %101 = load i32, i32* %NumberofCodedPFrame124, align 4
  %cmp125 = icmp slt i32 %101, 8
  br i1 %cmp125, label %land.lhs.true127, label %if.else143

land.lhs.true127:                                 ; preds = %if.end123
  %102 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame128 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %102, i32 0, i32 127
  %103 = load i32, i32* %NumberofCodedPFrame128, align 4
  %cmp129 = icmp sgt i32 %103, 1
  br i1 %cmp129, label %if.then131, label %if.else143

if.then131:                                       ; preds = %land.lhs.true127
  %104 = load double, double* @Wp, align 8
  %105 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame132 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %105, i32 0, i32 127
  %106 = load i32, i32* %NumberofCodedPFrame132, align 4
  %sub133 = sub nsw i32 %106, 1
  %conv134 = sitofp i32 %sub133 to double
  %mul135 = fmul double %104, %conv134
  %107 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame136 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %107, i32 0, i32 127
  %108 = load i32, i32* %NumberofCodedPFrame136, align 4
  %conv137 = sitofp i32 %108 to double
  %div138 = fdiv double %mul135, %conv137
  %109 = load double, double* @AWp, align 8
  %110 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame139 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %110, i32 0, i32 127
  %111 = load i32, i32* %NumberofCodedPFrame139, align 4
  %conv140 = sitofp i32 %111 to double
  %div141 = fdiv double %109, %conv140
  %add142 = fadd double %div138, %div141
  store double %add142, double* @AWp, align 8
  br label %if.end153

if.else143:                                       ; preds = %land.lhs.true127, %if.end123
  %112 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame144 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %112, i32 0, i32 127
  %113 = load i32, i32* %NumberofCodedPFrame144, align 4
  %cmp145 = icmp sgt i32 %113, 1
  br i1 %cmp145, label %if.then147, label %if.end152

if.then147:                                       ; preds = %if.else143
  %114 = load double, double* @Wp, align 8
  %div148 = fdiv double %114, 8.000000e+00
  %115 = load double, double* @AWp, align 8
  %mul149 = fmul double 7.000000e+00, %115
  %div150 = fdiv double %mul149, 8.000000e+00
  %add151 = fadd double %div148, %div150
  store double %add151, double* @AWp, align 8
  br label %if.end152

if.end152:                                        ; preds = %if.then147, %if.else143
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then131
  %116 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %116, i32 0, i32 34
  %117 = load i32, i32* %successive_Bframe, align 4
  %cmp154 = icmp sgt i32 %117, 0
  br i1 %cmp154, label %if.then156, label %if.end171

if.then156:                                       ; preds = %if.end153
  %118 = load double, double* @AWp, align 8
  %119 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe157 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %119, i32 0, i32 34
  %120 = load i32, i32* %successive_Bframe157, align 4
  %add158 = add nsw i32 %120, 1
  %conv159 = sitofp i32 %add158 to double
  %mul160 = fmul double %118, %conv159
  %121 = load double, double* @bit_rate, align 8
  %mul161 = fmul double %mul160, %121
  %122 = load double, double* @frame_rate, align 8
  %123 = load double, double* @AWp, align 8
  %124 = load double, double* @AWb, align 8
  %125 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe162 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %125, i32 0, i32 34
  %126 = load i32, i32* %successive_Bframe162, align 4
  %conv163 = sitofp i32 %126 to double
  %mul164 = fmul double %124, %conv163
  %add165 = fadd double %123, %mul164
  %mul166 = fmul double %122, %add165
  %div167 = fdiv double %mul161, %mul166
  %127 = load double, double* @bit_rate, align 8
  %128 = load double, double* @frame_rate, align 8
  %div168 = fdiv double %127, %128
  %sub169 = fsub double %div167, %div168
  %129 = load double, double* @TargetBufferLevel, align 8
  %add170 = fadd double %129, %sub169
  store double %add170, double* @TargetBufferLevel, align 8
  br label %if.end171

if.end171:                                        ; preds = %if.then156, %if.end153
  br label %sw.epilog

sw.bb172:                                         ; preds = %if.then13
  %130 = load double, double* @PreviousBit_Rate, align 8
  %131 = load double, double* @bit_rate, align 8
  %cmp173 = fcmp une double %130, %131
  br i1 %cmp173, label %if.then175, label %if.end184

if.then175:                                       ; preds = %sw.bb172
  %132 = load double, double* @bit_rate, align 8
  %133 = load double, double* @PreviousBit_Rate, align 8
  %sub176 = fsub double %132, %133
  %134 = load i32, i32* @Np, align 4
  %135 = load i32, i32* @Nb, align 4
  %add177 = add nsw i32 %134, %135
  %conv178 = sitofp i32 %add177 to double
  %mul179 = fmul double %sub176, %conv178
  %136 = load double, double* @frame_rate, align 8
  %div180 = fdiv double %mul179, %136
  %add181 = fadd double %div180, 5.000000e-01
  %137 = call double @llvm.floor.f64(double %add181)
  %conv182 = fptosi double %137 to i32
  %138 = load i32, i32* @R, align 4
  %add183 = add nsw i32 %138, %conv182
  store i32 %add183, i32* @R, align 4
  br label %if.end184

if.end184:                                        ; preds = %if.then175, %sw.bb172
  %139 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame185 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %139, i32 0, i32 127
  %140 = load i32, i32* %NumberofCodedPFrame185, align 4
  %cmp186 = icmp eq i32 %140, 1
  br i1 %cmp186, label %land.lhs.true188, label %if.else192

land.lhs.true188:                                 ; preds = %if.end184
  %141 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %141, i32 0, i32 126
  %142 = load i32, i32* %NumberofCodedBFrame, align 8
  %cmp189 = icmp eq i32 %142, 1
  br i1 %cmp189, label %if.then191, label %if.else192

if.then191:                                       ; preds = %land.lhs.true188
  %143 = load double, double* @Wp, align 8
  store double %143, double* @AWp, align 8
  %144 = load double, double* @Wb, align 8
  store double %144, double* @AWb, align 8
  br label %if.end219

if.else192:                                       ; preds = %land.lhs.true188, %if.end184
  %145 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame193 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %145, i32 0, i32 126
  %146 = load i32, i32* %NumberofCodedBFrame193, align 8
  %cmp194 = icmp sgt i32 %146, 1
  br i1 %cmp194, label %if.then196, label %if.end218

if.then196:                                       ; preds = %if.else192
  %147 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame197 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %147, i32 0, i32 126
  %148 = load i32, i32* %NumberofCodedBFrame197, align 8
  %cmp198 = icmp slt i32 %148, 8
  br i1 %cmp198, label %if.then200, label %if.else212

if.then200:                                       ; preds = %if.then196
  %149 = load double, double* @Wb, align 8
  %150 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame201 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %150, i32 0, i32 126
  %151 = load i32, i32* %NumberofCodedBFrame201, align 8
  %sub202 = sub nsw i32 %151, 1
  %conv203 = sitofp i32 %sub202 to double
  %mul204 = fmul double %149, %conv203
  %152 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame205 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %152, i32 0, i32 126
  %153 = load i32, i32* %NumberofCodedBFrame205, align 8
  %conv206 = sitofp i32 %153 to double
  %div207 = fdiv double %mul204, %conv206
  %154 = load double, double* @AWb, align 8
  %155 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedBFrame208 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %155, i32 0, i32 126
  %156 = load i32, i32* %NumberofCodedBFrame208, align 8
  %conv209 = sitofp i32 %156 to double
  %div210 = fdiv double %154, %conv209
  %add211 = fadd double %div207, %div210
  store double %add211, double* @AWb, align 8
  br label %if.end217

if.else212:                                       ; preds = %if.then196
  %157 = load double, double* @Wb, align 8
  %div213 = fdiv double %157, 8.000000e+00
  %158 = load double, double* @AWb, align 8
  %mul214 = fmul double 7.000000e+00, %158
  %div215 = fdiv double %mul214, 8.000000e+00
  %add216 = fadd double %div213, %div215
  store double %add216, double* @AWb, align 8
  br label %if.end217

if.end217:                                        ; preds = %if.else212, %if.then200
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.else192
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.then191
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end219, %if.end171, %if.then13
  %159 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type220 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %159, i32 0, i32 6
  %160 = load i32, i32* %type220, align 8
  %cmp221 = icmp eq i32 %160, 0
  br i1 %cmp221, label %if.then223, label %if.end372

if.then223:                                       ; preds = %sw.epilog
  %161 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit224 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %161, i32 0, i32 139
  %162 = load i32, i32* %BasicUnit224, align 4
  %163 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB225 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %163, i32 0, i32 136
  %164 = load i32, i32* %Frame_Total_Number_MB225, align 8
  %cmp226 = icmp eq i32 %162, %164
  br i1 %cmp226, label %if.then228, label %if.else260

if.then228:                                       ; preds = %if.then223
  %165 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame229 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %165, i32 0, i32 127
  %166 = load i32, i32* %NumberofCodedPFrame229, align 4
  %cmp230 = icmp sgt i32 %166, 0
  br i1 %cmp230, label %if.then232, label %if.end259

if.then232:                                       ; preds = %if.then228
  %167 = load double, double* @Wp, align 8
  %168 = load i32, i32* @R, align 4
  %conv233 = sitofp i32 %168 to double
  %mul234 = fmul double %167, %conv233
  %169 = load i32, i32* @Np, align 4
  %conv235 = sitofp i32 %169 to double
  %170 = load double, double* @Wp, align 8
  %mul236 = fmul double %conv235, %170
  %171 = load i32, i32* @Nb, align 4
  %conv237 = sitofp i32 %171 to double
  %172 = load double, double* @Wb, align 8
  %mul238 = fmul double %conv237, %172
  %add239 = fadd double %mul236, %mul238
  %div240 = fdiv double %mul234, %add239
  %add241 = fadd double %div240, 5.000000e-01
  %173 = call double @llvm.floor.f64(double %add241)
  %conv242 = fptosi double %173 to i64
  store i64 %conv242, i64* @T, align 8
  %174 = load double, double* @bit_rate, align 8
  %175 = load double, double* @frame_rate, align 8
  %div243 = fdiv double %174, %175
  %176 = load double, double* @GAMMAP, align 8
  %177 = load double, double* @CurrentBufferFullness, align 8
  %178 = load double, double* @TargetBufferLevel, align 8
  %sub244 = fsub double %177, %178
  %mul245 = fmul double %176, %sub244
  %sub246 = fsub double %div243, %mul245
  %add247 = fadd double %sub246, 5.000000e-01
  %179 = call double @llvm.floor.f64(double %add247)
  %conv248 = fptosi double %179 to i64
  store i64 %conv248, i64* @T1, align 8
  %180 = load i64, i64* @T1, align 8
  %cmp249 = icmp slt i64 0, %180
  br i1 %cmp249, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then232
  %181 = load i64, i64* @T1, align 8
  br label %cond.end

cond.false:                                       ; preds = %if.then232
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %181, %cond.true ], [ 0, %cond.false ]
  store i64 %cond, i64* @T1, align 8
  %182 = load double, double* @BETAP, align 8
  %183 = load i64, i64* @T, align 8
  %conv251 = sitofp i64 %183 to double
  %mul252 = fmul double %182, %conv251
  %184 = load double, double* @BETAP, align 8
  %sub253 = fsub double 1.000000e+00, %184
  %185 = load i64, i64* @T1, align 8
  %conv254 = sitofp i64 %185 to double
  %mul255 = fmul double %sub253, %conv254
  %add256 = fadd double %mul252, %mul255
  %add257 = fadd double %add256, 5.000000e-01
  %186 = call double @llvm.floor.f64(double %add257)
  %conv258 = fptosi double %186 to i64
  store i64 %conv258, i64* @T, align 8
  br label %if.end259

if.end259:                                        ; preds = %cond.end, %if.then228
  br label %if.end339

if.else260:                                       ; preds = %if.then223
  %187 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP261 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %187, i32 0, i32 128
  %188 = load i32, i32* %NumberofGOP261, align 8
  %cmp262 = icmp eq i32 %188, 1
  br i1 %cmp262, label %land.lhs.true264, label %if.else302

land.lhs.true264:                                 ; preds = %if.else260
  %189 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofCodedPFrame265 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %189, i32 0, i32 127
  %190 = load i32, i32* %NumberofCodedPFrame265, align 4
  %cmp266 = icmp sgt i32 %190, 0
  br i1 %cmp266, label %if.then268, label %if.else302

if.then268:                                       ; preds = %land.lhs.true264
  %191 = load double, double* @Wp, align 8
  %192 = load i32, i32* @R, align 4
  %conv269 = sitofp i32 %192 to double
  %mul270 = fmul double %191, %conv269
  %193 = load i32, i32* @Np, align 4
  %conv271 = sitofp i32 %193 to double
  %194 = load double, double* @Wp, align 8
  %mul272 = fmul double %conv271, %194
  %195 = load i32, i32* @Nb, align 4
  %conv273 = sitofp i32 %195 to double
  %196 = load double, double* @Wb, align 8
  %mul274 = fmul double %conv273, %196
  %add275 = fadd double %mul272, %mul274
  %div276 = fdiv double %mul270, %add275
  %add277 = fadd double %div276, 5.000000e-01
  %197 = call double @llvm.floor.f64(double %add277)
  %conv278 = fptosi double %197 to i32
  %conv279 = sext i32 %conv278 to i64
  store i64 %conv279, i64* @T, align 8
  %198 = load double, double* @bit_rate, align 8
  %199 = load double, double* @frame_rate, align 8
  %div280 = fdiv double %198, %199
  %200 = load double, double* @GAMMAP, align 8
  %201 = load double, double* @CurrentBufferFullness, align 8
  %202 = load double, double* @TargetBufferLevel, align 8
  %sub281 = fsub double %201, %202
  %mul282 = fmul double %200, %sub281
  %sub283 = fsub double %div280, %mul282
  %add284 = fadd double %sub283, 5.000000e-01
  %203 = call double @llvm.floor.f64(double %add284)
  %conv285 = fptosi double %203 to i32
  %conv286 = sext i32 %conv285 to i64
  store i64 %conv286, i64* @T1, align 8
  %204 = load i64, i64* @T1, align 8
  %cmp287 = icmp slt i64 0, %204
  br i1 %cmp287, label %cond.true289, label %cond.false290

cond.true289:                                     ; preds = %if.then268
  %205 = load i64, i64* @T1, align 8
  br label %cond.end291

cond.false290:                                    ; preds = %if.then268
  br label %cond.end291

cond.end291:                                      ; preds = %cond.false290, %cond.true289
  %cond292 = phi i64 [ %205, %cond.true289 ], [ 0, %cond.false290 ]
  store i64 %cond292, i64* @T1, align 8
  %206 = load double, double* @BETAP, align 8
  %207 = load i64, i64* @T, align 8
  %conv293 = sitofp i64 %207 to double
  %mul294 = fmul double %206, %conv293
  %208 = load double, double* @BETAP, align 8
  %sub295 = fsub double 1.000000e+00, %208
  %209 = load i64, i64* @T1, align 8
  %conv296 = sitofp i64 %209 to double
  %mul297 = fmul double %sub295, %conv296
  %add298 = fadd double %mul294, %mul297
  %add299 = fadd double %add298, 5.000000e-01
  %210 = call double @llvm.floor.f64(double %add299)
  %conv300 = fptosi double %210 to i32
  %conv301 = sext i32 %conv300 to i64
  store i64 %conv301, i64* @T, align 8
  br label %if.end338

if.else302:                                       ; preds = %land.lhs.true264, %if.else260
  %211 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofGOP303 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %211, i32 0, i32 128
  %212 = load i32, i32* %NumberofGOP303, align 8
  %cmp304 = icmp sgt i32 %212, 1
  br i1 %cmp304, label %if.then306, label %if.end337

if.then306:                                       ; preds = %if.else302
  %213 = load double, double* @Wp, align 8
  %214 = load i32, i32* @R, align 4
  %conv307 = sitofp i32 %214 to double
  %mul308 = fmul double %213, %conv307
  %215 = load i32, i32* @Np, align 4
  %conv309 = sitofp i32 %215 to double
  %216 = load double, double* @Wp, align 8
  %mul310 = fmul double %conv309, %216
  %217 = load i32, i32* @Nb, align 4
  %conv311 = sitofp i32 %217 to double
  %218 = load double, double* @Wb, align 8
  %mul312 = fmul double %conv311, %218
  %add313 = fadd double %mul310, %mul312
  %div314 = fdiv double %mul308, %add313
  %add315 = fadd double %div314, 5.000000e-01
  %219 = call double @llvm.floor.f64(double %add315)
  %conv316 = fptosi double %219 to i64
  store i64 %conv316, i64* @T, align 8
  %220 = load double, double* @bit_rate, align 8
  %221 = load double, double* @frame_rate, align 8
  %div317 = fdiv double %220, %221
  %222 = load double, double* @GAMMAP, align 8
  %223 = load double, double* @CurrentBufferFullness, align 8
  %224 = load double, double* @TargetBufferLevel, align 8
  %sub318 = fsub double %223, %224
  %mul319 = fmul double %222, %sub318
  %sub320 = fsub double %div317, %mul319
  %add321 = fadd double %sub320, 5.000000e-01
  %225 = call double @llvm.floor.f64(double %add321)
  %conv322 = fptosi double %225 to i64
  store i64 %conv322, i64* @T1, align 8
  %226 = load i64, i64* @T1, align 8
  %cmp323 = icmp slt i64 0, %226
  br i1 %cmp323, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.then306
  %227 = load i64, i64* @T1, align 8
  br label %cond.end327

cond.false326:                                    ; preds = %if.then306
  br label %cond.end327

cond.end327:                                      ; preds = %cond.false326, %cond.true325
  %cond328 = phi i64 [ %227, %cond.true325 ], [ 0, %cond.false326 ]
  store i64 %cond328, i64* @T1, align 8
  %228 = load double, double* @BETAP, align 8
  %229 = load i64, i64* @T, align 8
  %conv329 = sitofp i64 %229 to double
  %mul330 = fmul double %228, %conv329
  %230 = load double, double* @BETAP, align 8
  %sub331 = fsub double 1.000000e+00, %230
  %231 = load i64, i64* @T1, align 8
  %conv332 = sitofp i64 %231 to double
  %mul333 = fmul double %sub331, %conv332
  %add334 = fadd double %mul330, %mul333
  %add335 = fadd double %add334, 5.000000e-01
  %232 = call double @llvm.floor.f64(double %add335)
  %conv336 = fptosi double %232 to i64
  store i64 %conv336, i64* @T, align 8
  br label %if.end337

if.end337:                                        ; preds = %cond.end327, %if.else302
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %cond.end291
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.end259
  %233 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %successive_Bframe340 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %233, i32 0, i32 34
  %234 = load i32, i32* %successive_Bframe340, align 4
  %conv341 = sitofp i32 %234 to double
  %mul342 = fmul double 0.000000e+00, %conv341
  %sub343 = fsub double 1.000000e+00, %mul342
  %235 = load i64, i64* @T, align 8
  %conv344 = sitofp i64 %235 to double
  %mul345 = fmul double %sub343, %conv344
  %conv346 = fptosi double %mul345 to i64
  store i64 %conv346, i64* @T, align 8
  %236 = load i64, i64* @T, align 8
  %237 = load i64, i64* @LowerBound, align 8
  %cmp347 = icmp slt i64 %236, %237
  br i1 %cmp347, label %cond.true349, label %cond.false350

cond.true349:                                     ; preds = %if.end339
  %238 = load i64, i64* @LowerBound, align 8
  br label %cond.end351

cond.false350:                                    ; preds = %if.end339
  %239 = load i64, i64* @T, align 8
  br label %cond.end351

cond.end351:                                      ; preds = %cond.false350, %cond.true349
  %cond352 = phi i64 [ %238, %cond.true349 ], [ %239, %cond.false350 ]
  store i64 %cond352, i64* @T, align 8
  %240 = load i64, i64* @T, align 8
  %241 = load i64, i64* @UpperBound2, align 8
  %cmp353 = icmp slt i64 %240, %241
  br i1 %cmp353, label %cond.true355, label %cond.false356

cond.true355:                                     ; preds = %cond.end351
  %242 = load i64, i64* @T, align 8
  br label %cond.end357

cond.false356:                                    ; preds = %cond.end351
  %243 = load i64, i64* @UpperBound2, align 8
  br label %cond.end357

cond.end357:                                      ; preds = %cond.false356, %cond.true355
  %cond358 = phi i64 [ %242, %cond.true355 ], [ %243, %cond.false356 ]
  store i64 %cond358, i64* @T, align 8
  %244 = load i32, i32* %topfield.addr, align 4
  %tobool359 = icmp ne i32 %244, 0
  br i1 %tobool359, label %if.then369, label %lor.lhs.false360

lor.lhs.false360:                                 ; preds = %cond.end357
  %245 = load i32, i32* %fieldpic.addr, align 4
  %tobool361 = icmp ne i32 %245, 0
  br i1 %tobool361, label %land.lhs.true362, label %if.end371

land.lhs.true362:                                 ; preds = %lor.lhs.false360
  %246 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %PicInterlace363 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %246, i32 0, i32 91
  %247 = load i32, i32* %PicInterlace363, align 8
  %cmp364 = icmp eq i32 %247, 2
  br i1 %cmp364, label %if.then369, label %lor.lhs.false366

lor.lhs.false366:                                 ; preds = %land.lhs.true362
  %248 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %MbInterlace367 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %248, i32 0, i32 92
  %249 = load i32, i32* %MbInterlace367, align 4
  %tobool368 = icmp ne i32 %249, 0
  br i1 %tobool368, label %if.then369, label %if.end371

if.then369:                                       ; preds = %lor.lhs.false366, %land.lhs.true362, %cond.end357
  %250 = load i64, i64* @T, align 8
  %conv370 = trunc i64 %250 to i32
  store i32 %conv370, i32* @T_field, align 4
  br label %if.end371

if.end371:                                        ; preds = %if.then369, %lor.lhs.false366, %lor.lhs.false360
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %sw.epilog
  br label %if.end373

if.end373:                                        ; preds = %if.end372, %land.lhs.true, %lor.lhs.false
  %251 = load i32, i32* %fieldpic.addr, align 4
  %tobool374 = icmp ne i32 %251, 0
  br i1 %tobool374, label %if.then377, label %lor.lhs.false375

lor.lhs.false375:                                 ; preds = %if.end373
  %252 = load i32, i32* %topfield.addr, align 4
  %tobool376 = icmp ne i32 %252, 0
  br i1 %tobool376, label %if.then377, label %if.end391

if.then377:                                       ; preds = %lor.lhs.false375, %if.end373
  %253 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %253, i32 0, i32 119
  store i32 0, i32* %NumberofHeaderBits, align 4
  %254 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %254, i32 0, i32 120
  store i32 0, i32* %NumberofTextureBits, align 8
  %255 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit378 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %255, i32 0, i32 139
  %256 = load i32, i32* %BasicUnit378, align 4
  %257 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB379 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %257, i32 0, i32 136
  %258 = load i32, i32* %Frame_Total_Number_MB379, align 8
  %cmp380 = icmp slt i32 %256, %258
  br i1 %cmp380, label %if.then382, label %if.end390

if.then382:                                       ; preds = %if.then377
  store i32 0, i32* @TotalFrameQP, align 4
  %259 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %259, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits, align 4
  %260 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %260, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits, align 8
  %261 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %261, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit, align 8
  %262 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl383 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %262, i32 0, i32 134
  %263 = load i32, i32* %FieldControl383, align 8
  %cmp384 = icmp eq i32 %263, 0
  br i1 %cmp384, label %if.then386, label %if.else387

if.then386:                                       ; preds = %if.then382
  %264 = load i32, i32* @TotalNumberofBasicUnit, align 4
  store i32 %264, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.else387:                                       ; preds = %if.then382
  %265 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div388 = sdiv i32 %265, 2
  store i32 %div388, i32* @NumberofBasicUnit, align 4
  br label %if.end389

if.end389:                                        ; preds = %if.else387, %if.then386
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then377
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %lor.lhs.false375
  %266 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %type392 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %266, i32 0, i32 6
  %267 = load i32, i32* %type392, align 8
  %cmp393 = icmp eq i32 %267, 0
  br i1 %cmp393, label %land.lhs.true395, label %if.end418

land.lhs.true395:                                 ; preds = %if.end391
  %268 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %BasicUnit396 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %268, i32 0, i32 139
  %269 = load i32, i32* %BasicUnit396, align 4
  %270 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %Frame_Total_Number_MB397 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %270, i32 0, i32 136
  %271 = load i32, i32* %Frame_Total_Number_MB397, align 8
  %cmp398 = icmp slt i32 %269, %271
  br i1 %cmp398, label %land.lhs.true400, label %if.end418

land.lhs.true400:                                 ; preds = %land.lhs.true395
  %272 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %FieldControl401 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %272, i32 0, i32 134
  %273 = load i32, i32* %FieldControl401, align 8
  %cmp402 = icmp eq i32 %273, 1
  br i1 %cmp402, label %if.then404, label %if.end418

if.then404:                                       ; preds = %land.lhs.true400
  %274 = load i32, i32* %topfield.addr, align 4
  %tobool405 = icmp ne i32 %274, 0
  br i1 %tobool405, label %if.then406, label %if.else410

if.then406:                                       ; preds = %if.then404
  store i32 0, i32* @bits_topfield, align 4
  %275 = load i32, i32* @T_field, align 4
  %conv407 = sitofp i32 %275 to double
  %mul408 = fmul double %conv407, 6.000000e-01
  %conv409 = fptosi double %mul408 to i64
  store i64 %conv409, i64* @T, align 8
  br label %if.end417

if.else410:                                       ; preds = %if.then404
  %276 = load i32, i32* @T_field, align 4
  %277 = load i32, i32* @bits_topfield, align 4
  %sub411 = sub nsw i32 %276, %277
  %conv412 = sext i32 %sub411 to i64
  store i64 %conv412, i64* @T, align 8
  %278 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitHeaderBits413 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %278, i32 0, i32 121
  store i32 0, i32* %NumberofBasicUnitHeaderBits413, align 4
  %279 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %NumberofBasicUnitTextureBits414 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %279, i32 0, i32 122
  store i32 0, i32* %NumberofBasicUnitTextureBits414, align 8
  %280 = load %struct.ImageParameters*, %struct.ImageParameters** @img, align 8
  %TotalMADBasicUnit415 = getelementptr inbounds %struct.ImageParameters, %struct.ImageParameters* %280, i32 0, i32 123
  store double 0.000000e+00, double* %TotalMADBasicUnit415, align 8
  %281 = load i32, i32* @TotalNumberofBasicUnit, align 4
  %div416 = sdiv i32 %281, 2
  store i32 %div416, i32* @NumberofBasicUnit, align 4
  br label %if.end417

if.end417:                                        ; preds = %if.else410, %if.then406
  br label %if.end418

if.end418:                                        ; preds = %if.end417, %land.lhs.true400, %land.lhs.true395, %if.end391
  %282 = load i32, i32* %canary
  %283 = icmp eq i32 %282, 1538334387
  br i1 %283, label %284, label %func_exit

284:                                              ; preds = %if.end418, %func_exit
  ret void

func_exit:                                        ; preds = %if.end418
  call void @detect_breach()
  br label %284
}

declare void @detect_breach()

declare i32 @get_urand()

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.1 (git@github.com:llvm/llvm-project.git 9b2d207cf4b43cfc1a2b6940b3c06e50a1bd127f)"}
