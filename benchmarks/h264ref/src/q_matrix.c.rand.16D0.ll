; ModuleID = 'q_matrix.c.rand.16D0.bc'
source_filename = "q_matrix.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], i32, i32, i32, i32, [200 x i8], [200 x i8], [200 x i8], [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], [200 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [200 x i8], i32, i32, i32*, i32*, i8*, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [200 x i8], i32 }
%struct.seq_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vui_seq_parameters_t }
%struct.vui_seq_parameters_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hrd_parameters_t, i32, %struct.hrd_parameters_t, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.hrd_parameters_t = type { i32, i32, i32, [32 x i32], [32 x i32], [32 x i32], i32, i32, i32, i32 }
%struct.pic_parameter_set_rbsp_t = type { i32, i32, i32, i32, i32, i32, [8 x i32], i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.Picture = type { i32, i32, [100 x %struct.Slice*], i32, float, float, float }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, %struct.datapartition*, %struct.MotionInfoContexts*, %struct.TextureInfoContexts*, %struct.RMPNIbuffer_s*, i32, i32*, i32*, i32*, i32, i32*, i32*, i32*, i32 (i32)*, [3 x [2 x i32]] }
%struct.datapartition = type { %struct.Bitstream*, %struct.EncodingEnvironment, i32 (%struct.syntaxelement*, %struct.datapartition*)* }
%struct.Bitstream = type { i32, i32, i8, i32, i32, i8, i8, i32, i32, i8*, i32 }
%struct.EncodingEnvironment = type { i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i8*, i32*, i32, i32, i32, i32, i32, i32 }
%struct.syntaxelement = type { i32, i32, i32, i32, i32, i32, i32, i32, void (i32, i32, i32*, i32*)*, void (%struct.syntaxelement*, %struct.EncodingEnvironment*)* }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }
%struct.RMPNIbuffer_s = type { i32, i32, %struct.RMPNIbuffer_s* }
%struct.GOP_DATA = type { i32, i32, i32, i32, i32, i32 }
%struct.RD_DATA = type { double, [16 x [16 x i32]], [16 x [16 x i32]], [16 x [16 x i32]], i32****, i32***, i32, i32, [4 x i32], [4 x i32], i32**, [16 x i32], i32, i64, i32, i16******, i16******, i16******, i16******, [2 x [4 x [4 x i16]]], i32, i32, i32, i32, i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@MatrixType4x4 = internal constant [6 x [20 x i8]] [[20 x i8] c"INTRA4X4_LUMA\00\00\00\00\00\00\00", [20 x i8] c"INTRA4X4_CHROMAU\00\00\00\00", [20 x i8] c"INTRA4X4_CHROMAV\00\00\00\00", [20 x i8] c"INTER4X4_LUMA\00\00\00\00\00\00\00", [20 x i8] c"INTER4X4_CHROMAU\00\00\00\00", [20 x i8] c"INTER4X4_CHROMAV\00\00\00\00"], align 16
@MatrixType8x8 = internal constant [2 x [20 x i8]] [[20 x i8] c"INTRA8X8_LUMA\00\00\00\00\00\00\00", [20 x i8] c"INTER8X8_LUMA\00\00\00\00\00\00\00"], align 16
@errortext = common dso_local global [300 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [67 x i8] c" Parsing error in config file: Parameter Name '%s' not recognized.\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c" Parsing error in config file: '=' expected as the second token in each item.\00", align 1
@ScalingList4x4input = common dso_local global [6 x [16 x i16]] zeroinitializer, align 16
@matrix4x4_check = dso_local global [6 x i32] zeroinitializer, align 16
@ScalingList8x8input = common dso_local global [2 x [64 x i16]] zeroinitializer, align 16
@matrix8x8_check = dso_local global [2 x i32] zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c" Parsing error: Expected numerical value for Parameter of %s, found '%s'.\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c".\00", align 1
@input = external dso_local global %struct.InputParameters*, align 8
@.str.6 = private unnamed_addr constant [50 x i8] c"\0A%s value exceed range. (Value must be 1 to 255)\0A\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"Setting default values for this matrix.\00", align 1
@Quant_inter_default = internal constant [16 x i16] [i16 10, i16 14, i16 20, i16 24, i16 14, i16 20, i16 24, i16 27, i16 20, i16 24, i16 27, i16 30, i16 24, i16 27, i16 30, i16 34], align 16
@Quant_intra_default = internal constant [16 x i16] [i16 6, i16 13, i16 20, i16 28, i16 13, i16 20, i16 28, i16 32, i16 20, i16 28, i16 32, i16 37, i16 28, i16 32, i16 37, i16 42], align 16
@.str.8 = private unnamed_addr constant [57 x i8] c"\0A%s matrix definition not found. Setting default values.\00", align 1
@Quant8_inter_default = internal constant [64 x i16] [i16 9, i16 13, i16 15, i16 17, i16 19, i16 21, i16 22, i16 24, i16 13, i16 13, i16 17, i16 19, i16 21, i16 22, i16 24, i16 25, i16 15, i16 17, i16 19, i16 21, i16 22, i16 24, i16 25, i16 27, i16 17, i16 19, i16 21, i16 22, i16 24, i16 25, i16 27, i16 28, i16 19, i16 21, i16 22, i16 24, i16 25, i16 27, i16 28, i16 30, i16 21, i16 22, i16 24, i16 25, i16 27, i16 28, i16 30, i16 32, i16 22, i16 24, i16 25, i16 27, i16 28, i16 30, i16 32, i16 33, i16 24, i16 25, i16 27, i16 28, i16 30, i16 32, i16 33, i16 35], align 16
@Quant8_intra_default = internal constant [64 x i16] [i16 6, i16 10, i16 13, i16 16, i16 18, i16 23, i16 25, i16 27, i16 10, i16 11, i16 16, i16 18, i16 23, i16 25, i16 27, i16 29, i16 13, i16 16, i16 18, i16 23, i16 25, i16 27, i16 29, i16 31, i16 16, i16 18, i16 23, i16 25, i16 27, i16 29, i16 31, i16 33, i16 18, i16 23, i16 25, i16 27, i16 29, i16 31, i16 33, i16 36, i16 23, i16 25, i16 27, i16 29, i16 31, i16 33, i16 36, i16 38, i16 25, i16 27, i16 29, i16 31, i16 33, i16 36, i16 38, i16 40, i16 27, i16 29, i16 31, i16 33, i16 36, i16 38, i16 40, i16 42], align 16
@.str.9 = private unnamed_addr constant [25 x i8] c"Parsing QMatrix file %s \00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"\0AError: %s\0AProceeding with default values for all matrices.\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@UseDefaultScalingMatrix4x4Flag = common dso_local global [6 x i16] zeroinitializer, align 2
@UseDefaultScalingMatrix8x8Flag = common dso_local global [2 x i16] zeroinitializer, align 2
@active_sps = common dso_local global %struct.seq_parameter_set_rbsp_t* null, align 8
@active_pps = common dso_local global %struct.pic_parameter_set_rbsp_t* null, align 8
@quant_coef = external dso_local constant [6 x [4 x [4 x i32]]], align 16
@LevelScale4x4Luma_Intra = common dso_local global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@dequant_coef = external dso_local constant [6 x [4 x [4 x i32]]], align 16
@InvLevelScale4x4Luma_Intra = common dso_local global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@LevelScale4x4Chroma_Intra = common dso_local global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@InvLevelScale4x4Chroma_Intra = common dso_local global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@LevelScale4x4Luma_Inter = common dso_local global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@InvLevelScale4x4Luma_Inter = common dso_local global [6 x [4 x [4 x i32]]] zeroinitializer, align 16
@LevelScale4x4Chroma_Inter = common dso_local global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@InvLevelScale4x4Chroma_Inter = common dso_local global [2 x [6 x [4 x [4 x i32]]]] zeroinitializer, align 16
@ScalingList4x4 = common dso_local global [6 x [16 x i16]] zeroinitializer, align 16
@quant_coef8 = external dso_local constant [6 x [8 x [8 x i32]]], align 16
@LevelScale8x8Luma_Intra = common dso_local global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@dequant_coef8 = external dso_local constant [6 x [8 x [8 x i32]]], align 16
@InvLevelScale8x8Luma_Intra = common dso_local global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@LevelScale8x8Luma_Inter = common dso_local global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@InvLevelScale8x8Luma_Inter = common dso_local global [6 x [8 x [8 x i32]]] zeroinitializer, align 16
@ScalingList8x8 = common dso_local global [2 x [64 x i16]] zeroinitializer, align 16
@top_pic = common dso_local global %struct.Picture* null, align 8
@bottom_pic = common dso_local global %struct.Picture* null, align 8
@frame_pic = common dso_local global %struct.Picture* null, align 8
@frame_pic2 = common dso_local global %struct.Picture* null, align 8
@frame_pic3 = common dso_local global %struct.Picture* null, align 8
@imgY_org = common dso_local global i16** null, align 8
@imgUV_org = common dso_local global i16*** null, align 8
@img4Y_tmp = common dso_local global i32** null, align 8
@log2_max_frame_num_minus4 = common dso_local global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common dso_local global i32 0, align 4
@me_tot_time = common dso_local global i32 0, align 4
@me_time = common dso_local global i32 0, align 4
@mb_adaptive = common dso_local global i32 0, align 4
@MBPairIsField = common dso_local global i32 0, align 4
@wp_weight = common dso_local global i32*** null, align 8
@wp_offset = common dso_local global i32*** null, align 8
@wbp_weight = common dso_local global i32**** null, align 8
@luma_log_weight_denom = common dso_local global i32 0, align 4
@chroma_log_weight_denom = common dso_local global i32 0, align 4
@wp_luma_round = common dso_local global i32 0, align 4
@wp_chroma_round = common dso_local global i32 0, align 4
@imgY_org_top = common dso_local global i16** null, align 8
@imgY_org_bot = common dso_local global i16** null, align 8
@imgUV_org_top = common dso_local global i16*** null, align 8
@imgUV_org_bot = common dso_local global i16*** null, align 8
@imgY_org_frm = common dso_local global i16** null, align 8
@imgUV_org_frm = common dso_local global i16*** null, align 8
@imgY_com = common dso_local global i16** null, align 8
@imgUV_com = common dso_local global i16*** null, align 8
@direct_ref_idx = common dso_local global i16*** null, align 8
@direct_pdir = common dso_local global i16** null, align 8
@pixel_map = common dso_local global i8** null, align 8
@refresh_map = common dso_local global i8** null, align 8
@intras = common dso_local global i32 0, align 4
@Iframe_ctr = common dso_local global i32 0, align 4
@Pframe_ctr = common dso_local global i32 0, align 4
@Bframe_ctr = common dso_local global i32 0, align 4
@frame_no = common dso_local global i32 0, align 4
@nextP_tr_fld = common dso_local global i32 0, align 4
@nextP_tr_frm = common dso_local global i32 0, align 4
@tot_time = common dso_local global i32 0, align 4
@resTrans_R = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_G = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@resTrans_B = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resR = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resG = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@rec_resB = common dso_local global [16 x [16 x i32]] zeroinitializer, align 16
@mprRGB = common dso_local global [3 x [16 x [16 x i32]]] zeroinitializer, align 16
@dc_level = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@dc_level_temp = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@cbp_chroma_block_temp = common dso_local global [2 x [4 x [4 x i32]]] zeroinitializer, align 16
@b8_ipredmode8x8 = common dso_local global [4 x [4 x i32]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common dso_local global [16 x i32] zeroinitializer, align 16
@gop_structure = common dso_local global %struct.GOP_DATA* null, align 8
@rdopt = common dso_local global %struct.RD_DATA* null, align 8
@rddata_top_frame_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common dso_local global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common dso_local global %struct._IO_FILE* null, align 8
@p_log = common dso_local global %struct._IO_FILE* null, align 8
@p_trace = common dso_local global %struct._IO_FILE* null, align 8
@p_in = common dso_local global i32 0, align 4
@p_dec = common dso_local global i32 0, align 4
@glob_remapping_of_pic_nums_idc_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l0 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_remapping_of_pic_nums_idc_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_abs_diff_pic_num_minus1_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@glob_long_term_pic_idx_l1 = common dso_local global [20 x i32] zeroinitializer, align 16
@Bytes_After_Header = common dso_local global i32 0, align 4
@rpc_bytes_to_go = common dso_local global i32 0, align 4
@rpc_bits_to_go = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName(i8* %s, i32* %type) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_CheckParameterName.11, label %ctrl0

func_CheckParameterName.11:                       ; preds = %rand_bb
  %2 = call i32 @CheckParameterName.11(i8* %s, i32* %type)
  ret i32 %2

func_CheckParameterName.12:                       ; preds = %ctrl0
  %3 = call i32 @CheckParameterName.12(i8* %s, i32* %type)
  ret i32 %3

func_CheckParameterName.21:                       ; preds = %ctrl1
  %4 = call i32 @CheckParameterName.21(i8* %s, i32* %type)
  ret i32 %4

func_CheckParameterName.25:                       ; preds = %ctrl2
  %5 = call i32 @CheckParameterName.25(i8* %s, i32* %type)
  ret i32 %5

func_CheckParameterName.26:                       ; preds = %ctrl3
  %6 = call i32 @CheckParameterName.26(i8* %s, i32* %type)
  ret i32 %6

func_CheckParameterName.48:                       ; preds = %ctrl4
  %7 = call i32 @CheckParameterName.48(i8* %s, i32* %type)
  ret i32 %7

func_CheckParameterName.52:                       ; preds = %ctrl5
  %8 = call i32 @CheckParameterName.52(i8* %s, i32* %type)
  ret i32 %8

func_CheckParameterName.57:                       ; preds = %ctrl6
  %9 = call i32 @CheckParameterName.57(i8* %s, i32* %type)
  ret i32 %9

func_CheckParameterName.58:                       ; preds = %ctrl7
  %10 = call i32 @CheckParameterName.58(i8* %s, i32* %type)
  ret i32 %10

func_CheckParameterName.59:                       ; preds = %ctrl8
  %11 = call i32 @CheckParameterName.59(i8* %s, i32* %type)
  ret i32 %11

func_CheckParameterName.67:                       ; preds = %ctrl9
  %12 = call i32 @CheckParameterName.67(i8* %s, i32* %type)
  ret i32 %12

func_CheckParameterName.74:                       ; preds = %ctrl10
  %13 = call i32 @CheckParameterName.74(i8* %s, i32* %type)
  ret i32 %13

func_CheckParameterName.76:                       ; preds = %ctrl11
  %14 = call i32 @CheckParameterName.76(i8* %s, i32* %type)
  ret i32 %14

func_CheckParameterName.78:                       ; preds = %ctrl12
  %15 = call i32 @CheckParameterName.78(i8* %s, i32* %type)
  ret i32 %15

func_CheckParameterName.79:                       ; preds = %ctrl13
  %16 = call i32 @CheckParameterName.79(i8* %s, i32* %type)
  ret i32 %16

func_CheckParameterName.80:                       ; preds = %ctrl13
  %17 = call i32 @CheckParameterName.80(i8* %s, i32* %type)
  ret i32 %17

ctrl0:                                            ; preds = %rand_bb
  %18 = icmp eq i32 %0, 1
  br i1 %18, label %func_CheckParameterName.12, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %19 = icmp eq i32 %0, 2
  br i1 %19, label %func_CheckParameterName.21, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %20 = icmp eq i32 %0, 3
  br i1 %20, label %func_CheckParameterName.25, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %21 = icmp eq i32 %0, 4
  br i1 %21, label %func_CheckParameterName.26, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %22 = icmp eq i32 %0, 5
  br i1 %22, label %func_CheckParameterName.48, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %23 = icmp eq i32 %0, 6
  br i1 %23, label %func_CheckParameterName.52, label %ctrl6

ctrl6:                                            ; preds = %ctrl5
  %24 = icmp eq i32 %0, 7
  br i1 %24, label %func_CheckParameterName.57, label %ctrl7

ctrl7:                                            ; preds = %ctrl6
  %25 = icmp eq i32 %0, 8
  br i1 %25, label %func_CheckParameterName.58, label %ctrl8

ctrl8:                                            ; preds = %ctrl7
  %26 = icmp eq i32 %0, 9
  br i1 %26, label %func_CheckParameterName.59, label %ctrl9

ctrl9:                                            ; preds = %ctrl8
  %27 = icmp eq i32 %0, 10
  br i1 %27, label %func_CheckParameterName.67, label %ctrl10

ctrl10:                                           ; preds = %ctrl9
  %28 = icmp eq i32 %0, 11
  br i1 %28, label %func_CheckParameterName.74, label %ctrl11

ctrl11:                                           ; preds = %ctrl10
  %29 = icmp eq i32 %0, 12
  br i1 %29, label %func_CheckParameterName.76, label %ctrl12

ctrl12:                                           ; preds = %ctrl11
  %30 = icmp eq i32 %0, 13
  br i1 %30, label %func_CheckParameterName.78, label %ctrl13

ctrl13:                                           ; preds = %ctrl12
  %31 = icmp eq i32 %0, 14
  br i1 %31, label %func_CheckParameterName.79, label %func_CheckParameterName.80
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix(i8* %buf, i32 %bufsize) #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_ParseMatrix.2, label %ctrl0

func_ParseMatrix.2:                               ; preds = %rand_bb
  call void @ParseMatrix.2(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.3:                               ; preds = %ctrl0
  call void @ParseMatrix.3(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.10:                              ; preds = %ctrl1
  call void @ParseMatrix.10(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.16:                              ; preds = %ctrl2
  call void @ParseMatrix.16(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.17:                              ; preds = %ctrl3
  call void @ParseMatrix.17(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.29:                              ; preds = %ctrl4
  call void @ParseMatrix.29(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.30:                              ; preds = %ctrl5
  call void @ParseMatrix.30(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.36:                              ; preds = %ctrl6
  call void @ParseMatrix.36(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.38:                              ; preds = %ctrl7
  call void @ParseMatrix.38(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.40:                              ; preds = %ctrl8
  call void @ParseMatrix.40(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.46:                              ; preds = %ctrl9
  call void @ParseMatrix.46(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.60:                              ; preds = %ctrl10
  call void @ParseMatrix.60(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.61:                              ; preds = %ctrl11
  call void @ParseMatrix.61(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.62:                              ; preds = %ctrl12
  call void @ParseMatrix.62(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.64:                              ; preds = %ctrl13
  call void @ParseMatrix.64(i8* %buf, i32 %bufsize)
  ret void

func_ParseMatrix.65:                              ; preds = %ctrl13
  call void @ParseMatrix.65(i8* %buf, i32 %bufsize)
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_ParseMatrix.3, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_ParseMatrix.10, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_ParseMatrix.16, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_ParseMatrix.17, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_ParseMatrix.29, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_ParseMatrix.30, label %ctrl6

ctrl6:                                            ; preds = %ctrl5
  %8 = icmp eq i32 %0, 7
  br i1 %8, label %func_ParseMatrix.36, label %ctrl7

ctrl7:                                            ; preds = %ctrl6
  %9 = icmp eq i32 %0, 8
  br i1 %9, label %func_ParseMatrix.38, label %ctrl8

ctrl8:                                            ; preds = %ctrl7
  %10 = icmp eq i32 %0, 9
  br i1 %10, label %func_ParseMatrix.40, label %ctrl9

ctrl9:                                            ; preds = %ctrl8
  %11 = icmp eq i32 %0, 10
  br i1 %11, label %func_ParseMatrix.46, label %ctrl10

ctrl10:                                           ; preds = %ctrl9
  %12 = icmp eq i32 %0, 11
  br i1 %12, label %func_ParseMatrix.60, label %ctrl11

ctrl11:                                           ; preds = %ctrl10
  %13 = icmp eq i32 %0, 12
  br i1 %13, label %func_ParseMatrix.61, label %ctrl12

ctrl12:                                           ; preds = %ctrl11
  %14 = icmp eq i32 %0, 13
  br i1 %14, label %func_ParseMatrix.62, label %ctrl13

ctrl13:                                           ; preds = %ctrl12
  %15 = icmp eq i32 %0, 14
  br i1 %15, label %func_ParseMatrix.64, label %func_ParseMatrix.65
}

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

declare dso_local void @error(i8*, i32) #3

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #2

declare dso_local i32 @printf(i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_PatchMatrix.5, label %ctrl0

func_PatchMatrix.5:                               ; preds = %rand_bb
  call void @PatchMatrix.5()
  ret void

func_PatchMatrix.9:                               ; preds = %ctrl0
  call void @PatchMatrix.9()
  ret void

func_PatchMatrix.14:                              ; preds = %ctrl1
  call void @PatchMatrix.14()
  ret void

func_PatchMatrix.15:                              ; preds = %ctrl2
  call void @PatchMatrix.15()
  ret void

func_PatchMatrix.18:                              ; preds = %ctrl3
  call void @PatchMatrix.18()
  ret void

func_PatchMatrix.20:                              ; preds = %ctrl4
  call void @PatchMatrix.20()
  ret void

func_PatchMatrix.22:                              ; preds = %ctrl5
  call void @PatchMatrix.22()
  ret void

func_PatchMatrix.33:                              ; preds = %ctrl6
  call void @PatchMatrix.33()
  ret void

func_PatchMatrix.34:                              ; preds = %ctrl7
  call void @PatchMatrix.34()
  ret void

func_PatchMatrix.41:                              ; preds = %ctrl8
  call void @PatchMatrix.41()
  ret void

func_PatchMatrix.45:                              ; preds = %ctrl9
  call void @PatchMatrix.45()
  ret void

func_PatchMatrix.66:                              ; preds = %ctrl10
  call void @PatchMatrix.66()
  ret void

func_PatchMatrix.69:                              ; preds = %ctrl11
  call void @PatchMatrix.69()
  ret void

func_PatchMatrix.72:                              ; preds = %ctrl12
  call void @PatchMatrix.72()
  ret void

func_PatchMatrix.75:                              ; preds = %ctrl13
  call void @PatchMatrix.75()
  ret void

func_PatchMatrix.77:                              ; preds = %ctrl13
  call void @PatchMatrix.77()
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_PatchMatrix.9, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_PatchMatrix.14, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_PatchMatrix.15, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_PatchMatrix.18, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_PatchMatrix.20, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_PatchMatrix.22, label %ctrl6

ctrl6:                                            ; preds = %ctrl5
  %8 = icmp eq i32 %0, 7
  br i1 %8, label %func_PatchMatrix.33, label %ctrl7

ctrl7:                                            ; preds = %ctrl6
  %9 = icmp eq i32 %0, 8
  br i1 %9, label %func_PatchMatrix.34, label %ctrl8

ctrl8:                                            ; preds = %ctrl7
  %10 = icmp eq i32 %0, 9
  br i1 %10, label %func_PatchMatrix.41, label %ctrl9

ctrl9:                                            ; preds = %ctrl8
  %11 = icmp eq i32 %0, 10
  br i1 %11, label %func_PatchMatrix.45, label %ctrl10

ctrl10:                                           ; preds = %ctrl9
  %12 = icmp eq i32 %0, 11
  br i1 %12, label %func_PatchMatrix.66, label %ctrl11

ctrl11:                                           ; preds = %ctrl10
  %13 = icmp eq i32 %0, 12
  br i1 %13, label %func_PatchMatrix.69, label %ctrl12

ctrl12:                                           ; preds = %ctrl11
  %14 = icmp eq i32 %0, 13
  br i1 %14, label %func_PatchMatrix.72, label %ctrl13

ctrl13:                                           ; preds = %ctrl12
  %15 = icmp eq i32 %0, 14
  br i1 %15, label %func_PatchMatrix.75, label %func_PatchMatrix.77
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Init_QMatrix() #0 {
entry:
  %content = alloca i8*, align 8
  %0 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingMatrixPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %0, i32 0, i32 132
  %1 = load i32, i32* %ScalingMatrixPresentFlag, align 8
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %2 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %QmatrixFile = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %2, i32 0, i32 30
  %arraydecay = getelementptr inbounds [200 x i8], [200 x i8]* %QmatrixFile, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* %arraydecay)
  %3 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %QmatrixFile1 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %3, i32 0, i32 30
  %arraydecay2 = getelementptr inbounds [200 x i8], [200 x i8]* %QmatrixFile1, i64 0, i64 0
  %call3 = call i8* @GetConfigFileContent(i8* %arraydecay2, i32 0)
  store i8* %call3, i8** %content, align 8
  %4 = load i8*, i8** %content, align 8
  %cmp = icmp ne i8* %4, null
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %content, align 8
  %6 = load i8*, i8** %content, align 8
  %call5 = call i64 @strlen(i8* %6) #5
  %conv = trunc i64 %call5 to i32
  call void @ParseMatrix(i8* %5, i32 %conv)
  br label %if.end

if.else:                                          ; preds = %if.then
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  call void @PatchMatrix()
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  call void @llvm.memset.p0i8.i64(i8* align 2 bitcast ([6 x i16]* @UseDefaultScalingMatrix4x4Flag to i8*), i8 0, i64 12, i1 false)
  store i16 0, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  store i16 0, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %7 = load i8*, i8** %content, align 8
  call void @free(i8* %7) #6
  br label %if.end8

if.end8:                                          ; preds = %if.end, %entry
  ret void
}

declare dso_local i8* @GetConfigFileContent(i8*, i32) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_CalculateQuantParam.1, label %ctrl0

func_CalculateQuantParam.1:                       ; preds = %rand_bb
  call void @CalculateQuantParam.1()
  ret void

func_CalculateQuantParam.4:                       ; preds = %ctrl0
  call void @CalculateQuantParam.4()
  ret void

func_CalculateQuantParam.7:                       ; preds = %ctrl1
  call void @CalculateQuantParam.7()
  ret void

func_CalculateQuantParam.23:                      ; preds = %ctrl2
  call void @CalculateQuantParam.23()
  ret void

func_CalculateQuantParam.24:                      ; preds = %ctrl3
  call void @CalculateQuantParam.24()
  ret void

func_CalculateQuantParam.35:                      ; preds = %ctrl4
  call void @CalculateQuantParam.35()
  ret void

func_CalculateQuantParam.39:                      ; preds = %ctrl5
  call void @CalculateQuantParam.39()
  ret void

func_CalculateQuantParam.42:                      ; preds = %ctrl6
  call void @CalculateQuantParam.42()
  ret void

func_CalculateQuantParam.44:                      ; preds = %ctrl7
  call void @CalculateQuantParam.44()
  ret void

func_CalculateQuantParam.49:                      ; preds = %ctrl8
  call void @CalculateQuantParam.49()
  ret void

func_CalculateQuantParam.51:                      ; preds = %ctrl9
  call void @CalculateQuantParam.51()
  ret void

func_CalculateQuantParam.53:                      ; preds = %ctrl10
  call void @CalculateQuantParam.53()
  ret void

func_CalculateQuantParam.54:                      ; preds = %ctrl11
  call void @CalculateQuantParam.54()
  ret void

func_CalculateQuantParam.63:                      ; preds = %ctrl12
  call void @CalculateQuantParam.63()
  ret void

func_CalculateQuantParam.70:                      ; preds = %ctrl13
  call void @CalculateQuantParam.70()
  ret void

func_CalculateQuantParam.71:                      ; preds = %ctrl13
  call void @CalculateQuantParam.71()
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_CalculateQuantParam.4, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_CalculateQuantParam.7, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_CalculateQuantParam.23, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_CalculateQuantParam.24, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_CalculateQuantParam.35, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_CalculateQuantParam.39, label %ctrl6

ctrl6:                                            ; preds = %ctrl5
  %8 = icmp eq i32 %0, 7
  br i1 %8, label %func_CalculateQuantParam.42, label %ctrl7

ctrl7:                                            ; preds = %ctrl6
  %9 = icmp eq i32 %0, 8
  br i1 %9, label %func_CalculateQuantParam.44, label %ctrl8

ctrl8:                                            ; preds = %ctrl7
  %10 = icmp eq i32 %0, 9
  br i1 %10, label %func_CalculateQuantParam.49, label %ctrl9

ctrl9:                                            ; preds = %ctrl8
  %11 = icmp eq i32 %0, 10
  br i1 %11, label %func_CalculateQuantParam.51, label %ctrl10

ctrl10:                                           ; preds = %ctrl9
  %12 = icmp eq i32 %0, 11
  br i1 %12, label %func_CalculateQuantParam.53, label %ctrl11

ctrl11:                                           ; preds = %ctrl10
  %13 = icmp eq i32 %0, 12
  br i1 %13, label %func_CalculateQuantParam.54, label %ctrl12

ctrl12:                                           ; preds = %ctrl11
  %14 = icmp eq i32 %0, 13
  br i1 %14, label %func_CalculateQuantParam.63, label %ctrl13

ctrl13:                                           ; preds = %ctrl12
  %15 = icmp eq i32 %0, 14
  br i1 %15, label %func_CalculateQuantParam.70, label %func_CalculateQuantParam.71
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param() #0 {
rand_bb:
  %0 = call i32 @get_urand()
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %func_CalculateQuant8Param.6, label %ctrl0

func_CalculateQuant8Param.6:                      ; preds = %rand_bb
  call void @CalculateQuant8Param.6()
  ret void

func_CalculateQuant8Param.8:                      ; preds = %ctrl0
  call void @CalculateQuant8Param.8()
  ret void

func_CalculateQuant8Param.13:                     ; preds = %ctrl1
  call void @CalculateQuant8Param.13()
  ret void

func_CalculateQuant8Param.19:                     ; preds = %ctrl2
  call void @CalculateQuant8Param.19()
  ret void

func_CalculateQuant8Param.27:                     ; preds = %ctrl3
  call void @CalculateQuant8Param.27()
  ret void

func_CalculateQuant8Param.28:                     ; preds = %ctrl4
  call void @CalculateQuant8Param.28()
  ret void

func_CalculateQuant8Param.31:                     ; preds = %ctrl5
  call void @CalculateQuant8Param.31()
  ret void

func_CalculateQuant8Param.32:                     ; preds = %ctrl6
  call void @CalculateQuant8Param.32()
  ret void

func_CalculateQuant8Param.37:                     ; preds = %ctrl7
  call void @CalculateQuant8Param.37()
  ret void

func_CalculateQuant8Param.43:                     ; preds = %ctrl8
  call void @CalculateQuant8Param.43()
  ret void

func_CalculateQuant8Param.47:                     ; preds = %ctrl9
  call void @CalculateQuant8Param.47()
  ret void

func_CalculateQuant8Param.50:                     ; preds = %ctrl10
  call void @CalculateQuant8Param.50()
  ret void

func_CalculateQuant8Param.55:                     ; preds = %ctrl11
  call void @CalculateQuant8Param.55()
  ret void

func_CalculateQuant8Param.56:                     ; preds = %ctrl12
  call void @CalculateQuant8Param.56()
  ret void

func_CalculateQuant8Param.68:                     ; preds = %ctrl13
  call void @CalculateQuant8Param.68()
  ret void

func_CalculateQuant8Param.73:                     ; preds = %ctrl13
  call void @CalculateQuant8Param.73()
  ret void

ctrl0:                                            ; preds = %rand_bb
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %func_CalculateQuant8Param.8, label %ctrl1

ctrl1:                                            ; preds = %ctrl0
  %3 = icmp eq i32 %0, 2
  br i1 %3, label %func_CalculateQuant8Param.13, label %ctrl2

ctrl2:                                            ; preds = %ctrl1
  %4 = icmp eq i32 %0, 3
  br i1 %4, label %func_CalculateQuant8Param.19, label %ctrl3

ctrl3:                                            ; preds = %ctrl2
  %5 = icmp eq i32 %0, 4
  br i1 %5, label %func_CalculateQuant8Param.27, label %ctrl4

ctrl4:                                            ; preds = %ctrl3
  %6 = icmp eq i32 %0, 5
  br i1 %6, label %func_CalculateQuant8Param.28, label %ctrl5

ctrl5:                                            ; preds = %ctrl4
  %7 = icmp eq i32 %0, 6
  br i1 %7, label %func_CalculateQuant8Param.31, label %ctrl6

ctrl6:                                            ; preds = %ctrl5
  %8 = icmp eq i32 %0, 7
  br i1 %8, label %func_CalculateQuant8Param.32, label %ctrl7

ctrl7:                                            ; preds = %ctrl6
  %9 = icmp eq i32 %0, 8
  br i1 %9, label %func_CalculateQuant8Param.37, label %ctrl8

ctrl8:                                            ; preds = %ctrl7
  %10 = icmp eq i32 %0, 9
  br i1 %10, label %func_CalculateQuant8Param.43, label %ctrl9

ctrl9:                                            ; preds = %ctrl8
  %11 = icmp eq i32 %0, 10
  br i1 %11, label %func_CalculateQuant8Param.47, label %ctrl10

ctrl10:                                           ; preds = %ctrl9
  %12 = icmp eq i32 %0, 11
  br i1 %12, label %func_CalculateQuant8Param.50, label %ctrl11

ctrl11:                                           ; preds = %ctrl10
  %13 = icmp eq i32 %0, 12
  br i1 %13, label %func_CalculateQuant8Param.55, label %ctrl12

ctrl12:                                           ; preds = %ctrl11
  %14 = icmp eq i32 %0, 13
  br i1 %14, label %func_CalculateQuant8Param.56, label %ctrl13

ctrl13:                                           ; preds = %ctrl12
  %15 = icmp eq i32 %0, 14
  br i1 %15, label %func_CalculateQuant8Param.68, label %func_CalculateQuant8Param.73
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.1() #0 {
entry:
  %canary = alloca i32
  store i32 306307168, i32* %canary
  %temp = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %no_q_matrix = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 306307168
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.2(i8* %buf, i32 %bufsize) #0 {
entry:
  %item = alloca i32, align 4
  %cnt = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %canary = alloca i32
  store i32 747888594, i32* %canary
  %type = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %InString = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %i = alloca i32, align 4
  %p = alloca i8*, align 8
  %items = alloca [1000 x i8*], align 16
  %IntContent = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %bufsize.addr = alloca i32, align 4
  %range = alloca i32, align 4
  %InItem = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 747888594
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.3(i8* %buf, i32 %bufsize) #0 {
entry:
  %bufsize.addr = alloca i32, align 4
  %p = alloca i8*, align 8
  %InString = alloca i32, align 4
  %item = alloca i32, align 4
  %canary = alloca i32
  store i32 1036042754, i32* %canary
  %IntContent = alloca i32, align 4
  %InItem = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %i = alloca i32, align 4
  %cnt = alloca i32, align 4
  %range = alloca i32, align 4
  %j = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %ScalingList = alloca i16*, align 8
  %MapIdx = alloca i32, align 4
  %type = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1036042754
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.4() #0 {
entry:
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 1951434617, i32* %canary
  %k = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1951434617
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.5() #0 {
entry:
  %i = alloca i32, align 4
  %cnt = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %canary = alloca i32
  store i32 349532332, i32* %canary
  %fail = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 349532332
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.6() #0 {
entry:
  %k = alloca i32, align 4
  %temp = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 1726717781, i32* %canary
  %i = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1726717781
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.7() #0 {
entry:
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 750604792, i32* %canary
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 750604792
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.8() #0 {
entry:
  %no_q_matrix = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %k = alloca i32, align 4
  %canary = alloca i32
  store i32 1545664256, i32* %canary
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1545664256
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.9() #0 {
entry:
  %ScalingList = alloca i16*, align 8
  %fail = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 884070462, i32* %canary
  %cnt = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 884070462
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.10(i8* %buf, i32 %bufsize) #0 {
entry:
  %InItem = alloca i32, align 4
  %p = alloca i8*, align 8
  %canary = alloca i32
  store i32 1273150924, i32* %canary
  %buf.addr = alloca i8*, align 8
  %bufsize.addr = alloca i32, align 4
  %range = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %cnt = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %j = alloca i32, align 4
  %type = alloca i32, align 4
  %InString = alloca i32, align 4
  %item = alloca i32, align 4
  %i = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %ScalingList = alloca i16*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1273150924
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.11(i8* %s, i32* %type) #0 {
entry:
  %type.addr = alloca i32*, align 8
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 1843868711, i32* %canary
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1843868711
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.12(i8* %s, i32* %type) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 1650485317, i32* %canary
  %type.addr = alloca i32*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1650485317
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.13() #0 {
entry:
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 1464536277, i32* %canary
  %temp = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %j = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1464536277
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.14() #0 {
entry:
  %canary = alloca i32
  store i32 1612343315, i32* %canary
  %ScalingList = alloca i16*, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  %fail = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 1612343315
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.15() #0 {
entry:
  %i = alloca i32, align 4
  %fail = alloca i32, align 4
  %canary = alloca i32
  store i32 3082006, i32* %canary
  %ScalingList = alloca i16*, align 8
  %cnt = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 3082006
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.16(i8* %buf, i32 %bufsize) #0 {
entry:
  %i = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %type = alloca i32, align 4
  %p = alloca i8*, align 8
  %cnt = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %InItem = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %InString = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %item = alloca i32, align 4
  %canary = alloca i32
  store i32 451483470, i32* %canary
  %range = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %bufsize.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 451483470
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.17(i8* %buf, i32 %bufsize) #0 {
entry:
  %type = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %item = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %p = alloca i8*, align 8
  %range = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %InString = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %canary = alloca i32
  store i32 102648520, i32* %canary
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %InItem = alloca i32, align 4
  %cnt = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %IntContent = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 102648520
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.18() #0 {
entry:
  %cnt = alloca i32, align 4
  %fail = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 574615594, i32* %canary
  %ScalingList = alloca i16*, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 574615594
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.19() #0 {
entry:
  %present = alloca [2 x i32], align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 1577545657, i32* %canary
  %no_q_matrix = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1577545657
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.20() #0 {
entry:
  %fail = alloca i32, align 4
  %cnt = alloca i32, align 4
  %canary = alloca i32
  store i32 483510269, i32* %canary
  %i = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 483510269
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.21(i8* %s, i32* %type) #0 {
entry:
  %i = alloca i32, align 4
  %type.addr = alloca i32*, align 8
  %retval = alloca i32, align 4
  %canary = alloca i32
  store i32 12443747, i32* %canary
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 12443747
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.22() #0 {
entry:
  %cnt = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %canary = alloca i32
  store i32 1626530755, i32* %canary
  %fail = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 1626530755
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.23() #0 {
entry:
  %no_q_matrix = alloca i32, align 4
  %canary = alloca i32
  store i32 221031059, i32* %canary
  %k = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 221031059
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.24() #0 {
entry:
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 54533664, i32* %canary
  %present = alloca [6 x i32], align 16
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 54533664
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.25(i8* %s, i32* %type) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %canary = alloca i32
  store i32 841212762, i32* %canary
  %i = alloca i32, align 4
  %type.addr = alloca i32*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 841212762
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.26(i8* %s, i32* %type) #0 {
entry:
  %canary = alloca i32
  store i32 1412372466, i32* %canary
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %type.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1412372466
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.27() #0 {
entry:
  %i = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %canary = alloca i32
  store i32 1499164046, i32* %canary
  %temp = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1499164046
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.28() #0 {
entry:
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %canary = alloca i32
  store i32 278363575, i32* %canary
  %present = alloca [2 x i32], align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 278363575
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.29(i8* %buf, i32 %bufsize) #0 {
entry:
  %i = alloca i32, align 4
  %item = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %InString = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %canary = alloca i32
  store i32 563376153, i32* %canary
  %ScalingList = alloca i16*, align 8
  %p = alloca i8*, align 8
  %items = alloca [1000 x i8*], align 16
  %range = alloca i32, align 4
  %InItem = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %cnt = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %MapIdx = alloca i32, align 4
  %type = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 563376153
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.30(i8* %buf, i32 %bufsize) #0 {
entry:
  %ScalingList = alloca i16*, align 8
  %cnt = alloca i32, align 4
  %type = alloca i32, align 4
  %p = alloca i8*, align 8
  %canary = alloca i32
  store i32 196921760, i32* %canary
  %bufsize.addr = alloca i32, align 4
  %InString = alloca i32, align 4
  %range = alloca i32, align 4
  %item = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %i = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %j = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %InItem = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 196921760
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.31() #0 {
entry:
  %temp = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %no_q_matrix = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 1718457292, i32* %canary
  %j = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1718457292
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.32() #0 {
entry:
  %present = alloca [2 x i32], align 4
  %temp = alloca i32, align 4
  %canary = alloca i32
  store i32 1324964886, i32* %canary
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1324964886
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.33() #0 {
entry:
  %ScalingList = alloca i16*, align 8
  %canary = alloca i32
  store i32 588066681, i32* %canary
  %i = alloca i32, align 4
  %fail = alloca i32, align 4
  %cnt = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 588066681
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.34() #0 {
entry:
  %fail = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %canary = alloca i32
  store i32 892904084, i32* %canary
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 892904084
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.35() #0 {
entry:
  %no_q_matrix = alloca i32, align 4
  %temp = alloca i32, align 4
  %canary = alloca i32
  store i32 505455699, i32* %canary
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 505455699
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.36(i8* %buf, i32 %bufsize) #0 {
entry:
  %item = alloca i32, align 4
  %j = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %type = alloca i32, align 4
  %InItem = alloca i32, align 4
  %canary = alloca i32
  store i32 1269686629, i32* %canary
  %cnt = alloca i32, align 4
  %InString = alloca i32, align 4
  %range = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %items = alloca [1000 x i8*], align 16
  %bufsize.addr = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %p = alloca i8*, align 8
  %ScalingList = alloca i16*, align 8
  %MapIdx = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1269686629
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.37() #0 {
entry:
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %canary = alloca i32
  store i32 950046083, i32* %canary
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 950046083
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.38(i8* %buf, i32 %bufsize) #0 {
entry:
  %cnt = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %type = alloca i32, align 4
  %range = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 547377602, i32* %canary
  %ScalingList = alloca i16*, align 8
  %item = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %IntContent = alloca i32, align 4
  %InItem = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %InString = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 547377602
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.39() #0 {
entry:
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 1432911199, i32* %canary
  %present = alloca [6 x i32], align 16
  %no_q_matrix = alloca i32, align 4
  %k = alloca i32, align 4
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1432911199
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.40(i8* %buf, i32 %bufsize) #0 {
entry:
  %canary = alloca i32
  store i32 1990398550, i32* %canary
  %InString = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %range = alloca i32, align 4
  %type = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %i = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %p = alloca i8*, align 8
  %MapIdx = alloca i32, align 4
  %item = alloca i32, align 4
  %j = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %bufend = alloca i8*, align 8
  %InItem = alloca i32, align 4
  %cnt = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1990398550
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.41() #0 {
entry:
  %canary = alloca i32
  store i32 1441757082, i32* %canary
  %cnt = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %i = alloca i32, align 4
  %fail = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 1441757082
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.42() #0 {
entry:
  %k = alloca i32, align 4
  %temp = alloca i32, align 4
  %canary = alloca i32
  store i32 1821145709, i32* %canary
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1821145709
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.43() #0 {
entry:
  %present = alloca [2 x i32], align 4
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %canary = alloca i32
  store i32 40433972, i32* %canary
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 40433972
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.44() #0 {
entry:
  %temp = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 1609617902, i32* %canary
  %present = alloca [6 x i32], align 16
  %k = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1609617902
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.45() #0 {
entry:
  %canary = alloca i32
  store i32 428414919, i32* %canary
  %ScalingList = alloca i16*, align 8
  %fail = alloca i32, align 4
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 428414919
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.46(i8* %buf, i32 %bufsize) #0 {
entry:
  %InItem = alloca i32, align 4
  %cnt = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %InString = alloca i32, align 4
  %item = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  %j = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %MapIdx = alloca i32, align 4
  %canary = alloca i32
  store i32 1122599169, i32* %canary
  %IntContent = alloca i32, align 4
  %range = alloca i32, align 4
  %bufend = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1122599169
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.47() #0 {
entry:
  %no_q_matrix = alloca i32, align 4
  %canary = alloca i32
  store i32 1475049177, i32* %canary
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1475049177
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.48(i8* %s, i32* %type) #0 {
entry:
  %type.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %retval = alloca i32, align 4
  %canary = alloca i32
  store i32 1501902995, i32* %canary
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1501902995
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.49() #0 {
entry:
  %canary = alloca i32
  store i32 1610233313, i32* %canary
  %temp = alloca i32, align 4
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1610233313
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.50() #0 {
entry:
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 1894467026, i32* %canary
  %k = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1894467026
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.51() #0 {
entry:
  %canary = alloca i32
  store i32 785042136, i32* %canary
  %present = alloca [6 x i32], align 16
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 785042136
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.52(i8* %s, i32* %type) #0 {
entry:
  %i = alloca i32, align 4
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %canary = alloca i32
  store i32 1285890949, i32* %canary
  %type.addr = alloca i32*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1285890949
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.53() #0 {
entry:
  %temp = alloca i32, align 4
  %canary = alloca i32
  store i32 1855783572, i32* %canary
  %present = alloca [6 x i32], align 16
  %j = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1855783572
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.54() #0 {
entry:
  %temp = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %canary = alloca i32
  store i32 1257023035, i32* %canary
  %j = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1257023035
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.55() #0 {
entry:
  %canary = alloca i32
  store i32 1229360141, i32* %canary
  %i = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %temp = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1229360141
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.56() #0 {
entry:
  %i = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %k = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %j = alloca i32, align 4
  %canary = alloca i32
  store i32 413670034, i32* %canary
  %temp = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 413670034
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.57(i8* %s, i32* %type) #0 {
entry:
  %canary = alloca i32
  store i32 754717639, i32* %canary
  %type.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 754717639
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.58(i8* %s, i32* %type) #0 {
entry:
  %canary = alloca i32
  store i32 1402818721, i32* %canary
  %retval = alloca i32, align 4
  %type.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1402818721
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.59(i8* %s, i32* %type) #0 {
entry:
  %canary = alloca i32
  store i32 1632719997, i32* %canary
  %i = alloca i32, align 4
  %retval = alloca i32, align 4
  %type.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1632719997
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.60(i8* %buf, i32 %bufsize) #0 {
entry:
  %bufsize.addr = alloca i32, align 4
  %InString = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %IntContent = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %type = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %range = alloca i32, align 4
  %InItem = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %MapIdx = alloca i32, align 4
  %item = alloca i32, align 4
  %canary = alloca i32
  store i32 1428230452, i32* %canary
  %p = alloca i8*, align 8
  %cnt = alloca i32, align 4
  %j = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1428230452
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.61(i8* %buf, i32 %bufsize) #0 {
entry:
  %cnt = alloca i32, align 4
  %item = alloca i32, align 4
  %canary = alloca i32
  store i32 1391877909, i32* %canary
  %IntContent = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %type = alloca i32, align 4
  %j = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %InItem = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %bufsize.addr = alloca i32, align 4
  %InString = alloca i32, align 4
  %i = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %range = alloca i32, align 4
  %p = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1391877909
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.62(i8* %buf, i32 %bufsize) #0 {
entry:
  %items = alloca [1000 x i8*], align 16
  %InItem = alloca i32, align 4
  %canary = alloca i32
  store i32 2039775969, i32* %canary
  %InString = alloca i32, align 4
  %bufend = alloca i8*, align 8
  %type = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  %item = alloca i32, align 4
  %range = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %ScalingList = alloca i16*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 2039775969
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.63() #0 {
entry:
  %canary = alloca i32
  store i32 1169609230, i32* %canary
  %i = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  %j = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %temp = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1169609230
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.64(i8* %buf, i32 %bufsize) #0 {
entry:
  %p = alloca i8*, align 8
  %i = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %bufsize.addr = alloca i32, align 4
  %InString = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %type = alloca i32, align 4
  %cnt = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %InItem = alloca i32, align 4
  %range = alloca i32, align 4
  %canary = alloca i32
  store i32 1730250485, i32* %canary
  %j = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %IntContent = alloca i32, align 4
  %item = alloca i32, align 4
  %bufend = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 1730250485
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ParseMatrix.65(i8* %buf, i32 %bufsize) #0 {
entry:
  %type = alloca i32, align 4
  %i = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %InItem = alloca i32, align 4
  %bufsize.addr = alloca i32, align 4
  %InString = alloca i32, align 4
  %cnt = alloca i32, align 4
  %p = alloca i8*, align 8
  %item = alloca i32, align 4
  %range = alloca i32, align 4
  %IntContent = alloca i32, align 4
  %MapIdx = alloca i32, align 4
  %canary = alloca i32
  store i32 890683032, i32* %canary
  %j = alloca i32, align 4
  %items = alloca [1000 x i8*], align 16
  %ScalingList = alloca i16*, align 8
  %bufend = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %bufsize, i32* %bufsize.addr, align 4
  store i32 0, i32* %item, align 4
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  %0 = load i8*, i8** %buf.addr, align 8
  store i8* %0, i8** %p, align 8
  %1 = load i8*, i8** %buf.addr, align 8
  %2 = load i32, i32* %bufsize.addr, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 %idxprom
  store i8* %arrayidx, i8** %bufend, align 8
  br label %while.cond

while.cond:                                       ; preds = %sw.epilog, %entry
  %3 = load i8*, i8** %p, align 8
  %4 = load i8*, i8** %bufend, align 8
  %cmp = icmp ult i8* %3, %4
  br i1 %cmp, label %while.body, label %while.end34

while.body:                                       ; preds = %while.cond
  %5 = load i8*, i8** %p, align 8
  %6 = load i8, i8* %5, align 1
  %conv = sext i8 %6 to i32
  switch i32 %conv, label %sw.default [
    i32 13, label %sw.bb
    i32 35, label %sw.bb1
    i32 10, label %sw.bb10
    i32 32, label %sw.bb12
    i32 9, label %sw.bb12
    i32 34, label %sw.bb15
    i32 44, label %sw.bb24
  ]

sw.bb:                                            ; preds = %while.body
  %7 = load i8*, i8** %p, align 8
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %while.body
  %8 = load i8*, i8** %p, align 8
  store i8 0, i8* %8, align 1
  br label %while.cond2

while.cond2:                                      ; preds = %while.body8, %sw.bb1
  %9 = load i8*, i8** %p, align 8
  %10 = load i8, i8* %9, align 1
  %conv3 = sext i8 %10 to i32
  %cmp4 = icmp ne i32 %conv3, 10
  br i1 %cmp4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %11 = load i8*, i8** %p, align 8
  %12 = load i8*, i8** %bufend, align 8
  %cmp6 = icmp ult i8* %11, %12
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp6, %land.rhs ]
  br i1 %13, label %while.body8, label %while.end

while.body8:                                      ; preds = %land.end
  %14 = load i8*, i8** %p, align 8
  %incdec.ptr9 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %incdec.ptr9, i8** %p, align 8
  br label %while.cond2

while.end:                                        ; preds = %land.end
  store i32 0, i32* %InString, align 4
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %while.body
  store i32 0, i32* %InItem, align 4
  store i32 0, i32* %InString, align 4
  %15 = load i8*, i8** %p, align 8
  %incdec.ptr11 = getelementptr inbounds i8, i8* %15, i32 1
  store i8* %incdec.ptr11, i8** %p, align 8
  store i8 0, i8* %15, align 1
  br label %sw.epilog

sw.bb12:                                          ; preds = %while.body, %while.body
  %16 = load i32, i32* %InString, align 4
  %tobool = icmp ne i32 %16, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %sw.bb12
  %17 = load i8*, i8** %p, align 8
  %incdec.ptr13 = getelementptr inbounds i8, i8* %17, i32 1
  store i8* %incdec.ptr13, i8** %p, align 8
  br label %if.end

if.else:                                          ; preds = %sw.bb12
  %18 = load i8*, i8** %p, align 8
  %incdec.ptr14 = getelementptr inbounds i8, i8* %18, i32 1
  store i8* %incdec.ptr14, i8** %p, align 8
  store i8 0, i8* %18, align 1
  store i32 0, i32* %InItem, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog

sw.bb15:                                          ; preds = %while.body
  %19 = load i8*, i8** %p, align 8
  %incdec.ptr16 = getelementptr inbounds i8, i8* %19, i32 1
  store i8* %incdec.ptr16, i8** %p, align 8
  store i8 0, i8* %19, align 1
  %20 = load i32, i32* %InString, align 4
  %tobool17 = icmp ne i32 %20, 0
  br i1 %tobool17, label %if.else21, label %if.then18

if.then18:                                        ; preds = %sw.bb15
  %21 = load i8*, i8** %p, align 8
  %22 = load i32, i32* %item, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %item, align 4
  %idxprom19 = sext i32 %22 to i64
  %arrayidx20 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom19
  store i8* %21, i8** %arrayidx20, align 8
  %23 = load i32, i32* %InItem, align 4
  %neg = xor i32 %23, -1
  store i32 %neg, i32* %InItem, align 4
  br label %if.end22

if.else21:                                        ; preds = %sw.bb15
  store i32 0, i32* %InItem, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %24 = load i32, i32* %InString, align 4
  %neg23 = xor i32 %24, -1
  store i32 %neg23, i32* %InString, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %while.body
  %25 = load i8*, i8** %p, align 8
  %incdec.ptr25 = getelementptr inbounds i8, i8* %25, i32 1
  store i8* %incdec.ptr25, i8** %p, align 8
  store i32 0, i32* %InItem, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %26 = load i32, i32* %InItem, align 4
  %tobool26 = icmp ne i32 %26, 0
  br i1 %tobool26, label %if.end32, label %if.then27

if.then27:                                        ; preds = %sw.default
  %27 = load i8*, i8** %p, align 8
  %28 = load i32, i32* %item, align 4
  %inc28 = add nsw i32 %28, 1
  store i32 %inc28, i32* %item, align 4
  %idxprom29 = sext i32 %28 to i64
  %arrayidx30 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom29
  store i8* %27, i8** %arrayidx30, align 8
  %29 = load i32, i32* %InItem, align 4
  %neg31 = xor i32 %29, -1
  store i32 %neg31, i32* %InItem, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then27, %sw.default
  %30 = load i8*, i8** %p, align 8
  %incdec.ptr33 = getelementptr inbounds i8, i8* %30, i32 1
  store i8* %incdec.ptr33, i8** %p, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %sw.bb24, %if.end22, %if.end, %sw.bb10, %while.end, %sw.bb
  br label %while.cond

while.end34:                                      ; preds = %while.cond
  %31 = load i32, i32* %item, align 4
  %dec = add nsw i32 %31, -1
  store i32 %dec, i32* %item, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc96, %while.end34
  %32 = load i32, i32* %i, align 4
  %33 = load i32, i32* %item, align 4
  %cmp35 = icmp slt i32 %32, %33
  br i1 %cmp35, label %for.body, label %for.end98

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %cnt, align 4
  %34 = load i32, i32* %i, align 4
  %35 = load i32, i32* %cnt, align 4
  %add = add nsw i32 %34, %35
  %idxprom37 = sext i32 %add to i64
  %arrayidx38 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom37
  %36 = load i8*, i8** %arrayidx38, align 8
  %call = call i32 @CheckParameterName(i8* %36, i32* %type)
  store i32 %call, i32* %MapIdx, align 4
  %cmp39 = icmp sgt i32 0, %call
  br i1 %cmp39, label %if.then41, label %if.end46

if.then41:                                        ; preds = %for.body
  %37 = load i32, i32* %i, align 4
  %38 = load i32, i32* %cnt, align 4
  %add42 = add nsw i32 %37, %38
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom43
  %39 = load i8*, i8** %arrayidx44, align 8
  %call45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %39) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end46

if.end46:                                         ; preds = %if.then41, %for.body
  %40 = load i32, i32* %cnt, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %cnt, align 4
  %41 = load i32, i32* %i, align 4
  %42 = load i32, i32* %cnt, align 4
  %add48 = add nsw i32 %41, %42
  %idxprom49 = sext i32 %add48 to i64
  %arrayidx50 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom49
  %43 = load i8*, i8** %arrayidx50, align 8
  %call51 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %43) #5
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end46
  %call54 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0)) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end46
  %44 = load i32, i32* %cnt, align 4
  %inc56 = add nsw i32 %44, 1
  store i32 %inc56, i32* %cnt, align 4
  %45 = load i32, i32* %type, align 4
  %tobool57 = icmp ne i32 %45, 0
  br i1 %tobool57, label %if.else63, label %if.then58

if.then58:                                        ; preds = %if.end55
  store i32 16, i32* %range, align 4
  %46 = load i32, i32* %MapIdx, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom59
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx60, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %47 = load i32, i32* %MapIdx, align 4
  %idxprom61 = sext i32 %47 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom61
  store i32 1, i32* %arrayidx62, align 4
  br label %if.end69

if.else63:                                        ; preds = %if.end55
  store i32 64, i32* %range, align 4
  %48 = load i32, i32* %MapIdx, align 4
  %idxprom64 = sext i32 %48 to i64
  %arrayidx65 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom64
  %arraydecay66 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx65, i64 0, i64 0
  store i16* %arraydecay66, i16** %ScalingList, align 8
  %49 = load i32, i32* %MapIdx, align 4
  %idxprom67 = sext i32 %49 to i64
  %arrayidx68 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom67
  store i32 1, i32* %arrayidx68, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else63, %if.then58
  store i32 0, i32* %j, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.end69
  %50 = load i32, i32* %j, align 4
  %51 = load i32, i32* %range, align 4
  %cmp71 = icmp slt i32 %50, %51
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %52 = load i32, i32* %i, align 4
  %53 = load i32, i32* %cnt, align 4
  %add74 = add nsw i32 %52, %53
  %54 = load i32, i32* %j, align 4
  %add75 = add nsw i32 %add74, %54
  %idxprom76 = sext i32 %add75 to i64
  %arrayidx77 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom76
  %55 = load i8*, i8** %arrayidx77, align 8
  %call78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %IntContent) #6
  %cmp79 = icmp ne i32 1, %call78
  br i1 %cmp79, label %if.then81, label %if.end89

if.then81:                                        ; preds = %for.body73
  %56 = load i32, i32* %i, align 4
  %idxprom82 = sext i32 %56 to i64
  %arrayidx83 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom82
  %57 = load i8*, i8** %arrayidx83, align 8
  %58 = load i32, i32* %i, align 4
  %59 = load i32, i32* %cnt, align 4
  %add84 = add nsw i32 %58, %59
  %60 = load i32, i32* %j, align 4
  %add85 = add nsw i32 %add84, %60
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds [1000 x i8*], [1000 x i8*]* %items, i64 0, i64 %idxprom86
  %61 = load i8*, i8** %arrayidx87, align 8
  %call88 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i64 300, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0), i8* %57, i8* %61) #6
  call void @error(i8* getelementptr inbounds ([300 x i8], [300 x i8]* @errortext, i64 0, i64 0), i32 300)
  br label %if.end89

if.end89:                                         ; preds = %if.then81, %for.body73
  %62 = load i32, i32* %IntContent, align 4
  %conv90 = trunc i32 %62 to i16
  %63 = load i16*, i16** %ScalingList, align 8
  %64 = load i32, i32* %j, align 4
  %idxprom91 = sext i32 %64 to i64
  %arrayidx92 = getelementptr inbounds i16, i16* %63, i64 %idxprom91
  store i16 %conv90, i16* %arrayidx92, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.end89
  %65 = load i32, i32* %j, align 4
  %inc93 = add nsw i32 %65, 1
  store i32 %inc93, i32* %j, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  %66 = load i32, i32* %j, align 4
  %67 = load i32, i32* %cnt, align 4
  %add94 = add nsw i32 %67, %66
  store i32 %add94, i32* %cnt, align 4
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %for.inc96

for.inc96:                                        ; preds = %for.end
  %68 = load i32, i32* %cnt, align 4
  %69 = load i32, i32* %i, align 4
  %add97 = add nsw i32 %69, %68
  store i32 %add97, i32* %i, align 4
  br label %for.cond

for.end98:                                        ; preds = %for.cond
  %70 = load i32, i32* %canary
  %71 = icmp eq i32 %70, 890683032
  br i1 %71, label %72, label %func_exit

72:                                               ; preds = %for.end98, %func_exit
  ret void

func_exit:                                        ; preds = %for.end98
  call void @detect_breach()
  br label %72
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.66() #0 {
entry:
  %canary = alloca i32
  store i32 1547231765, i32* %canary
  %fail = alloca i32, align 4
  %cnt = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 1547231765
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.67(i8* %s, i32* %type) #0 {
entry:
  %type.addr = alloca i32*, align 8
  %canary = alloca i32
  store i32 1447425320, i32* %canary
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1447425320
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.68() #0 {
entry:
  %no_q_matrix = alloca i32, align 4
  %canary = alloca i32
  store i32 124147182, i32* %canary
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 124147182
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.69() #0 {
entry:
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 1502772185, i32* %canary
  %fail = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 1502772185
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.70() #0 {
entry:
  %no_q_matrix = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %canary = alloca i32
  store i32 735366163, i32* %canary
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 735366163
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuantParam.71() #0 {
entry:
  %canary = alloca i32
  store i32 1290548019, i32* %canary
  %temp = alloca i32, align 4
  %j = alloca i32, align 4
  %present = alloca [6 x i32], align 16
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %no_q_matrix = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end31

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 24, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end30

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 6
  br i1 %cmp11, label %for.body12, label %for.end29

for.body12:                                       ; preds = %for.cond10
  %16 = load i32, i32* %i, align 4
  %cmp13 = icmp eq i32 %16, 0
  br i1 %cmp13, label %if.then15, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %17 = load i32, i32* %i, align 4
  %cmp14 = icmp eq i32 %17, 3
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %lor.lhs.false, %for.body12
  %18 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %18, i32 0, i32 6
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %21 = load i32, i32* %i, align 4
  %idxprom18 = sext i32 %21 to i64
  %arrayidx19 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom18
  %22 = load i32, i32* %arrayidx19, align 4
  %or = or i32 %22, %20
  store i32 %or, i32* %arrayidx19, align 4
  br label %if.end26

if.else20:                                        ; preds = %lor.lhs.false
  %23 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag21 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %23, i32 0, i32 6
  %24 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %24 to i64
  %arrayidx23 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag21, i64 0, i64 %idxprom22
  %25 = load i32, i32* %arrayidx23, align 4
  %26 = load i32, i32* %i, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 %idxprom24
  store i32 %25, i32* %arrayidx25, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then15
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %27 = load i32, i32* %i, align 4
  %inc28 = add nsw i32 %27, 1
  store i32 %inc28, i32* %i, align 4
  br label %for.cond10

for.end29:                                        ; preds = %for.cond10
  br label %if.end30

if.end30:                                         ; preds = %for.end29, %if.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then
  %28 = load i32, i32* %no_q_matrix, align 4
  %cmp32 = icmp eq i32 %28, 1
  br i1 %cmp32, label %if.then33, label %if.else201

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc198, %if.then33
  %29 = load i32, i32* %k, align 4
  %cmp35 = icmp slt i32 %29, 6
  br i1 %cmp35, label %for.body36, label %for.end200

for.body36:                                       ; preds = %for.cond34
  store i32 0, i32* %j, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc195, %for.body36
  %30 = load i32, i32* %j, align 4
  %cmp38 = icmp slt i32 %30, 4
  br i1 %cmp38, label %for.body39, label %for.end197

for.body39:                                       ; preds = %for.cond37
  store i32 0, i32* %i, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc192, %for.body39
  %31 = load i32, i32* %i, align 4
  %cmp41 = icmp slt i32 %31, 4
  br i1 %cmp41, label %for.body42, label %for.end194

for.body42:                                       ; preds = %for.cond40
  %32 = load i32, i32* %k, align 4
  %idxprom43 = sext i32 %32 to i64
  %arrayidx44 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom43
  %33 = load i32, i32* %j, align 4
  %idxprom45 = sext i32 %33 to i64
  %arrayidx46 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx44, i64 0, i64 %idxprom45
  %34 = load i32, i32* %i, align 4
  %idxprom47 = sext i32 %34 to i64
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx46, i64 0, i64 %idxprom47
  %35 = load i32, i32* %arrayidx48, align 4
  %36 = load i32, i32* %k, align 4
  %idxprom49 = sext i32 %36 to i64
  %arrayidx50 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom49
  %37 = load i32, i32* %j, align 4
  %idxprom51 = sext i32 %37 to i64
  %arrayidx52 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx50, i64 0, i64 %idxprom51
  %38 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %38 to i64
  %arrayidx54 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx52, i64 0, i64 %idxprom53
  store i32 %35, i32* %arrayidx54, align 4
  %39 = load i32, i32* %k, align 4
  %idxprom55 = sext i32 %39 to i64
  %arrayidx56 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom55
  %40 = load i32, i32* %j, align 4
  %idxprom57 = sext i32 %40 to i64
  %arrayidx58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx56, i64 0, i64 %idxprom57
  %41 = load i32, i32* %i, align 4
  %idxprom59 = sext i32 %41 to i64
  %arrayidx60 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx58, i64 0, i64 %idxprom59
  %42 = load i32, i32* %arrayidx60, align 4
  %shl = shl i32 %42, 4
  %43 = load i32, i32* %k, align 4
  %idxprom61 = sext i32 %43 to i64
  %arrayidx62 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom61
  %44 = load i32, i32* %j, align 4
  %idxprom63 = sext i32 %44 to i64
  %arrayidx64 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx62, i64 0, i64 %idxprom63
  %45 = load i32, i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx64, i64 0, i64 %idxprom65
  store i32 %shl, i32* %arrayidx66, align 4
  %46 = load i32, i32* %k, align 4
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom67
  %47 = load i32, i32* %j, align 4
  %idxprom69 = sext i32 %47 to i64
  %arrayidx70 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx68, i64 0, i64 %idxprom69
  %48 = load i32, i32* %i, align 4
  %idxprom71 = sext i32 %48 to i64
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx70, i64 0, i64 %idxprom71
  %49 = load i32, i32* %arrayidx72, align 4
  %50 = load i32, i32* %k, align 4
  %idxprom73 = sext i32 %50 to i64
  %arrayidx74 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom73
  %51 = load i32, i32* %j, align 4
  %idxprom75 = sext i32 %51 to i64
  %arrayidx76 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx74, i64 0, i64 %idxprom75
  %52 = load i32, i32* %i, align 4
  %idxprom77 = sext i32 %52 to i64
  %arrayidx78 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx76, i64 0, i64 %idxprom77
  store i32 %49, i32* %arrayidx78, align 4
  %53 = load i32, i32* %k, align 4
  %idxprom79 = sext i32 %53 to i64
  %arrayidx80 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom79
  %54 = load i32, i32* %j, align 4
  %idxprom81 = sext i32 %54 to i64
  %arrayidx82 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx80, i64 0, i64 %idxprom81
  %55 = load i32, i32* %i, align 4
  %idxprom83 = sext i32 %55 to i64
  %arrayidx84 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx82, i64 0, i64 %idxprom83
  %56 = load i32, i32* %arrayidx84, align 4
  %shl85 = shl i32 %56, 4
  %57 = load i32, i32* %k, align 4
  %idxprom86 = sext i32 %57 to i64
  %arrayidx87 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom86
  %58 = load i32, i32* %j, align 4
  %idxprom88 = sext i32 %58 to i64
  %arrayidx89 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx87, i64 0, i64 %idxprom88
  %59 = load i32, i32* %i, align 4
  %idxprom90 = sext i32 %59 to i64
  %arrayidx91 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx89, i64 0, i64 %idxprom90
  store i32 %shl85, i32* %arrayidx91, align 4
  %60 = load i32, i32* %k, align 4
  %idxprom92 = sext i32 %60 to i64
  %arrayidx93 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom92
  %61 = load i32, i32* %j, align 4
  %idxprom94 = sext i32 %61 to i64
  %arrayidx95 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx93, i64 0, i64 %idxprom94
  %62 = load i32, i32* %i, align 4
  %idxprom96 = sext i32 %62 to i64
  %arrayidx97 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx95, i64 0, i64 %idxprom96
  %63 = load i32, i32* %arrayidx97, align 4
  %64 = load i32, i32* %k, align 4
  %idxprom98 = sext i32 %64 to i64
  %arrayidx99 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom98
  %65 = load i32, i32* %j, align 4
  %idxprom100 = sext i32 %65 to i64
  %arrayidx101 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx99, i64 0, i64 %idxprom100
  %66 = load i32, i32* %i, align 4
  %idxprom102 = sext i32 %66 to i64
  %arrayidx103 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx101, i64 0, i64 %idxprom102
  store i32 %63, i32* %arrayidx103, align 4
  %67 = load i32, i32* %k, align 4
  %idxprom104 = sext i32 %67 to i64
  %arrayidx105 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom104
  %68 = load i32, i32* %j, align 4
  %idxprom106 = sext i32 %68 to i64
  %arrayidx107 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx105, i64 0, i64 %idxprom106
  %69 = load i32, i32* %i, align 4
  %idxprom108 = sext i32 %69 to i64
  %arrayidx109 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx107, i64 0, i64 %idxprom108
  %70 = load i32, i32* %arrayidx109, align 4
  %shl110 = shl i32 %70, 4
  %71 = load i32, i32* %k, align 4
  %idxprom111 = sext i32 %71 to i64
  %arrayidx112 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom111
  %72 = load i32, i32* %j, align 4
  %idxprom113 = sext i32 %72 to i64
  %arrayidx114 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx112, i64 0, i64 %idxprom113
  %73 = load i32, i32* %i, align 4
  %idxprom115 = sext i32 %73 to i64
  %arrayidx116 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx114, i64 0, i64 %idxprom115
  store i32 %shl110, i32* %arrayidx116, align 4
  %74 = load i32, i32* %k, align 4
  %idxprom117 = sext i32 %74 to i64
  %arrayidx118 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom117
  %75 = load i32, i32* %j, align 4
  %idxprom119 = sext i32 %75 to i64
  %arrayidx120 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx118, i64 0, i64 %idxprom119
  %76 = load i32, i32* %i, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx120, i64 0, i64 %idxprom121
  %77 = load i32, i32* %arrayidx122, align 4
  %78 = load i32, i32* %k, align 4
  %idxprom123 = sext i32 %78 to i64
  %arrayidx124 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom123
  %79 = load i32, i32* %j, align 4
  %idxprom125 = sext i32 %79 to i64
  %arrayidx126 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx124, i64 0, i64 %idxprom125
  %80 = load i32, i32* %i, align 4
  %idxprom127 = sext i32 %80 to i64
  %arrayidx128 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx126, i64 0, i64 %idxprom127
  store i32 %77, i32* %arrayidx128, align 4
  %81 = load i32, i32* %k, align 4
  %idxprom129 = sext i32 %81 to i64
  %arrayidx130 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom129
  %82 = load i32, i32* %j, align 4
  %idxprom131 = sext i32 %82 to i64
  %arrayidx132 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx130, i64 0, i64 %idxprom131
  %83 = load i32, i32* %i, align 4
  %idxprom133 = sext i32 %83 to i64
  %arrayidx134 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx132, i64 0, i64 %idxprom133
  %84 = load i32, i32* %arrayidx134, align 4
  %shl135 = shl i32 %84, 4
  %85 = load i32, i32* %k, align 4
  %idxprom136 = sext i32 %85 to i64
  %arrayidx137 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom136
  %86 = load i32, i32* %j, align 4
  %idxprom138 = sext i32 %86 to i64
  %arrayidx139 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx137, i64 0, i64 %idxprom138
  %87 = load i32, i32* %i, align 4
  %idxprom140 = sext i32 %87 to i64
  %arrayidx141 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx139, i64 0, i64 %idxprom140
  store i32 %shl135, i32* %arrayidx141, align 4
  %88 = load i32, i32* %k, align 4
  %idxprom142 = sext i32 %88 to i64
  %arrayidx143 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom142
  %89 = load i32, i32* %j, align 4
  %idxprom144 = sext i32 %89 to i64
  %arrayidx145 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx143, i64 0, i64 %idxprom144
  %90 = load i32, i32* %i, align 4
  %idxprom146 = sext i32 %90 to i64
  %arrayidx147 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx145, i64 0, i64 %idxprom146
  %91 = load i32, i32* %arrayidx147, align 4
  %92 = load i32, i32* %k, align 4
  %idxprom148 = sext i32 %92 to i64
  %arrayidx149 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom148
  %93 = load i32, i32* %j, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx149, i64 0, i64 %idxprom150
  %94 = load i32, i32* %i, align 4
  %idxprom152 = sext i32 %94 to i64
  %arrayidx153 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx151, i64 0, i64 %idxprom152
  store i32 %91, i32* %arrayidx153, align 4
  %95 = load i32, i32* %k, align 4
  %idxprom154 = sext i32 %95 to i64
  %arrayidx155 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom154
  %96 = load i32, i32* %j, align 4
  %idxprom156 = sext i32 %96 to i64
  %arrayidx157 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx155, i64 0, i64 %idxprom156
  %97 = load i32, i32* %i, align 4
  %idxprom158 = sext i32 %97 to i64
  %arrayidx159 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx157, i64 0, i64 %idxprom158
  %98 = load i32, i32* %arrayidx159, align 4
  %shl160 = shl i32 %98, 4
  %99 = load i32, i32* %k, align 4
  %idxprom161 = sext i32 %99 to i64
  %arrayidx162 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom161
  %100 = load i32, i32* %j, align 4
  %idxprom163 = sext i32 %100 to i64
  %arrayidx164 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx162, i64 0, i64 %idxprom163
  %101 = load i32, i32* %i, align 4
  %idxprom165 = sext i32 %101 to i64
  %arrayidx166 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx164, i64 0, i64 %idxprom165
  store i32 %shl160, i32* %arrayidx166, align 4
  %102 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %102 to i64
  %arrayidx168 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom167
  %103 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %103 to i64
  %arrayidx170 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %104 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %104 to i64
  %arrayidx172 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  %105 = load i32, i32* %arrayidx172, align 4
  %106 = load i32, i32* %k, align 4
  %idxprom173 = sext i32 %106 to i64
  %arrayidx174 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom173
  %107 = load i32, i32* %j, align 4
  %idxprom175 = sext i32 %107 to i64
  %arrayidx176 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx174, i64 0, i64 %idxprom175
  %108 = load i32, i32* %i, align 4
  %idxprom177 = sext i32 %108 to i64
  %arrayidx178 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx176, i64 0, i64 %idxprom177
  store i32 %105, i32* %arrayidx178, align 4
  %109 = load i32, i32* %k, align 4
  %idxprom179 = sext i32 %109 to i64
  %arrayidx180 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom179
  %110 = load i32, i32* %j, align 4
  %idxprom181 = sext i32 %110 to i64
  %arrayidx182 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx180, i64 0, i64 %idxprom181
  %111 = load i32, i32* %i, align 4
  %idxprom183 = sext i32 %111 to i64
  %arrayidx184 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx182, i64 0, i64 %idxprom183
  %112 = load i32, i32* %arrayidx184, align 4
  %shl185 = shl i32 %112, 4
  %113 = load i32, i32* %k, align 4
  %idxprom186 = sext i32 %113 to i64
  %arrayidx187 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom186
  %114 = load i32, i32* %j, align 4
  %idxprom188 = sext i32 %114 to i64
  %arrayidx189 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx187, i64 0, i64 %idxprom188
  %115 = load i32, i32* %i, align 4
  %idxprom190 = sext i32 %115 to i64
  %arrayidx191 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx189, i64 0, i64 %idxprom190
  store i32 %shl185, i32* %arrayidx191, align 4
  br label %for.inc192

for.inc192:                                       ; preds = %for.body42
  %116 = load i32, i32* %i, align 4
  %inc193 = add nsw i32 %116, 1
  store i32 %inc193, i32* %i, align 4
  br label %for.cond40

for.end194:                                       ; preds = %for.cond40
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %117 = load i32, i32* %j, align 4
  %inc196 = add nsw i32 %117, 1
  store i32 %inc196, i32* %j, align 4
  br label %for.cond37

for.end197:                                       ; preds = %for.cond37
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %118 = load i32, i32* %k, align 4
  %inc199 = add nsw i32 %118, 1
  store i32 %inc199, i32* %k, align 4
  br label %for.cond34

for.end200:                                       ; preds = %for.cond34
  br label %if.end682

if.else201:                                       ; preds = %if.end31
  store i32 0, i32* %k, align 4
  br label %for.cond202

for.cond202:                                      ; preds = %for.inc679, %if.else201
  %119 = load i32, i32* %k, align 4
  %cmp203 = icmp slt i32 %119, 6
  br i1 %cmp203, label %for.body204, label %for.end681

for.body204:                                      ; preds = %for.cond202
  store i32 0, i32* %j, align 4
  br label %for.cond205

for.cond205:                                      ; preds = %for.inc676, %for.body204
  %120 = load i32, i32* %j, align 4
  %cmp206 = icmp slt i32 %120, 4
  br i1 %cmp206, label %for.body207, label %for.end678

for.body207:                                      ; preds = %for.cond205
  store i32 0, i32* %i, align 4
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc673, %for.body207
  %121 = load i32, i32* %i, align 4
  %cmp209 = icmp slt i32 %121, 4
  br i1 %cmp209, label %for.body210, label %for.end675

for.body210:                                      ; preds = %for.cond208
  %122 = load i32, i32* %i, align 4
  %shl211 = shl i32 %122, 2
  %123 = load i32, i32* %j, align 4
  %add = add nsw i32 %shl211, %123
  store i32 %add, i32* %temp, align 4
  %arrayidx212 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 0
  %124 = load i32, i32* %arrayidx212, align 16
  %tobool213 = icmp ne i32 %124, 0
  br i1 %tobool213, label %lor.lhs.false214, label %if.then216

lor.lhs.false214:                                 ; preds = %for.body210
  %125 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 0), align 2
  %conv = sext i16 %125 to i32
  %tobool215 = icmp ne i32 %conv, 0
  br i1 %tobool215, label %if.then216, label %if.else248

if.then216:                                       ; preds = %lor.lhs.false214, %for.body210
  %126 = load i32, i32* %k, align 4
  %idxprom217 = sext i32 %126 to i64
  %arrayidx218 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom217
  %127 = load i32, i32* %j, align 4
  %idxprom219 = sext i32 %127 to i64
  %arrayidx220 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx218, i64 0, i64 %idxprom219
  %128 = load i32, i32* %i, align 4
  %idxprom221 = sext i32 %128 to i64
  %arrayidx222 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx220, i64 0, i64 %idxprom221
  %129 = load i32, i32* %arrayidx222, align 4
  %shl223 = shl i32 %129, 4
  %130 = load i32, i32* %temp, align 4
  %idxprom224 = sext i32 %130 to i64
  %arrayidx225 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom224
  %131 = load i16, i16* %arrayidx225, align 2
  %conv226 = sext i16 %131 to i32
  %div = sdiv i32 %shl223, %conv226
  %132 = load i32, i32* %k, align 4
  %idxprom227 = sext i32 %132 to i64
  %arrayidx228 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom227
  %133 = load i32, i32* %j, align 4
  %idxprom229 = sext i32 %133 to i64
  %arrayidx230 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx228, i64 0, i64 %idxprom229
  %134 = load i32, i32* %i, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx230, i64 0, i64 %idxprom231
  store i32 %div, i32* %arrayidx232, align 4
  %135 = load i32, i32* %k, align 4
  %idxprom233 = sext i32 %135 to i64
  %arrayidx234 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom233
  %136 = load i32, i32* %j, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx234, i64 0, i64 %idxprom235
  %137 = load i32, i32* %i, align 4
  %idxprom237 = sext i32 %137 to i64
  %arrayidx238 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx236, i64 0, i64 %idxprom237
  %138 = load i32, i32* %arrayidx238, align 4
  %139 = load i32, i32* %temp, align 4
  %idxprom239 = sext i32 %139 to i64
  %arrayidx240 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom239
  %140 = load i16, i16* %arrayidx240, align 2
  %conv241 = sext i16 %140 to i32
  %mul = mul nsw i32 %138, %conv241
  %141 = load i32, i32* %k, align 4
  %idxprom242 = sext i32 %141 to i64
  %arrayidx243 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom242
  %142 = load i32, i32* %j, align 4
  %idxprom244 = sext i32 %142 to i64
  %arrayidx245 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx243, i64 0, i64 %idxprom244
  %143 = load i32, i32* %i, align 4
  %idxprom246 = sext i32 %143 to i64
  %arrayidx247 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx245, i64 0, i64 %idxprom246
  store i32 %mul, i32* %arrayidx247, align 4
  br label %if.end282

if.else248:                                       ; preds = %lor.lhs.false214
  %144 = load i32, i32* %k, align 4
  %idxprom249 = sext i32 %144 to i64
  %arrayidx250 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom249
  %145 = load i32, i32* %j, align 4
  %idxprom251 = sext i32 %145 to i64
  %arrayidx252 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx250, i64 0, i64 %idxprom251
  %146 = load i32, i32* %i, align 4
  %idxprom253 = sext i32 %146 to i64
  %arrayidx254 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx252, i64 0, i64 %idxprom253
  %147 = load i32, i32* %arrayidx254, align 4
  %shl255 = shl i32 %147, 4
  %148 = load i32, i32* %temp, align 4
  %idxprom256 = sext i32 %148 to i64
  %arrayidx257 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom256
  %149 = load i16, i16* %arrayidx257, align 2
  %conv258 = sext i16 %149 to i32
  %div259 = sdiv i32 %shl255, %conv258
  %150 = load i32, i32* %k, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom260
  %151 = load i32, i32* %j, align 4
  %idxprom262 = sext i32 %151 to i64
  %arrayidx263 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx261, i64 0, i64 %idxprom262
  %152 = load i32, i32* %i, align 4
  %idxprom264 = sext i32 %152 to i64
  %arrayidx265 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx263, i64 0, i64 %idxprom264
  store i32 %div259, i32* %arrayidx265, align 4
  %153 = load i32, i32* %k, align 4
  %idxprom266 = sext i32 %153 to i64
  %arrayidx267 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom266
  %154 = load i32, i32* %j, align 4
  %idxprom268 = sext i32 %154 to i64
  %arrayidx269 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx267, i64 0, i64 %idxprom268
  %155 = load i32, i32* %i, align 4
  %idxprom270 = sext i32 %155 to i64
  %arrayidx271 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx269, i64 0, i64 %idxprom270
  %156 = load i32, i32* %arrayidx271, align 4
  %157 = load i32, i32* %temp, align 4
  %idxprom272 = sext i32 %157 to i64
  %arrayidx273 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 0), i64 0, i64 %idxprom272
  %158 = load i16, i16* %arrayidx273, align 2
  %conv274 = sext i16 %158 to i32
  %mul275 = mul nsw i32 %156, %conv274
  %159 = load i32, i32* %k, align 4
  %idxprom276 = sext i32 %159 to i64
  %arrayidx277 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom276
  %160 = load i32, i32* %j, align 4
  %idxprom278 = sext i32 %160 to i64
  %arrayidx279 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx277, i64 0, i64 %idxprom278
  %161 = load i32, i32* %i, align 4
  %idxprom280 = sext i32 %161 to i64
  %arrayidx281 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx279, i64 0, i64 %idxprom280
  store i32 %mul275, i32* %arrayidx281, align 4
  br label %if.end282

if.end282:                                        ; preds = %if.else248, %if.then216
  %arrayidx283 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 1
  %162 = load i32, i32* %arrayidx283, align 4
  %tobool284 = icmp ne i32 %162, 0
  br i1 %tobool284, label %if.else310, label %if.then285

if.then285:                                       ; preds = %if.end282
  %163 = load i32, i32* %k, align 4
  %idxprom286 = sext i32 %163 to i64
  %arrayidx287 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Intra, i64 0, i64 %idxprom286
  %164 = load i32, i32* %j, align 4
  %idxprom288 = sext i32 %164 to i64
  %arrayidx289 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx287, i64 0, i64 %idxprom288
  %165 = load i32, i32* %i, align 4
  %idxprom290 = sext i32 %165 to i64
  %arrayidx291 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx289, i64 0, i64 %idxprom290
  %166 = load i32, i32* %arrayidx291, align 4
  %167 = load i32, i32* %k, align 4
  %idxprom292 = sext i32 %167 to i64
  %arrayidx293 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom292
  %168 = load i32, i32* %j, align 4
  %idxprom294 = sext i32 %168 to i64
  %arrayidx295 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx293, i64 0, i64 %idxprom294
  %169 = load i32, i32* %i, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx295, i64 0, i64 %idxprom296
  store i32 %166, i32* %arrayidx297, align 4
  %170 = load i32, i32* %k, align 4
  %idxprom298 = sext i32 %170 to i64
  %arrayidx299 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Intra, i64 0, i64 %idxprom298
  %171 = load i32, i32* %j, align 4
  %idxprom300 = sext i32 %171 to i64
  %arrayidx301 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx299, i64 0, i64 %idxprom300
  %172 = load i32, i32* %i, align 4
  %idxprom302 = sext i32 %172 to i64
  %arrayidx303 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx301, i64 0, i64 %idxprom302
  %173 = load i32, i32* %arrayidx303, align 4
  %174 = load i32, i32* %k, align 4
  %idxprom304 = sext i32 %174 to i64
  %arrayidx305 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom304
  %175 = load i32, i32* %j, align 4
  %idxprom306 = sext i32 %175 to i64
  %arrayidx307 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx305, i64 0, i64 %idxprom306
  %176 = load i32, i32* %i, align 4
  %idxprom308 = sext i32 %176 to i64
  %arrayidx309 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx307, i64 0, i64 %idxprom308
  store i32 %173, i32* %arrayidx309, align 4
  br label %if.end358

if.else310:                                       ; preds = %if.end282
  %177 = load i32, i32* %k, align 4
  %idxprom311 = sext i32 %177 to i64
  %arrayidx312 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom311
  %178 = load i32, i32* %j, align 4
  %idxprom313 = sext i32 %178 to i64
  %arrayidx314 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx312, i64 0, i64 %idxprom313
  %179 = load i32, i32* %i, align 4
  %idxprom315 = sext i32 %179 to i64
  %arrayidx316 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx314, i64 0, i64 %idxprom315
  %180 = load i32, i32* %arrayidx316, align 4
  %shl317 = shl i32 %180, 4
  %181 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv318 = sext i16 %181 to i32
  %tobool319 = icmp ne i32 %conv318, 0
  br i1 %tobool319, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else310
  %182 = load i32, i32* %temp, align 4
  %idxprom320 = sext i32 %182 to i64
  %arrayidx321 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom320
  %183 = load i16, i16* %arrayidx321, align 2
  %conv322 = sext i16 %183 to i32
  br label %cond.end

cond.false:                                       ; preds = %if.else310
  %184 = load i32, i32* %temp, align 4
  %idxprom323 = sext i32 %184 to i64
  %arrayidx324 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom323
  %185 = load i16, i16* %arrayidx324, align 2
  %conv325 = sext i16 %185 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv322, %cond.true ], [ %conv325, %cond.false ]
  %div326 = sdiv i32 %shl317, %cond
  %186 = load i32, i32* %k, align 4
  %idxprom327 = sext i32 %186 to i64
  %arrayidx328 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom327
  %187 = load i32, i32* %j, align 4
  %idxprom329 = sext i32 %187 to i64
  %arrayidx330 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx328, i64 0, i64 %idxprom329
  %188 = load i32, i32* %i, align 4
  %idxprom331 = sext i32 %188 to i64
  %arrayidx332 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx330, i64 0, i64 %idxprom331
  store i32 %div326, i32* %arrayidx332, align 4
  %189 = load i32, i32* %k, align 4
  %idxprom333 = sext i32 %189 to i64
  %arrayidx334 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom333
  %190 = load i32, i32* %j, align 4
  %idxprom335 = sext i32 %190 to i64
  %arrayidx336 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx334, i64 0, i64 %idxprom335
  %191 = load i32, i32* %i, align 4
  %idxprom337 = sext i32 %191 to i64
  %arrayidx338 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx336, i64 0, i64 %idxprom337
  %192 = load i32, i32* %arrayidx338, align 4
  %193 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 1), align 2
  %conv339 = sext i16 %193 to i32
  %tobool340 = icmp ne i32 %conv339, 0
  br i1 %tobool340, label %cond.true341, label %cond.false345

cond.true341:                                     ; preds = %cond.end
  %194 = load i32, i32* %temp, align 4
  %idxprom342 = sext i32 %194 to i64
  %arrayidx343 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom342
  %195 = load i16, i16* %arrayidx343, align 2
  %conv344 = sext i16 %195 to i32
  br label %cond.end349

cond.false345:                                    ; preds = %cond.end
  %196 = load i32, i32* %temp, align 4
  %idxprom346 = sext i32 %196 to i64
  %arrayidx347 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 1), i64 0, i64 %idxprom346
  %197 = load i16, i16* %arrayidx347, align 2
  %conv348 = sext i16 %197 to i32
  br label %cond.end349

cond.end349:                                      ; preds = %cond.false345, %cond.true341
  %cond350 = phi i32 [ %conv344, %cond.true341 ], [ %conv348, %cond.false345 ]
  %mul351 = mul nsw i32 %192, %cond350
  %198 = load i32, i32* %k, align 4
  %idxprom352 = sext i32 %198 to i64
  %arrayidx353 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom352
  %199 = load i32, i32* %j, align 4
  %idxprom354 = sext i32 %199 to i64
  %arrayidx355 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx353, i64 0, i64 %idxprom354
  %200 = load i32, i32* %i, align 4
  %idxprom356 = sext i32 %200 to i64
  %arrayidx357 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx355, i64 0, i64 %idxprom356
  store i32 %mul351, i32* %arrayidx357, align 4
  br label %if.end358

if.end358:                                        ; preds = %cond.end349, %if.then285
  %arrayidx359 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 2
  %201 = load i32, i32* %arrayidx359, align 8
  %tobool360 = icmp ne i32 %201, 0
  br i1 %tobool360, label %if.else386, label %if.then361

if.then361:                                       ; preds = %if.end358
  %202 = load i32, i32* %k, align 4
  %idxprom362 = sext i32 %202 to i64
  %arrayidx363 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom362
  %203 = load i32, i32* %j, align 4
  %idxprom364 = sext i32 %203 to i64
  %arrayidx365 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx363, i64 0, i64 %idxprom364
  %204 = load i32, i32* %i, align 4
  %idxprom366 = sext i32 %204 to i64
  %arrayidx367 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx365, i64 0, i64 %idxprom366
  %205 = load i32, i32* %arrayidx367, align 4
  %206 = load i32, i32* %k, align 4
  %idxprom368 = sext i32 %206 to i64
  %arrayidx369 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom368
  %207 = load i32, i32* %j, align 4
  %idxprom370 = sext i32 %207 to i64
  %arrayidx371 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx369, i64 0, i64 %idxprom370
  %208 = load i32, i32* %i, align 4
  %idxprom372 = sext i32 %208 to i64
  %arrayidx373 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx371, i64 0, i64 %idxprom372
  store i32 %205, i32* %arrayidx373, align 4
  %209 = load i32, i32* %k, align 4
  %idxprom374 = sext i32 %209 to i64
  %arrayidx375 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 0), i64 0, i64 %idxprom374
  %210 = load i32, i32* %j, align 4
  %idxprom376 = sext i32 %210 to i64
  %arrayidx377 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx375, i64 0, i64 %idxprom376
  %211 = load i32, i32* %i, align 4
  %idxprom378 = sext i32 %211 to i64
  %arrayidx379 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx377, i64 0, i64 %idxprom378
  %212 = load i32, i32* %arrayidx379, align 4
  %213 = load i32, i32* %k, align 4
  %idxprom380 = sext i32 %213 to i64
  %arrayidx381 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom380
  %214 = load i32, i32* %j, align 4
  %idxprom382 = sext i32 %214 to i64
  %arrayidx383 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx381, i64 0, i64 %idxprom382
  %215 = load i32, i32* %i, align 4
  %idxprom384 = sext i32 %215 to i64
  %arrayidx385 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx383, i64 0, i64 %idxprom384
  store i32 %212, i32* %arrayidx385, align 4
  br label %if.end438

if.else386:                                       ; preds = %if.end358
  %216 = load i32, i32* %k, align 4
  %idxprom387 = sext i32 %216 to i64
  %arrayidx388 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom387
  %217 = load i32, i32* %j, align 4
  %idxprom389 = sext i32 %217 to i64
  %arrayidx390 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx388, i64 0, i64 %idxprom389
  %218 = load i32, i32* %i, align 4
  %idxprom391 = sext i32 %218 to i64
  %arrayidx392 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx390, i64 0, i64 %idxprom391
  %219 = load i32, i32* %arrayidx392, align 4
  %shl393 = shl i32 %219, 4
  %220 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv394 = sext i16 %220 to i32
  %tobool395 = icmp ne i32 %conv394, 0
  br i1 %tobool395, label %cond.true396, label %cond.false400

cond.true396:                                     ; preds = %if.else386
  %221 = load i32, i32* %temp, align 4
  %idxprom397 = sext i32 %221 to i64
  %arrayidx398 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom397
  %222 = load i16, i16* %arrayidx398, align 2
  %conv399 = sext i16 %222 to i32
  br label %cond.end404

cond.false400:                                    ; preds = %if.else386
  %223 = load i32, i32* %temp, align 4
  %idxprom401 = sext i32 %223 to i64
  %arrayidx402 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom401
  %224 = load i16, i16* %arrayidx402, align 2
  %conv403 = sext i16 %224 to i32
  br label %cond.end404

cond.end404:                                      ; preds = %cond.false400, %cond.true396
  %cond405 = phi i32 [ %conv399, %cond.true396 ], [ %conv403, %cond.false400 ]
  %div406 = sdiv i32 %shl393, %cond405
  %225 = load i32, i32* %k, align 4
  %idxprom407 = sext i32 %225 to i64
  %arrayidx408 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom407
  %226 = load i32, i32* %j, align 4
  %idxprom409 = sext i32 %226 to i64
  %arrayidx410 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx408, i64 0, i64 %idxprom409
  %227 = load i32, i32* %i, align 4
  %idxprom411 = sext i32 %227 to i64
  %arrayidx412 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx410, i64 0, i64 %idxprom411
  store i32 %div406, i32* %arrayidx412, align 4
  %228 = load i32, i32* %k, align 4
  %idxprom413 = sext i32 %228 to i64
  %arrayidx414 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom413
  %229 = load i32, i32* %j, align 4
  %idxprom415 = sext i32 %229 to i64
  %arrayidx416 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx414, i64 0, i64 %idxprom415
  %230 = load i32, i32* %i, align 4
  %idxprom417 = sext i32 %230 to i64
  %arrayidx418 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx416, i64 0, i64 %idxprom417
  %231 = load i32, i32* %arrayidx418, align 4
  %232 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 2), align 2
  %conv419 = sext i16 %232 to i32
  %tobool420 = icmp ne i32 %conv419, 0
  br i1 %tobool420, label %cond.true421, label %cond.false425

cond.true421:                                     ; preds = %cond.end404
  %233 = load i32, i32* %temp, align 4
  %idxprom422 = sext i32 %233 to i64
  %arrayidx423 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_intra_default, i64 0, i64 %idxprom422
  %234 = load i16, i16* %arrayidx423, align 2
  %conv424 = sext i16 %234 to i32
  br label %cond.end429

cond.false425:                                    ; preds = %cond.end404
  %235 = load i32, i32* %temp, align 4
  %idxprom426 = sext i32 %235 to i64
  %arrayidx427 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 2), i64 0, i64 %idxprom426
  %236 = load i16, i16* %arrayidx427, align 2
  %conv428 = sext i16 %236 to i32
  br label %cond.end429

cond.end429:                                      ; preds = %cond.false425, %cond.true421
  %cond430 = phi i32 [ %conv424, %cond.true421 ], [ %conv428, %cond.false425 ]
  %mul431 = mul nsw i32 %231, %cond430
  %237 = load i32, i32* %k, align 4
  %idxprom432 = sext i32 %237 to i64
  %arrayidx433 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Intra, i64 0, i64 1), i64 0, i64 %idxprom432
  %238 = load i32, i32* %j, align 4
  %idxprom434 = sext i32 %238 to i64
  %arrayidx435 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx433, i64 0, i64 %idxprom434
  %239 = load i32, i32* %i, align 4
  %idxprom436 = sext i32 %239 to i64
  %arrayidx437 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx435, i64 0, i64 %idxprom436
  store i32 %mul431, i32* %arrayidx437, align 4
  br label %if.end438

if.end438:                                        ; preds = %cond.end429, %if.then361
  %arrayidx439 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 3
  %240 = load i32, i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %240, 0
  br i1 %tobool440, label %lor.lhs.false441, label %if.then444

lor.lhs.false441:                                 ; preds = %if.end438
  %241 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 3), align 2
  %conv442 = sext i16 %241 to i32
  %tobool443 = icmp ne i32 %conv442, 0
  br i1 %tobool443, label %if.then444, label %if.else478

if.then444:                                       ; preds = %lor.lhs.false441, %if.end438
  %242 = load i32, i32* %k, align 4
  %idxprom445 = sext i32 %242 to i64
  %arrayidx446 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom445
  %243 = load i32, i32* %j, align 4
  %idxprom447 = sext i32 %243 to i64
  %arrayidx448 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx446, i64 0, i64 %idxprom447
  %244 = load i32, i32* %i, align 4
  %idxprom449 = sext i32 %244 to i64
  %arrayidx450 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx448, i64 0, i64 %idxprom449
  %245 = load i32, i32* %arrayidx450, align 4
  %shl451 = shl i32 %245, 4
  %246 = load i32, i32* %temp, align 4
  %idxprom452 = sext i32 %246 to i64
  %arrayidx453 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom452
  %247 = load i16, i16* %arrayidx453, align 2
  %conv454 = sext i16 %247 to i32
  %div455 = sdiv i32 %shl451, %conv454
  %248 = load i32, i32* %k, align 4
  %idxprom456 = sext i32 %248 to i64
  %arrayidx457 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom456
  %249 = load i32, i32* %j, align 4
  %idxprom458 = sext i32 %249 to i64
  %arrayidx459 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx457, i64 0, i64 %idxprom458
  %250 = load i32, i32* %i, align 4
  %idxprom460 = sext i32 %250 to i64
  %arrayidx461 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx459, i64 0, i64 %idxprom460
  store i32 %div455, i32* %arrayidx461, align 4
  %251 = load i32, i32* %k, align 4
  %idxprom462 = sext i32 %251 to i64
  %arrayidx463 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom462
  %252 = load i32, i32* %j, align 4
  %idxprom464 = sext i32 %252 to i64
  %arrayidx465 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx463, i64 0, i64 %idxprom464
  %253 = load i32, i32* %i, align 4
  %idxprom466 = sext i32 %253 to i64
  %arrayidx467 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx465, i64 0, i64 %idxprom466
  %254 = load i32, i32* %arrayidx467, align 4
  %255 = load i32, i32* %temp, align 4
  %idxprom468 = sext i32 %255 to i64
  %arrayidx469 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom468
  %256 = load i16, i16* %arrayidx469, align 2
  %conv470 = sext i16 %256 to i32
  %mul471 = mul nsw i32 %254, %conv470
  %257 = load i32, i32* %k, align 4
  %idxprom472 = sext i32 %257 to i64
  %arrayidx473 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom472
  %258 = load i32, i32* %j, align 4
  %idxprom474 = sext i32 %258 to i64
  %arrayidx475 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx473, i64 0, i64 %idxprom474
  %259 = load i32, i32* %i, align 4
  %idxprom476 = sext i32 %259 to i64
  %arrayidx477 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx475, i64 0, i64 %idxprom476
  store i32 %mul471, i32* %arrayidx477, align 4
  br label %if.end512

if.else478:                                       ; preds = %lor.lhs.false441
  %260 = load i32, i32* %k, align 4
  %idxprom479 = sext i32 %260 to i64
  %arrayidx480 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom479
  %261 = load i32, i32* %j, align 4
  %idxprom481 = sext i32 %261 to i64
  %arrayidx482 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx480, i64 0, i64 %idxprom481
  %262 = load i32, i32* %i, align 4
  %idxprom483 = sext i32 %262 to i64
  %arrayidx484 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx482, i64 0, i64 %idxprom483
  %263 = load i32, i32* %arrayidx484, align 4
  %shl485 = shl i32 %263, 4
  %264 = load i32, i32* %temp, align 4
  %idxprom486 = sext i32 %264 to i64
  %arrayidx487 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom486
  %265 = load i16, i16* %arrayidx487, align 2
  %conv488 = sext i16 %265 to i32
  %div489 = sdiv i32 %shl485, %conv488
  %266 = load i32, i32* %k, align 4
  %idxprom490 = sext i32 %266 to i64
  %arrayidx491 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom490
  %267 = load i32, i32* %j, align 4
  %idxprom492 = sext i32 %267 to i64
  %arrayidx493 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx491, i64 0, i64 %idxprom492
  %268 = load i32, i32* %i, align 4
  %idxprom494 = sext i32 %268 to i64
  %arrayidx495 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx493, i64 0, i64 %idxprom494
  store i32 %div489, i32* %arrayidx495, align 4
  %269 = load i32, i32* %k, align 4
  %idxprom496 = sext i32 %269 to i64
  %arrayidx497 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom496
  %270 = load i32, i32* %j, align 4
  %idxprom498 = sext i32 %270 to i64
  %arrayidx499 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx497, i64 0, i64 %idxprom498
  %271 = load i32, i32* %i, align 4
  %idxprom500 = sext i32 %271 to i64
  %arrayidx501 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx499, i64 0, i64 %idxprom500
  %272 = load i32, i32* %arrayidx501, align 4
  %273 = load i32, i32* %temp, align 4
  %idxprom502 = sext i32 %273 to i64
  %arrayidx503 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 3), i64 0, i64 %idxprom502
  %274 = load i16, i16* %arrayidx503, align 2
  %conv504 = sext i16 %274 to i32
  %mul505 = mul nsw i32 %272, %conv504
  %275 = load i32, i32* %k, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom506
  %276 = load i32, i32* %j, align 4
  %idxprom508 = sext i32 %276 to i64
  %arrayidx509 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx507, i64 0, i64 %idxprom508
  %277 = load i32, i32* %i, align 4
  %idxprom510 = sext i32 %277 to i64
  %arrayidx511 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx509, i64 0, i64 %idxprom510
  store i32 %mul505, i32* %arrayidx511, align 4
  br label %if.end512

if.end512:                                        ; preds = %if.else478, %if.then444
  %arrayidx513 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 4
  %278 = load i32, i32* %arrayidx513, align 16
  %tobool514 = icmp ne i32 %278, 0
  br i1 %tobool514, label %if.else540, label %if.then515

if.then515:                                       ; preds = %if.end512
  %279 = load i32, i32* %k, align 4
  %idxprom516 = sext i32 %279 to i64
  %arrayidx517 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @LevelScale4x4Luma_Inter, i64 0, i64 %idxprom516
  %280 = load i32, i32* %j, align 4
  %idxprom518 = sext i32 %280 to i64
  %arrayidx519 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx517, i64 0, i64 %idxprom518
  %281 = load i32, i32* %i, align 4
  %idxprom520 = sext i32 %281 to i64
  %arrayidx521 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx519, i64 0, i64 %idxprom520
  %282 = load i32, i32* %arrayidx521, align 4
  %283 = load i32, i32* %k, align 4
  %idxprom522 = sext i32 %283 to i64
  %arrayidx523 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom522
  %284 = load i32, i32* %j, align 4
  %idxprom524 = sext i32 %284 to i64
  %arrayidx525 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx523, i64 0, i64 %idxprom524
  %285 = load i32, i32* %i, align 4
  %idxprom526 = sext i32 %285 to i64
  %arrayidx527 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx525, i64 0, i64 %idxprom526
  store i32 %282, i32* %arrayidx527, align 4
  %286 = load i32, i32* %k, align 4
  %idxprom528 = sext i32 %286 to i64
  %arrayidx529 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @InvLevelScale4x4Luma_Inter, i64 0, i64 %idxprom528
  %287 = load i32, i32* %j, align 4
  %idxprom530 = sext i32 %287 to i64
  %arrayidx531 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx529, i64 0, i64 %idxprom530
  %288 = load i32, i32* %i, align 4
  %idxprom532 = sext i32 %288 to i64
  %arrayidx533 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx531, i64 0, i64 %idxprom532
  %289 = load i32, i32* %arrayidx533, align 4
  %290 = load i32, i32* %k, align 4
  %idxprom534 = sext i32 %290 to i64
  %arrayidx535 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom534
  %291 = load i32, i32* %j, align 4
  %idxprom536 = sext i32 %291 to i64
  %arrayidx537 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx535, i64 0, i64 %idxprom536
  %292 = load i32, i32* %i, align 4
  %idxprom538 = sext i32 %292 to i64
  %arrayidx539 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx537, i64 0, i64 %idxprom538
  store i32 %289, i32* %arrayidx539, align 4
  br label %if.end592

if.else540:                                       ; preds = %if.end512
  %293 = load i32, i32* %k, align 4
  %idxprom541 = sext i32 %293 to i64
  %arrayidx542 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom541
  %294 = load i32, i32* %j, align 4
  %idxprom543 = sext i32 %294 to i64
  %arrayidx544 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx542, i64 0, i64 %idxprom543
  %295 = load i32, i32* %i, align 4
  %idxprom545 = sext i32 %295 to i64
  %arrayidx546 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx544, i64 0, i64 %idxprom545
  %296 = load i32, i32* %arrayidx546, align 4
  %shl547 = shl i32 %296, 4
  %297 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv548 = sext i16 %297 to i32
  %tobool549 = icmp ne i32 %conv548, 0
  br i1 %tobool549, label %cond.true550, label %cond.false554

cond.true550:                                     ; preds = %if.else540
  %298 = load i32, i32* %temp, align 4
  %idxprom551 = sext i32 %298 to i64
  %arrayidx552 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom551
  %299 = load i16, i16* %arrayidx552, align 2
  %conv553 = sext i16 %299 to i32
  br label %cond.end558

cond.false554:                                    ; preds = %if.else540
  %300 = load i32, i32* %temp, align 4
  %idxprom555 = sext i32 %300 to i64
  %arrayidx556 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom555
  %301 = load i16, i16* %arrayidx556, align 2
  %conv557 = sext i16 %301 to i32
  br label %cond.end558

cond.end558:                                      ; preds = %cond.false554, %cond.true550
  %cond559 = phi i32 [ %conv553, %cond.true550 ], [ %conv557, %cond.false554 ]
  %div560 = sdiv i32 %shl547, %cond559
  %302 = load i32, i32* %k, align 4
  %idxprom561 = sext i32 %302 to i64
  %arrayidx562 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom561
  %303 = load i32, i32* %j, align 4
  %idxprom563 = sext i32 %303 to i64
  %arrayidx564 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx562, i64 0, i64 %idxprom563
  %304 = load i32, i32* %i, align 4
  %idxprom565 = sext i32 %304 to i64
  %arrayidx566 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx564, i64 0, i64 %idxprom565
  store i32 %div560, i32* %arrayidx566, align 4
  %305 = load i32, i32* %k, align 4
  %idxprom567 = sext i32 %305 to i64
  %arrayidx568 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom567
  %306 = load i32, i32* %j, align 4
  %idxprom569 = sext i32 %306 to i64
  %arrayidx570 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx568, i64 0, i64 %idxprom569
  %307 = load i32, i32* %i, align 4
  %idxprom571 = sext i32 %307 to i64
  %arrayidx572 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx570, i64 0, i64 %idxprom571
  %308 = load i32, i32* %arrayidx572, align 4
  %309 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 4), align 2
  %conv573 = sext i16 %309 to i32
  %tobool574 = icmp ne i32 %conv573, 0
  br i1 %tobool574, label %cond.true575, label %cond.false579

cond.true575:                                     ; preds = %cond.end558
  %310 = load i32, i32* %temp, align 4
  %idxprom576 = sext i32 %310 to i64
  %arrayidx577 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom576
  %311 = load i16, i16* %arrayidx577, align 2
  %conv578 = sext i16 %311 to i32
  br label %cond.end583

cond.false579:                                    ; preds = %cond.end558
  %312 = load i32, i32* %temp, align 4
  %idxprom580 = sext i32 %312 to i64
  %arrayidx581 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 4), i64 0, i64 %idxprom580
  %313 = load i16, i16* %arrayidx581, align 2
  %conv582 = sext i16 %313 to i32
  br label %cond.end583

cond.end583:                                      ; preds = %cond.false579, %cond.true575
  %cond584 = phi i32 [ %conv578, %cond.true575 ], [ %conv582, %cond.false579 ]
  %mul585 = mul nsw i32 %308, %cond584
  %314 = load i32, i32* %k, align 4
  %idxprom586 = sext i32 %314 to i64
  %arrayidx587 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom586
  %315 = load i32, i32* %j, align 4
  %idxprom588 = sext i32 %315 to i64
  %arrayidx589 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx587, i64 0, i64 %idxprom588
  %316 = load i32, i32* %i, align 4
  %idxprom590 = sext i32 %316 to i64
  %arrayidx591 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx589, i64 0, i64 %idxprom590
  store i32 %mul585, i32* %arrayidx591, align 4
  br label %if.end592

if.end592:                                        ; preds = %cond.end583, %if.then515
  %arrayidx593 = getelementptr inbounds [6 x i32], [6 x i32]* %present, i64 0, i64 5
  %317 = load i32, i32* %arrayidx593, align 4
  %tobool594 = icmp ne i32 %317, 0
  br i1 %tobool594, label %if.else620, label %if.then595

if.then595:                                       ; preds = %if.end592
  %318 = load i32, i32* %k, align 4
  %idxprom596 = sext i32 %318 to i64
  %arrayidx597 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom596
  %319 = load i32, i32* %j, align 4
  %idxprom598 = sext i32 %319 to i64
  %arrayidx599 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx597, i64 0, i64 %idxprom598
  %320 = load i32, i32* %i, align 4
  %idxprom600 = sext i32 %320 to i64
  %arrayidx601 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx599, i64 0, i64 %idxprom600
  %321 = load i32, i32* %arrayidx601, align 4
  %322 = load i32, i32* %k, align 4
  %idxprom602 = sext i32 %322 to i64
  %arrayidx603 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom602
  %323 = load i32, i32* %j, align 4
  %idxprom604 = sext i32 %323 to i64
  %arrayidx605 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx603, i64 0, i64 %idxprom604
  %324 = load i32, i32* %i, align 4
  %idxprom606 = sext i32 %324 to i64
  %arrayidx607 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx605, i64 0, i64 %idxprom606
  store i32 %321, i32* %arrayidx607, align 4
  %325 = load i32, i32* %k, align 4
  %idxprom608 = sext i32 %325 to i64
  %arrayidx609 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 0), i64 0, i64 %idxprom608
  %326 = load i32, i32* %j, align 4
  %idxprom610 = sext i32 %326 to i64
  %arrayidx611 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx609, i64 0, i64 %idxprom610
  %327 = load i32, i32* %i, align 4
  %idxprom612 = sext i32 %327 to i64
  %arrayidx613 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx611, i64 0, i64 %idxprom612
  %328 = load i32, i32* %arrayidx613, align 4
  %329 = load i32, i32* %k, align 4
  %idxprom614 = sext i32 %329 to i64
  %arrayidx615 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom614
  %330 = load i32, i32* %j, align 4
  %idxprom616 = sext i32 %330 to i64
  %arrayidx617 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx615, i64 0, i64 %idxprom616
  %331 = load i32, i32* %i, align 4
  %idxprom618 = sext i32 %331 to i64
  %arrayidx619 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx617, i64 0, i64 %idxprom618
  store i32 %328, i32* %arrayidx619, align 4
  br label %if.end672

if.else620:                                       ; preds = %if.end592
  %332 = load i32, i32* %k, align 4
  %idxprom621 = sext i32 %332 to i64
  %arrayidx622 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @quant_coef, i64 0, i64 %idxprom621
  %333 = load i32, i32* %j, align 4
  %idxprom623 = sext i32 %333 to i64
  %arrayidx624 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx622, i64 0, i64 %idxprom623
  %334 = load i32, i32* %i, align 4
  %idxprom625 = sext i32 %334 to i64
  %arrayidx626 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx624, i64 0, i64 %idxprom625
  %335 = load i32, i32* %arrayidx626, align 4
  %shl627 = shl i32 %335, 4
  %336 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv628 = sext i16 %336 to i32
  %tobool629 = icmp ne i32 %conv628, 0
  br i1 %tobool629, label %cond.true630, label %cond.false634

cond.true630:                                     ; preds = %if.else620
  %337 = load i32, i32* %temp, align 4
  %idxprom631 = sext i32 %337 to i64
  %arrayidx632 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom631
  %338 = load i16, i16* %arrayidx632, align 2
  %conv633 = sext i16 %338 to i32
  br label %cond.end638

cond.false634:                                    ; preds = %if.else620
  %339 = load i32, i32* %temp, align 4
  %idxprom635 = sext i32 %339 to i64
  %arrayidx636 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom635
  %340 = load i16, i16* %arrayidx636, align 2
  %conv637 = sext i16 %340 to i32
  br label %cond.end638

cond.end638:                                      ; preds = %cond.false634, %cond.true630
  %cond639 = phi i32 [ %conv633, %cond.true630 ], [ %conv637, %cond.false634 ]
  %div640 = sdiv i32 %shl627, %cond639
  %341 = load i32, i32* %k, align 4
  %idxprom641 = sext i32 %341 to i64
  %arrayidx642 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @LevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom641
  %342 = load i32, i32* %j, align 4
  %idxprom643 = sext i32 %342 to i64
  %arrayidx644 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx642, i64 0, i64 %idxprom643
  %343 = load i32, i32* %i, align 4
  %idxprom645 = sext i32 %343 to i64
  %arrayidx646 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx644, i64 0, i64 %idxprom645
  store i32 %div640, i32* %arrayidx646, align 4
  %344 = load i32, i32* %k, align 4
  %idxprom647 = sext i32 %344 to i64
  %arrayidx648 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* @dequant_coef, i64 0, i64 %idxprom647
  %345 = load i32, i32* %j, align 4
  %idxprom649 = sext i32 %345 to i64
  %arrayidx650 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx648, i64 0, i64 %idxprom649
  %346 = load i32, i32* %i, align 4
  %idxprom651 = sext i32 %346 to i64
  %arrayidx652 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx650, i64 0, i64 %idxprom651
  %347 = load i32, i32* %arrayidx652, align 4
  %348 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @UseDefaultScalingMatrix4x4Flag, i64 0, i64 5), align 2
  %conv653 = sext i16 %348 to i32
  %tobool654 = icmp ne i32 %conv653, 0
  br i1 %tobool654, label %cond.true655, label %cond.false659

cond.true655:                                     ; preds = %cond.end638
  %349 = load i32, i32* %temp, align 4
  %idxprom656 = sext i32 %349 to i64
  %arrayidx657 = getelementptr inbounds [16 x i16], [16 x i16]* @Quant_inter_default, i64 0, i64 %idxprom656
  %350 = load i16, i16* %arrayidx657, align 2
  %conv658 = sext i16 %350 to i32
  br label %cond.end663

cond.false659:                                    ; preds = %cond.end638
  %351 = load i32, i32* %temp, align 4
  %idxprom660 = sext i32 %351 to i64
  %arrayidx661 = getelementptr inbounds [16 x i16], [16 x i16]* getelementptr inbounds ([6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4, i64 0, i64 5), i64 0, i64 %idxprom660
  %352 = load i16, i16* %arrayidx661, align 2
  %conv662 = sext i16 %352 to i32
  br label %cond.end663

cond.end663:                                      ; preds = %cond.false659, %cond.true655
  %cond664 = phi i32 [ %conv658, %cond.true655 ], [ %conv662, %cond.false659 ]
  %mul665 = mul nsw i32 %347, %cond664
  %353 = load i32, i32* %k, align 4
  %idxprom666 = sext i32 %353 to i64
  %arrayidx667 = getelementptr inbounds [6 x [4 x [4 x i32]]], [6 x [4 x [4 x i32]]]* getelementptr inbounds ([2 x [6 x [4 x [4 x i32]]]], [2 x [6 x [4 x [4 x i32]]]]* @InvLevelScale4x4Chroma_Inter, i64 0, i64 1), i64 0, i64 %idxprom666
  %354 = load i32, i32* %j, align 4
  %idxprom668 = sext i32 %354 to i64
  %arrayidx669 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* %arrayidx667, i64 0, i64 %idxprom668
  %355 = load i32, i32* %i, align 4
  %idxprom670 = sext i32 %355 to i64
  %arrayidx671 = getelementptr inbounds [4 x i32], [4 x i32]* %arrayidx669, i64 0, i64 %idxprom670
  store i32 %mul665, i32* %arrayidx671, align 4
  br label %if.end672

if.end672:                                        ; preds = %cond.end663, %if.then595
  br label %for.inc673

for.inc673:                                       ; preds = %if.end672
  %356 = load i32, i32* %i, align 4
  %inc674 = add nsw i32 %356, 1
  store i32 %inc674, i32* %i, align 4
  br label %for.cond208

for.end675:                                       ; preds = %for.cond208
  br label %for.inc676

for.inc676:                                       ; preds = %for.end675
  %357 = load i32, i32* %j, align 4
  %inc677 = add nsw i32 %357, 1
  store i32 %inc677, i32* %j, align 4
  br label %for.cond205

for.end678:                                       ; preds = %for.cond205
  br label %for.inc679

for.inc679:                                       ; preds = %for.end678
  %358 = load i32, i32* %k, align 4
  %inc680 = add nsw i32 %358, 1
  store i32 %inc680, i32* %k, align 4
  br label %for.cond202

for.end681:                                       ; preds = %for.cond202
  br label %if.end682

if.end682:                                        ; preds = %for.end681, %for.end200
  %359 = load i32, i32* %canary
  %360 = icmp eq i32 %359, 1290548019
  br i1 %360, label %361, label %func_exit

361:                                              ; preds = %if.end682, %func_exit
  ret void

func_exit:                                        ; preds = %if.end682
  call void @detect_breach()
  br label %361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.72() #0 {
entry:
  %fail = alloca i32, align 4
  %canary = alloca i32
  store i32 300915828, i32* %canary
  %i = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %cnt = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 300915828
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CalculateQuant8Param.73() #0 {
entry:
  %canary = alloca i32
  store i32 1310697031, i32* %canary
  %no_q_matrix = alloca i32, align 4
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  %present = alloca [2 x i32], align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  store i32 0, i32* %no_q_matrix, align 4
  %0 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %0, i32 0, i32 9
  %1 = load i32, i32* %seq_scaling_matrix_present_flag, align 4
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %2, i32 0, i32 5
  %3 = load i32, i32* %pic_scaling_matrix_present_flag, align 4
  %tobool1 = icmp ne i32 %3, 0
  br i1 %tobool1, label %if.else, label %if.then

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %no_q_matrix, align 4
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %4 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 8, i1 false)
  %5 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_matrix_present_flag2 = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %5, i32 0, i32 9
  %6 = load i32, i32* %seq_scaling_matrix_present_flag2, align 4
  %tobool3 = icmp ne i32 %6, 0
  br i1 %tobool3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %7, 2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.seq_parameter_set_rbsp_t*, %struct.seq_parameter_set_rbsp_t** @active_sps, align 8
  %seq_scaling_list_present_flag = getelementptr inbounds %struct.seq_parameter_set_rbsp_t, %struct.seq_parameter_set_rbsp_t* %8, i32 0, i32 10
  %9 = load i32, i32* %i, align 4
  %add = add nsw i32 %9, 6
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %seq_scaling_list_present_flag, i64 0, i64 %idxprom
  %10 = load i32, i32* %arrayidx, align 4
  %11 = load i32, i32* %i, align 4
  %idxprom5 = sext i32 %11 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom5
  store i32 %10, i32* %arrayidx6, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.else
  %13 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_matrix_present_flag7 = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %13, i32 0, i32 5
  %14 = load i32, i32* %pic_scaling_matrix_present_flag7, align 4
  %tobool8 = icmp ne i32 %14, 0
  br i1 %tobool8, label %if.then9, label %if.end21

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc18, %if.then9
  %15 = load i32, i32* %i, align 4
  %cmp11 = icmp slt i32 %15, 2
  br i1 %cmp11, label %for.body12, label %for.end20

for.body12:                                       ; preds = %for.cond10
  %16 = load %struct.pic_parameter_set_rbsp_t*, %struct.pic_parameter_set_rbsp_t** @active_pps, align 8
  %pic_scaling_list_present_flag = getelementptr inbounds %struct.pic_parameter_set_rbsp_t, %struct.pic_parameter_set_rbsp_t* %16, i32 0, i32 6
  %17 = load i32, i32* %i, align 4
  %add13 = add nsw i32 %17, 6
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [8 x i32], [8 x i32]* %pic_scaling_list_present_flag, i64 0, i64 %idxprom14
  %18 = load i32, i32* %arrayidx15, align 4
  %19 = load i32, i32* %i, align 4
  %idxprom16 = sext i32 %19 to i64
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 %idxprom16
  %20 = load i32, i32* %arrayidx17, align 4
  %or = or i32 %20, %18
  store i32 %or, i32* %arrayidx17, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body12
  %21 = load i32, i32* %i, align 4
  %inc19 = add nsw i32 %21, 1
  store i32 %inc19, i32* %i, align 4
  br label %for.cond10

for.end20:                                        ; preds = %for.cond10
  br label %if.end21

if.end21:                                         ; preds = %for.end20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %22 = load i32, i32* %no_q_matrix, align 4
  %cmp23 = icmp eq i32 %22, 1
  br i1 %cmp23, label %if.then24, label %if.else92

if.then24:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc89, %if.then24
  %23 = load i32, i32* %k, align 4
  %cmp26 = icmp slt i32 %23, 6
  br i1 %cmp26, label %for.body27, label %for.end91

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %j, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc86, %for.body27
  %24 = load i32, i32* %j, align 4
  %cmp29 = icmp slt i32 %24, 8
  br i1 %cmp29, label %for.body30, label %for.end88

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc83, %for.body30
  %25 = load i32, i32* %i, align 4
  %cmp32 = icmp slt i32 %25, 8
  br i1 %cmp32, label %for.body33, label %for.end85

for.body33:                                       ; preds = %for.cond31
  %26 = load i32, i32* %k, align 4
  %idxprom34 = sext i32 %26 to i64
  %arrayidx35 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom34
  %27 = load i32, i32* %j, align 4
  %idxprom36 = sext i32 %27 to i64
  %arrayidx37 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx35, i64 0, i64 %idxprom36
  %28 = load i32, i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %arrayidx39 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx37, i64 0, i64 %idxprom38
  %29 = load i32, i32* %arrayidx39, align 4
  %30 = load i32, i32* %k, align 4
  %idxprom40 = sext i32 %30 to i64
  %arrayidx41 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom40
  %31 = load i32, i32* %j, align 4
  %idxprom42 = sext i32 %31 to i64
  %arrayidx43 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx41, i64 0, i64 %idxprom42
  %32 = load i32, i32* %i, align 4
  %idxprom44 = sext i32 %32 to i64
  %arrayidx45 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx43, i64 0, i64 %idxprom44
  store i32 %29, i32* %arrayidx45, align 4
  %33 = load i32, i32* %k, align 4
  %idxprom46 = sext i32 %33 to i64
  %arrayidx47 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom46
  %34 = load i32, i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx47, i64 0, i64 %idxprom48
  %35 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %35 to i64
  %arrayidx51 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx49, i64 0, i64 %idxprom50
  %36 = load i32, i32* %arrayidx51, align 4
  %shl = shl i32 %36, 4
  %37 = load i32, i32* %k, align 4
  %idxprom52 = sext i32 %37 to i64
  %arrayidx53 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom52
  %38 = load i32, i32* %j, align 4
  %idxprom54 = sext i32 %38 to i64
  %arrayidx55 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx53, i64 0, i64 %idxprom54
  %39 = load i32, i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx55, i64 0, i64 %idxprom56
  store i32 %shl, i32* %arrayidx57, align 4
  %40 = load i32, i32* %k, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom58
  %41 = load i32, i32* %j, align 4
  %idxprom60 = sext i32 %41 to i64
  %arrayidx61 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx59, i64 0, i64 %idxprom60
  %42 = load i32, i32* %i, align 4
  %idxprom62 = sext i32 %42 to i64
  %arrayidx63 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx61, i64 0, i64 %idxprom62
  %43 = load i32, i32* %arrayidx63, align 4
  %44 = load i32, i32* %k, align 4
  %idxprom64 = sext i32 %44 to i64
  %arrayidx65 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom64
  %45 = load i32, i32* %j, align 4
  %idxprom66 = sext i32 %45 to i64
  %arrayidx67 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx65, i64 0, i64 %idxprom66
  %46 = load i32, i32* %i, align 4
  %idxprom68 = sext i32 %46 to i64
  %arrayidx69 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx67, i64 0, i64 %idxprom68
  store i32 %43, i32* %arrayidx69, align 4
  %47 = load i32, i32* %k, align 4
  %idxprom70 = sext i32 %47 to i64
  %arrayidx71 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom70
  %48 = load i32, i32* %j, align 4
  %idxprom72 = sext i32 %48 to i64
  %arrayidx73 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx71, i64 0, i64 %idxprom72
  %49 = load i32, i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx73, i64 0, i64 %idxprom74
  %50 = load i32, i32* %arrayidx75, align 4
  %shl76 = shl i32 %50, 4
  %51 = load i32, i32* %k, align 4
  %idxprom77 = sext i32 %51 to i64
  %arrayidx78 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom77
  %52 = load i32, i32* %j, align 4
  %idxprom79 = sext i32 %52 to i64
  %arrayidx80 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx78, i64 0, i64 %idxprom79
  %53 = load i32, i32* %i, align 4
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx80, i64 0, i64 %idxprom81
  store i32 %shl76, i32* %arrayidx82, align 4
  br label %for.inc83

for.inc83:                                        ; preds = %for.body33
  %54 = load i32, i32* %i, align 4
  %inc84 = add nsw i32 %54, 1
  store i32 %inc84, i32* %i, align 4
  br label %for.cond31

for.end85:                                        ; preds = %for.cond31
  br label %for.inc86

for.inc86:                                        ; preds = %for.end85
  %55 = load i32, i32* %j, align 4
  %inc87 = add nsw i32 %55, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond28

for.end88:                                        ; preds = %for.cond28
  br label %for.inc89

for.inc89:                                        ; preds = %for.end88
  %56 = load i32, i32* %k, align 4
  %inc90 = add nsw i32 %56, 1
  store i32 %inc90, i32* %k, align 4
  br label %for.cond25

for.end91:                                        ; preds = %for.cond25
  br label %if.end257

if.else92:                                        ; preds = %if.end22
  store i32 0, i32* %k, align 4
  br label %for.cond93

for.cond93:                                       ; preds = %for.inc254, %if.else92
  %57 = load i32, i32* %k, align 4
  %cmp94 = icmp slt i32 %57, 6
  br i1 %cmp94, label %for.body95, label %for.end256

for.body95:                                       ; preds = %for.cond93
  store i32 0, i32* %j, align 4
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc251, %for.body95
  %58 = load i32, i32* %j, align 4
  %cmp97 = icmp slt i32 %58, 8
  br i1 %cmp97, label %for.body98, label %for.end253

for.body98:                                       ; preds = %for.cond96
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc248, %for.body98
  %59 = load i32, i32* %i, align 4
  %cmp100 = icmp slt i32 %59, 8
  br i1 %cmp100, label %for.body101, label %for.end250

for.body101:                                      ; preds = %for.cond99
  %60 = load i32, i32* %i, align 4
  %shl102 = shl i32 %60, 3
  %61 = load i32, i32* %j, align 4
  %add103 = add nsw i32 %shl102, %61
  store i32 %add103, i32* %temp, align 4
  %arrayidx104 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 0
  %62 = load i32, i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %62, 0
  br i1 %tobool105, label %lor.lhs.false, label %if.then107

lor.lhs.false:                                    ; preds = %for.body101
  %63 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 0), align 2
  %conv = sext i16 %63 to i32
  %tobool106 = icmp ne i32 %conv, 0
  br i1 %tobool106, label %if.then107, label %if.else139

if.then107:                                       ; preds = %lor.lhs.false, %for.body101
  %64 = load i32, i32* %k, align 4
  %idxprom108 = sext i32 %64 to i64
  %arrayidx109 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom108
  %65 = load i32, i32* %j, align 4
  %idxprom110 = sext i32 %65 to i64
  %arrayidx111 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx109, i64 0, i64 %idxprom110
  %66 = load i32, i32* %i, align 4
  %idxprom112 = sext i32 %66 to i64
  %arrayidx113 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx111, i64 0, i64 %idxprom112
  %67 = load i32, i32* %arrayidx113, align 4
  %shl114 = shl i32 %67, 4
  %68 = load i32, i32* %temp, align 4
  %idxprom115 = sext i32 %68 to i64
  %arrayidx116 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom115
  %69 = load i16, i16* %arrayidx116, align 2
  %conv117 = sext i16 %69 to i32
  %div = sdiv i32 %shl114, %conv117
  %70 = load i32, i32* %k, align 4
  %idxprom118 = sext i32 %70 to i64
  %arrayidx119 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom118
  %71 = load i32, i32* %j, align 4
  %idxprom120 = sext i32 %71 to i64
  %arrayidx121 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx119, i64 0, i64 %idxprom120
  %72 = load i32, i32* %i, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx121, i64 0, i64 %idxprom122
  store i32 %div, i32* %arrayidx123, align 4
  %73 = load i32, i32* %k, align 4
  %idxprom124 = sext i32 %73 to i64
  %arrayidx125 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom124
  %74 = load i32, i32* %j, align 4
  %idxprom126 = sext i32 %74 to i64
  %arrayidx127 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx125, i64 0, i64 %idxprom126
  %75 = load i32, i32* %i, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx127, i64 0, i64 %idxprom128
  %76 = load i32, i32* %arrayidx129, align 4
  %77 = load i32, i32* %temp, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_intra_default, i64 0, i64 %idxprom130
  %78 = load i16, i16* %arrayidx131, align 2
  %conv132 = sext i16 %78 to i32
  %mul = mul nsw i32 %76, %conv132
  %79 = load i32, i32* %k, align 4
  %idxprom133 = sext i32 %79 to i64
  %arrayidx134 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom133
  %80 = load i32, i32* %j, align 4
  %idxprom135 = sext i32 %80 to i64
  %arrayidx136 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx134, i64 0, i64 %idxprom135
  %81 = load i32, i32* %i, align 4
  %idxprom137 = sext i32 %81 to i64
  %arrayidx138 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx136, i64 0, i64 %idxprom137
  store i32 %mul, i32* %arrayidx138, align 4
  br label %if.end173

if.else139:                                       ; preds = %lor.lhs.false
  %82 = load i32, i32* %k, align 4
  %idxprom140 = sext i32 %82 to i64
  %arrayidx141 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom140
  %83 = load i32, i32* %j, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx141, i64 0, i64 %idxprom142
  %84 = load i32, i32* %i, align 4
  %idxprom144 = sext i32 %84 to i64
  %arrayidx145 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx143, i64 0, i64 %idxprom144
  %85 = load i32, i32* %arrayidx145, align 4
  %shl146 = shl i32 %85, 4
  %86 = load i32, i32* %temp, align 4
  %idxprom147 = sext i32 %86 to i64
  %arrayidx148 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom147
  %87 = load i16, i16* %arrayidx148, align 2
  %conv149 = sext i16 %87 to i32
  %div150 = sdiv i32 %shl146, %conv149
  %88 = load i32, i32* %k, align 4
  %idxprom151 = sext i32 %88 to i64
  %arrayidx152 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Intra, i64 0, i64 %idxprom151
  %89 = load i32, i32* %j, align 4
  %idxprom153 = sext i32 %89 to i64
  %arrayidx154 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx152, i64 0, i64 %idxprom153
  %90 = load i32, i32* %i, align 4
  %idxprom155 = sext i32 %90 to i64
  %arrayidx156 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx154, i64 0, i64 %idxprom155
  store i32 %div150, i32* %arrayidx156, align 4
  %91 = load i32, i32* %k, align 4
  %idxprom157 = sext i32 %91 to i64
  %arrayidx158 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom157
  %92 = load i32, i32* %j, align 4
  %idxprom159 = sext i32 %92 to i64
  %arrayidx160 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx158, i64 0, i64 %idxprom159
  %93 = load i32, i32* %i, align 4
  %idxprom161 = sext i32 %93 to i64
  %arrayidx162 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx160, i64 0, i64 %idxprom161
  %94 = load i32, i32* %arrayidx162, align 4
  %95 = load i32, i32* %temp, align 4
  %idxprom163 = sext i32 %95 to i64
  %arrayidx164 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 0), i64 0, i64 %idxprom163
  %96 = load i16, i16* %arrayidx164, align 2
  %conv165 = sext i16 %96 to i32
  %mul166 = mul nsw i32 %94, %conv165
  %97 = load i32, i32* %k, align 4
  %idxprom167 = sext i32 %97 to i64
  %arrayidx168 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Intra, i64 0, i64 %idxprom167
  %98 = load i32, i32* %j, align 4
  %idxprom169 = sext i32 %98 to i64
  %arrayidx170 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx168, i64 0, i64 %idxprom169
  %99 = load i32, i32* %i, align 4
  %idxprom171 = sext i32 %99 to i64
  %arrayidx172 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx170, i64 0, i64 %idxprom171
  store i32 %mul166, i32* %arrayidx172, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else139, %if.then107
  %arrayidx174 = getelementptr inbounds [2 x i32], [2 x i32]* %present, i64 0, i64 1
  %100 = load i32, i32* %arrayidx174, align 4
  %tobool175 = icmp ne i32 %100, 0
  br i1 %tobool175, label %lor.lhs.false176, label %if.then179

lor.lhs.false176:                                 ; preds = %if.end173
  %101 = load i16, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @UseDefaultScalingMatrix8x8Flag, i64 0, i64 1), align 2
  %conv177 = sext i16 %101 to i32
  %tobool178 = icmp ne i32 %conv177, 0
  br i1 %tobool178, label %if.then179, label %if.else213

if.then179:                                       ; preds = %lor.lhs.false176, %if.end173
  %102 = load i32, i32* %k, align 4
  %idxprom180 = sext i32 %102 to i64
  %arrayidx181 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom180
  %103 = load i32, i32* %j, align 4
  %idxprom182 = sext i32 %103 to i64
  %arrayidx183 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx181, i64 0, i64 %idxprom182
  %104 = load i32, i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %arrayidx185 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx183, i64 0, i64 %idxprom184
  %105 = load i32, i32* %arrayidx185, align 4
  %shl186 = shl i32 %105, 4
  %106 = load i32, i32* %temp, align 4
  %idxprom187 = sext i32 %106 to i64
  %arrayidx188 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom187
  %107 = load i16, i16* %arrayidx188, align 2
  %conv189 = sext i16 %107 to i32
  %div190 = sdiv i32 %shl186, %conv189
  %108 = load i32, i32* %k, align 4
  %idxprom191 = sext i32 %108 to i64
  %arrayidx192 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom191
  %109 = load i32, i32* %j, align 4
  %idxprom193 = sext i32 %109 to i64
  %arrayidx194 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx192, i64 0, i64 %idxprom193
  %110 = load i32, i32* %i, align 4
  %idxprom195 = sext i32 %110 to i64
  %arrayidx196 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx194, i64 0, i64 %idxprom195
  store i32 %div190, i32* %arrayidx196, align 4
  %111 = load i32, i32* %k, align 4
  %idxprom197 = sext i32 %111 to i64
  %arrayidx198 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom197
  %112 = load i32, i32* %j, align 4
  %idxprom199 = sext i32 %112 to i64
  %arrayidx200 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx198, i64 0, i64 %idxprom199
  %113 = load i32, i32* %i, align 4
  %idxprom201 = sext i32 %113 to i64
  %arrayidx202 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx200, i64 0, i64 %idxprom201
  %114 = load i32, i32* %arrayidx202, align 4
  %115 = load i32, i32* %temp, align 4
  %idxprom203 = sext i32 %115 to i64
  %arrayidx204 = getelementptr inbounds [64 x i16], [64 x i16]* @Quant8_inter_default, i64 0, i64 %idxprom203
  %116 = load i16, i16* %arrayidx204, align 2
  %conv205 = sext i16 %116 to i32
  %mul206 = mul nsw i32 %114, %conv205
  %117 = load i32, i32* %k, align 4
  %idxprom207 = sext i32 %117 to i64
  %arrayidx208 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom207
  %118 = load i32, i32* %j, align 4
  %idxprom209 = sext i32 %118 to i64
  %arrayidx210 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx208, i64 0, i64 %idxprom209
  %119 = load i32, i32* %i, align 4
  %idxprom211 = sext i32 %119 to i64
  %arrayidx212 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx210, i64 0, i64 %idxprom211
  store i32 %mul206, i32* %arrayidx212, align 4
  br label %if.end247

if.else213:                                       ; preds = %lor.lhs.false176
  %120 = load i32, i32* %k, align 4
  %idxprom214 = sext i32 %120 to i64
  %arrayidx215 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @quant_coef8, i64 0, i64 %idxprom214
  %121 = load i32, i32* %j, align 4
  %idxprom216 = sext i32 %121 to i64
  %arrayidx217 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx215, i64 0, i64 %idxprom216
  %122 = load i32, i32* %i, align 4
  %idxprom218 = sext i32 %122 to i64
  %arrayidx219 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx217, i64 0, i64 %idxprom218
  %123 = load i32, i32* %arrayidx219, align 4
  %shl220 = shl i32 %123, 4
  %124 = load i32, i32* %temp, align 4
  %idxprom221 = sext i32 %124 to i64
  %arrayidx222 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom221
  %125 = load i16, i16* %arrayidx222, align 2
  %conv223 = sext i16 %125 to i32
  %div224 = sdiv i32 %shl220, %conv223
  %126 = load i32, i32* %k, align 4
  %idxprom225 = sext i32 %126 to i64
  %arrayidx226 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @LevelScale8x8Luma_Inter, i64 0, i64 %idxprom225
  %127 = load i32, i32* %j, align 4
  %idxprom227 = sext i32 %127 to i64
  %arrayidx228 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx226, i64 0, i64 %idxprom227
  %128 = load i32, i32* %i, align 4
  %idxprom229 = sext i32 %128 to i64
  %arrayidx230 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx228, i64 0, i64 %idxprom229
  store i32 %div224, i32* %arrayidx230, align 4
  %129 = load i32, i32* %k, align 4
  %idxprom231 = sext i32 %129 to i64
  %arrayidx232 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @dequant_coef8, i64 0, i64 %idxprom231
  %130 = load i32, i32* %j, align 4
  %idxprom233 = sext i32 %130 to i64
  %arrayidx234 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx232, i64 0, i64 %idxprom233
  %131 = load i32, i32* %i, align 4
  %idxprom235 = sext i32 %131 to i64
  %arrayidx236 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx234, i64 0, i64 %idxprom235
  %132 = load i32, i32* %arrayidx236, align 4
  %133 = load i32, i32* %temp, align 4
  %idxprom237 = sext i32 %133 to i64
  %arrayidx238 = getelementptr inbounds [64 x i16], [64 x i16]* getelementptr inbounds ([2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8, i64 0, i64 1), i64 0, i64 %idxprom237
  %134 = load i16, i16* %arrayidx238, align 2
  %conv239 = sext i16 %134 to i32
  %mul240 = mul nsw i32 %132, %conv239
  %135 = load i32, i32* %k, align 4
  %idxprom241 = sext i32 %135 to i64
  %arrayidx242 = getelementptr inbounds [6 x [8 x [8 x i32]]], [6 x [8 x [8 x i32]]]* @InvLevelScale8x8Luma_Inter, i64 0, i64 %idxprom241
  %136 = load i32, i32* %j, align 4
  %idxprom243 = sext i32 %136 to i64
  %arrayidx244 = getelementptr inbounds [8 x [8 x i32]], [8 x [8 x i32]]* %arrayidx242, i64 0, i64 %idxprom243
  %137 = load i32, i32* %i, align 4
  %idxprom245 = sext i32 %137 to i64
  %arrayidx246 = getelementptr inbounds [8 x i32], [8 x i32]* %arrayidx244, i64 0, i64 %idxprom245
  store i32 %mul240, i32* %arrayidx246, align 4
  br label %if.end247

if.end247:                                        ; preds = %if.else213, %if.then179
  br label %for.inc248

for.inc248:                                       ; preds = %if.end247
  %138 = load i32, i32* %i, align 4
  %inc249 = add nsw i32 %138, 1
  store i32 %inc249, i32* %i, align 4
  br label %for.cond99

for.end250:                                       ; preds = %for.cond99
  br label %for.inc251

for.inc251:                                       ; preds = %for.end250
  %139 = load i32, i32* %j, align 4
  %inc252 = add nsw i32 %139, 1
  store i32 %inc252, i32* %j, align 4
  br label %for.cond96

for.end253:                                       ; preds = %for.cond96
  br label %for.inc254

for.inc254:                                       ; preds = %for.end253
  %140 = load i32, i32* %k, align 4
  %inc255 = add nsw i32 %140, 1
  store i32 %inc255, i32* %k, align 4
  br label %for.cond93

for.end256:                                       ; preds = %for.cond93
  br label %if.end257

if.end257:                                        ; preds = %for.end256, %for.end91
  %141 = load i32, i32* %canary
  %142 = icmp eq i32 %141, 1310697031
  br i1 %142, label %143, label %func_exit

143:                                              ; preds = %if.end257, %func_exit
  ret void

func_exit:                                        ; preds = %if.end257
  call void @detect_breach()
  br label %143
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.74(i8* %s, i32* %type) #0 {
entry:
  %retval = alloca i32, align 4
  %i = alloca i32, align 4
  %canary = alloca i32
  store i32 768854530, i32* %canary
  %type.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 768854530
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.75() #0 {
entry:
  %canary = alloca i32
  store i32 1770376937, i32* %canary
  %i = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  %cnt = alloca i32, align 4
  %fail = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 1770376937
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.76(i8* %s, i32* %type) #0 {
entry:
  %i = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %retval = alloca i32, align 4
  %canary = alloca i32
  store i32 1556044794, i32* %canary
  %type.addr = alloca i32*, align 8
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1556044794
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PatchMatrix.77() #0 {
entry:
  %fail = alloca i32, align 4
  %canary = alloca i32
  store i32 700467896, i32* %canary
  %i = alloca i32, align 4
  %cnt = alloca i32, align 4
  %ScalingList = alloca i16*, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc102, %entry
  %0 = load i32, i32* %i, align 4
  %cmp = icmp slt i32 %0, 6
  br i1 %cmp, label %for.body, label %for.end104

for.body:                                         ; preds = %for.cond
  %1 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %1, i32 0, i32 133
  %2 = load i32, i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag, i64 0, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end42

if.then:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [6 x [16 x i16]], [6 x [16 x i16]]* @ScalingList4x4input, i64 0, i64 %idxprom1
  %arraydecay = getelementptr inbounds [16 x i16], [16 x i16]* %arrayidx2, i64 0, i64 0
  store i16* %arraydecay, i16** %ScalingList, align 8
  %5 = load i32, i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %arrayidx4 = getelementptr inbounds [6 x i32], [6 x i32]* @matrix4x4_check, i64 0, i64 %idxprom3
  %6 = load i32, i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %6, 0
  br i1 %tobool5, label %if.then6, label %if.else31

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %if.then6
  %7 = load i32, i32* %cnt, align 4
  %cmp8 = icmp slt i32 %7, 16
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i16*, i16** %ScalingList, align 8
  %9 = load i32, i32* %cnt, align 4
  %idxprom10 = sext i32 %9 to i64
  %arrayidx11 = getelementptr inbounds i16, i16* %8, i64 %idxprom10
  %10 = load i16, i16* %arrayidx11, align 2
  %conv = sext i16 %10 to i32
  %cmp12 = icmp slt i32 %conv, 0
  br i1 %cmp12, label %if.then19, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body9
  %11 = load i16*, i16** %ScalingList, align 8
  %12 = load i32, i32* %cnt, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds i16, i16* %11, i64 %idxprom14
  %13 = load i16, i16* %arrayidx15, align 2
  %conv16 = sext i16 %13 to i32
  %cmp17 = icmp sgt i32 %conv16, 255
  br i1 %cmp17, label %if.then19, label %if.end

if.then19:                                        ; preds = %lor.lhs.false, %for.body9
  store i32 1, i32* %fail, align 4
  br label %for.end

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32, i32* %cnt, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %cnt, align 4
  br label %for.cond7

for.end:                                          ; preds = %if.then19, %for.cond7
  %15 = load i32, i32* %fail, align 4
  %tobool20 = icmp ne i32 %15, 0
  br i1 %tobool20, label %if.then21, label %if.end30

if.then21:                                        ; preds = %for.end
  %16 = load i32, i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %arrayidx23 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom22
  %arraydecay24 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx23, i64 0, i64 0
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay24)
  %call25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %17 = load i32, i32* %i, align 4
  %cmp26 = icmp sgt i32 %17, 2
  br i1 %cmp26, label %if.then28, label %if.else

if.then28:                                        ; preds = %if.then21
  %18 = load i16*, i16** %ScalingList, align 8
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %19, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end29

if.else:                                          ; preds = %if.then21
  %20 = load i16*, i16** %ScalingList, align 8
  %21 = bitcast i16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %21, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %for.end
  br label %if.end41

if.else31:                                        ; preds = %if.then
  %22 = load i32, i32* %i, align 4
  %idxprom32 = sext i32 %22 to i64
  %arrayidx33 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom32
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx33, i64 0, i64 0
  %call35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay34)
  %23 = load i32, i32* %i, align 4
  %cmp36 = icmp sgt i32 %23, 2
  br i1 %cmp36, label %if.then38, label %if.else39

if.then38:                                        ; preds = %if.else31
  %24 = load i16*, i16** %ScalingList, align 8
  %25 = bitcast i16* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 16 bitcast ([16 x i16]* @Quant_inter_default to i8*), i64 32, i1 false)
  br label %if.end40

if.else39:                                        ; preds = %if.else31
  %26 = load i16*, i16** %ScalingList, align 8
  %27 = bitcast i16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %27, i8* align 16 bitcast ([16 x i16]* @Quant_intra_default to i8*), i64 32, i1 false)
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then38
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end30
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %for.body
  %28 = load i32, i32* %i, align 4
  %cmp43 = icmp slt i32 %28, 2
  br i1 %cmp43, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %if.end42
  %29 = load %struct.InputParameters*, %struct.InputParameters** @input, align 8
  %ScalingListPresentFlag45 = getelementptr inbounds %struct.InputParameters, %struct.InputParameters* %29, i32 0, i32 133
  %30 = load i32, i32* %i, align 4
  %add = add nsw i32 %30, 6
  %idxprom46 = sext i32 %add to i64
  %arrayidx47 = getelementptr inbounds [8 x i32], [8 x i32]* %ScalingListPresentFlag45, i64 0, i64 %idxprom46
  %31 = load i32, i32* %arrayidx47, align 4
  %tobool48 = icmp ne i32 %31, 0
  br i1 %tobool48, label %if.then49, label %if.end101

if.then49:                                        ; preds = %land.lhs.true
  %32 = load i32, i32* %i, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [2 x [64 x i16]], [2 x [64 x i16]]* @ScalingList8x8input, i64 0, i64 %idxprom50
  %arraydecay52 = getelementptr inbounds [64 x i16], [64 x i16]* %arrayidx51, i64 0, i64 0
  store i16* %arraydecay52, i16** %ScalingList, align 8
  %33 = load i32, i32* %i, align 4
  %idxprom53 = sext i32 %33 to i64
  %arrayidx54 = getelementptr inbounds [2 x i32], [2 x i32]* @matrix8x8_check, i64 0, i64 %idxprom53
  %34 = load i32, i32* %arrayidx54, align 4
  %tobool55 = icmp ne i32 %34, 0
  br i1 %tobool55, label %if.then56, label %if.else90

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %fail, align 4
  store i32 0, i32* %cnt, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc74, %if.then56
  %35 = load i32, i32* %cnt, align 4
  %cmp58 = icmp slt i32 %35, 64
  br i1 %cmp58, label %for.body60, label %for.end76

for.body60:                                       ; preds = %for.cond57
  %36 = load i16*, i16** %ScalingList, align 8
  %37 = load i32, i32* %cnt, align 4
  %idxprom61 = sext i32 %37 to i64
  %arrayidx62 = getelementptr inbounds i16, i16* %36, i64 %idxprom61
  %38 = load i16, i16* %arrayidx62, align 2
  %conv63 = sext i16 %38 to i32
  %cmp64 = icmp slt i32 %conv63, 0
  br i1 %cmp64, label %if.then72, label %lor.lhs.false66

lor.lhs.false66:                                  ; preds = %for.body60
  %39 = load i16*, i16** %ScalingList, align 8
  %40 = load i32, i32* %cnt, align 4
  %idxprom67 = sext i32 %40 to i64
  %arrayidx68 = getelementptr inbounds i16, i16* %39, i64 %idxprom67
  %41 = load i16, i16* %arrayidx68, align 2
  %conv69 = sext i16 %41 to i32
  %cmp70 = icmp sgt i32 %conv69, 255
  br i1 %cmp70, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false66, %for.body60
  store i32 1, i32* %fail, align 4
  br label %for.end76

if.end73:                                         ; preds = %lor.lhs.false66
  br label %for.inc74

for.inc74:                                        ; preds = %if.end73
  %42 = load i32, i32* %cnt, align 4
  %inc75 = add nsw i32 %42, 1
  store i32 %inc75, i32* %cnt, align 4
  br label %for.cond57

for.end76:                                        ; preds = %if.then72, %for.cond57
  %43 = load i32, i32* %fail, align 4
  %tobool77 = icmp ne i32 %43, 0
  br i1 %tobool77, label %if.then78, label %if.end89

if.then78:                                        ; preds = %for.end76
  %44 = load i32, i32* %i, align 4
  %idxprom79 = sext i32 %44 to i64
  %arrayidx80 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom79
  %arraydecay81 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx80, i64 0, i64 0
  %call82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay81)
  %call83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0))
  %45 = load i32, i32* %i, align 4
  %cmp84 = icmp eq i32 %45, 7
  br i1 %cmp84, label %if.then86, label %if.else87

if.then86:                                        ; preds = %if.then78
  %46 = load i16*, i16** %ScalingList, align 8
  %47 = bitcast i16* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %47, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end88

if.else87:                                        ; preds = %if.then78
  %48 = load i16*, i16** %ScalingList, align 8
  %49 = bitcast i16* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %49, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end88

if.end88:                                         ; preds = %if.else87, %if.then86
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %for.end76
  br label %if.end100

if.else90:                                        ; preds = %if.then49
  %50 = load i32, i32* %i, align 4
  %idxprom91 = sext i32 %50 to i64
  %arrayidx92 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom91
  %arraydecay93 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx92, i64 0, i64 0
  %call94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay93)
  %51 = load i32, i32* %i, align 4
  %cmp95 = icmp eq i32 %51, 7
  br i1 %cmp95, label %if.then97, label %if.else98

if.then97:                                        ; preds = %if.else90
  %52 = load i16*, i16** %ScalingList, align 8
  %53 = bitcast i16* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %53, i8* align 16 bitcast ([64 x i16]* @Quant8_inter_default to i8*), i64 128, i1 false)
  br label %if.end99

if.else98:                                        ; preds = %if.else90
  %54 = load i16*, i16** %ScalingList, align 8
  %55 = bitcast i16* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %55, i8* align 16 bitcast ([64 x i16]* @Quant8_intra_default to i8*), i64 128, i1 false)
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.end89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %if.end42
  br label %for.inc102

for.inc102:                                       ; preds = %if.end101
  %56 = load i32, i32* %i, align 4
  %inc103 = add nsw i32 %56, 1
  store i32 %inc103, i32* %i, align 4
  br label %for.cond

for.end104:                                       ; preds = %for.cond
  %57 = load i32, i32* %canary
  %58 = icmp eq i32 %57, 700467896
  br i1 %58, label %59, label %func_exit

59:                                               ; preds = %for.end104, %func_exit
  ret void

func_exit:                                        ; preds = %for.end104
  call void @detect_breach()
  br label %59
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.78(i8* %s, i32* %type) #0 {
entry:
  %i = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %type.addr = alloca i32*, align 8
  %canary = alloca i32
  store i32 1164580720, i32* %canary
  %retval = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 1164580720
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.79(i8* %s, i32* %type) #0 {
entry:
  %canary = alloca i32
  store i32 164753510, i32* %canary
  %s.addr = alloca i8*, align 8
  %type.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %retval = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 164753510
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @CheckParameterName.80(i8* %s, i32* %type) #0 {
entry:
  %s.addr = alloca i8*, align 8
  %retval = alloca i32, align 4
  %type.addr = alloca i32*, align 8
  %canary = alloca i32
  store i32 128452851, i32* %canary
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store i32* %type, i32** %type.addr, align 8
  store i32 0, i32* %i, align 4
  %0 = load i32*, i32** %type.addr, align 8
  store i32 0, i32* %0, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %1 = load i32, i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx, i64 0, i64 0
  %cmp = icmp ne i8* %arraydecay, null
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %i, align 4
  %cmp1 = icmp slt i32 %2, 6
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %3, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %4 = load i32, i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [6 x [20 x i8]], [6 x [20 x i8]]* @MatrixType4x4, i64 0, i64 %idxprom2
  %arraydecay4 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx3, i64 0, i64 0
  %5 = load i8*, i8** %s.addr, align 8
  %call = call i32 @strcmp(i8* %arraydecay4, i8* %5) #5
  %cmp5 = icmp eq i32 0, %call
  br i1 %cmp5, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %6 = load i32, i32* %i, align 4
  store i32 %6, i32* %retval, align 4
  br label %return

if.else:                                          ; preds = %while.body
  %7 = load i32, i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %while.cond

while.end:                                        ; preds = %land.end
  store i32 0, i32* %i, align 4
  %8 = load i32*, i32** %type.addr, align 8
  store i32 1, i32* %8, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %if.end23, %while.end
  %9 = load i32, i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom7
  %arraydecay9 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx8, i64 0, i64 0
  %cmp10 = icmp ne i8* %arraydecay9, null
  br i1 %cmp10, label %land.rhs11, label %land.end13

land.rhs11:                                       ; preds = %while.cond6
  %10 = load i32, i32* %i, align 4
  %cmp12 = icmp slt i32 %10, 2
  br label %land.end13

land.end13:                                       ; preds = %land.rhs11, %while.cond6
  %11 = phi i1 [ false, %while.cond6 ], [ %cmp12, %land.rhs11 ]
  br i1 %11, label %while.body14, label %while.end24

while.body14:                                     ; preds = %land.end13
  %12 = load i32, i32* %i, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [2 x [20 x i8]], [2 x [20 x i8]]* @MatrixType8x8, i64 0, i64 %idxprom15
  %arraydecay17 = getelementptr inbounds [20 x i8], [20 x i8]* %arrayidx16, i64 0, i64 0
  %13 = load i8*, i8** %s.addr, align 8
  %call18 = call i32 @strcmp(i8* %arraydecay17, i8* %13) #5
  %cmp19 = icmp eq i32 0, %call18
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %while.body14
  %14 = load i32, i32* %i, align 4
  store i32 %14, i32* %retval, align 4
  br label %return

if.else21:                                        ; preds = %while.body14
  %15 = load i32, i32* %i, align 4
  %inc22 = add nsw i32 %15, 1
  store i32 %inc22, i32* %i, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else21
  br label %while.cond6

while.end24:                                      ; preds = %land.end13
  store i32 -1, i32* %retval, align 4
  br label %return

return:                                           ; preds = %while.end24, %if.then20, %if.then
  %16 = load i32, i32* %retval, align 4
  %17 = load i32, i32* %canary
  %18 = icmp eq i32 %17, 128452851
  br i1 %18, label %19, label %func_exit

19:                                               ; preds = %return, %func_exit
  ret i32 %16

func_exit:                                        ; preds = %return
  call void @detect_breach()
  br label %19
}

declare void @detect_breach()

declare i32 @get_urand()

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+avx,+cx8,+fxsr,+mmx,+popcnt,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 9.0.1 (git@github.com:llvm/llvm-project.git 9b2d207cf4b43cfc1a2b6940b3c06e50a1bd127f)"}
